cscope 15 /opt/pm883-1/jaeseon/SOSP21/MySQL/mysql-server/storage/innobase/include -q 0000014993 0001491320
	@api0api.h

34 #i‚de‡
≠i0≠i_h


35 
	#≠i0≠i_h


	)

37 
	~<°dio.h
>

39 
	~"c⁄fig.h
"

40 
	~"db0îr.h
"

44 #i‡
SIZEOF_INT
 == 4

45 
	tuöt32
;

46 #ñi‡
SIZEOF_LONG
 == 4

47 
	tuöt32
;

49 #îr‹ 
Neôhî
 
‹
 
is
 
of
 4 
byãs
 
width


52 #i‡
deföed
(
WITH_INNODB_MEMCACHED
Ë&& !deföed(
DBUG_OFF
)

53 
	#UNIV_MEMCACHED_SDI


	)

57 
uöt32
 
	t∑ge_no_t
;

59 
uöt32
 
	t•a˚_id_t
;

61 
ib_sdi_key
 
	tib_sdi_key_t
;

62 
ib_sdi_ve˘‹
 
	tib_sdi_ve˘‹_t
;

64 #i‡
deföed
(
__GNUC__
)

65 
	#UNIV_NO_IGNORE
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
))

	)

67 
	#UNIV_NO_IGNORE


	)

72 
	#IB_TRUE
 0x1UL

	)

74 
	#IB_FALSE
 0x0UL

	)

78 
dbîr_t
 
	tib_îr_t
;

80 
	tib_byã_t
;

82 #ifde‡
_WIN64


83 
	t__öt64
 
	tib_ulöt_t
;

85 
	tib_ulöt_t
;

89 #i‡!
deföed
(
_MSC_VER
)

90 
	~<°döt.h
>

95 #i‡
deföed
(
_MSC_VER
)

97 
__öt8
 
	tib_i8_t
;

100 
öt8_t
 
	tib_i8_t
;

103 #i‡
deföed
(
_MSC_VER
)

105 
	t__öt8
 
	tib_u8_t
;

108 
uöt8_t
 
	tib_u8_t
;

111 #i‡
deföed
(
_MSC_VER
)

113 
__öt16
 
	tib_i16_t
;

116 
öt16_t
 
	tib_i16_t
;

119 #i‡
deföed
(
_MSC_VER
)

121 
	t__öt16
 
	tib_u16_t
;

124 
uöt16_t
 
	tib_u16_t
;

127 #i‡
deföed
(
_MSC_VER
)

129 
__öt32
 
	tib_i32_t
;

132 
öt32_t
 
	tib_i32_t
;

135 #i‡
deföed
(
_MSC_VER
)

137 
	t__öt32
 
	tib_u32_t
;

140 
uöt32_t
 
	tib_u32_t
;

143 #i‡
deföed
(
_MSC_VER
)

145 
__öt64
 
	tib_i64_t
;

148 
öt64_t
 
	tib_i64_t
;

151 #i‡
deföed
(
_MSC_VER
)

153 
	t__öt64
 
	tib_u64_t
;

156 
uöt64_t
 
	tib_u64_t
;

159 *
	tib_›aque_t
;

160 
ib_›aque_t
 
	tib_ch¨£t_t
;

161 
ib_ulöt_t
 
	tib_boﬁ_t
;

162 
ib_u64_t
 
	tib_id_u64_t
;

166 
	mIB_CFG_IBOOL
,

181 
	mIB_CFG_ULINT
,

184 
	mIB_CFG_ULONG
,

187 
	mIB_CFG_TEXT
,

190 
	mIB_CFG_CB


192 } 
	tib_cfg_ty≥_t
;

196 
	mIB_VARCHAR
 = 1,

199 
	mIB_CHAR
 = 2,

202 
	mIB_BINARY
 = 3,

206 
	mIB_VARBINARY
 = 4,

208 
	mIB_BLOB
 = 5,

211 
	mIB_INT
 = 6,

219 
	mIB_SYS
 = 8,

223 
	mIB_FLOAT
 = 9,

225 
	mIB_DOUBLE
 = 10,

227 
	mIB_DECIMAL
 = 11,

230 
	mIB_VARCHAR_ANYCHARSET
 = 12,

232 
	mIB_CHAR_ANYCHARSET
 = 13

234 } 
	tib_cﬁ_ty≥_t
;

238 
	mIB_TBL_REDUNDANT
,

241 
	mIB_TBL_COMPACT
,

249 
	mIB_TBL_DYNAMIC
,

252 
	mIB_TBL_COMPRESSED


254 } 
	tib_tbl_fmt_t
;

258 
	mIB_COL_NONE
 = 0,

260 
	mIB_COL_NOT_NULL
 = 1,

262 
	mIB_COL_UNSIGNED
 = 2,

264 
	mIB_COL_NOT_USED
 = 4,

266 
	mIB_COL_CUSTOM1
 = 8,

270 
	mIB_COL_CUSTOM2
 = 16,

274 
	mIB_COL_CUSTOM3
 = 32

277 } 
	tib_cﬁ_©å_t
;

282 
	mIB_LOCK_IS
 = 0,

285 
	mIB_LOCK_IX
,

288 
	mIB_LOCK_S
,

291 
	mIB_LOCK_X
,

294 
	mIB_LOCK_TABLE_X
,

296 
	mIB_LOCK_NONE
,

299 
	mIB_LOCK_NUM
 = 
IB_LOCK_NONE


300 } 
	tib_lck_mode_t
;

303 
	mIB_CLUSTERED
 = 1,

304 
	mIB_UNIQUE
 = 2

305 } 
	tib_ödex_ty≥_t
;

310 
	mIB_CUR_G
 = 1,

314 
	mIB_CUR_GE
 = 2,

319 
	mIB_CUR_L
 = 3,

323 
	mIB_CUR_LE
 = 4

327 } 
	tib_§ch_mode_t
;

331 
	mIB_CLOSEST_MATCH
,

333 
	mIB_EXACT_MATCH
,

336 
	mIB_EXACT_PREFIX


341 } 
	tib_m©ch_mode_t
;

345 
ib_cﬁ_ty≥_t
 
	mty≥
;

347 
ib_cﬁ_©å_t
 
	m©å
;

349 
ib_u32_t
 
	mty≥_Àn
;

351 
ib_u16_t
 
	m˛õ¡_ty≥
;

354 
ib_ch¨£t_t
 *
	mch¨£t
;

355 } 
	tib_cﬁ_mëa_t
;

360 
	mIB_TRX_READ_UNCOMMITTED
 = 0,

367 
	mIB_TRX_READ_COMMITTED
 = 1,

377 
	mIB_TRX_REPEATABLE_READ
 = 2,

382 
	mIB_TRX_SERIALIZABLE
 = 3

384 } 
	tib_åx_Àvñ_t
;

387 (*
	tib_cb_t
)();

389 
	#IB_CFG_BINLOG_ENABLED
 0x1

	)

390 
	#IB_CFG_MDL_ENABLED
 0x2

	)

391 
	#IB_CFG_DISABLE_ROWLOCK
 0x4

	)

395 c⁄° 
size_t
 
REC_BUF_SLOT_SIZE
 = 16384;

400 
FILE
 *
	tib_msg_°ªam_t
;

404 (*
	tib_msg_log_t
)(
	tib_msg_°ªam_t
, const *, ...);

416 
ib_tu∂e_t
 *
	tib_çl_t
;

425 
åx_t
 *
	tib_åx_t
;

428 
ib_curs‹_t
 *
	tib_¸§_t
;

440 (*
	tib_˛õ¡_cmp_t
)(c⁄° 
	tib_cﬁ_mëa_t
 *
	tcﬁ_mëa
,

441 c⁄° 
	tib_byã_t
 *
	tp1
, 
	tib_ulöt_t
 
	tp1_Àn
,

442 c⁄° 
	tib_byã_t
 *
	tp2
, 
	tib_ulöt_t
 
	tp2_Àn
);

446 
	#IB_SQL_NULL
 0xFFFFFFFF

	)

455 
ib_îr_t
 
	`ib_åx_°¨t
(

456 
ib_åx_t
 
ib_åx
,

457 
ib_åx_Àvñ_t
 
ib_åx_Àvñ
,

458 
ib_boﬁ_t
 
ªad_wrôe
,

460 
ib_boﬁ_t
 
auto_commô
,

462 *
thd
);

471 
ib_åx_t
 
	`ib_åx_begö
(
ib_åx_Àvñ_t
 
ib_åx_Àvñ
, 
ib_boﬁ_t
 
ªad_wrôe
,

472 
ib_boﬁ_t
 
auto_commô
, *
thd
);

475 
ib_u32_t
 
	`ib_åx_ªad_⁄ly
(
ib_åx_t
 
ib_åx
);

481 
ib_îr_t
 
	`ib_åx_ªÀa£
(
ib_åx_t
 
ib_åx
);

486 
ib_îr_t
 
	`ib_åx_commô
(
ib_åx_t
 
ib_åx
);

491 
ib_îr_t
 
	`ib_åx_rﬁlback
(
ib_åx_t
 
ib_åx
);

495 
ib_îr_t
 
	`ib_curs‹_›í_ödex_usög_«me
(

496 
ib_¸§_t
 
ib_›í_¸§
,

497 c⁄° *
ödex_«me
,

498 
ib_¸§_t
 *
ib_¸§
,

499 *
idx_ty≥
,

500 
ib_id_u64_t
 *
idx_id
);

504 
ib_îr_t
 
	`ib_curs‹_›í_èbÀ
(

505 c⁄° *
«me
,

506 
ib_åx_t
 
ib_åx
,

508 
ib_¸§_t
 *
ib_¸§
);

512 
ib_îr_t
 
	`ib_curs‹_ª£t
(
ib_¸§_t
 
ib_¸§
);

516 
ib_îr_t
 
	`ib_curs‹_˛o£
(
ib_¸§_t
 
ib_¸§
);

520 
ib_îr_t
 
	`ib_curs‹_√w_åx
(
ib_¸§_t
 
ib_¸§
,

521 
ib_åx_t
 
ib_åx
);

525 
ib_îr_t
 
	`ib_curs‹_commô_åx
(
ib_¸§_t
 
ib_¸§
,

526 
ib_åx_t
 
ib_åx
);

530 
ib_îr_t
 
	`ib_curs‹_ö£π_row
(

531 
ib_¸§_t
 
ib_¸§
,

532 c⁄° 
ib_çl_t
 
ib_çl
);

536 
ib_îr_t
 
	`ib_curs‹_upd©e_row
(

537 
ib_¸§_t
 
ib_¸§
,

538 c⁄° 
ib_çl_t
 
ib_ﬁd_çl
,

539 c⁄° 
ib_çl_t
 
ib_√w_çl
);

543 
ib_îr_t
 
	`ib_curs‹_dñëe_row
(
ib_¸§_t
 
ib_¸§
);

547 
ib_îr_t
 
	`ib_curs‹_ªad_row
(

548 
ib_¸§_t
 
ib_¸§
,

549 
ib_çl_t
 
ib_çl
,

550 
ib_çl_t
 
cmp_çl
,

552 
mode
,

554 **
row_buf
,

555 
ib_ulöt_t
 *
row_Àn
,

556 
ib_ulöt_t
 *
u£d_Àn
);

560 
ib_îr_t
 
	`ib_curs‹_fú°
(
ib_¸§_t
 
ib_¸§
);

564 
ib_îr_t
 
	`ib_curs‹_√xt
(
ib_¸§_t
 
ib_¸§
);

568 
ib_îr_t
 
	`ib_curs‹_movëo
(
ib_¸§_t
 
ib_¸§
,

569 
ib_çl_t
 
ib_çl
,

570 
ib_§ch_mode_t
 
ib_§ch_mode
,

571 
ib_ulöt_t
 
dúe˘i⁄
);

574 
	`ib_curs‹_£t_m©ch_mode
(

575 
ib_¸§_t
 
ib_¸§
,

576 
ib_m©ch_mode_t
 
m©ch_mode
);

580 
ib_îr_t
 
	`ib_cﬁ_£t_vÆue
(
ib_çl_t
 
ib_çl
,

581 
ib_ulöt_t
 
cﬁ_no
,

582 c⁄° *
§c
,

583 
ib_ulöt_t
 
Àn
,

584 
ib_boﬁ_t
 
√ed_˝y
);

588 
ib_ulöt_t
 
	`ib_cﬁ_gë_Àn
(
ib_çl_t
 
ib_çl
,

589 
ib_ulöt_t
 
i
);

593 
ib_ulöt_t
 
	`ib_cﬁ_c›y_vÆue
(

594 
ib_çl_t
 
ib_çl
,

595 
ib_ulöt_t
 
i
,

596 *
d°
,

597 
ib_ulöt_t
 
Àn
);

601 
ib_îr_t
 
	`ib_tu∂e_ªad_i8
(
ib_çl_t
 
ib_çl
,

602 
ib_ulöt_t
 
i
,

603 
ib_i8_t
 *
ivÆ
);

607 
ib_îr_t
 
	`ib_tu∂e_ªad_u8
(
ib_çl_t
 
ib_çl
,

608 
ib_ulöt_t
 
i
,

609 
ib_u8_t
 *
ivÆ
);

613 
ib_îr_t
 
	`ib_tu∂e_ªad_i16
(
ib_çl_t
 
ib_çl
,

614 
ib_ulöt_t
 
i
,

615 
ib_i16_t
 *
ivÆ
);

619 
ib_îr_t
 
	`ib_tu∂e_ªad_u16
(
ib_çl_t
 
ib_çl
,

620 
ib_ulöt_t
 
i
,

621 
ib_u16_t
 *
ivÆ
);

625 
ib_îr_t
 
	`ib_tu∂e_ªad_i32
(
ib_çl_t
 
ib_çl
,

626 
ib_ulöt_t
 
i
,

627 
ib_i32_t
 *
ivÆ
);

631 
ib_îr_t
 
	`ib_tu∂e_ªad_u32
(
ib_çl_t
 
ib_çl
,

632 
ib_ulöt_t
 
i
,

633 
ib_u32_t
 *
ivÆ
);

637 
ib_îr_t
 
	`ib_tu∂e_ªad_i64
(
ib_çl_t
 
ib_çl
,

638 
ib_ulöt_t
 
i
,

639 
ib_i64_t
 *
ivÆ
);

643 
ib_îr_t
 
	`ib_tu∂e_ªad_u64
(
ib_çl_t
 
ib_çl
,

644 
ib_ulöt_t
 
i
,

645 
ib_u64_t
 *
ivÆ
);

649 c⁄° *
	`ib_cﬁ_gë_vÆue
(
ib_çl_t
 
ib_çl
,

650 
ib_ulöt_t
 
i
);

654 
ib_ulöt_t
 
	`ib_cﬁ_gë_mëa
(

655 
ib_çl_t
 
ib_çl
,

656 
ib_ulöt_t
 
i
,

657 
ib_cﬁ_mëa_t
 *
ib_cﬁ_mëa
);

661 
ib_çl_t
 
	`ib_tu∂e_˛ór
(ib_çl_à
ib_çl
);

667 
ib_îr_t
 
	`ib_tu∂e_gë_˛u°î_key
(

668 
ib_¸§_t
 
ib_¸§
,

669 
ib_çl_t
 *
ib_d°_çl
,

670 c⁄° 
ib_çl_t
 
ib_§c_çl
);

674 
ib_çl_t
 
	`ib_£c_£¨ch_tu∂e_¸óã
(

675 
ib_¸§_t
 
ib_¸§
);

679 
ib_çl_t
 
	`ib_£c_ªad_tu∂e_¸óã
(

680 
ib_¸§_t
 
ib_¸§
);

684 
ib_çl_t
 
	`ib_˛u°_£¨ch_tu∂e_¸óã
(

685 
ib_¸§_t
 
ib_¸§
);

689 
ib_çl_t
 
	`ib_˛u°_ªad_tu∂e_¸óã
(

690 
ib_¸§_t
 
ib_¸§
);

694 
ib_ulöt_t
 
	`ib_tu∂e_gë_n_u£r_cﬁs
(

695 c⁄° 
ib_çl_t
 
ib_çl
);

699 
ib_ulöt_t
 
	`ib_tu∂e_gë_n_cﬁs
(

700 c⁄° 
ib_çl_t
 
ib_çl
);

703 
	`ib_tu∂e_dñëe
(
ib_çl_t
 
ib_çl
);

707 
ib_îr_t
 
	`ib_èbÀ_gë_id
(c⁄° *
èbÀ_«me
,

708 
ib_id_u64_t
 *
èbÀ_id
);

712 
ib_boﬁ_t
 
	`ib_curs‹_is_posôi⁄ed
(

713 c⁄° 
ib_¸§_t
 
ib_¸§
);

718 
ib_boﬁ_t
 
	`ib_schema_lock_is_ex˛usive
(

719 c⁄° 
ib_åx_t
 
ib_åx
);

723 
ib_îr_t
 
	`ib_curs‹_lock
(
ib_¸§_t
 
ib_¸§
,

724 
ib_lck_mode_t
 
ib_lck_mode
);

728 
ib_îr_t
 
	`ib_curs‹_£t_lock_mode
(

729 
ib_¸§_t
 
ib_¸§
,

730 
ib_lck_mode_t
 
ib_lck_mode
);

733 
	`ib_curs‹_£t_˛u°î_ac˚ss
(

734 
ib_¸§_t
 
ib_¸§
);

737 
	`ib_curs‹_°mt_begö
(
ib_¸§_t
 
ib_¸§
);

741 
ib_îr_t
 
	`ib_tu∂e_wrôe_doubÀ
(
ib_çl_t
 
ib_çl
,

742 
cﬁ_no
,

743 
vÆ
);

747 
ib_îr_t
 
	`ib_tu∂e_ªad_doubÀ
(
ib_çl_t
 
ib_çl
,

748 
ib_ulöt_t
 
cﬁ_no
,

749 *
dvÆ
);

753 
ib_îr_t
 
	`ib_tu∂e_wrôe_Êﬂt
(
ib_çl_t
 
ib_çl
,

754 
cﬁ_no
,

755 
vÆ
);

759 
ib_îr_t
 
	`ib_tu∂e_ªad_Êﬂt
(
ib_çl_t
 
ib_çl
,

760 
ib_ulöt_t
 
cﬁ_no
,

761 *
fvÆ
);

765 c⁄° *
	`ib_cﬁ_gë_«me
(

766 
ib_¸§_t
 
ib_¸§
,

767 
ib_ulöt_t
 
i
);

771 c⁄° *
	`ib_gë_idx_fõld_«me
(

772 
ib_¸§_t
 
ib_¸§
,

773 
ib_ulöt_t
 
i
);

777 
	`ib_cfg_gë_cfg
();

781 
ib_åx_Àvñ_t
 
	`ib_cfg_åx_Àvñ
();

785 
ib_ulöt_t
 
	`ib_cfg_bk_commô_öãrvÆ
();

789 
ib_u64_t
 
	`ib_åx_gë_°¨t_time
(
ib_åx_t
 
ib_åx
);

794 c⁄° *
	`ib_ut_°ªº
(
ib_îr_t
 
num
);

802 
ib_îr_t
 
	`ib_sdi_gë_keys
(
uöt32_t
 
èbÀ•a˚_id
, 
ib_sdi_ve˘‹_t
 *
ib_sdi_ve˘‹
,

803 
ib_åx_t
 
åx
);

818 
ib_îr_t
 
	`ib_sdi_gë
(
uöt32_t
 
èbÀ•a˚_id
, c⁄° 
ib_sdi_key_t
 *
ib_sdi_key
,

819 *
comp_sdi
, 
uöt32_t
 *
comp_sdi_Àn
,

820 
uöt32_t
 *
uncomp_sdi_Àn
, 
ib_åx_t
 
åx
);

831 
ib_îr_t
 
	`ib_sdi_£t
(
uöt32_t
 
èbÀ•a˚_id
, c⁄° 
ib_sdi_key_t
 *
sdi_key
,

832 
uöt32_t
 
uncomp_Àn
, uöt32_à
comp_Àn
, c⁄° *
sdi
,

833 
ib_åx_t
 
åx
);

841 
ib_îr_t
 
	`ib_sdi_dñëe
(
uöt32_t
 
èbÀ•a˚_id
, c⁄° 
ib_sdi_key_t
 *
sdi_key
,

842 
ib_åx_t
 
åx
);

847 
ib_îr_t
 
	`ib_sdi_¸óã
(
•a˚_id_t
 
èbÀ•a˚_id
);

853 
ib_îr_t
 
	`ib_sdi_dr›
(
•a˚_id_t
 
èbÀ•a˚_id
);

859 
ib_îr_t
 
	`ib_sdi_Êush
(
•a˚_id_t
 
•a˚_id
);

861 #ifde‡
UNIV_MEMCACHED_SDI


869 
ib_îr_t
 
	`ib_memc_sdi_gë
(
ib_¸§_t
 
¸§
, c⁄° *
key
, *
sdi
,

870 
uöt64_t
 *
sdi_Àn
);

876 
ib_îr_t
 
	`ib_memc_sdi_dñëe
(
ib_¸§_t
 
¸§
, c⁄° *
key
);

884 
ib_îr_t
 
	`ib_memc_sdi_£t
(
ib_¸§_t
 
¸§
, c⁄° *
key
, c⁄° *
sdi
,

885 
uöt64_t
 *
sdi_Àn
);

890 
ib_îr_t
 
	`ib_memc_sdi_¸óã
(
ib_¸§_t
 
¸§
);

895 
ib_îr_t
 
	`ib_memc_sdi_dr›
(
ib_¸§_t
 
¸§
);

903 
ib_îr_t
 
	`ib_memc_sdi_gë_keys
(
ib_¸§_t
 
¸§
, c⁄° *
key
, *
sdi
,

904 
uöt64_t
 
li°_buf_Àn
);

910 
ib_boﬁ_t
 
	`ib_is_vútuÆ_èbÀ
(
ib_¸§_t
 
¸§
);

912 #ifde‡
UNIV_MEMCACHED_SDI


913 
	#ONLY_FOR_MEMCACHED_SDI
(
x
Ë
	)
x

915 
	#ONLY_FOR_MEMCACHED_SDI
(
x
)

	)

918 
	#FOR_EACH_API_METHOD_NAME_STEM
(
å™sf‹m
) \

919 
	`å™sf‹m
(
curs‹_›í_èbÀ
) \

920 
	`å™sf‹m
(
curs‹_ªad_row
) \

921 
	`å™sf‹m
(
curs‹_ö£π_row
) \

922 
	`å™sf‹m
(
curs‹_dñëe_row
) \

923 
	`å™sf‹m
(
curs‹_upd©e_row
) \

924 
	`å™sf‹m
(
curs‹_movëo
) \

925 
	`å™sf‹m
(
curs‹_fú°
) \

926 
	`å™sf‹m
(
curs‹_√xt
) \

927 
	`å™sf‹m
(
curs‹_£t_m©ch_mode
) \

928 
	`å™sf‹m
(
£c_£¨ch_tu∂e_¸óã
) \

929 
	`å™sf‹m
(
˛u°_ªad_tu∂e_¸óã
) \

930 
	`å™sf‹m
(
tu∂e_dñëe
) \

931 
	`å™sf‹m
(
tu∂e_ªad_u8
) \

932 
	`å™sf‹m
(
tu∂e_ªad_u16
) \

933 
	`å™sf‹m
(
tu∂e_ªad_u32
) \

934 
	`å™sf‹m
(
tu∂e_ªad_u64
) \

935 
	`å™sf‹m
(
tu∂e_ªad_i8
) \

936 
	`å™sf‹m
(
tu∂e_ªad_i16
) \

937 
	`å™sf‹m
(
tu∂e_ªad_i32
) \

938 
	`å™sf‹m
(
tu∂e_ªad_i64
) \

939 
	`å™sf‹m
(
tu∂e_gë_n_cﬁs
) \

940 
	`å™sf‹m
(
cﬁ_£t_vÆue
) \

941 
	`å™sf‹m
(
cﬁ_gë_vÆue
) \

942 
	`å™sf‹m
(
cﬁ_gë_mëa
) \

943 
	`å™sf‹m
(
åx_begö
) \

944 
	`å™sf‹m
(
åx_commô
) \

945 
	`å™sf‹m
(
åx_rﬁlback
) \

946 
	`å™sf‹m
(
åx_°¨t
) \

947 
	`å™sf‹m
(
åx_ªÀa£
) \

948 
	`å™sf‹m
(
curs‹_lock
) \

949 
	`å™sf‹m
(
curs‹_˛o£
) \

950 
	`å™sf‹m
(
curs‹_√w_åx
) \

951 
	`å™sf‹m
(
curs‹_ª£t
) \

952 
	`å™sf‹m
(
cﬁ_gë_«me
) \

953 
	`å™sf‹m
(
curs‹_›í_ödex_usög_«me
) \

954 
	`å™sf‹m
(
cfg_gë_cfg
) \

955 
	`å™sf‹m
(
curs‹_£t_˛u°î_ac˚ss
) \

956 
	`å™sf‹m
(
curs‹_commô_åx
) \

957 
	`å™sf‹m
(
cfg_åx_Àvñ
) \

958 
	`å™sf‹m
(
tu∂e_gë_n_u£r_cﬁs
) \

959 
	`å™sf‹m
(
curs‹_£t_lock_mode
) \

960 
	`å™sf‹m
(
gë_idx_fõld_«me
) \

961 
	`å™sf‹m
(
åx_gë_°¨t_time
) \

962 
	`å™sf‹m
(
cfg_bk_commô_öãrvÆ
) \

963 
	`å™sf‹m
(
ut_°ªº
) \

964 
	`å™sf‹m
(
curs‹_°mt_begö
) \

965 
	`ONLY_FOR_MEMCACHED_SDI
(
	`å™sf‹m
(
memc_sdi_gë
)) \

966 
	`ONLY_FOR_MEMCACHED_SDI
(
	`å™sf‹m
(
memc_sdi_dñëe
)) \

967 
	`ONLY_FOR_MEMCACHED_SDI
(
	`å™sf‹m
(
memc_sdi_£t
)) \

968 
	`ONLY_FOR_MEMCACHED_SDI
(
	`å™sf‹m
(
memc_sdi_¸óã
)) \

969 
	`ONLY_FOR_MEMCACHED_SDI
(
	`å™sf‹m
(
memc_sdi_dr›
)) \

970 
	`ONLY_FOR_MEMCACHED_SDI
(
	`å™sf‹m
(
memc_sdi_gë_keys
)) \

971 
	`å™sf‹m
(
åx_ªad_⁄ly
) \

972 
	`å™sf‹m
(
is_vútuÆ_èbÀ
Ë

	)

	@api0misc.h

34 #i‚de‡
≠i0misc_h


35 
	#≠i0misc_h


	)

37 
	~<sys/ty≥s.h
>

39 
	~"h™dÀr.h
"

40 
	~"os0fûe.h
"

41 
	~"que0que.h
"

42 
	~"åx0åx.h
"

43 
	~"univ.i
"

46 
boﬁ
 
ib_bölog_íabÀd
;

49 
boﬁ
 
ib_mdl_íabÀd
;

52 
boﬁ
 
ib_dißbÀ_row_lock
;

55 
ul⁄g
 
ib_åx_Àvñ_£âög
;

58 
ul⁄g
 
ib_bk_commô_öãrvÆ
;

60 
	sib_sdi_key
 {

61 c⁄° 
sdi_key_t
 *
	msdi_key
;

64 
	sib_sdi_ve˘‹
 {

65 
sdi_ve˘‹_t
 *
	msdi_ve˘‹
;

77 
iboﬁ
 
ib_h™dÀ_îr‹s
(
dbîr_t
 *
√w_îr
, 
åx_t
 *
åx
, 
que_thr_t
 *
thr
,

78 
åx_ßvït_t
 *
ßvït
, 
boﬁ
 
is_sdi
);

83 
dbîr_t
 
ib_åx_lock_èbÀ_wôh_ªåy
(

84 
åx_t
 *
åx
,

85 
di˘_èbÀ_t
 *
èbÀ
,

86 
lock_mode
 
mode
);

	@arch0arch.h

32 #i‚de‡
ARCH_ARCH_INCLUDE


33 
	#ARCH_ARCH_INCLUDE


	)

35 
	~<mysql/comp⁄íts/£rvi˚s/∑ge_åack_£rvi˚.h
>

36 
	~"log0log.h
"

37 
	~"ut0muãx.h
"

39 
	~<li°
>

44 c⁄° 
	gARCH_DIR
[] = 
OS_FILE_PREFIX
 "ib_archive";

47 c⁄° 
	gARCH_LOG_DIR
[] = "log_group_";

50 c⁄° 
	gARCH_PAGE_DIR
[] = "page_group_";

53 c⁄° 
	gARCH_LOG_FILE
[] = "ib_log_";

56 c⁄° 
	gARCH_PAGE_FILE
[] = "ib_page_";

63 
c⁄°ex¥
 
	gARCH_PAGE_GROUP_DURABLE_FILE_NAME
[] = "durable";

67 c⁄° 
uöt
 
	gMAX_LSN_DECIMAL_DIGIT
 = 32;

70 c⁄° 
uöt
 
	gMAX_ARCH_LOG_FILE_NAME_LEN
 =

71 (
ARCH_DIR
Ë+ 1 + (
ARCH_LOG_DIR
Ë+ 
MAX_LSN_DECIMAL_DIGIT
 + 1 +

72 (
ARCH_LOG_FILE
Ë+ 
MAX_LSN_DECIMAL_DIGIT
 + 1;

75 c⁄° 
uöt
 
	gMAX_ARCH_PAGE_FILE_NAME_LEN
 =

76 (
ARCH_DIR
Ë+ 1 + (
ARCH_PAGE_DIR
Ë+ 
MAX_LSN_DECIMAL_DIGIT
 + 1 +

77 (
ARCH_PAGE_FILE
Ë+ 
MAX_LSN_DECIMAL_DIGIT
 + 1;

80 c⁄° 
uöt
 
	gMAX_ARCH_DIR_NAME_LEN
 =

81 (
ARCH_DIR
Ë+ 1 + (
ARCH_PAGE_DIR
Ë+ 
MAX_LSN_DECIMAL_DIGIT
 + 1;

84 
log_¨chivî_thªad
();

87 
os_evít_t
 
log_¨chivî_thªad_evít
;

90 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_SIZE
 = 
UNIV_PAGE_SIZE_DEF
;

113 
	eArch_Clõ¡_Sèã
 {

115 
	mARCH_CLIENT_STATE_INIT
 = 0,

118 
	mARCH_CLIENT_STATE_STARTED
,

121 
	mARCH_CLIENT_STATE_STOPPED


127 
¨ch_ªmove_fûe
(c⁄° *
fûe_∑th
, c⁄° *
fûe_«me
);

132 
¨ch_ªmove_dú
(c⁄° *
dú_∑th
, c⁄° *
dú_«me
);

157 
	eArch_Sèã
 {

159 
	mARCH_STATE_INIT
 = 0,

162 
	mARCH_STATE_ACTIVE
,

165 
	mARCH_STATE_PREPARE_IDLE
,

168 
	mARCH_STATE_IDLE
,

171 
	mARCH_STATE_READ_ONLY
,

174 
	mARCH_STATE_ABORT


196 
	eArch_Blk_Sèã
 {

198 
	mARCH_BLOCK_INIT
 = 0,

201 
	mARCH_BLOCK_ACTIVE
,

204 
	mARCH_BLOCK_READY_TO_FLUSH
,

207 
	mARCH_BLOCK_FLUSHED


211 
	eArch_Blk_Ty≥
 {

213 
	mARCH_RESET_BLOCK
 = 0,

216 
	mARCH_DATA_BLOCK


220 
	eArch_Blk_Flush_Ty≥
 {

222 
	mARCH_FLUSH_NORMAL
 = 0,

226 
	mARCH_FLUSH_PARTIAL


230 
	eArch_Page_Dblwr_Off£t
 {

232 
	mARCH_PAGE_DBLWR_RESET_PAGE
 = 0,

235 
	mARCH_PAGE_DBLWR_FULL_FLUSH_PAGE
,

238 
	mARCH_PAGE_DBLWR_PARTIAL_FLUSH_PAGE


243 
dbîr_t
 
¨ch_öô
();

246 
¨ch_‰ì
();

250 
°¨t_log_¨chivî_background
();

254 
°¨t_∑ge_¨chivî_background
();

257 
os_evít_t
 
∑ge_¨chivî_thªad_evít
;

260 
∑ge_¨chivî_thªad
();

264 
boﬁ
 
¨ch_wake_thªads
();

267 
˛ass
 
	gArch_Group
;

268 
˛ass
 
	gArch_Log_Sys
;

269 
˛ass
 
	gArch_Dblwr_Ctx
;

270 
	gArch_Recv_Group_Info
;

273 
	sArch_Page_Pos
 {

275 
öô
();

278 
£t_√xt
();

281 
uöt64_t
 
	mm_block_num
;

284 
uöt
 
	mm_off£t
;

286 
boﬁ
 
	m›î©‹
<(
Arch_Page_Pos
 
	mpos
) {

287 i‡(
	mm_block_num
 < 
	mpos
.m_block_num ||

288 (
	mm_block_num
 =
pos
.
m_block_num
 && 
m_off£t
 <=Öos.m_offset)) {

289  (
åue
);

291  (
	mÁl£
);

296 
	sArch_Poöt
 {

298 
l¢_t
 
	ml¢
{
	mLSN_MAX
};

301 
Arch_Page_Pos
 
	mpos
;

305 
	sArch_Re£t_Fûe
 {

307 
öô
();

310 
uöt
 
	mm_fûe_ödex
{0};

314 
l¢_t
 
	mm_l¢
{
	mLSN_MAX
};

317 
	m°d
::
ve˘‹
<
Arch_Poöt
> 
m_°¨t_poöt
;

321 
usög
 
	gArch_Re£t
 = 
°d
::
deque
<
Arch_Re£t_Fûe
>;

324 ˛as†
	cArch_Block
 {

325 
	mpublic
:

330 
	$Arch_Block
(
byã
 *
blk_buf
, 
uöt
 
size
, 
Arch_Blk_Ty≥
 
ty≥
)

331 : 
	`m_d©a
(
blk_buf
), 
	`m_size
(
size
), 
	$m_ty≥
(
ty≥
) {}

336 
	`c›y_d©a
(c⁄° 
Arch_Block
 *
block
);

340 
	`begö_wrôe
(
Arch_Page_Pos
 
pos
);

344 
	`íd_wrôe
();

348 
boﬁ
 
	$is_öô
(Ëc⁄° {  (
m_°©e
 =
ARCH_BLOCK_INIT
); 
	}
}

350 
boﬁ
 
	$is_a˘ive
(Ëc⁄° {  (
m_°©e
 =
ARCH_BLOCK_ACTIVE
); 
	}
}

353 
boﬁ
 
	$is_ÊushabÀ
(Ëc⁄° {  (
m_°©e
 !
ARCH_BLOCK_READY_TO_FLUSH
); 
	}
}

357 
	$£t_Êushed
(Ë{ 
m_°©e
 = 
ARCH_BLOCK_FLUSHED
; 
	}
}

364 
boﬁ
 
add_∑ge
(
buf_∑ge_t
 *
∑ge
, 
Arch_Page_Pos
 *
pos
);

370 
add_ª£t
(
l¢_t
 
ª£t_l¢
, 
Arch_Page_Pos
 
ª£t_pos
);

379 
boﬁ
 
gë_d©a
(
Arch_Page_Pos
 *
ªad_pos
, 
uöt
 
ªad_Àn
, 
byã
 *
ªad_buff
);

386 
boﬁ
 
£t_d©a
(
uöt
 
ªad_Àn
, 
byã
 *
ªad_buff
, uöà
ªad_off£t
);

392 
dbîr_t
 
Êush
(
Arch_Group
 *
fûe_group
, 
Arch_Blk_Flush_Ty≥
 
ty≥
);

397 
upd©e_block_hódî
(
l¢_t
 
°›_l¢
,Ü¢_à
ª£t_l¢
);

399 
ªad
(
Arch_Group
 *
group
, 
uöt64_t
 
off£t
);

403 
	$£t_d©a_Àn
(
uöt
 
d©a_Àn
Ë{ 
m_d©a_Àn
 = d©a_Àn; 
	}
}

406 
uöt
 
	$gë_d©a_Àn
(Ëc⁄° {  (
m_d©a_Àn
); 
	}
}

409 
uöt64_t
 
	$gë_numbî
(Ëc⁄° {  (
m_numbî
); 
	}
}

412 
l¢_t
 
	$gë_°›_l¢
(Ëc⁄° {  (
m_°›_l¢
); 
	}
}

416 
l¢_t
 
	$gë_ﬁde°_l¢
(Ëc⁄° {  (
m_ﬁde°_l¢
); 
	}
}

420 
Arch_Blk_Sèã
 
	$gë_°©e
(Ëc⁄° {  (
m_°©e
); 
	}
}

425 
boﬁ
 
is_zî€s
(c⁄° 
byã
 *
block
);

430 
boﬁ
 
vÆid©e
(
byã
 *
block
);

434 
uöt
 
gë_fûe_ödex
(
uöt64_t
 
block_num
);

439 
uöt
 
gë_ty≥
(
byã
 *
block
);

444 
uöt
 
gë_d©a_Àn
(
byã
 *
block
);

449 
l¢_t
 
gë_°›_l¢
(
byã
 *
block
);

454 
uöt64_t
 
gë_block_numbî
(
byã
 *
block
);

459 
l¢_t
 
gë_ª£t_l¢
(
byã
 *
block
);

464 
uöt32_t
 
gë_checksum
(
byã
 *
block
);

470 
uöt64_t
 
gë_fûe_off£t
(uöt64_à
block_num
, 
Arch_Blk_Ty≥
 
ty≥
);

472 
	g¥iv©e
:

477 
byã
 *
m_d©a
;

480 
uöt
 
	gm_d©a_Àn
{};

483 
uöt
 
	gm_size
;

486 
Arch_Blk_Sèã
 
	gm_°©e
{
	gARCH_BLOCK_INIT
};

489 
uöt64_t
 
	gm_numbî
{};

492 
Arch_Blk_Ty≥
 
	gm_ty≥
;

496 
l¢_t
 
	gm_°›_l¢
{
	gLSN_MAX
};

500 
l¢_t
 
	gm_ﬁde°_l¢
{
	gLSN_MAX
};

503 
l¢_t
 
	gm_ª£t_l¢
{
	gLSN_MAX
};

508 ˛as†
	cArch_Fûe_Ctx
 {

509 
	mpublic
:

511 
	$Arch_Fûe_Ctx
(Ë{ 
m_fûe
.m_fûê
OS_FILE_CLOSED
; }

514 ~
	$Arch_Fûe_Ctx
() {

515 
	`˛o£
();

517 i‡(
m_«me_buf
 !
nuŒ±r
) {

518 
	`ut_‰ì
(
m_«me_buf
);

520 
	}
}

529 
dbîr_t
 
öô
(c⁄° *
∑th
, c⁄° *
ba£_dú
, c⁄° *
ba£_fûe
,

530 
uöt
 
num_fûes
, 
uöt64_t
 
fûe_size
);

539 
dbîr_t
 
›í
(
boﬁ
 
ªad_⁄ly
, 
l¢_t
 
°¨t_l¢
, 
uöt
 
fûe_ödex
,

540 
uöt64_t
 
fûe_off£t
);

546 
dbîr_t
 
›í_√w
(
l¢_t
 
°¨t_l¢
, 
uöt64_t
 
fûe_off£t
);

552 
dbîr_t
 
›í_√xt
(
l¢_t
 
°¨t_l¢
, 
uöt64_t
 
fûe_off£t
);

561 
dbîr_t
 
ªad
(
byã
 *
to_buf„r
, c⁄° 
uöt64_t
 
off£t
, c⁄° 
uöt
 
size
);

572 
dbîr_t
 
wrôe
(
Arch_Fûe_Ctx
 *
‰om_fûe
, 
byã
 *
‰om_buf„r
, 
uöt
 
off£t
,

573 
uöt
 
size
);

583 
dbîr_t
 
wrôe
(
Arch_Fûe_Ctx
 *
‰om_fûe
, 
byã
 *
‰om_buf„r
, 
uöt
 
size
);

586 
	$Êush
() {

587 i‡(
m_fûe
.m_fûê!
OS_FILE_CLOSED
) {

588 
	`os_fûe_Êush
(
m_fûe
);

590 
	}
}

593 
	$˛o£
() {

594 i‡(
m_fûe
.m_fûê!
OS_FILE_CLOSED
) {

595 
	`os_fûe_˛o£
(
m_fûe
);

596 
m_fûe
.m_fûê
OS_FILE_CLOSED
;

598 
	}
}

602 
boﬁ
 
	$is_˛o£d
(Ëc⁄° {  (
m_fûe
.m_fûê=
OS_FILE_CLOSED
); 
	}
}

606 
uöt64_t
 
	$byãs_À·
() const {

607 
	`ut_ad
(
m_size
 >
m_off£t
);

608  (
m_size
 - 
m_off£t
);

609 
	}
}

617 
buûd_«me
(
uöt
 
idx
, 
l¢_t
 
dú_l¢
, *
buf„r
, uöà
Àngth
);

624 
buûd_dú_«me
(
l¢_t
 
dú_l¢
, *
buf„r
, 
uöt
 
Àngth
);

628 
uöt64_t
 
	$gë_size
(Ëc⁄° {  (
m_size
); 
	}
}

632 
uöt64_t
 
	$gë_off£t
(Ëc⁄° {  (
m_off£t
); 
	}
}

636 
uöt
 
	$gë_cou¡
(Ëc⁄° {  (
m_cou¡
); 
	}
}

640 
uöt64_t
 
	$gë_phy_size
() const {

641 
	`ut_ad
(
m_«me_buf
 !
nuŒ±r
);

642 
os_fûe_size_t
 
fûe_size
 = 
	`os_fûe_gë_size
(
m_«me_buf
);

643  (
fûe_size
.
m_tŸÆ_size
);

644 
	}
}

649 
upd©e_°›_poöt
(
uöt
 
fûe_ödex
, 
l¢_t
 
°›_l¢
);

651 #ifde‡
UNIV_DEBUG


654 
ªcovîy_ª£t_¥öt
(
uöt
 
fûe_°¨t_ödex
);

664 
boﬁ
 
vÆid©e
(
Arch_Group
 *
group
, 
uöt
 
fûe_ödex
, 
l¢_t
 
°¨t_l¢
,

665 
uöt
 &
ª£t_cou¡
);

674 
ßve_ª£t_poöt_ö_mem
(
l¢_t
 
l¢
, 
Arch_Page_Pos
 
pos
);

681 
boﬁ
 
föd_ª£t_poöt
(
l¢_t
 
check_l¢
, 
Arch_Poöt
 &
ª£t_poöt
);

691 
boﬁ
 
föd_°›_poöt
(
Arch_Group
 *
group
, 
l¢_t
 
check_l¢
,

692 
Arch_Poöt
 &
°›_poöt
, 
Arch_Page_Pos
 
œ°_pos
);

698 
boﬁ
 
dñëe_fûe
(
uöt
 
fûe_ödex
, 
l¢_t
 
begö_l¢
);

702 
dñëe_fûes
(
l¢_t
 
begö_l¢
);

710 
l¢_t
 
purge
÷¢_à
begö_l¢
,Ü¢_à
íd_l¢
,Ü¢_à
purge_l¢
);

715 
	$ªcovîy_„tch_öfo
(
Arch_Re£t_Fûe
 &
ª£t_fûe
, 
l¢_t
 &
°›_l¢
) {

716 i‡(
m_ª£t
.
	`size
() != 0) {

717 
ª£t_fûe
 = 
m_ª£t
.
	`back
();

720 
°›_l¢
 = 
	`gë_œ°_°›_poöt
();

721 
	}
}

726 
gë_°©us
(
°d
::
ve˘‹
<°d::
∑ú
<
l¢_t
, 
boﬁ
>> &
°©us
) {

727 autÿ
	gª£t_fûe
 : 
m_ª£t
) {

728 autÿ
ª£t_poöt
 : 
ª£t_fûe
.
m_°¨t_poöt
) {

729 
°©us
.
push_back
(
°d
::
make_∑ú
(
ª£t_poöt
.
l¢
, 
åue
));

735 
l¢_t
 
	$gë_œ°_°›_poöt
() const {

736 i‡(
m_°›_poöts
.
	`size
() == 0) {

737  (
LSN_MAX
);

740  (
m_°›_poöts
.
	`back
());

741 
	}
}

749 
dbîr_t
 
„tch_ª£t_poöts
(
uöt
 
fûe_ödex
, 
Arch_Page_Pos
 &
ª£t_pos
);

757 
dbîr_t
 
„tch_°›_poöts
(
boﬁ
 
œ°_fûe
, 
Arch_Page_Pos
 &
wrôe_pos
);

759 
	g¥iv©e
:

760 #ifde‡
UNIV_DEBUG


768 
boﬁ
 
vÆid©e_ª£t_block_ö_fûe
(
pfs_os_fûe_t
 
fûe
, 
uöt
 
fûe_ödex
,

769 
uöt
 &
ª£t_cou¡
);

778 
boﬁ
 
vÆid©e_°›_poöt_ö_fûe
(
Arch_Group
 *
group
, 
pfs_os_fûe_t
 
fûe
,

779 
uöt
 
fûe_ödex
);

785 
l¢_t
 
„tch_ª£t_l¢
(
uöt64_t
 
block_num
);

787 
	g¥iv©e
:

790 *
m_«me_buf
{
nuŒ±r
};

793 
uöt
 
	gm_«me_Àn
{};

797 
uöt
 
	gm_ba£_Àn
{};

800 c⁄° *
	gm_∑th_«me
{
	gnuŒ±r
};

803 c⁄° *
	gm_dú_«me
{
	gnuŒ±r
};

806 c⁄° *
	gm_fûe_«me
{
	gnuŒ±r
};

809 
pfs_os_fûe_t
 
	gm_fûe
;

812 
uöt
 
	gm_ödex
{};

815 
uöt
 
	gm_cou¡
{};

818 
uöt64_t
 
	gm_off£t
{};

821 
uöt64_t
 
	gm_size
{};

827 
Arch_Re£t
 
	gm_ª£t
;

835 
	g°d
::
ve˘‹
<
l¢_t
> 
m_°›_poöts
;

841 ˛as†
	cArch_Group
 {

842 
	mpublic
:

847 
	$Arch_Group
(
l¢_t
 
°¨t_l¢
, 
uöt
 
hódî_Àn
, 
ib_muãx_t
 *
muãx
)

848 : 
	`m_begö_l¢
(
°¨t_l¢
),

849 
	$m_hódî_Àn
(
hódî_Àn
)

850 #ifde‡
UNIV_DEBUG


852 
	$m_¨ch_muãx
(
muãx
)

855 
m_a˘ive_fûe
.
m_fûe
 = 
OS_FILE_CLOSED
;

856 
m_duøbÀ_fûe
.
m_fûe
 = 
OS_FILE_CLOSED
;

857 
m_°›_pos
.
	`öô
();

861 ~
	`Arch_Group
();

869 
dbîr_t
 
	`öô_dblwr_fûe_˘x
(c⁄° *
∑th
, c⁄° *
ba£_fûe
,

870 
uöt
 
num_fûes
, 
uöt64_t
 
fûe_size
);

881 
dbîr_t
 
	$öô_fûe_˘x
(c⁄° *
∑th
, c⁄° *
ba£_dú
,

882 c⁄° *
ba£_fûe
, 
uöt
 
num_fûes
,

883 
uöt64_t
 
fûe_size
) {

884  (
m_fûe_˘x
.
	`öô
(
∑th
, 
ba£_dú
, 
ba£_fûe
, 
num_fûes
, 
fûe_size
));

885 
	}
}

888 
	$˛o£_fûe_˘xs
() {

889 
m_fûe_˘x
.
	`˛o£
();

891 i‡(
m_duøbÀ_fûe
.
m_fûe
 !
OS_FILE_CLOSED
) {

892 
	`os_fûe_˛o£
(
m_duøbÀ_fûe
);

893 
m_duøbÀ_fûe
.
m_fûe
 = 
OS_FILE_CLOSED
;

895 
	}
}

901 
	$dißbÀ
(
l¢_t
 
íd_l¢
) {

902 
m_is_a˘ive
 = 
Ál£
;

904 i‡(
íd_l¢
 !
LSN_MAX
) {

905 
m_íd_l¢
 = 
íd_l¢
;

907 
	}
}

911 
	$©èch
(
boﬁ
 
is_duøbÀ
) {

912 
	`ut_ad
(
	`muãx_own
(
m_¨ch_muãx
));

913 ++
m_num_a˘ive
;

915 i‡(
is_duøbÀ
) {

916 ++
m_dur_ªf_cou¡
;

918 ++
m_ªf_cou¡
;

920 
	}
}

930 
uöt
 
	$dëach
(
l¢_t
 
°›_l¢
, 
Arch_Page_Pos
 *
°›_pos
) {

931 
	`ut_ad
(
m_num_a˘ive
 > 0);

932 
	`ut_ad
(
	`muãx_own
(
m_¨ch_muãx
));

933 --
m_num_a˘ive
;

935 i‡(
m_num_a˘ive
 == 0) {

936 
m_íd_l¢
 = 
°›_l¢
;

937 i‡(
°›_pos
 !
nuŒ±r
) {

938 
m_°›_pos
 = *
°›_pos
;

942  (
m_num_a˘ive
);

943 
	}
}

950 
	$ªÀa£
(
boﬁ
 
is_duøbÀ
) {

951 
	`ut_ad
(
	`muãx_own
(
m_¨ch_muãx
));

952 
	`ut_a
(!
is_duøbÀ
);

954 
	`ut_ad
(
m_ªf_cou¡
 > 0);

955 --
m_ªf_cou¡
;

956 
	}
}

962 
dbîr_t
 
buûd_a˘ive_fûe_«me
();

968 
dbîr_t
 
buûd_duøbÀ_fûe_«me
();

975 
m¨k_a˘ive
();

982 
m¨k_duøbÀ
();

989 
m¨k_öa˘ive
();

993 
boﬁ
 
	$is_a˘ive
(Ëc⁄° {  (
m_is_a˘ive
); 
	}
}

1001 
dbîr_t
 
wrôe_fûe_hódî
(
byã
 *
‰om_buf„r
, 
uöt
 
Àngth
);

1012 
dbîr_t
 
wrôe_to_doubÀwrôe_fûe
(
Arch_Fûe_Ctx
 *
‰om_fûe
,

1013 
byã
 *
‰om_buf„r
, 
uöt
 
wrôe_size
,

1014 
Arch_Page_Dblwr_Off£t
 
off£t
);

1025 
dbîr_t
 
wrôe_to_fûe
(
Arch_Fûe_Ctx
 *
‰om_fûe
, 
byã
 *
‰om_buf„r
,

1026 
uöt
 
Àngth
, 
boﬁ
 
∑πül_wrôe
, boﬁ 
do_≥rsi°
);

1033 
boﬁ
 
	$föd_ª£t_poöt
(
l¢_t
 
check_l¢
, 
Arch_Poöt
 &
ª£t_poöt
) {

1034  (
m_fûe_˘x
.
	`föd_ª£t_poöt
(
check_l¢
, 
ª£t_poöt
));

1035 
	}
}

1043 
boﬁ
 
	$föd_°›_poöt
(
l¢_t
 
check_l¢
, 
Arch_Poöt
 &
°›_poöt
,

1044 
Arch_Page_Pos
 
wrôe_pos
) {

1045 
	`ut_ad
(
	`vÆid©e_öfo_ö_fûes
());

1046 
Arch_Page_Pos
 
œ°_pos
 = 
	`is_a˘ive
(Ë? 
wrôe_pos
 : 
m_°›_pos
;

1047  (
m_fûe_˘x
.
	`föd_°›_poöt
(
this
, 
check_l¢
, 
°›_poöt
, 
œ°_pos
));

1048 
	}
}

1050 #ifde‡
UNIV_DEBUG


1055 
adju°_íd_l¢
(
l¢_t
 &
°›_l¢
, 
uöt32_t
 &
blk_Àn
);

1060 
adju°_c›y_Àngth
(
uöt32_t
 &
Àngth
);

1065 
boﬁ
 
vÆid©e_öfo_ö_fûes
();

1070 
uöt
 
	$gë_fûe_cou¡
(Ëc⁄° {  (
m_fûe_˘x
.
	`gë_cou¡
()); 
	}
}

1074 
boﬁ
 
	$is_ª„ªn˚d
() const {

1075  (
m_ªf_cou¡
 > 0Ë|| (
m_dur_ªf_cou¡
 > 0);

1076 
	}
}

1080 
boﬁ
 
	$is_duøbÀ_˛õ¡_a˘ive
() const {

1081  (
m_num_a˘ive
 !
m_ªf_cou¡
);

1082 
	}
}

1086 
boﬁ
 
	$is_duøbÀ
(Ëc⁄° {  (
m_dur_ªf_cou¡
 > 0); 
	}
}

1090 
	$©èch_durög_ªcovîy
(Ë{ ++
m_dur_ªf_cou¡
; 
	}
}

1098 
uöt
 
purge
(
l¢_t
 
purge_l¢
,Ü¢_à&
purged_l¢
);

1101 
	$shutdown
(Ë{ 
s_dblwr_fûe_˘x
.
	`˛o£
(); 
	}
}

1109 
	$ßve_ª£t_poöt_ö_mem
(
l¢_t
 
l¢
, 
Arch_Page_Pos
 
pos
) {

1110 
m_fûe_˘x
.
	`ßve_ª£t_poöt_ö_mem
(
l¢
, 
pos
);

1111 
	}
}

1116 
	$upd©e_°›_poöt
(
Arch_Page_Pos
 
pos
, 
l¢_t
 
°›_l¢
) {

1117 
m_fûe_˘x
.
	`upd©e_°›_poöt
(
Arch_Block
::
	`gë_fûe_ödex
(
pos
.
m_block_num
),

1118 
°›_l¢
);

1119 
	}
}

1133 
dbîr_t
 
ªcovî
(
Arch_Recv_Group_Info
 *
group_öfo
, 
boﬁ
 &
√w_em±y_fûe
,

1134 
Arch_Dblwr_Ctx
 *
dblwr_˘x
, 
Arch_Page_Pos
 &
wrôe_pos
,

1135 
Arch_Page_Pos
 &
ª£t_pos
);

1145 
dbîr_t
 
ªcovîy_ªad_œã°_blocks
(
byã
 *
buf
, 
uöt64_t
 
off£t
,

1146 
Arch_Blk_Ty≥
 
ty≥
);

1151 
	$ªcovîy_„tch_öfo
(
Arch_Re£t_Fûe
 &
ª£t_fûe
, 
l¢_t
 &
°›_l¢
) {

1152 
m_fûe_˘x
.
	`ªcovîy_„tch_öfo
(
ª£t_fûe
, 
°›_l¢
);

1153 
	}
}

1155 #ifde‡
UNIV_DEBUG


1158 
	$ªcovîy_ª£t_¥öt
(
uöt
 
fûe_°¨t_ödex
) {

1159 
	`DBUG_PRINT
("∑ge_¨chivî", ("Grou∞: %" 
PRIu64
 "", 
m_begö_l¢
));

1160 
m_fûe_˘x
.
	`ªcovîy_ª£t_¥öt
(
fûe_°¨t_ödex
);

1161 
	`DBUG_PRINT
("∑ge_¨chivî", ("EndÜ¢: %" 
PRIu64
 "", 
m_íd_l¢
));

1162 
	}
}

1170 
ªad_d©a
(
Arch_Page_Pos
 
cur_pos
, 
byã
 *
buff
, 
uöt
 
buff_Àn
);

1178 
	$gë_fûe_«me
(
uöt
 
idx
, *
«me_buf
, uöà
buf_Àn
) {

1179 
	`ut_ad
(
«me_buf
 !
nuŒ±r
);

1182 
m_fûe_˘x
.
	`buûd_«me
(
idx
, 
m_begö_l¢
, 
«me_buf
, 
buf_Àn
);

1183 
	}
}

1188 
uöt64_t
 
	$gë_fûe_size
(Ëc⁄° {  (
m_fûe_˘x
.
	`gë_size
()); 
	}
}

1192 
l¢_t
 
	$gë_begö_l¢
(Ëc⁄° {  (
m_begö_l¢
); 
	}
}

1195 
l¢_t
 
	$gë_íd_l¢
(Ëc⁄° {  (
m_íd_l¢
); 
	}
}

1198 
Arch_Page_Pos
 
	$gë_°›_pos
(Ëc⁄° {  (
m_°›_pos
); 
	}
}

1203 
gë_°©us
(
°d
::
ve˘‹
<°d::
∑ú
<
l¢_t
, 
boﬁ
>> &
°©us
) {

1204 
	gm_fûe_˘x
.
gë_°©us
(
°©us
);

1206 i‡(!
is_a˘ive
()) {

1207 
	g°©us
.
push_back
(
°d
::
make_∑ú
(
m_íd_l¢
, 
Ál£
));

1212 
Arch_Group
(Arch_Grou∞c⁄° &Ë
dñëe
;

1215 
	gArch_Group
 &
	g›î©‹
=(
Arch_Group
 c⁄° &Ë
dñëe
;

1217 
	g¥iv©e
:

1223 
ªad_‰om_fûe
(
Arch_Page_Pos
 *
ªad_pos
, 
uöt
 
ªad_Àn
, 
byã
 *
ªad_buff
);

1230 
	$gë_dú_«me
(*
«me_buf
, 
uöt
 
buf_Àn
) {

1231 
m_fûe_˘x
.
	`buûd_dú_«me
(
m_begö_l¢
, 
«me_buf
, 
buf_Àn
);

1232 
	}
}

1239 
dbîr_t
 
ªcovîy_ª∂a˚_∑ges_‰om_dblwr
(
Arch_Dblwr_Ctx
 *
dblwr_˘x
);

1249 
dbîr_t
 
ªcovîy_˛ónup_if_ªquúed
(
uöt
 &
num_fûes
, uöà
°¨t_ödex
,

1250 
boﬁ
 
duøbÀ
, boﬁ &
em±y_fûe
);

1261 
dbîr_t
 
ªcovîy_∑r£
(
Arch_Page_Pos
 &
wrôe_pos
, Arch_Page_Po†&
ª£t_pos
,

1262 
size_t
 
°¨t_ödex
);

1272 
dbîr_t
 
›í_fûe_durög_ªcovîy
(
Arch_Page_Pos
 
wrôe_pos
, 
boﬁ
 
em±y_fûe
);

1274 
	g¥iv©e
:

1276 
boﬁ
 
m_is_a˘ive
{
åue
};

1281 *
	gm_a˘ive_fûe_«me
{
	gnuŒ±r
};

1285 
pfs_os_fûe_t
 
	gm_a˘ive_fûe
;

1290 *
	gm_duøbÀ_fûe_«me
{
	gnuŒ±r
};

1295 
pfs_os_fûe_t
 
	gm_duøbÀ_fûe
;

1298 
uöt
 
	gm_ªf_cou¡
{};

1301 
uöt
 
	gm_dur_ªf_cou¡
{};

1304 
uöt
 
	gm_num_a˘ive
{};

1307 
l¢_t
 
	gm_begö_l¢
{
	gLSN_MAX
};

1310 
l¢_t
 
	gm_íd_l¢
{
	gLSN_MAX
};

1313 
Arch_Page_Pos
 
	gm_°›_pos
{};

1316 
uöt
 
	gm_hódî_Àn
{};

1319 
Arch_Fûe_Ctx
 
	gm_fûe_˘x
;

1323 
Arch_Fûe_Ctx
 
	gs_dblwr_fûe_˘x
;

1325 #ifde‡
UNIV_DEBUG


1329 
ib_muãx_t
 *
	gm_¨ch_muãx
;

1334 
usög
 
	gArch_GΩ_Li°
 = 
°d
::
li°
<
Arch_Group
 *, 
	gut_Æloˇt‹
<
	gArch_Group
 *>>;

1337 
usög
 
	gArch_GΩ_Li°_Iãr
 = 
Arch_GΩ_Li°
::
ôî©‹
;

1340 ˛as†
	cArch_Log_Sys
 {

1341 
	mpublic
:

1343 
	$Arch_Log_Sys
()

1344 : 
	`m_°©e
(
ARCH_STATE_INIT
),

1345 
	`m_¨chived_l¢
(
LSN_MAX
),

1346 
	`m_group_li°
(),

1347 
	$m_cuºít_group
() {

1348 
	`muãx_¸óã
(
LATCH_ID_LOG_ARCH
, &
m_muãx
);

1352 ~
	$Arch_Log_Sys
() {

1353 
	`ut_ad
(
m_°©e
 =
ARCH_STATE_INIT
 || m_°©ê=
ARCH_STATE_ABORT
);

1354 
	`ut_ad
(
m_cuºít_group
 =
nuŒ±r
);

1355 
	`ut_ad
(
m_group_li°
.
	`em±y
());

1357 
	`muãx_‰ì
(&
m_muãx
);

1358 
	}
}

1364 
boﬁ
 
	$is_a˘ive
() {

1365  (
m_°©e
 =
ARCH_STATE_ACTIVE
 || m_°©ê=
ARCH_STATE_PREPARE_IDLE
);

1366 
	}
}

1370 
boﬁ
 
	$is_öô
(Ë{  (
m_°©e
 =
ARCH_STATE_INIT
); 
	}
}

1374 
l¢_t
 
	$gë_¨chived_l¢
(Ë{  (
m_¨chived_l¢
.
	`lﬂd
()); 
	}
}

1378 
Arch_Group
 *
	$gë_¨ch_group
(Ë{  (
m_cuºít_group
); 
	}
}

1388 
°¨t
(
Arch_Group
 *&
group
, 
l¢_t
 &
°¨t_l¢
, 
byã
 *
hódî
,

1389 
boﬁ
 
is_duøbÀ
);

1399 
°›
(
Arch_Group
 *
group
, 
l¢_t
 &
°›_l¢
, 
byã
 *
log_blk
,

1400 
uöt32_t
 &
blk_Àn
);

1403 
f‹˚_ab‹t
();

1408 
ªÀa£
(
Arch_Group
 *
group
, 
boﬁ
 
is_duøbÀ
);

1419 
boﬁ
 
¨chive
(boﬁ 
öô
, 
Arch_Fûe_Ctx
 *
cuº_˘x
, 
l¢_t
 *
¨ch_l¢
, boﬁ *
waô
);

1424 
	$¨ch_muãx_íãr
(Ë{ 
	`muãx_íãr
(&
m_muãx
); 
	}
}

1427 
	$¨ch_muãx_exô
(Ë{ 
	`muãx_exô
(&
m_muãx
); 
	}
}

1430 
Arch_Log_Sys
(Arch_Log_Sy†c⁄° &Ë
dñëe
;

1433 
	gArch_Log_Sys
 &
	g›î©‹
=(
Arch_Log_Sys
 c⁄° &Ë
dñëe
;

1435 
	g¥iv©e
:

1441 
boﬁ
 
waô_idÀ
();

1447 
waô_¨chive_com∂ëe
(
l¢_t
 
èrgë_l¢
);

1453 
upd©e_hódî
(
byã
 *
hódî
, 
l¢_t
 
checkpoöt_l¢
);

1460 
Arch_Sèã
 
check_£t_°©e
(
boﬁ
 
is_ab‹t
, 
l¢_t
 *
¨chived_l¢
,

1461 
uöt
 *
to_¨chive
);

1467 
dbîr_t
 
c›y_log
(
Arch_Fûe_Ctx
 *
fûe_˘x
, 
uöt
 
Àngth
);

1469 
	g¥iv©e
:

1471 
ib_muãx_t
 
m_muãx
;

1477 
Arch_Sèã
 
	gm_°©e
;

1480 
©omic_l¢_t
 
	gm_¨chived_l¢
;

1483 
Arch_GΩ_Li°
 
	gm_group_li°
;

1486 
Arch_Group
 *
	gm_cuºít_group
;

1489 
uöt
 
	gm_chunk_size
;

1492 
uöt
 
	gm_°¨t_log_ödex
;

1495 
ib_uöt64_t
 
	gm_°¨t_log_off£t
;

1499 
usög
 
	gArch_Block_Vec
 = 
°d
::
ve˘‹
<
Arch_Block
 *, 
	gut_Æloˇt‹
<
	gArch_Block
 *>>;

1502 
	sArchPageD©a
 {

1504 
ArchPageD©a
() {}

1508 
boﬁ
 
öô
();

1511 
˛ón
();

1517 
Arch_Block
 *
gë_block
(
Arch_Page_Pos
 *
pos
, 
Arch_Blk_Ty≥
 
ty≥
);

1520 
Arch_Block
 *
gë_∑πül_Êush_block
() const {

1521  (
	mm_∑πül_Êush_block
);

1525 
Arch_Block_Vec
 
	mm_d©a_blocks
{};

1528 
Arch_Block
 *
	mm_ª£t_block
{
	mnuŒ±r
};

1531 
Arch_Block
 *
	mm_∑πül_Êush_block
{
	mnuŒ±r
};

1534 
uöt
 
	mm_block_size
{};

1537 
uöt
 
	mm_num_d©a_blocks
{};

1540 
byã
 *
	mm_buf„r
{
	mnuŒ±r
};

1544 
˛ass
 
	gPage_Arch_Clõ¡_Ctx
;

1547 ˛as†
	cArch_Page_Sys
 {

1548 
	mpublic
:

1550 
Arch_Page_Sys
();

1553 ~
Arch_Page_Sys
();

1565 
°¨t
(
Arch_Group
 **
group
, 
l¢_t
 *
°¨t_l¢
, 
Arch_Page_Pos
 *
°¨t_pos
,

1566 
boﬁ
 
is_duøbÀ
, boﬁ 
ª°¨t
, boﬁ 
ªcovîy
);

1575 
°›
(
Arch_Group
 *
group
, 
l¢_t
 *
°›_l¢
, 
Arch_Page_Pos
 *
°›_pos
,

1576 
boﬁ
 
is_duøbÀ
);

1582 
°¨t_durög_ªcovîy
(
Arch_Group
 *
group
, 
boﬁ
 
√w_em±y_fûe
);

1589 
ªÀa£
(
Arch_Group
 *
group
, 
boﬁ
 
is_duøbÀ
, 
Arch_Page_Pos
 
°¨t_pos
);

1597 
åack_∑ge
(
buf_∑ge_t
 *
b∑ge
, 
l¢_t
 
åack_l¢
,Ü¢_à
‰ame_l¢
,

1598 
boﬁ
 
f‹˚
);

1604 
Êush_©_checkpoöt
(
l¢_t
 
checkpoöt_l¢
);

1611 
boﬁ
 
¨chive
(boﬁ *
waô
);

1615 
	$¨ch_muãx_íãr
(Ë{ 
	`muãx_íãr
(&
m_muãx
); }

1618 
	$¨ch_muãx_exô
(Ë{ 
	`muãx_exô
(&
m_muãx
); 
	}
}

1622 
	$¨ch_›î_muãx_íãr
(Ë{ 
	`muãx_íãr
(&
m_›î_muãx
); 
	}
}

1625 
	$¨ch_›î_muãx_exô
(Ë{ 
	`muãx_exô
(&
m_›î_muãx
); 
	}
}

1631 
boﬁ
 
ßve_ª£t_poöt
(boﬁ 
is_duøbÀ
);

1637 
boﬁ
 
waô_f‹_ª£t_öfo_Êush
(
uöt64_t
 
ªque°_block
);

1647 
„tch_group_wôhö_l¢_ønge
(
l¢_t
 &
°¨t_id
,Ü¢_à&
°›_id
,

1648 
Arch_Group
 **
group
);

1654 
uöt
 
purge
(
l¢_t
 *
purge_l¢
);

1658 
upd©e_°›_öfo
(
Arch_Block
 *
cur_blk
);

1663 
gë_°©us
(
°d
::
ve˘‹
<°d::
∑ú
<
l¢_t
, 
boﬁ
>> &
°©us
) {

1664 autÿ
	ggroup
 : 
m_group_li°
) {

1665 
group
->
gë_°©us
(
°©us
);

1675 
boﬁ
 
gë_num_∑ges
(
Arch_Page_Pos
 
°¨t_pos
, Arch_Page_Po†
°›_pos
,

1676 
uöt64_t
 &
num_∑ges
);

1684 
gë_num_∑ges
(
l¢_t
 &
°¨t_id
,Ü¢_à&
°›_id
, 
uöt64_t
 *
num_∑ges
);

1694 
boﬁ
 
gë_∑ges
(
Arch_Group
 *
group
, 
Arch_Page_Pos
 *
ªad_pos
, 
uöt
 
ªad_Àn
,

1695 
byã
 *
ªad_buff
);

1708 
gë_∑ges
(
MYSQL_THD
 
thd
, 
Page_Tøck_CÆlback
 
cbk_func
, *
cbk_˘x
,

1709 
l¢_t
 &
°¨t_id
,Ü¢_à&
°›_id
, 
byã
 *
buf
, 
uöt
 
buf_Àn
);

1712 
po°_ªcovîy_öô
();

1718 
dbîr_t
 
ªcovî
();

1720 #ifde‡
UNIV_DEBUG


1722 
¥öt
();

1726 
	$£t_ªad_⁄ly_mode
(Ë{ 
m_°©e
 = 
ARCH_STATE_READ_ONLY
; 
	}
}

1730 
boﬁ
 
	$is_öô
(Ëc⁄° {  (
m_°©e
 =
ARCH_STATE_INIT
); 
	}
}

1735 
boﬁ
 
	$is_a˘ive
() const {

1736  (
m_°©e
 =
ARCH_STATE_ACTIVE
 || m_°©ê=
ARCH_STATE_PREPARE_IDLE
);

1737 
	}
}

1740 
boﬁ
 
	$is_ab‹t
(Ëc⁄° {  (
m_°©e
 =
ARCH_STATE_ABORT
); 
	}
}

1745 
ib_muãx_t
 *
	$gë_muãx
(Ë{  (&
m_muãx
); 
	}
}

1748 
ib_muãx_t
 *
	$gë_›î_muãx
(Ë{  (&
m_›î_muãx
); 
	}
}

1752 
Page_Arch_Clõ¡_Ctx
 *
	$gë_sys_˛õ¡
(Ëc⁄° {  (
m_˘x
); 
	}
}

1755 
l¢_t
 
	$gë_œã°_°›_l¢
(Ëc⁄° {  (
m_œã°_°›_l¢
); 
	}
}

1758 
Arch_Page_Sys
(Arch_Page_Sy†c⁄° &Ë
dñëe
;

1761 
	gArch_Page_Sys
 &
	g›î©‹
=(
Arch_Page_Sys
 c⁄° &Ë
dñëe
;

1763 
˛ass
 
	gRecv
;

1765 
	g¥iv©e
:

1771 
boﬁ
 
waô_idÀ
();

1777 
boﬁ
 
is_g≠_smÆl
();

1781 
£t_åackög_buf_poﬁ
(
l¢_t
 
åackög_l¢
);

1784 
åack_öôül_∑ges
();

1789 
dbîr_t
 
Êush_blocks
(
boﬁ
 *
waô
);

1796 
dbîr_t
 
Êush_öa˘ive_blocks
(
Arch_Page_Pos
 &
cur_pos
, Arch_Page_Po†
íd_pos
);

1803 
dbîr_t
 
Êush_a˘ive_block
(
Arch_Page_Pos
 
cur_pos
,

1804 
boﬁ
 
∑πül_ª£t_block_Êush
);

1806 
	g¥iv©e
:

1808 
ib_muãx_t
 
m_muãx
;

1811 
Arch_Sèã
 
	gm_°©e
{
	gARCH_STATE_INIT
};

1814 
Arch_GΩ_Li°
 
	gm_group_li°
{};

1817 
Arch_Page_Pos
 
	gm_œ°_pos
{};

1820 
l¢_t
 
	gm_œ°_l¢
{
	gLSN_MAX
};

1823 
l¢_t
 
	gm_œã°_°›_l¢
{
	gLSN_MAX
};

1826 
l¢_t
 
	gm_œã°_purged_l¢
{
	gLSN_MAX
};

1829 
ib_muãx_t
 
	gm_›î_muãx
;

1832 
Arch_Group
 *
	gm_cuºít_group
{
	gnuŒ±r
};

1835 
ArchPageD©a
 
	gm_d©a
{};

1838 
Arch_Page_Pos
 
	gm_wrôe_pos
{};

1841 
Arch_Page_Pos
 
	gm_ª£t_pos
{};

1847 
Arch_Page_Pos
 
	gm_ªque°_Êush_pos
{};

1853 
uöt64_t
 
	gm_ªque°_blk_num_wôh_l¢
{
	g°d
::
numîic_limôs
<uöt64_t>::
max
()};

1859 
uöt64_t
 
	gm_Êush_blk_num_wôh_l¢
{
	g°d
::
numîic_limôs
<uöt64_t>::
max
()};

1864 
Arch_Page_Pos
 
	gm_Êush_pos
{};

1867 
uöt
 
	gm_œ°_ª£t_fûe_ödex
{0};

1870 
Page_Arch_Clõ¡_Ctx
 *
	gm_˘x
;

1874 
Arch_Log_Sys
 *
¨ch_log_sys
;

1877 
Arch_Page_Sys
 *
¨ch_∑ge_sys
;

	@arch0log.h

32 #i‚de‡
ARCH_LOG_INCLUDE


33 
	#ARCH_LOG_INCLUDE


	)

35 
	~"¨ch0¨ch.h
"

43 
usög
 
	gLog_Arch_Cbk
 = (*
fûe_«me
, 
ib_uöt64_t
 
	gfûe_size
,

44 
ib_uöt64_t
 
	gªad_off£t
, *
	g˘x
);

47 ˛as†
	cLog_Arch_Clõ¡_Ctx
 {

48 
	mpublic
:

50 
	$Log_Arch_Clõ¡_Ctx
()

51 : 
	`m_°©e
(
ARCH_CLIENT_STATE_INIT
),

52 
	`m_group
(
nuŒ±r
),

53 
	`m_begö_l¢
(
LSN_MAX
),

54 
	$m_íd_l¢
(
LSN_MAX
) {}

60 
	`gë_hódî_size
(
ib_uöt64_t
 &
fûe_sz
, 
uöt
 &
hódî_sz
, uöà&
åaûî_sz
);

66 
	`°¨t
(
byã
 *
hódî
, 
uöt
 
Àn
);

74 
	`°›
(
byã
 *
åaûî
, 
uöt32_t
 &
Àn
, 
uöt64_t
 &
off£t
);

80 
	`gë_fûes
(
Log_Arch_Cbk
 *
cbk_func
, *
˘x
);

83 
	`ªÀa£
();

85 
¥iv©e
:

87 
Arch_Clõ¡_Sèã
 
m_°©e
;

90 
Arch_Group
 *
m_group
;

93 
l¢_t
 
m_begö_l¢
;

96 
l¢_t
 
m_íd_l¢
;

97 
	}
};

	@arch0page.h

32 #i‚de‡
ARCH_PAGE_INCLUDE


33 
	#ARCH_PAGE_INCLUDE


	)

35 
	~"¨ch0¨ch.h
"

36 
	~"buf0buf.h
"

39 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_NUM_RESET_PAGE
 = 1;

42 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_HDR_SIZE
 =

43 
ARCH_PAGE_FILE_NUM_RESET_PAGE
 * 
ARCH_PAGE_BLK_SIZE
;

49 
c⁄°ex¥
 
	gARCH_DBLWR_DIR
[] = "ib_dblwr";

52 
c⁄°ex¥
 
	gARCH_DBLWR_FILE
[] = "dblwr_";

56 
c⁄°ex¥
 
	gARCH_PAGE_GROUP_ACTIVE_FILE_NAME
[] = "active";

59 
c⁄°ex¥
 
uöt
 
	gARCH_DBLWR_NUM_FILES
 = 1;

62 
c⁄°ex¥
 
uöt
 
	gARCH_DBLWR_FILE_CAPACITY
 = 3;

70 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_HEADER_VERSION_OFFSET
 = 0;

73 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_HEADER_TYPE_OFFSET
 = 1;

76 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_HEADER_CHECKSUM_OFFSET
 = 2;

79 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_HEADER_DATA_LEN_OFFSET
 = 6;

82 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_HEADER_STOP_LSN_OFFSET
 = 8;

85 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_HEADER_RESET_LSN_OFFSET
 = 16;

88 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_HEADER_NUMBER_OFFSET
 = 24;

92 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_BLK_HEADER_LENGTH
 = 32;

100 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_HEADER_RESET_LSN_SIZE
 = 8;

103 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_HEADER_RESET_BLOCK_NUM_SIZE
 = 2;

106 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_HEADER_RESET_BLOCK_OFFSET_SIZE
 = 2;

109 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_HEADER_RESET_POS_SIZE
 =

110 
ARCH_PAGE_FILE_HEADER_RESET_BLOCK_NUM_SIZE
 +

111 
ARCH_PAGE_FILE_HEADER_RESET_BLOCK_OFFSET_SIZE
;

119 
c⁄°ex¥
 
uöt
 
	gARCH_BLK_SPCE_ID_OFFSET
 = 0;

122 
c⁄°ex¥
 
uöt
 
	gARCH_BLK_PAGE_NO_OFFSET
 = 4;

125 
c⁄°ex¥
 
uöt
 
	gARCH_BLK_PAGE_ID_SIZE
 = 8;

130 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_NUM_BLKS
 = 32;

133 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_VERSION
 = 1;

135 #ifde‡
UNIV_DEBUG


137 
uöt
 
ARCH_PAGE_FILE_CAPACITY
;

140 
uöt
 
ARCH_PAGE_FILE_DATA_CAPACITY
;

143 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_CAPACITY
 =

144 (
ARCH_PAGE_BLK_SIZE
 - 
ARCH_PAGE_BLK_HEADER_LENGTH
Ë/ 
ARCH_BLK_PAGE_ID_SIZE
;

147 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_FILE_DATA_CAPACITY
 =

148 
ARCH_PAGE_FILE_CAPACITY
 - 
ARCH_PAGE_FILE_NUM_RESET_PAGE
;

154 
c⁄°ex¥
 
uöt
 
	gARCH_PAGE_RESET_THRESHOLD
 =

155 (
ARCH_PAGE_BLK_SIZE
 - 
ARCH_PAGE_BLK_HEADER_LENGTH
Ë/ 
ARCH_BLK_PAGE_ID_SIZE
;

162 
usög
 
	gPage_Arch_Cbk
 = (*
˘x
, 
byã
 *
	gbuff
, 
uöt
 
	gnum_∑ges
);

166 
usög
 
	gPage_Waô_Flush_Archivî_Cbk
 = 
°d
::
fun˘i⁄
<
boﬁ
()>;

169 ˛as†
	cPage_Arch_Clõ¡_Ctx
 {

170 
	mpublic
:

174 
	$Page_Arch_Clõ¡_Ctx
(
boﬁ
 
is_duøbÀ
Ë: 
	$m_is_duøbÀ
(
is_duøbÀ
) {

175 
m_°¨t_pos
.
	`öô
();

176 
m_°›_pos
.
	`öô
();

177 
	`muãx_¸óã
(
LATCH_ID_PAGE_ARCH_CLIENT
, &
m_muãx
);

181 ~
	$Page_Arch_Clõ¡_Ctx
(Ë{ 
	`muãx_‰ì
(&
m_muãx
); 
	}
}

188 
°¨t
(
boﬁ
 
ªcovîy
, 
uöt64_t
 *
°¨t_id
);

193 
°›
(
uöt64_t
 *
°›_id
);

196 
ªÀa£
();

202 
öô_durög_ªcovîy
(
Arch_Group
 *
group
, 
l¢_t
 
œ°_l¢
);

206 
boﬁ
 
	$is_a˘ive
(Ëc⁄° {  (
m_°©e
 =
ARCH_CLIENT_STATE_STARTED
); 
	}
}

216 
gë_∑ges
(
Page_Arch_Cbk
 *
cbk_func
, *
cbk_˘x
, 
byã
 *
buff
,

217 
uöt
 
buf_Àn
);

219 #ifde‡
UNIV_DEBUG


222 
¥öt
();

226 
Page_Arch_Clõ¡_Ctx
(Page_Arch_Clõ¡_Ctx c⁄° &Ë
dñëe
;

229 
	gPage_Arch_Clõ¡_Ctx
 &
	g›î©‹
=(
Page_Arch_Clõ¡_Ctx
 c⁄° &Ë
dñëe
;

231 
	g¥iv©e
:

234 
	$¨ch_˛õ¡_muãx_íãr
(Ë{ 
	`muãx_íãr
(&
m_muãx
); 
	}
}

237 
	$¨ch_˛õ¡_muãx_exô
(Ë{ 
	`muãx_exô
(&
m_muãx
); 
	}
}

239 
	g¥iv©e
:

241 
Arch_Clõ¡_Sèã
 
m_°©e
{
ARCH_CLIENT_STATE_INIT
};

244 
Arch_Group
 *
	gm_group
{
	gnuŒ±r
};

247 
boﬁ
 
	gm_is_duøbÀ
;

250 
l¢_t
 
	gm_°¨t_l¢
{
	gLSN_MAX
};

253 
l¢_t
 
	gm_°›_l¢
{
	gLSN_MAX
};

256 
l¢_t
 
	gm_œ°_ª£t_l¢
{
	gLSN_MAX
};

259 
Arch_Page_Pos
 
	gm_°¨t_pos
;

262 
Arch_Page_Pos
 
	gm_°›_pos
;

265 
ib_muãx_t
 
	gm_muãx
;

	@arch0recv.h

33 #i‚de‡
ARCH_RECV_INCLUDE


34 
	#ARCH_RECV_INCLUDE


	)

36 
	~"¨ch0¨ch.h
"

37 
	~"¨ch0∑ge.h
"

41 
	sArch_Recv_Group_Info
 {

43 
uöt
 
	mm_num_fûes
{0};

46 
boﬁ
 
	mm_a˘ive
{
	mÁl£
};

50 
boﬁ
 
	mm_duøbÀ
{
	mÁl£
};

57 
uöt
 
	mm_fûe_°¨t_ödex
{
	m°d
::
numîic_limôs
<uöt>::
max
()};

61 
usög
 
	gArch_Dú_Group_Info_M≠
 = 
°d
::
m≠
<°d::
°rög
, 
	gArch_Recv_Group_Info
>;

64 
	sArch_Dblwr_Block
 {

66 
Arch_Blk_Ty≥
 
	mm_block_ty≥
;

69 
Arch_Blk_Flush_Ty≥
 
	mm_Êush_ty≥
;

72 
uöt64_t
 
	mm_block_num
;

75 
byã
 *
	mm_block
;

79 
usög
 
	gArch_Dblwr_Blocks
 = 
°d
::
ve˘‹
<
Arch_Dblwr_Block
>;

82 ˛as†
	cArch_Dblwr_Ctx
 {

83 
	mpublic
:

85 
	$Arch_Dblwr_Ctx
() {}

88 ~
	$Arch_Dblwr_Ctx
() {

89 i‡(
m_buf
 !
nuŒ±r
) {

90 
	`UT_DELETE_ARRAY
(
m_buf
);

93 
m_fûe_˘x
.
	`˛o£
();

94 
	}
}

98 
dbîr_t
 
öô
(c⁄° *
∑th
, c⁄° *
ba£_fûe
, 
uöt
 
num_fûes
,

99 
ib_uöt64_t
 
fûe_size
);

104 
dbîr_t
 
ªad_blocks
();

108 
Arch_Dblwr_Blocks
 
	$gë_blocks
(Ë{  (
m_blocks
); 
	}
}

111 
Arch_Dblwr_Ctx
(Arch_Dblwr_Ctx c⁄° &Ë
dñëe
;

114 
	gArch_Dblwr_Ctx
 &
	g›î©‹
=(
Arch_Dblwr_Ctx
 c⁄° &Ë
dñëe
;

116 
	g¥iv©e
:

118 
byã
 *
m_buf
{
nuŒ±r
};

121 
uöt64_t
 
	gm_fûe_size
{};

124 
Arch_Fûe_Ctx
 
	gm_fûe_˘x
{};

127 
Arch_Dblwr_Blocks
 
	gm_blocks
{};

131 ˛as†
	cArch_Page_Sys
::
Recv
 {

132 
public
:

134 
	$Recv
(c⁄° *
dú_«me
Ë: 
	$m_¨ch_dú_«me
(
dú_«me
) {}

137 ~
	$Recv
(Ë{
	}
}

141 
dbîr_t
 
öô
();

145 
boﬁ
 
sˇn_group
();

147 #ifde‡
UNIV_DEBUG


150 
¥öt
();

156 
dbîr_t
 
fûl_öfo
(
Arch_Page_Sys
 *
∑ge_sys
);

159 
Recv
(Recv c⁄° &Ë
dñëe
;

162 
	gRecv
 &
	g›î©‹
=(
Recv
 c⁄° &Ë
dñëe
;

164 
	g¥iv©e
:

168 
ªad_group_dús
(c⁄° 
°d
::
°rög
 
fûe_∑th
);

174 
ªad_group_fûes
(c⁄° 
°d
::
°rög
 
dú_∑th
,

175 c⁄° 
°d
::
°rög
 
fûe_∑th
);

177 
	g¥iv©e
:

179 
°d
::
°rög
 
m_¨ch_dú_«me
;

182 
Arch_Dblwr_Ctx
 
	gm_dblwr_˘x
{};

186 
Arch_Dú_Group_Info_M≠
 
	gm_dú_group_öfo_m≠
{};

	@btr0btr.h

34 #i‚de‡
bå0bå_h


35 
	#bå0bå_h


	)

37 
	~"bå0ty≥s.h
"

38 
	~"d©a0d©a.h
"

39 
	~"di˘0di˘.h
"

40 
	~"gis0ty≥.h
"

41 
	~"må0må.h
"

42 
	~"∑ge0cur.h
"

43 
	~"univ.i
"

47 
	#BTR_PAGE_MAX_REC_SIZE
 (
UNIV_PAGE_SIZE
 / 2 - 200)

	)

58 
	#BTR_MAX_LEVELS
 100

	)

61 
	gbå_œtch_mode
 : 
size_t
 {

63 
BTR_SEARCH_LEAF
 = 
RW_S_LATCH
,

65 
	gBTR_MODIFY_LEAF
 = 
RW_X_LATCH
,

67 
	gBTR_NO_LATCHES
 = 
RW_NO_LATCH
,

69 
	gBTR_MODIFY_TREE
 = 33,

71 
	gBTR_CONT_MODIFY_TREE
 = 34,

73 
	gBTR_SEARCH_PREV
 = 35,

75 
	gBTR_MODIFY_PREV
 = 36,

77 
	gBTR_SEARCH_TREE
 = 37,

79 
	gBTR_CONT_SEARCH_TREE
 = 38

87 
c⁄°ex¥
 
size_t
 
	gBTR_INSERT
 = 512;

91 
c⁄°ex¥
 
size_t
 
	gBTR_ESTIMATE
 = 1024;

96 
c⁄°ex¥
 
size_t
 
	gBTR_IGNORE_SEC_UNIQUE
 = 2048;

100 
c⁄°ex¥
 
size_t
 
	gBTR_DELETE_MARK
 = 4096;

104 
c⁄°ex¥
 
size_t
 
	gBTR_DELETE
 = 8192;

108 
c⁄°ex¥
 
size_t
 
	gBTR_ALREADY_S_LATCHED
 = 16384;

112 
c⁄°ex¥
 
size_t
 
	gBTR_LATCH_FOR_INSERT
 = 32768;

116 
c⁄°ex¥
 
size_t
 
	gBTR_LATCH_FOR_DELETE
 = 65536;

120 
c⁄°ex¥
 
size_t
 
	gBTR_RTREE_UNDO_INS
 = 131072;

124 
c⁄°ex¥
 
size_t
 
	gBTR_MODIFY_EXTERNAL
 = 262144;

128 
c⁄°ex¥
 
size_t
 
	gBTR_RTREE_DELETE_MARK
 = 524288;

130 
	#BTR_LATCH_MODE_WITHOUT_FLAGS
(
œtch_mode
) \

131 ((
œtch_mode
) & \

132 ~(
BTR_INSERT
 | 
BTR_DELETE_MARK
 | 
BTR_RTREE_UNDO_INS
 | \

133 
BTR_RTREE_DELETE_MARK
 | 
BTR_DELETE
 | 
BTR_ESTIMATE
 | \

134 
BTR_IGNORE_SEC_UNIQUE
 | 
BTR_ALREADY_S_LATCHED
 | 
BTR_LATCH_FOR_INSERT
 | \

135 
BTR_LATCH_FOR_DELETE
 | 
BTR_MODIFY_EXTERNAL
))

	)

137 
	#BTR_LATCH_MODE_WITHOUT_INTENTION
(
œtch_mode
) \

138 ((
œtch_mode
) & \

139 ~(
BTR_LATCH_FOR_INSERT
 | 
BTR_LATCH_FOR_DELETE
 | 
BTR_MODIFY_EXTERNAL
))

	)

142 
	$bå_c‹ru±i⁄_ªp‹t
(c⁄° 
buf_block_t
 *
block
,

143 c⁄° 
di˘_ödex_t
 *
ödex
)

144 
UNIV_COLD
;

149 
	#bå_as£π_nŸ_c‹ru±ed
(
block
, 
ödex
) \

150 i‡((
iboﬁ
Ë!!
	`∑ge_is_comp
(
	`buf_block_gë_‰ame
(
block
)) != \

151 
	`di˘_èbÀ_is_comp
((
ödex
)->
èbÀ
)) { \

152 
	`bå_c‹ru±i⁄_ªp‹t
(
block
, 
ödex
); \

153 
ut_îr‹
; \

154 
	}

	)
}

158 
∑ge_t
 *
bå_roŸ_gë
(c⁄° 
di˘_ödex_t
 *
ödex
,

159 
må_t
 *
må
);

163 
dbîr_t
 
	$bå_roŸ_adju°_⁄_imp‹t
(

164 c⁄° 
di˘_ödex_t
 *
ödex
)

165 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

171 
ulöt
 
	$bå_height_gë
(
di˘_ödex_t
 *
ödex
,

172 
må_t
 *
må
)

173 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

181 #ifde‡
UNIV_DEBUG


189 
UNIV_INLINE


190 
buf_block_t
 *
	`bå_block_gë_func
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

191 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
ulöt
 
mode
,

192 c⁄° *
fûe
, 
ulöt
 
löe
,

193 #ifde‡
UNIV_DEBUG


194 c⁄° 
di˘_ödex_t
 *
ödex
,

196 
må_t
 *
må
);

198 #ifde‡
UNIV_DEBUG


206 
	#bå_block_gë
(
∑ge_id
, 
∑ge_size
, 
mode
, 
ödex
, 
må
) \

207 
	`bå_block_gë_func
(
∑ge_id
, 
∑ge_size
, 
mode
, 
__FILE__
, 
__LINE__
, 
ödex
, 
må
)

	)

216 
	#bå_block_gë
(
∑ge_id
, 
∑ge_size
, 
mode
, 
ödex
, 
må
) \

217 
	`bå_block_gë_func
(
∑ge_id
, 
∑ge_size
, 
mode
, 
__FILE__
, 
__LINE__
, 
må
)

	)

226 
	#bå_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
mode
, 
ödex
, 
må
) \

227 
	`buf_block_gë_‰ame
(
	`bå_block_gë
(
∑ge_id
, 
∑ge_size
, 
mode
, 
ödex
, 
må
))

	)

230 
UNIV_INLINE


231 
•a˚_ödex_t
 
	$bå_∑ge_gë_ödex_id
(c⁄° 
∑ge_t
 *
∑ge
)

232 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

235 
UNIV_INLINE


236 
ulöt
 
	$bå_∑ge_gë_Àvñ_low
(c⁄° 
∑ge_t
 *
∑ge
)

237 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

238 
	#bå_∑ge_gë_Àvñ
(
∑ge
, 
må
Ë
	`bå_∑ge_gë_Àvñ_low
’age)

	)

241 
UNIV_INLINE


242 
∑ge_no_t
 
	$bå_∑ge_gë_√xt
(c⁄° 
∑ge_t
 *
∑ge
,

243 
må_t
 *
må
)

244 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

247 
UNIV_INLINE


248 
∑ge_no_t
 
	$bå_∑ge_gë_¥ev
(c⁄° 
∑ge_t
 *
∑ge
,

249 
må_t
 *
må
)

250 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

256 
UNIV_INLINE


257 
	`bå_Àaf_∑ge_ªÀa£
(
buf_block_t
 *
block
, 
ulöt
 
œtch_mode
, 
må_t
 *
må
);

265 
UNIV_INLINE


266 
∑ge_no_t
 
	$bå_node_±r_gë_chûd_∑ge_no
(

267 c⁄° 
ªc_t
 *
ªc
,

268 c⁄° 
ulöt
 *
off£ts
)

269 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

278 
buf_block_t
 *
	`bå_node_±r_gë_chûd
(c⁄° 
ªc_t
 *
node_±r
, 
di˘_ödex_t
 *
ödex
,

279 c⁄° 
ulöt
 *
off£ts
, 
må_t
 *
må
,

280 
rw_lock_ty≥_t
 
ty≥
 = 
RW_SX_LATCH
);

291 
ulöt
 
	`bå_¸óã
(ulöà
ty≥
, 
•a˚_id_t
 
•a˚
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

292 
•a˚_ödex_t
 
ödex_id
, 
di˘_ödex_t
 *
ödex
, 
må_t
 *
må
);

299 
	`bå_‰ì_if_exi°s
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

300 
•a˚_ödex_t
 
ödex_id
, 
må_t
 *
må
);

305 
	`bå_‰ì
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
);

313 
	`bå_åunˇã
(c⁄° 
di˘_ödex_t
 *
ödex
);

318 
	`bå_åunˇã_ªcovî
(c⁄° 
di˘_ödex_t
 *
ödex
);

326 
ªc_t
 *
	$bå_roŸ_øi£_™d_ö£π
(

327 
uöt32_t
 
Êags
,

328 
bå_cur_t
 *
curs‹
,

332 
ulöt
 **
off£ts
,

333 
mem_hóp_t
 **
hóp
,

335 c⁄° 
dtu∂e_t
 *
tu∂e
,

336 
må_t
 *
må
)

337 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

348 
boﬁ
 
	$bå_∑ge_ª‹g™ize_low
(

349 
boﬁ
 
ªcovîy
,

354 
ulöt
 
z_Àvñ
,

356 
∑ge_cur_t
 *
curs‹
,

357 
di˘_ödex_t
 *
ödex
,

358 
må_t
 *
må
)

359 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

374 
boﬁ
 
	`bå_∑ge_ª‹g™ize
(
∑ge_cur_t
 *
curs‹
, 
di˘_ödex_t
 *
ödex
, 
må_t
 *
må
);

379 
iboﬁ
 
	$bå_∑ge_gë_•lô_ªc_to_À·
(

380 
bå_cur_t
 *
curs‹
,

381 
ªc_t
 **
•lô_ªc
)

384 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

388 
iboﬁ
 
	$bå_∑ge_gë_•lô_ªc_to_right
(

389 
bå_cur_t
 *
curs‹
,

390 
ªc_t
 **
•lô_ªc
)

393 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

403 
ªc_t
 *
	$bå_∑ge_•lô_™d_ö£π
(

404 
uöt32_t
 
Êags
,

405 
bå_cur_t
 *
curs‹
,

408 
ulöt
 **
off£ts
,

409 
mem_hóp_t
 **
hóp
,

411 c⁄° 
dtu∂e_t
 *
tu∂e
,

412 
må_t
 *
må
)

413 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

416 
	`bå_ö£π_⁄_n⁄_Àaf_Àvñ_func
(

417 
uöt32_t
 
Êags
,

418 
di˘_ödex_t
 *
ödex
,

419 
ulöt
 
Àvñ
,

420 
dtu∂e_t
 *
tu∂e
,

421 c⁄° *
fûe
,

422 
ulöt
 
löe
,

423 
må_t
 *
må
);

424 
	#bå_ö£π_⁄_n⁄_Àaf_Àvñ
(
f
, 
i
, 
l
, 
t
, 
m
) \

425 
	`bå_ö£π_⁄_n⁄_Àaf_Àvñ_func
(
f
, 
i
, 
l
, 
t
, 
__FILE__
, 
__LINE__
, 
m
)

	)

431 
	`bå_£t_mö_ªc_m¨k
(
ªc_t
 *
ªc
, 
må_t
 *
må
);

438 
	`bå_node_±r_dñëe
(
di˘_ödex_t
 *
ödex
, 
buf_block_t
 *
block
, 
må_t
 *
må
);

439 #ifde‡
UNIV_DEBUG


442 
iboﬁ
 
	$bå_check_node_±r
(
di˘_ödex_t
 *
ödex
,

443 
buf_block_t
 *
block
,

444 
må_t
 *
må
)

445 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

456 
iboﬁ
 
	`bå_com¥ess
(

457 
bå_cur_t
 *
curs‹
,

461 
iboﬁ
 
adju°
,

463 
må_t
 *
må
);

467 
	`bå_disˇrd_∑ge
(
bå_cur_t
 *
curs‹
,

469 
må_t
 *
må
);

473 
byã
 *
	$bå_∑r£_£t_mö_ªc_m¨k
(

474 
byã
 *
±r
,

475 
byã
 *
íd_±r
,

476 
ulöt
 
comp
,

477 
∑ge_t
 *
∑ge
,

478 
må_t
 *
må
)

479 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

482 
byã
 *
	$bå_∑r£_∑ge_ª‹g™ize
(

483 
byã
 *
±r
,

484 
byã
 *
íd_±r
,

485 
di˘_ödex_t
 *
ödex
,

486 
boﬁ
 
com¥es£d
,

487 
buf_block_t
 *
block
,

488 
må_t
 *
må
)

489 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

492 
ulöt
 
	$bå_gë_size
(
di˘_ödex_t
 *
ödex
,

493 
ulöt
 
Êag
,

494 
må_t
 *
må
)

496 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

511 
buf_block_t
 *
	$bå_∑ge_Æloc
(
di˘_ödex_t
 *
ödex
, 
∑ge_no_t
 
höt_∑ge_no
,

512 
byã
 
fûe_dúe˘i⁄
, 
ulöt
 
Àvñ
, 
må_t
 *
må
,

513 
må_t
 *
öô_må
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

517 
	`bå_∑ge_‰ì
(
di˘_ödex_t
 *
ödex
,

518 
buf_block_t
 *
block
,

519 
må_t
 *
må
);

522 
	`bå_∑ge_¸óã
(

523 
buf_block_t
 *
block
,

524 
∑ge_zù_des_t
 *
∑ge_zù
,

525 
di˘_ödex_t
 *
ödex
,

526 
ulöt
 
Àvñ
,

527 
må_t
 *
må
);

530 
	`bå_∑ge_‰ì_low
(

531 
di˘_ödex_t
 *
ödex
,

532 
buf_block_t
 *
block
,

533 
ulöt
 
Àvñ
,

534 
må_t
 *
må
);

537 
buf_block_t
 *
	`bå_roŸ_block_gë
(

538 c⁄° 
di˘_ödex_t
 *
ödex
,

539 
ulöt
 
mode
,

541 
må_t
 *
må
);

543 #ifde‡
UNIV_BTR_PRINT


545 
	`bå_¥öt_size
(
di˘_ödex_t
 *
ödex
);

547 
	`bå_¥öt_ödex
(
di˘_ödex_t
 *
ödex
,

548 
ulöt
 
width
);

554 
iboﬁ
 
	$bå_ödex_ªc_vÆid©e
(c⁄° 
ªc_t
 *
ªc
,

555 c⁄° 
di˘_ödex_t
 *
ödex
,

556 
iboﬁ
 
dump_⁄_îr‹
)

559 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

562 
boﬁ
 
	$bå_vÆid©e_ödex
(

563 
di˘_ödex_t
 *
ödex
,

564 c⁄° 
åx_t
 *
åx
,

565 
boﬁ
 
lockout
)

566 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

572 
dbîr_t
 
	`bå_sdi_¸óã_ödex
(
•a˚_id_t
 
•a˚_id
, 
boﬁ
 
di˘_locked
);

574 
	#BTR_N_LEAF_PAGES
 1

	)

575 
	#BTR_TOTAL_SIZE
 2

	)

577 
	~"bå0bå.ic
"

	@btr0btr.ic

33 
	~"mach0d©a.h
"

34 #i‚de‡
UNIV_HOTBACKUP


35 
	~"må0log.h
"

36 
	~"må0må.h
"

37 
	~"∑ge0zù.h
"

45 
	#BTR_MAX_NODE_LEVEL
 \

46 45

	)

52 #i‚de‡
UNIV_HOTBACKUP


58 #ifde‡
UNIV_DEBUG


66 
UNIV_INLINE


67 
buf_block_t
 *
bå_block_gë_func
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

68 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
ulöt
 
mode
,

69 c⁄° *
fûe
, 
ulöt
 
löe
,

70 #ifde‡
UNIV_DEBUG


71 c⁄° 
di˘_ödex_t
 *
ödex
,

73 
må_t
 *
må
) {

74 
buf_block_t
 *
	gblock
;

76 
	gblock
 = 
buf_∑ge_gë_gí
(
∑ge_id
, 
∑ge_size
, 
mode
, 
nuŒ±r
,

77 
Page_„tch
::
NORMAL
, 
fûe
, 
löe
, 
må
);

79 i‡(
	gmode
 !
RW_NO_LATCH
) {

80 
buf_block_dbg_add_Àvñ
(
block
, 
ödex
 !
nuŒ±r
 && 
di˘_ödex_is_ibuf
(index)

81 ? 
SYNC_IBUF_TREE_NODE


82 : 
SYNC_TREE_NODE
);

85  (
	gblock
);

89 
UNIV_INLINE


90 
	$bå_∑ge_£t_ödex_id
(

91 
∑ge_t
 *
∑ge
,

92 
∑ge_zù_des_t
 *
∑ge_zù
,

94 
•a˚_ödex_t
 
id
,

95 
må_t
 *
må
)

97 i‡(
∑ge_zù
) {

98 
	`mach_wrôe_to_8
(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_INDEX_ID
), 
id
);

99 
	`∑ge_zù_wrôe_hódî
(
∑ge_zù
, 
∑ge
 + (
PAGE_HEADER
 + 
PAGE_INDEX_ID
), 8,

100 
må
);

102 
	`mlog_wrôe_uŒ
(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_INDEX_ID
), 
id
, 
må
);

104 
	}
}

109 
UNIV_INLINE


110 
•a˚_ödex_t
 
	$bå_∑ge_gë_ödex_id
(c⁄° 
∑ge_t
 *
∑ge
)

112  (
	`mach_ªad_‰om_8
(
∑ge
 + 
PAGE_HEADER
 + 
PAGE_INDEX_ID
));

113 
	}
}

117 
UNIV_INLINE


118 
ulöt
 
	$bå_∑ge_gë_Àvñ_low
(c⁄° 
∑ge_t
 *
∑ge
)

120 
ulöt
 
Àvñ
;

122 
	`ut_ad
(
∑ge
);

124 
Àvñ
 = 
	`mach_ªad_‰om_2
(
∑ge
 + 
PAGE_HEADER
 + 
PAGE_LEVEL
);

126 
	`ut_ad
(
Àvñ
 <
BTR_MAX_NODE_LEVEL
);

128  (
Àvñ
);

129 
	}
}

132 
UNIV_INLINE


133 
	$bå_∑ge_£t_Àvñ
(

134 
∑ge_t
 *
∑ge
,

135 
∑ge_zù_des_t
 *
∑ge_zù
,

137 
ulöt
 
Àvñ
,

138 
må_t
 *
må
)

140 
	`ut_ad
(
∑ge
 !
nuŒ±r
);

141 
	`ut_ad
(
må
 !
nuŒ±r
);

142 
	`ut_ad
(
Àvñ
 <
BTR_MAX_NODE_LEVEL
);

144 i‡(
∑ge_zù
) {

145 
	`mach_wrôe_to_2
(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_LEVEL
), 
Àvñ
);

146 
	`∑ge_zù_wrôe_hódî
(
∑ge_zù
, 
∑ge
 + (
PAGE_HEADER
 + 
PAGE_LEVEL
), 2, 
må
);

148 
	`mlog_wrôe_ulöt
(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_LEVEL
), 
Àvñ
, 
MLOG_2BYTES
,

149 
må
);

151 
	}
}

155 
UNIV_INLINE


156 
∑ge_no_t
 
bå_∑ge_gë_√xt
(c⁄° 
∑ge_t
 *
∑ge
,

157 
må_t
 *
må
 
MY_ATTRIBUTE
((
unu£d
)))

160 
ut_ad
(
∑ge
 !
nuŒ±r
);

161 
ut_ad
(
må
 !
nuŒ±r
);

163  (
mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_NEXT
));

167 
UNIV_INLINE


168 
	$bå_∑ge_£t_√xt
(

169 
∑ge_t
 *
∑ge
,

170 
∑ge_zù_des_t
 *
∑ge_zù
,

172 
∑ge_no_t
 
√xt
,

173 
må_t
 *
må
)

175 
	`ut_ad
(
∑ge
 !
nuŒ±r
);

176 
	`ut_ad
(
må
 !
nuŒ±r
);

178 i‡(
∑ge_zù
) {

179 
	`mach_wrôe_to_4
(
∑ge
 + 
FIL_PAGE_NEXT
, 
√xt
);

180 
	`∑ge_zù_wrôe_hódî
(
∑ge_zù
, 
∑ge
 + 
FIL_PAGE_NEXT
, 4, 
må
);

182 
	`mlog_wrôe_ulöt
(
∑ge
 + 
FIL_PAGE_NEXT
, 
√xt
, 
MLOG_4BYTES
, 
må
);

184 
	}
}

188 
UNIV_INLINE


189 
∑ge_no_t
 
bå_∑ge_gë_¥ev
(

190 c⁄° 
∑ge_t
 *
∑ge
,

191 
må_t
 *
må
 
MY_ATTRIBUTE
((
unu£d
)))

193 
ut_ad
(
∑ge
 !
nuŒ±r
);

194 
ut_ad
(
må
 !
nuŒ±r
);

196  (
mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_PREV
));

200 
UNIV_INLINE


201 
	$bå_∑ge_£t_¥ev
(

202 
∑ge_t
 *
∑ge
,

203 
∑ge_zù_des_t
 *
∑ge_zù
,

205 
∑ge_no_t
 
¥ev
,

206 
må_t
 *
må
)

208 
	`ut_ad
(
∑ge
 !
nuŒ±r
);

209 
	`ut_ad
(
må
 !
nuŒ±r
);

211 i‡(
∑ge_zù
) {

212 
	`mach_wrôe_to_4
(
∑ge
 + 
FIL_PAGE_PREV
, 
¥ev
);

213 
	`∑ge_zù_wrôe_hódî
(
∑ge_zù
, 
∑ge
 + 
FIL_PAGE_PREV
, 4, 
må
);

215 
	`mlog_wrôe_ulöt
(
∑ge
 + 
FIL_PAGE_PREV
, 
¥ev
, 
MLOG_4BYTES
, 
må
);

217 
	}
}

225 
UNIV_INLINE


226 
∑ge_no_t
 
	$bå_node_±r_gë_chûd_∑ge_no
(

227 c⁄° 
ªc_t
 *
ªc
,

228 c⁄° 
ulöt
 *
off£ts
)

230 c⁄° 
byã
 *
fõld
;

231 
ulöt
 
Àn
;

232 
∑ge_no_t
 
∑ge_no
;

234 
	`ut_ad
(!
	`ªc_offs_comp
(
off£ts
Ë|| 
	`ªc_gë_node_±r_Êag
(
ªc
));

237 
fõld
 = 
	`ªc_gë_¡h_fõld
(
ªc
, 
off£ts
, 
	`ªc_offs_n_fõlds
(off£tsË- 1, &
Àn
);

239 
	`ut_ad
(
Àn
 == 4);

241 
∑ge_no
 = 
	`mach_ªad_‰om_4
(
fõld
);

242 
	`ut_ad
(
∑ge_no
 > 1);

244  (
∑ge_no
);

245 
	}
}

247 #i‚de‡
UNIV_HOTBACKUP


249 
UNIV_INLINE


250 
	$bå_Àaf_∑ge_ªÀa£
(
buf_block_t
 *
block
,

251 
ulöt
 
œtch_mode
,

253 
må_t
 *
må
)

255 
	`ut_ad
(
œtch_mode
 =
BTR_SEARCH_LEAF
 ||Ü©ch_modê=
BTR_MODIFY_LEAF
 ||

256 
œtch_mode
 =
BTR_NO_LATCHES
);

258 
	`ut_ad
(!
	`må_memo_c⁄èös
(
må
, 
block
, 
MTR_MEMO_MODIFY
));

260 
ulöt
 
mode
;

261 
œtch_mode
) {

262 
BTR_SEARCH_LEAF
:

263 
mode
 = 
MTR_MEMO_PAGE_S_FIX
;

265 
BTR_MODIFY_LEAF
:

266 
mode
 = 
MTR_MEMO_PAGE_X_FIX
;

268 
BTR_NO_LATCHES
:

269 
mode
 = 
MTR_MEMO_BUF_FIX
;

272 
	`ut_a
(0);

275 
må
->
	`memo_ªÀa£
(
block
, 
mode
);

276 
	}
}

	@btr0bulk.h

33 #i‚de‡
bå0bulk_h


34 
	#bå0bulk_h


	)

36 
	~<°ddef.h
>

37 
	~<ve˘‹
>

39 
	~"di˘0di˘.h
"

40 
	~"∑ge0cur.h
"

41 
	~"ut0˛ass_li„_cy˛e.h
"

42 
	~"ut0√w.h
"

45 
önoba£_fûl_Á˘‹
;

57 ˛as†
	cPageBulk
 : 
¥iv©e
 
ut
::
N⁄_c›yabÀ
 {

58 
public
:

60 
	sS∂ôPoöt
 {

64 
ªc_t
 *
m_ªc
;

66 
ulöt
 
	mm_n_ªc_bef‹e
;

75 
	$PageBulk
(
di˘_ödex_t
 *
ödex
, 
åx_id_t
 
åx_id
, 
∑ge_no_t
 
∑ge_no
, 
ulöt
 
Àvñ
,

76 
FlushOb£rvî
 *
ob£rvî
)

77 : 
	`m_hóp
(
nuŒ±r
),

78 
	`m_ödex
(
ödex
),

79 
	`m_må
(
nuŒ±r
),

80 
	`m_åx_id
(
åx_id
),

81 
	`m_block
(
nuŒ±r
),

82 
	`m_∑ge
(
nuŒ±r
),

83 
	`m_∑ge_zù
(
nuŒ±r
),

84 
	`m_cur_ªc
(
nuŒ±r
),

85 
	`m_∑ge_no
(
∑ge_no
),

86 
	`m_Àvñ
(
Àvñ
),

87 
	`m_is_comp
(
	`di˘_èbÀ_is_comp
(
ödex
->
èbÀ
)),

88 
	`m_hóp_t›
(
nuŒ±r
),

89 
	`m_ªc_no
(0),

90 
	`m_‰ì_•a˚
(0),

91 
	`m_ª£rved_•a˚
(0),

92 
	`m_∑ddög_•a˚
(0),

93 #ifde‡
UNIV_DEBUG


94 
	`m_tŸÆ_d©a
(0),

96 
	`m_modify_˛ock
(0),

97 
	`m_Êush_ob£rvî
(
ob£rvî
),

98 
	`m_œ°_¶Ÿãd_ªc
(
nuŒ±r
),

99 
	`m_¶Ÿãd_ªc_no
(0),

100 
	$m_modifõd
(
Ál£
) {

101 
	`ut_ad
(!
	`di˘_ödex_is_•©ül
(
m_ödex
));

102 
	}
}

105 ~
	$PageBulk
() {

106 i‡(
m_hóp
) {

108 i‡(
m_må
 !
nuŒ±r
) {

109 
m_må
->~
	`må_t
();

111 
	`mem_hóp_‰ì
(
m_hóp
);

113 
	}
}

118 
dbîr_t
 
	$öô
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

125 
dbîr_t
 
	$ö£π
(c⁄° 
dtu∂e_t
 *
tu∂e
, c⁄° 
big_ªc_t
 *
big_ªc
,

126 
ulöt
 
ªc_size
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

134 
	`föish
();

138 
	`commô
(
boﬁ
 
suc˚ss
);

143 
boﬁ
 
	$com¥ess
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

147 
boﬁ
 
	$√edExt
(c⁄° 
dtu∂e_t
 *
tu∂e
, 
ulöt
 
ªc_size
) const

148 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

152 
dtu∂e_t
 *
	`gëNodePå
();

156 
	`•lô
(
PageBulk
 &
√w_∑ge_bulk
);

160 
	`c›yAŒ
(c⁄° 
∑ge_t
 *
§c_∑ge
);

164 
	`£tNext
(
∑ge_no_t
 
√xt_∑ge_no
);

168 
	`£tPªv
(
∑ge_no_t
 
¥ev_∑ge_no
);

171 
ölöe
 
	`ªÀa£
();

174 
ölöe
 
	`œtch
();

180 
ölöe
 
boﬁ
 
	$isS∑˚AvaûabÀ
(
ulöt
 
ªc_size
) const;

183 
∑ge_no_t
 
	$gëPageNo
(Ëc⁄° {  (
m_∑ge_no
); 
	}
}

186 
ulöt
 
	$gëLevñ
(Ëc⁄° {  (
m_Àvñ
); 
	}
}

189 
ulöt
 
	$gëRecNo
(Ëc⁄° {  (
m_ªc_no
); 
	}
}

192 c⁄° 
∑ge_t
 *
	$gëPage
(Ëc⁄° {  (
m_∑ge
); 
	}
}

196 
boﬁ
 
	$isTabÀCom¥es£d
(Ëc⁄° {  (
m_∑ge_zù
 !
nuŒ±r
); 
	}
}

198 #ifde‡
UNIV_DEBUG


200 
boﬁ
 
isIndexXLocked
();

203 
	g¥iv©e
:

208 
S∂ôPoöt
 
gëS∂ôRec
();

212 
c›yRec‹ds
(c⁄° 
ªc_t
 *
fú°_ªc
);

216 
•lôTrim
(c⁄° 
S∂ôPoöt
 &
•lô_poöt
);

221 
ö£π
(c⁄° 
ªc_t
 *
ªc
, 
ulöt
 *
off£ts
);

229 
dbîr_t
 
	$°‹eExt
(c⁄° 
big_ªc_t
 *
big_ªc
, 
ulöt
 *
off£ts
)

230 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

233 
mem_hóp_t
 *
m_hóp
;

236 
di˘_ödex_t
 *
m_ödex
;

239 
må_t
 *
m_må
;

242 
åx_id_t
 
m_åx_id
;

245 
buf_block_t
 *
m_block
;

248 
∑ge_t
 *
m_∑ge
;

251 
∑ge_zù_des_t
 *
m_∑ge_zù
;

254 
ªc_t
 *
m_cur_ªc
;

257 
∑ge_no_t
 
m_∑ge_no
;

260 
ulöt
 
m_Àvñ
;

263 c⁄° 
boﬁ
 
m_is_comp
;

266 
byã
 *
m_hóp_t›
;

269 
ulöt
 
m_ªc_no
;

272 
ulöt
 
m_‰ì_•a˚
;

275 
ulöt
 
m_ª£rved_•a˚
;

278 
ulöt
 
m_∑ddög_•a˚
;

280 #ifde‡
UNIV_DEBUG


282 
ulöt
 
m_tŸÆ_d©a
;

287 
ib_uöt64_t
 
m_modify_˛ock
;

290 
FlushOb£rvî
 *
m_Êush_ob£rvî
;

293 
ªc_t
 *
m_œ°_¶Ÿãd_ªc
;

296 
ulöt
 
m_¶Ÿãd_ªc_no
;

299 
boﬁ
 
m_modifõd
;

300 
	}
};

302 ˛as†
	cBåBulk
 {

303 
	mpublic
:

304 
usög
 
∑ge_bulk_ve˘‹
 = 
°d
::
ve˘‹
<
PageBulk
 *, 
	mut_Æloˇt‹
<
	mPageBulk
 *>>;

310 
BåBulk
(
di˘_ödex_t
 *
ödex
, 
åx_id_t
 
åx_id
, 
FlushOb£rvî
 *
ob£rvî
);

313 ~
BåBulk
();

317 
dbîr_t
 
	$öô
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

322 
dbîr_t
 
	$ö£π
(
dtu∂e_t
 *
tu∂e
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

323  (
	`ö£π
(
tu∂e
, 0));

331 
dbîr_t
 
	$föish
(
dbîr_t
 
îr
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

334 
	`ªÀa£
();

337 
	`œtch
();

339 
¥iv©e
:

344 
dbîr_t
 
	$ö£π
(
dtu∂e_t
 *
tu∂e
, 
ulöt
 
Àvñ
)

345 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

351 
dbîr_t
 
	$∑geS∂ô
(
PageBulk
 *
∑ge_bulk
, PageBulk *
√xt_∑ge_bulk
)

352 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

362 
dbîr_t
 
	$∑geCommô
(
PageBulk
 *
∑ge_bulk
, PageBulk *
√xt_∑ge_bulk
,

363 
boﬁ
 
ö£π_Áthî
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

370 
	$∑geAb‹t
(
PageBulk
 *
∑ge_bulk
Ë{Öage_bulk->
	`commô
(
Ál£
); 
	}
}

379 
dbîr_t
 
	$¥ï¨eS∑˚
(
PageBulk
 *&
∑ge_bulk
, 
ulöt
 
Àvñ
, ulöà
ªc_size
)

380 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

389 
dbîr_t
 
	$ö£π
(
PageBulk
 *
∑ge_bulk
, 
dtu∂e_t
 *
tu∂e
, 
big_ªc_t
 *
big_ªc
,

390 
ulöt
 
ªc_size
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

393 
	`logFªeCheck
();

400 
dbîr_t
 
	$föishAŒPageBulks
(
dbîr_t
 
îr
, 
∑ge_no_t
 &
œ°_∑ge_no
)

401 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

403 
¥iv©e
:

405 
di˘_ödex_t
 *
m_ödex
;

408 
åx_id_t
 
m_åx_id
;

411 
ulöt
 
m_roŸ_Àvñ
;

414 
FlushOb£rvî
 *
m_Êush_ob£rvî
;

417 
∑ge_bulk_ve˘‹
 *
m_∑ge_bulks
;

419 #ifde‡
UNIV_DEBUG


423 
m_ödex_⁄löe
;

425 
	}
};

	@btr0cur.h

27 
	~<°ddef.h
>

28 
	~<sys/ty≥s.h
>

36 #i‚de‡
bå0cur_h


37 
	#bå0cur_h


	)

39 
	~"bå0ty≥s.h
"

40 
	~"di˘0di˘.h
"

41 
	~"gis0ty≥.h
"

42 
	~"∑ge0cur.h
"

43 
	~"univ.i
"

48 
	mBTR_NO_UNDO_LOG_FLAG
 = 1,

50 
	mBTR_NO_LOCKING_FLAG
 = 2,

53 
	mBTR_KEEP_SYS_FLAG
 = 4,

56 
	mBTR_KEEP_POS_FLAG
 = 8,

59 
	mBTR_CREATE_FLAG
 = 16,

63 
	mBTR_KEEP_IBUF_BITMAP
 = 32

67 
	sbå_œtch_Àaves_t
 {

69 
buf_block_t
 *
	mblocks
[3];

70 
ulöt
 
	mßvïoöts
[3];

73 #i‚de‡
UNIV_HOTBACKUP


74 
	~"ha0ha.h
"

75 
	~"que0ty≥s.h
"

76 
	~"row0ty≥s.h
"

79 #ifde‡
UNIV_DEBUG


82 
UNIV_INLINE


83 
∑ge_cur_t
 *
bå_cur_gë_∑ge_cur
(

84 c⁄° 
bå_cur_t
 *
curs‹
);

87 
UNIV_INLINE


88 
buf_block_t
 *
bå_cur_gë_block
(c⁄° 
bå_cur_t
 *
curs‹
);

91 
UNIV_INLINE


92 
ªc_t
 *
bå_cur_gë_ªc
(c⁄° 
bå_cur_t
 *
curs‹
);

94 
	#bå_cur_gë_∑ge_cur
(
curs‹
Ë(&(curs‹)->
∑ge_cur
)

	)

95 
	#bå_cur_gë_block
(
curs‹
Ë((curs‹)->
∑ge_cur
.
block
)

	)

96 
	#bå_cur_gë_ªc
(
curs‹
Ë((curs‹)->
∑ge_cur
.
ªc
)

	)

100 
UNIV_INLINE


101 
∑ge_zù_des_t
 *
bå_cur_gë_∑ge_zù
(
bå_cur_t
 *
curs‹
);

104 
UNIV_INLINE


105 
∑ge_t
 *
bå_cur_gë_∑ge
(
bå_cur_t
 *
curs‹
);

109 
	#bå_cur_gë_ödex
(
curs‹
Ë((curs‹)->
ödex
)

	)

116 
UNIV_INLINE


117 
bå_cur_posôi⁄
(
di˘_ödex_t
 *
ödex
, 
ªc_t
 *
ªc
, 
buf_block_t
 *
block
,

118 
bå_cur_t
 *
curs‹
);

129 
boﬁ
 
bå_cur_›timi°ic_œtch_Àaves
(
buf_block_t
 *
block
,

130 
ib_uöt64_t
 
modify_˛ock
,

131 
ulöt
 *
œtch_mode
, 
bå_cur_t
 *
curs‹
,

132 c⁄° *
fûe
, 
ulöt
 
löe
, 
må_t
 *
må
);

140 
bå_cur_£¨ch_to_¡h_Àvñ
(

141 
di˘_ödex_t
 *
ödex
,

142 
ulöt
 
Àvñ
,

143 c⁄° 
dtu∂e_t
 *
tu∂e
,

146 
∑ge_cur_mode_t
 
mode
,

153 
ulöt
 
œtch_mode
,

164 
bå_cur_t
 *
curs‹
,

166 
ulöt
 
has_£¨ch_œtch
,

170 c⁄° *
fûe
,

171 
ulöt
 
löe
,

172 
må_t
 *
må
);

190 
bå_cur_£¨ch_to_¡h_Àvñ_wôh_no_œtch
(

191 
di˘_ödex_t
 *
ödex
, 
ulöt
 
Àvñ
, c⁄° 
dtu∂e_t
 *
tu∂e
,

192 
∑ge_cur_mode_t
 
mode
, 
bå_cur_t
 *
curs‹
, c⁄° *
fûe
, 
ulöt
 
löe
,

193 
må_t
 *
må
, 
boﬁ
 
m¨k_dúty
 = 
åue
);

205 
bå_cur_›í_©_ödex_side_func
(
boﬁ
 
‰om_À·
, 
di˘_ödex_t
 *
ödex
,

206 
ulöt
 
œtch_mode
, 
bå_cur_t
 *
curs‹
,

207 
ulöt
 
Àvñ
, c⁄° *
fûe
, ulöà
löe
,

208 
må_t
 *
må
);

210 
	#bå_cur_›í_©_ödex_side
(
f
, 
i
, 
l
, 
c
, 
lv
, 
m
) \

211 
	`bå_cur_›í_©_ödex_side_func
(
f
, 
i
, 
l
, 
c
, 
lv
, 
__FILE__
, 
__LINE__
, 
m
)

	)

225 
bå_cur_›í_©_ödex_side_wôh_no_œtch_func
(

226 
boﬁ
 
‰om_À·
, 
di˘_ödex_t
 *
ödex
, 
bå_cur_t
 *
curs‹
, 
ulöt
 
Àvñ
,

227 c⁄° *
fûe
, 
ulöt
 
löe
, 
må_t
 *
må
);

228 
	#bå_cur_›í_©_ödex_side_wôh_no_œtch
(
f
, 
i
, 
c
, 
lv
, 
m
) \

229 
	`bå_cur_›í_©_ödex_side_wôh_no_œtch_func
(
f
, 
i
, 
c
, 
lv
, 
__FILE__
, \

230 
__LINE__
, 
m
)

	)

235 
boﬁ
 
bå_cur_›í_©_∫d_pos_func
(

236 
di˘_ödex_t
 *
ödex
,

237 
ulöt
 
œtch_mode
,

238 
bå_cur_t
 *
curs‹
,

239 c⁄° *
fûe
,

240 
ulöt
 
löe
,

241 
må_t
 *
må
);

242 
	#bå_cur_›í_©_∫d_pos
(
i
, 
l
, 
c
, 
m
) \

243 
	`bå_cur_›í_©_∫d_pos_func
(
i
, 
l
, 
c
, 
__FILE__
, 
__LINE__
, 
m
)

	)

250 
dbîr_t
 
	$bå_cur_›timi°ic_ö£π
(

251 
ulöt
 
Êags
,

254 
bå_cur_t
 *
curs‹
,

256 
ulöt
 **
off£ts
,

257 
mem_hóp_t
 **
hóp
,

258 
dtu∂e_t
 *
íåy
,

259 
ªc_t
 **
ªc
,

261 
big_ªc_t
 **
big_ªc
,

264 
que_thr_t
 *
thr
,

265 
må_t
 *
må
)

271 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

277 
dbîr_t
 
	$bå_cur_≥ssimi°ic_ö£π
(

278 
uöt32_t
 
Êags
,

284 
bå_cur_t
 *
curs‹
,

286 
ulöt
 **
off£ts
,

287 
mem_hóp_t
 **
hóp
,

289 
dtu∂e_t
 *
íåy
,

290 
ªc_t
 **
ªc
,

292 
big_ªc_t
 **
big_ªc
,

295 
que_thr_t
 *
thr
,

296 
må_t
 *
må
)

297 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

309 
boﬁ
 
	`bå_cur_upd©e_Æloc_zù_func
(

310 
∑ge_zù_des_t
 *
∑ge_zù
,

311 
∑ge_cur_t
 *
curs‹
,

312 
di˘_ödex_t
 *
ödex
,

313 #ifde‡
UNIV_DEBUG


314 
ulöt
 *
off£ts
,

316 
ulöt
 
Àngth
,

317 
boﬁ
 
¸óã
,

319 
må_t
 *
må
)

320 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

321 #ifde‡
UNIV_DEBUG


322 
	#bå_cur_upd©e_Æloc_zù
(
∑ge_zù
, 
curs‹
, 
ödex
, 
off£ts
, 
Àn
, 
¸
, \

323 
må
) \

324 
	`bå_cur_upd©e_Æloc_zù_func
(
∑ge_zù
, 
curs‹
, 
ödex
, 
off£ts
, 
Àn
, 
¸
, 
må
)

	)

326 
	#bå_cur_upd©e_Æloc_zù
(
∑ge_zù
, 
curs‹
, 
ödex
, 
off£ts
, 
Àn
, 
¸
, \

327 
må
) \

328 
	`bå_cur_upd©e_Æloc_zù_func
(
∑ge_zù
, 
curs‹
, 
ödex
, 
Àn
, 
¸
, 
må
)

	)

347 
dbîr_t
 
	$bå_cur_upd©e_ö_∂a˚
(
ulöt
 
Êags
, 
bå_cur_t
 *
curs‹
, ulöà*
off£ts
,

348 c⁄° 
upd_t
 *
upd©e
, 
ulöt
 
cm∂_öfo
,

349 
que_thr_t
 *
thr
, 
åx_id_t
 
åx_id
, 
må_t
 *
må
)

350 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

360 
	`bå_cur_upd©e_ö_∂a˚_log
(
ulöt
 
Êags
, c⁄° 
ªc_t
 *
ªc
,

361 
di˘_ödex_t
 *
ödex
, c⁄° 
upd_t
 *
upd©e
,

362 
åx_id_t
 
åx_id
, 
rﬁl_±r_t
 
rﬁl_±r
,

363 
må_t
 *
må
);

376 
dbîr_t
 
	$bå_cur_›timi°ic_upd©e
(

377 
ulöt
 
Êags
,

378 
bå_cur_t
 *
curs‹
,

381 
ulöt
 **
off£ts
,

382 
mem_hóp_t
 **
hóp
,

383 c⁄° 
upd_t
 *
upd©e
,

385 
ulöt
 
cm∂_öfo
,

387 
que_thr_t
 *
thr
,

392 
åx_id_t
 
åx_id
,

393 
må_t
 *
må
)

397 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

430 
dbîr_t
 
	$bå_cur_≥ssimi°ic_upd©e
(

431 
ulöt
 
Êags
, 
bå_cur_t
 *
curs‹
, ulöà**
off£ts
, 
mem_hóp_t
 **
off£ts_hóp
,

432 
mem_hóp_t
 *
íåy_hóp
, 
big_ªc_t
 **
big_ªc
, 
upd_t
 *
upd©e
, 
ulöt
 
cm∂_öfo
,

433 
que_thr_t
 *
thr
, 
åx_id_t
 
åx_id
, 
undo_no_t
 
undo_no
, 
må_t
 *
må
,

434 
bå_pcur_t
 *
pcur
 = 
nuŒ±r
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

441 
dbîr_t
 
	$bå_cur_dñ_m¨k_£t_˛u°_ªc
(

442 
ulöt
 
Êags
,

443 
buf_block_t
 *
block
,

444 
ªc_t
 *
ªc
,

445 
di˘_ödex_t
 *
ödex
,

446 c⁄° 
ulöt
 *
off£ts
,

447 
que_thr_t
 *
thr
,

448 c⁄° 
dtu∂e_t
 *
íåy
,

449 
må_t
 *
må
)

450 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

453 
dbîr_t
 
	$bå_cur_dñ_m¨k_£t_£c_ªc
(

454 
ulöt
 
Êags
,

455 
bå_cur_t
 *
curs‹
,

456 
iboﬁ
 
vÆ
,

457 
que_thr_t
 *
thr
,

458 
må_t
 *
må
)

459 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

466 
iboﬁ
 
	`bå_cur_com¥ess_if_u£ful
(

467 
bå_cur_t
 *
curs‹
,

470 
iboﬁ
 
adju°
,

472 
må_t
 *
må
);

477 
iboﬁ
 
	`bå_cur_›timi°ic_dñëe_func
(

478 
bå_cur_t
 *
curs‹
,

482 #ifde‡
UNIV_DEBUG


483 
ulöt
 
Êags
,

485 
må_t
 *
må
)

489 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

490 #ifde‡
UNIV_DEBUG


491 
	#bå_cur_›timi°ic_dñëe
(
curs‹
, 
Êags
, 
må
) \

492 
	`bå_cur_›timi°ic_dñëe_func
(
curs‹
, 
Êags
, 
må
)

	)

494 
	#bå_cur_›timi°ic_dñëe
(
curs‹
, 
Êags
, 
må
) \

495 
	`bå_cur_›timi°ic_dñëe_func
(
curs‹
, 
må
)

	)

523 
iboﬁ
 
	`bå_cur_≥ssimi°ic_dñëe
(
dbîr_t
 *
îr
, iboﬁ 
has_ª£rved_exã¡s
,

524 
bå_cur_t
 *
curs‹
, 
uöt32_t
 
Êags
,

525 
boﬁ
 
rﬁlback
, 
åx_id_t
 
åx_id
,

526 
undo_no_t
 
undo_no
, 
ulöt
 
ªc_ty≥
, 
må_t
 *
må
,

527 
bå_pcur_t
 *
pcur
 = 
nuŒ±r
);

531 
byã
 *
	`bå_cur_∑r£_upd©e_ö_∂a˚
(

532 
byã
 *
±r
,

533 
byã
 *
íd_±r
,

534 
∑ge_t
 *
∑ge
,

535 
∑ge_zù_des_t
 *
∑ge_zù
,

536 
di˘_ödex_t
 *
ödex
);

540 
byã
 *
	`bå_cur_∑r£_dñ_m¨k_£t_˛u°_ªc
(

541 
byã
 *
±r
,

542 
byã
 *
íd_±r
,

543 
∑ge_t
 *
∑ge
,

544 
∑ge_zù_des_t
 *
∑ge_zù
,

545 
di˘_ödex_t
 *
ödex
);

549 
byã
 *
	`bå_cur_∑r£_dñ_m¨k_£t_£c_ªc
(

550 
byã
 *
±r
,

551 
byã
 *
íd_±r
,

552 
∑ge_t
 *
∑ge
,

553 
∑ge_zù_des_t
 *
∑ge_zù
);

554 #i‚de‡
UNIV_HOTBACKUP


563 
öt64_t
 
	`bå_e°im©e_n_rows_ö_ønge
(
di˘_ödex_t
 *
ödex
,

564 c⁄° 
dtu∂e_t
 *
tu∂e1
,

565 
∑ge_cur_mode_t
 
mode1
,

566 c⁄° 
dtu∂e_t
 *
tu∂e2
,

567 
∑ge_cur_mode_t
 
mode2
);

579 
boﬁ
 
	`bå_e°im©e_numbî_of_dif„ª¡_key_vÆs
(

580 
di˘_ödex_t
 *
ödex
);

592 #ifde‡
UNIV_DEBUG


599 
byã
 *
	`bå_ªc_c›y_exã∫Æly_°‹ed_fõld_func
(

600 
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
,

601 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
ulöt
 
no
, ulöà*
Àn
, 
size_t
 *
lob_vîsi⁄
,

602 #ifde‡
UNIV_DEBUG


603 
boﬁ
 
is_sdi
,

605 
mem_hóp_t
 *
hóp
);

609 
	`bå_cur_£t_dñëed_Êag_f‹_ibuf
(

610 
ªc_t
 *
ªc
,

611 
∑ge_zù_des_t
 *
∑ge_zù
,

614 
iboﬁ
 
vÆ
,

615 
må_t
 *
må
);

621 
UNIV_INLINE


622 
	`bå_ªc_£t_dñëed_Êag
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
Êag
);

624 #ifde‡
J3VM


629 
UNIV_INLINE


630 
	`bå_ªc_£t_toggÀ_Êag
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
Êag
);

635 
byã
 *
	`bå_cur_∑r£_tog_m¨k_£t_˛u°_ªc
(

636 
byã
 *
±r
,

637 
byã
 *
íd_±r
,

638 
∑ge_t
 *
∑ge
,

639 
∑ge_zù_des_t
 *
∑ge_zù
,

640 
di˘_ödex_t
 *
ödex
);

651 
bå_œtch_Àaves_t
 
	`bå_cur_œtch_Àaves
(
buf_block_t
 *
block
,

652 c⁄° 
∑ge_id_t
 &
∑ge_id
,

653 c⁄° 
∑ge_size_t
 &
∑ge_size
,

654 
ulöt
 
œtch_mode
, 
bå_cur_t
 *
curs‹
,

655 
må_t
 *
må
);

662 
	#BTR_CUR_PAGE_COMPRESS_LIMIT
(
ödex
) \

663 ((
UNIV_PAGE_SIZE
 * (
ulöt
)((
ödex
)->
mîge_thªshﬁd
)Ë/ 100)

	)

667 
	sbå_∑th_t
 {

677 
ulöt
 
¡h_ªc
{
ULINT_UNDEFINED
};

681 
ulöt
 
n_ªcs
{
ULINT_UNDEFINED
};

684 
∑ge_no_t
 
∑ge_no
{
FIL_NULL
};

689 
ulöt
 
∑ge_Àvñ
{
ULINT_UNDEFINED
};

692 
	#BTR_PATH_ARRAY_N_SLOTS
 250

	)

695 
	ebå_cur_mëhod
 {

696 
BTR_CUR_UNSET
 = 0,

698 
BTR_CUR_HASH
 = 1,

700 
BTR_CUR_HASH_FAIL
,

705 
BTR_CUR_BINARY
,

706 
BTR_CUR_INSERT_TO_IBUF
,

708 
BTR_CUR_DEL_MARK_IBUF
,

710 
BTR_CUR_DELETE_IBUF
,

712 
BTR_CUR_DELETE_REF


717 
	sbå_cur_t
 {

718 
di˘_ödex_t
 *
ödex
{
nuŒ±r
};

719 
∑ge_cur_t
 
∑ge_cur
;

720 
purge_node_t
 *
purge_node
{
nuŒ±r
};

721 
buf_block_t
 *
À·_block
{
nuŒ±r
};

727 
que_thr_t
 *
thr
{
nuŒ±r
};

737 
bå_cur_mëhod
 
Êag
{
BTR_CUR_UNSET
};

738 
ulöt
 
åì_height
{0};

741 
ulöt
 
up_m©ch
{0};

755 
ulöt
 
up_byãs
{0};

759 
ulöt
 
low_m©ch
{0};

767 
ulöt
 
low_byãs
{0};

771 
ulöt
 
n_fõlds
{0};

773 
ulöt
 
n_byãs
{0};

775 
ulöt
 
fﬁd
{0};

778 
bå_∑th_t
 *
∑th_¨r
{
nuŒ±r
};

782 
πr_öfo_t
 *
πr_öfo
{
nuŒ±r
};

785 
boﬁ
 
m_own_πr_öfo
 = 
åue
;

788 
Page_„tch
 
m_„tch_mode
{Page_„tch::
NORMAL
};

795 
UNIV_INLINE


796 
	`bå_ªc_£t_dñëed_Êag
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
Êag
);

801 
	#BTR_CUR_RETRY_DELETE_N_TIMES
 100

	)

805 
	#BTR_CUR_RETRY_SLEEP_TIME
 50000

	)

808 
ulöt
 
bå_cur_n_n⁄_£a
;

811 
ulöt
 
bå_cur_n_£a
;

815 
ulöt
 
bå_cur_n_n⁄_£a_ﬁd
;

819 
ulöt
 
bå_cur_n_£a_ﬁd
;

821 #ifde‡
UNIV_DEBUG


823 
uöt
 
bå_cur_limô_›timi°ic_ö£π_debug
;

826 
	~"bå0cur.ic
"

	@btr0cur.ic

33 #i‚de‡
UNIV_HOTBACKUP


35 
	~"bå0bå.h
"

37 #ifde‡
UNIV_DEBUG


38 
	#LIMIT_OPTIMISTIC_INSERT_DEBUG
(
NREC
, 
CODE
) \

39 i‡(
bå_cur_limô_›timi°ic_ö£π_debug
 > 1 && \

40 (
NREC
Ë>(
ulöt
)
bå_cur_limô_›timi°ic_ö£π_debug
) { \

41 
CODE
; \

42 }

	)

44 
	#LIMIT_OPTIMISTIC_INSERT_DEBUG
(
NREC
, 
CODE
)

	)

47 #ifde‡
UNIV_DEBUG


50 
UNIV_INLINE


51 
∑ge_cur_t
 *
	$bå_cur_gë_∑ge_cur
(

52 c⁄° 
bå_cur_t
 *
curs‹
)

54  (&((
bå_cur_t
 *)
curs‹
)->
∑ge_cur
);

55 
	}
}

59 
UNIV_INLINE


60 
buf_block_t
 *
	$bå_cur_gë_block
(c⁄° 
bå_cur_t
 *
curs‹
)

62  (
	`∑ge_cur_gë_block
(
	`bå_cur_gë_∑ge_cur
(
curs‹
)));

63 
	}
}

67 
UNIV_INLINE


68 
ªc_t
 *
	$bå_cur_gë_ªc
(c⁄° 
bå_cur_t
 *
curs‹
)

70  (
	`∑ge_cur_gë_ªc
(
	`bå_cur_gë_∑ge_cur
(
curs‹
)));

71 
	}
}

76 
UNIV_INLINE


77 
∑ge_zù_des_t
 *
	$bå_cur_gë_∑ge_zù
(
bå_cur_t
 *
curs‹
)

79  (
	`buf_block_gë_∑ge_zù
(
	`bå_cur_gë_block
(
curs‹
)));

80 
	}
}

84 
UNIV_INLINE


85 
∑ge_t
 *
	$bå_cur_gë_∑ge
(
bå_cur_t
 *
curs‹
)

87  (
	`∑ge_Æign
(
	`∑ge_cur_gë_ªc
(&(
curs‹
->
∑ge_cur
))));

88 
	}
}

91 
UNIV_INLINE


92 
	$bå_cur_posôi⁄
(
di˘_ödex_t
 *
ödex
,

93 
ªc_t
 *
ªc
,

94 
buf_block_t
 *
block
,

95 
bå_cur_t
 *
curs‹
)

97 
	`ut_ad
(
	`∑ge_Æign
(
ªc
Ë=
block
->
‰ame
);

99 
	`∑ge_cur_posôi⁄
(
ªc
, 
block
, 
	`bå_cur_gë_∑ge_cur
(
curs‹
));

101 
curs‹
->
ödex
 = index;

102 
	}
}

107 
UNIV_INLINE


108 
iboﬁ
 
	$bå_cur_com¥ess_ªcommíd©i⁄
(
bå_cur_t
 *
curs‹
,

109 
må_t
 *
må
)

111 c⁄° 
∑ge_t
 *
∑ge
;

113 
	`ut_ad
(
	`må_is_block_fix
(
må
, 
	`bå_cur_gë_block
(
curs‹
), 
MTR_MEMO_PAGE_X_FIX
,

114 
curs‹
->
ödex
->
èbÀ
));

116 
∑ge
 = 
	`bå_cur_gë_∑ge
(
curs‹
);

118 
	`LIMIT_OPTIMISTIC_INSERT_DEBUG
(
	`∑ge_gë_n_ªcs
(
∑ge
Ë* 2,  (
FALSE
));

120 i‡((
	`∑ge_gë_d©a_size
(
∑ge
Ë< 
	`BTR_CUR_PAGE_COMPRESS_LIMIT
(
curs‹
->
ödex
)) ||

121 ((
	`bå_∑ge_gë_√xt
(
∑ge
, 
må
Ë=
FIL_NULL
) &&

122 (
	`bå_∑ge_gë_¥ev
(
∑ge
, 
må
Ë=
FIL_NULL
))) {

128  (
	`di˘_ödex_gë_∑ge
(
curs‹
->
ödex
Ë!
	`∑ge_gë_∑ge_no
(
∑ge
));

131  (
FALSE
);

132 
	}
}

137 
UNIV_INLINE


138 
iboﬁ
 
	$bå_cur_ˇn_dñëe_wôhout_com¥ess
(

139 
bå_cur_t
 *
curs‹
,

140 
ulöt
 
ªc_size
,

141 
må_t
 *
må
)

143 
∑ge_t
 *
∑ge
;

145 
	`ut_ad
(
	`må_memo_c⁄èös
(
må
, 
	`bå_cur_gë_block
(
curs‹
), 
MTR_MEMO_PAGE_X_FIX
));

147 
∑ge
 = 
	`bå_cur_gë_∑ge
(
curs‹
);

149 i‡((
	`∑ge_gë_d©a_size
(
∑ge
Ë- 
ªc_size
 <

150 
	`BTR_CUR_PAGE_COMPRESS_LIMIT
(
curs‹
->
ödex
)) ||

151 ((
	`bå_∑ge_gë_√xt
(
∑ge
, 
må
Ë=
FIL_NULL
) &&

152 (
	`bå_∑ge_gë_¥ev
(
∑ge
, 
må
Ë=
FIL_NULL
)) ||

153 (
	`∑ge_gë_n_ªcs
(
∑ge
) < 2)) {

159  (
	`di˘_ödex_gë_∑ge
(
curs‹
->
ödex
Ë=
	`∑ge_gë_∑ge_no
(
∑ge
));

162  (
TRUE
);

163 
	}
}

165 
UNIV_INLINE


166 
	$bå_ªc_£t_dñëed_Êag
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
,

167 
ulöt
 
Êag
) {

168 i‡(
	`∑ge_ªc_is_comp
(
ªc
)) {

169 
	`ªc_£t_dñëed_Êag_√w
(
ªc
, 
∑ge_zù
, 
Êag
);

171 
	`ut_ad
(!
∑ge_zù
);

172 
	`ªc_£t_dñëed_Êag_ﬁd
(
ªc
, 
Êag
);

174 
	}
}

176 #ifde‡
J3VM


177 
UNIV_INLINE


178 
	$bå_ªc_£t_toggÀ_Êag
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
,

179 
ulöt
 
Êag
) {

180 i‡(
	`∑ge_ªc_is_comp
(
ªc
)) {

181 
	`ªc_£t_toggÀ_Êag_√w
(
ªc
, 
∑ge_zù
, 
Êag
);

183 
	`ut_ad
(!
∑ge_zù
);

184 
	`ªc_£t_toggÀ_Êag_ﬁd
(
ªc
, 
Êag
);

186 
	}
}

	@btr0pcur.h

33 #i‚de‡
bå0pcur_h


34 
	#bå0pcur_h


	)

36 
	~"bå0bå.h
"

37 
	~"bå0cur.h
"

38 
	~"bå0ty≥s.h
"

39 
	~"buf0block_höt.h
"

40 
	~"d©a0d©a.h
"

41 
	~"di˘0di˘.h
"

42 
	~"må0må.h
"

43 
	~"∑ge0cur.h
"

44 
	~"univ.i
"

45 #i‚de‡
UNIV_HOTBACKUP


46 
	~"gis0πªe.h
"

50 
	ebå_pcur_pos_t
 {

51 
	mBTR_PCUR_UNSET
 = 0,

52 
	mBTR_PCUR_ON
 = 1,

53 
	mBTR_PCUR_BEFORE
 = 2,

54 
	mBTR_PCUR_AFTER
 = 3,

59 
	mBTR_PCUR_BEFORE_FIRST_IN_TREE
 = 4,

60 
	mBTR_PCUR_AFTER_LAST_IN_TREE
 = 5

63 
	#bå_pcur_¸óã_f‹_mysql
(Ë
bå_pcur_t
::
	`¸óã_f‹_mysql
()

	)

64 
	#bå_pcur_‰ì_f‹_mysql
(
p
Ë
bå_pcur_t
::
	`‰ì_f‹_mysql
’)

	)

66 
	#bå_pcur_ª£t
(
p
Ë’)->
	`ª£t
();

	)

68 
	#bå_pcur_c›y_°‹ed_posôi⁄
(
d
, 
s
) \

69 
bå_pcur_t
::
	`c›y_°‹ed_posôi⁄
(
d
, 
s
)

	)

71 
	#bå_pcur_‰ì
(
p
Ë’)->
	`‰ì_ªc_buf
()

	)

73 
	#bå_pcur_›í
(
i
, 
t
, 
md
, 
l
, 
p
, 
m
) \

74 (
p
)->
	`›í
((
i
), 0, (
t
), (
md
), (
l
), 
m
, 
__FILE__
, 
__LINE__
)

	)

76 
	#bå_pcur_öô
(
p
Ë’)->
	`öô
()

	)

77 
	#bå_pcur_˛o£
(
p
Ë’)->
	`˛o£
()

	)

79 
	#bå_pcur_›í_©_∫d_pos
(
i
, 
l
, 
p
, 
m
) \

80 (
p
)->
	`£t_øndom_posôi⁄
((
i
), (
l
), (
m
), 
__FILE__
, 
__LINE__
)

	)

82 
	#bå_pcur_›í_low
(
i
, 
lv
, 
md
, 
lm
, 
p
, 
f
, 
 
, 
mr
) \

83 (
p
)->
	`›í
((
i
), (
lv
), (
t
), (
md
), (
lm
), (
mr
), (
f
), (
l
))

	)

85 
	#bå_pcur_›í_©_ödex_side
(
e
, 
i
, 
lm
, 
p
, 
ù
, 
lv
, 
m
) \

86 (
p
)->
	`›í_©_side
((
e
), (
i
), (
lm
), (
ù
), (
lv
), (
m
))

	)

88 
	#bå_pcur_›í_⁄_u£r_ªc
(
i
, 
t
, 
md
, 
l
, 
p
, 
m
) \

89 (
p
)->
	`›í_⁄_u£r_ªc
((
i
), (
t
), (
md
), (
l
), (
m
), 
__FILE__
, 
__LINE__
)

	)

91 
	#bå_pcur_›í_wôh_no_öô
(
i
, 
t
, 
md
, 
l
, 
p
, 
has
, 
m
) \

92 (
p
)->
	`›í_no_öô
((
i
), (
t
), (
md
), (
l
), (
has
), (
m
), 
__FILE__
, 
__LINE__
)

	)

94 
	#bå_pcur_ª°‹e_posôi⁄
(
l
, 
p
, 
må
) \

95 (
p
)->
	`ª°‹e_posôi⁄
(
l
, 
må
, 
__FILE__
, 
__LINE__
)

	)

97 
	#bå_pcur_°‹e_posôi⁄
(
p
, 
m
Ë’)->
	`°‹e_posôi⁄
(m)

	)

99 
	#bå_pcur_gë_ªl_pos
(
p
Ë’)->
	`gë_ªl_pos
()

	)

101 
	#bå_pcur_commô_•ecify_må
(
p
, 
m
Ë’)->
	`commô_•ecify_må
(m)

	)

103 
	#bå_pcur_move_to_√xt
(
p
, 
m
Ë’)->
	`move_to_√xt
(m)

	)

104 
	#bå_pcur_move_to_¥ev
(
p
, 
m
Ë’)->
	`move_to_¥ev
(m)

	)

106 
	#bå_pcur_move_to_œ°_⁄_∑ge
(
p
, 
m
Ë’)->
	`move_to_œ°_⁄_∑ge
(m)

	)

108 
	#bå_pcur_move_to_√xt_u£r_ªc
(
p
, 
m
) \

109 ((
p
)->
	`move_to_√xt_u£r_ªc
(
m
Ë=
DB_SUCCESS
)

	)

111 
	#bå_pcur_move_to_√xt_∑ge
(
p
, 
m
Ë’)->
	`move_to_√xt_∑ge
(m)

	)

113 
	#bå_pcur_gë_bå_cur
(
p
Ë’)->
	`gë_bå_cur
()

	)

115 
	#bå_pcur_gë_∑ge_cur
(
p
Ë’)->
	`gë_∑ge_cur
()

	)

117 
	#bå_pcur_gë_∑ge
(
p
Ë’)->
	`gë_∑ge
()

	)

119 
	#bå_pcur_gë_block
(
p
Ë’)->
	`gë_block
()

	)

121 
	#bå_pcur_gë_ªc
(
p
Ë’)->
	`gë_ªc
()

	)

123 
	#bå_pcur_is_⁄_u£r_ªc
(
p
Ë’)->
	`is_⁄_u£r_ªc
()

	)

125 
	#bå_pcur_is_a·î_œ°_⁄_∑ge
(
p
Ë’)->
	`is_a·î_œ°_⁄_∑ge
()

	)

127 
	#bå_pcur_is_bef‹e_fú°_⁄_∑ge
(
p
Ë’)->
	`is_bef‹e_fú°_⁄_∑ge
()

	)

129 
	#bå_pcur_is_bef‹e_fú°_ö_åì
(
p
, 
m
Ë’)->
	`is_bef‹e_fú°_ö_åì
(m)

	)

131 
	#bå_pcur_is_a·î_œ°_ö_åì
(
p
, 
m
Ë’)->
	`is_a·î_œ°_ö_åì
(m)

	)

133 
	#bå_pcur_move_to_√xt_⁄_∑ge
(
p
Ë’)->
	`move_to_√xt_⁄_∑ge
()

	)

135 
	#bå_pcur_move_to_¥ev_⁄_∑ge
(
p
Ë’)->
	`move_to_¥ev_⁄_∑ge
()

	)

137 
	#bå_pcur_move_bef‹e_fú°_⁄_∑ge
(
p
Ë’)->
	`move_bef‹e_fú°_⁄_∑ge
()

	)

139 
	#bå_pcur_gë_low_m©ch
(
p
Ë’)->
	`gë_low_m©ch
()

	)

141 
	#bå_pcur_gë_up_m©ch
(
p
Ë’)->
	`gë_up_m©ch
()

	)

144 
	epcur_pos_t
 {

147 
	mBTR_PCUR_NOT_POSITIONED
 = 0,

156 
	mBTR_PCUR_WAS_POSITIONED
,

162 
	mBTR_PCUR_IS_POSITIONED_OPTIMISTIC
,

166 
	mBTR_PCUR_IS_POSITIONED


170 
	simp‹t_˘x_t
 {

172 
boﬁ
 
	mis_îr‹
{
	mÁl£
};

178 
	sbå_pcur_t
 {

182 
öô
(
size_t
 
ªad_Àvñ
 = 0);

185 
di˘_ödex_t
 *
ödex
(Ë{  (
	mm_bå_cur
.
	mödex
); }

195 
boﬁ
 
£t_øndom_posôi⁄
(
di˘_ödex_t
 *
ödex
, 
ulöt
 
œtch_mode
, 
må_t
 *
må
,

196 c⁄° *
fûe
, 
ulöt
 
löe
);

206 
›í_©_side
(
boﬁ
 
‰om_À·
, 
di˘_ödex_t
 *
ödex
, 
ulöt
 
œtch_mode
,

207 
boﬁ
 
öô_pcur
, 
ulöt
 
Àvñ
, 
må_t
 *
må
);

214 
begö_Àaf
(
di˘_ödex_t
 *
ödex
, 
ulöt
 
œtch_mode
, 
må_t
 *
må
) {

215 
›í_©_side
(
åue
, 
ödex
, 
œtch_mode
, 
Ál£
, 0, 
må
);

238 
›í_no_öô
(
di˘_ödex_t
 *
ödex
, c⁄° 
dtu∂e_t
 *
tu∂e
,

239 
∑ge_cur_mode_t
 
mode
, 
ulöt
 
œtch_mode
,

240 
ulöt
 
has_£¨ch_œtch
, 
må_t
 *
må
, c⁄° *
fûe
,

241 
ulöt
 
löe
);

257 
›í_⁄_u£r_ªc
(
di˘_ödex_t
 *
ödex
, c⁄° 
dtu∂e_t
 *
tu∂e
,

258 
∑ge_cur_mode_t
 
mode
, 
ulöt
 
œtch_mode
, 
må_t
 *
må
,

259 c⁄° *
fûe
, 
ulöt
 
löe
);

265 
›í_⁄_u£r_ªc
(c⁄° 
∑ge_cur_t
 &
curs‹
, 
∑ge_cur_mode_t
 
mode
,

266 
ulöt
 
œtch_mode
);

283 
›í
(
di˘_ödex_t
 *
ödex
, 
ulöt
 
Àvñ
, c⁄° 
dtu∂e_t
 *
tu∂e
,

284 
∑ge_cur_mode_t
 
mode
, 
ulöt
 
œtch_mode
, 
må_t
 *
må
,

285 c⁄° *
fûe
, 
ulöt
 
löe
);

307 
boﬁ
 
ª°‹e_posôi⁄
(
ulöt
 
œtch_mode
, 
må_t
 *
må
, c⁄° *
fûe
,

308 
ulöt
 
löe
);

321 
˛o£
();

324 
‰ì_ªc_buf
() {

325 
ut_‰ì
(
m_ﬁd_ªc_buf
);

326 
	mm_ﬁd_ªc_buf
 = 
nuŒ±r
;

329 #i‚de‡
UNIV_HOTBACKUP


333 
ulöt
 
gë_ªl_pos
() const;

338 c⁄° 
bå_cur_t
 *
gë_bå_cur
() const;

341 
bå_cur_t
 *
gë_bå_cur
();

344 
∑ge_cur_t
 *
gë_∑ge_cur
();

347 c⁄° 
∑ge_cur_t
 *
gë_∑ge_cur
() const;

351 
∑ge_t
 *
gë_∑ge
();

355 c⁄° 
∑ge_t
 *
gë_∑ge
() const;

359 
buf_block_t
 *
gë_block
();

363 c⁄° 
buf_block_t
 *
gë_block
() const;

367 
ªc_t
 *
gë_ªc
();

371 c⁄° 
ªc_t
 *
gë_ªc
() const;

373 #i‚de‡
UNIV_HOTBACKUP


377 
ulöt
 
gë_up_m©ch
() const;

382 
ulöt
 
gë_low_m©ch
() const;

387 
boﬁ
 
is_a·î_œ°_⁄_∑ge
() const;

392 
boﬁ
 
is_bef‹e_fú°_⁄_∑ge
() const;

396 
boﬁ
 
is_⁄_u£r_ªc
() const;

402 
boﬁ
 
is_bef‹e_fú°_ö_åì
(
må_t
 *
må
) const;

408 
boﬁ
 
is_a·î_œ°_ö_åì
(
må_t
 *
må
) const;

411 
move_to_√xt_⁄_∑ge
();

414 
move_to_¥ev_⁄_∑ge
();

418 
move_to_œ°_⁄_∑ge
(
må_t
 *
må
);

424 
dbîr_t
 
move_to_√xt_u£r_ªc
(
må_t
 *
må
);

431 
boﬁ
 
move_to_√xt
(
må_t
 *
må
);

438 
boﬁ
 
move_to_¥ev
(
må_t
 *
må
);

445 
move_to_√xt_∑ge
(
må_t
 *
må
);

452 
commô_•ecify_må
(
må_t
 *
må
);

455 
move_bef‹e_fú°_⁄_∑ge
();

465 
°‹e_posôi⁄
(
må_t
 *
må
);

468 
boﬁ
 
is_posôi⁄ed
() const {

469  (
	mm_ﬁd_°‹ed
 && (
	mm_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
 ||

470 
m_pos_°©e
 =
BTR_PCUR_WAS_POSITIONED
));

474 
boﬁ
 
is_˛u°îed
(Ëc⁄° {  (
	mm_bå_cur
.
	mödex
->is_clustered()); }

478 
ª£t
();

484 
c›y_°‹ed_posôi⁄
(
bå_pcur_t
 *
d°
, c⁄° bå_pcur_à*
§c
);

489 
bå_pcur_t
 *
¸óã_f‹_mysql
() {

490 autÿ
	mpcur
 = 
UT_NEW_NOKEY
(
bå_pcur_t
());

492 
	mpcur
->
	mm_bå_cur
.
	mödex
 = 
nuŒ±r
;

494 
	mpcur
->
öô
();

496  (
	mpcur
);

501 
‰ì_f‹_mysql
(
bå_pcur_t
 *&
pcur
) {

502 
	mpcur
->
‰ì_ªc_buf
();

504 
UT_DELETE
(
pcur
);

506 
	mpcur
 = 
nuŒ±r
;

512 
Page_„tch
 
£t_„tch_ty≥
(Page_„tch 
„tch_mode
) {

513 
ut_ad
(
„tch_mode
 =
Page_„tch
::
NORMAL
 || fëch_modê=Page_„tch::
SCAN
);

515 autÿ
	mﬁd_„tch_mode
 = 
m_bå_cur
.
m_„tch_mode
;

517 
	mm_bå_cur
.
	mm_„tch_mode
 = 
„tch_mode
;

519  (
	mﬁd_„tch_mode
);

522 
	m¥iv©e
:

533 
move_backw¨d_‰om_∑ge
(
må_t
 *
må
);

535 
	mpublic
:

537 
bå_cur_t
 
m_bå_cur
;

546 
ulöt
 
	mm_œtch_mode
{0};

549 
boﬁ
 
	mm_ﬁd_°‹ed
{
	mÁl£
};

553 
ªc_t
 *
	mm_ﬁd_ªc
{
	mnuŒ±r
};

556 
ulöt
 
	mm_ﬁd_n_fõlds
{0};

560 
bå_pcur_pos_t
 
	mm_ªl_pos
{
	mBTR_PCUR_UNSET
};

563 
	mbuf
::
Block_höt
 
m_block_whí_°‹ed
;

567 
uöt64_t
 
	mm_modify_˛ock
{0};

570 
pcur_pos_t
 
	mm_pos_°©e
{
	mBTR_PCUR_NOT_POSITIONED
};

573 
∑ge_cur_mode_t
 
	mm_£¨ch_mode
{
	mPAGE_CUR_UNSUPP
};

577 
åx_t
 *
	mm_åx_if_known
{
	mnuŒ±r
};

583 
byã
 *
	mm_ﬁd_ªc_buf
{
	mnuŒ±r
};

586 
size_t
 
	mm_buf_size
{0};

589 
ulöt
 
	mm_ªad_Àvñ
{0};

593 
imp‹t_˘x_t
 *
	mimp‹t_˘x
{
	mnuŒ±r
};

596 
ölöe
 
	gbå_pcur_t
::
	$öô
(
size_t
 
ªad_Àvñ
) {

597 
	`£t_„tch_ty≥
(
Page_„tch
::
NORMAL
);

599 
m_ﬁd_°‹ed
 = 
Ál£
;

600 
m_ﬁd_ªc_buf
 = 
nuŒ±r
;

601 
m_ﬁd_ªc
 = 
nuŒ±r
;

602 
m_bå_cur
.
πr_öfo
 = 
nuŒ±r
;

603 
m_ªad_Àvñ
 = 
ªad_Àvñ
;

604 
imp‹t_˘x
 = 
nuŒ±r
;

605 
m_block_whí_°‹ed
.
	`˛ór
();

606 
	}
}

621 
ölöe
 
	gbå_pcur_t
::
	$›í
(
di˘_ödex_t
 *
ödex
, 
ulöt
 
Àvñ
,

622 c⁄° 
dtu∂e_t
 *
tu∂e
, 
∑ge_cur_mode_t
 
mode
,

623 
ulöt
 
œtch_mode
, 
må_t
 *
må
, c⁄° *
fûe
,

624 
ulöt
 
löe
) {

625 
	`öô
();

627 
m_£¨ch_mode
 = 
mode
;

628 
m_œtch_mode
 = 
	`BTR_LATCH_MODE_WITHOUT_FLAGS
(
œtch_mode
);

632 autÿ
cur
 = 
	`gë_bå_cur
();

634 
	`ut_ad
(!
	`di˘_ödex_is_•©ül
(
ödex
));

636 i‡(
ödex
->
èbÀ
->
	`is_öåösic
()) {

637 
	`ut_ad
((
œtch_mode
 & 
BTR_MODIFY_LEAF
Ë|| (œtch_modê& 
BTR_SEARCH_LEAF
) ||

638 (
œtch_mode
 & 
BTR_MODIFY_TREE
));

640 
	`bå_cur_£¨ch_to_¡h_Àvñ_wôh_no_œtch
(

641 
ödex
, 
Àvñ
, 
tu∂e
, 
mode
, 
cur
, 
fûe
, 
löe
, 
må
,

642 (((
œtch_mode
 & 
BTR_MODIFY_LEAF
Ë|| (œtch_modê& 
BTR_MODIFY_TREE
))

643 ? 
åue


644 : 
Ál£
));

646 
	`bå_cur_£¨ch_to_¡h_Àvñ
(
ödex
, 
Àvñ
, 
tu∂e
, 
mode
, 
œtch_mode
, 
cur
, 0,

647 
fûe
, 
löe
, 
må
);

650 
m_pos_°©e
 = 
BTR_PCUR_IS_POSITIONED
;

652 
m_åx_if_known
 = 
nuŒ±r
;

653 
	}
}

655 
ölöe
 
	gbå_pcur_t
::
	$›í_©_side
(
boﬁ
 
‰om_À·
, 
di˘_ödex_t
 *
ödex
,

656 
ulöt
 
œtch_mode
, 
boﬁ
 
öô_pcur
,

657 
ulöt
 
Àvñ
, 
må_t
 *
må
) {

658 
m_œtch_mode
 = 
	`BTR_LATCH_MODE_WITHOUT_FLAGS
(
œtch_mode
);

660 
m_£¨ch_mode
 = 
‰om_À·
 ? 
PAGE_CUR_G
 : 
PAGE_CUR_L
;

662 i‡(
öô_pcur
) {

663 
	`öô
();

666 i‡(
ödex
->
èbÀ
->
	`is_öåösic
()) {

667 
	`bå_cur_›í_©_ödex_side_wôh_no_œtch
(
‰om_À·
, 
ödex
, 
	`gë_bå_cur
(),

668 
Àvñ
, 
må
);

670 
	`bå_cur_›í_©_ödex_side
(
‰om_À·
, 
ödex
, 
œtch_mode
, 
	`gë_bå_cur
(),

671 
Àvñ
, 
må
);

674 
m_pos_°©e
 = 
BTR_PCUR_IS_POSITIONED
;

676 
m_ﬁd_°‹ed
 = 
Ál£
;

678 
m_åx_if_known
 = 
nuŒ±r
;

679 
	}
}

681 
ölöe
 
boﬁ
 
	gbå_pcur_t
::
	$£t_øndom_posôi⁄
(
di˘_ödex_t
 *
ödex
,

682 
ulöt
 
œtch_mode
, 
må_t
 *
må
,

683 c⁄° *
fûe
, 
ulöt
 
löe
) {

684 
m_œtch_mode
 = 
œtch_mode
;

685 
m_£¨ch_mode
 = 
PAGE_CUR_G
;

687 
	`öô
();

689 autÿ
posôi⁄ed
 = 
	`bå_cur_›í_©_∫d_pos_func
(

690 
ödex
, 
œtch_mode
, 
	`gë_bå_cur
(), 
fûe
, 
löe
, 
må
);

692 
m_ﬁd_°‹ed
 = 
Ál£
;

694 
m_åx_if_known
 = 
nuŒ±r
;

696 
m_pos_°©e
 = 
BTR_PCUR_IS_POSITIONED
;

698  (
posôi⁄ed
);

699 
	}
}

701 
ölöe
 
	gbå_pcur_t
::
	$›í_no_öô
(
di˘_ödex_t
 *
ödex
, c⁄° 
dtu∂e_t
 *
tu∂e
,

702 
∑ge_cur_mode_t
 
mode
, 
ulöt
 
œtch_mode
,

703 
ulöt
 
has_£¨ch_œtch
, 
må_t
 *
må
,

704 c⁄° *
fûe
, 
ulöt
 
löe
) {

705 
m_œtch_mode
 = 
	`BTR_LATCH_MODE_WITHOUT_INTENTION
(
œtch_mode
);

707 
m_£¨ch_mode
 = 
mode
;

711 autÿ
cur
 = 
	`gë_bå_cur
();

713 i‡(
ödex
->
èbÀ
->
	`is_öåösic
()) {

714 
	`ut_ad
((
œtch_mode
 & 
BTR_MODIFY_LEAF
Ë|| (œtch_modê& 
BTR_SEARCH_LEAF
));

716 
	`bå_cur_£¨ch_to_¡h_Àvñ_wôh_no_œtch
(

717 
ödex
, 
m_ªad_Àvñ
, 
tu∂e
, 
mode
, 
cur
, 
fûe
, 
löe
, 
må
,

718 ((
œtch_mode
 & 
BTR_MODIFY_LEAF
Ë? 
åue
 : 
Ál£
));

720 
	`bå_cur_£¨ch_to_¡h_Àvñ
(
ödex
, 
m_ªad_Àvñ
, 
tu∂e
, 
mode
, 
œtch_mode
,

721 
cur
, 
has_£¨ch_œtch
, 
fûe
, 
löe
, 
må
);

724 
m_pos_°©e
 = 
BTR_PCUR_IS_POSITIONED
;

726 
m_ﬁd_°‹ed
 = 
Ál£
;

728 
m_åx_if_known
 = 
nuŒ±r
;

729 
	}
}

731 
ölöe
 c⁄° 
bå_cur_t
 *
	gbå_pcur_t
::
	$gë_bå_cur
(Ëc⁄° {  (&
m_bå_cur
); 
	}
}

733 
ölöe
 
bå_cur_t
 *
	gbå_pcur_t
::
	$gë_bå_cur
() {

734  (
c⁄°_ˇ°
<
bå_cur_t
 *>(&
m_bå_cur
));

735 
	}
}

737 #ifde‡
UNIV_DEBUG


738 
ölöe
 
∑ge_cur_t
 *
	gbå_pcur_t
::
	$gë_∑ge_cur
() {

739  (
	`bå_cur_gë_∑ge_cur
(
	`gë_bå_cur
()));

740 
	}
}

742 
ölöe
 c⁄° 
∑ge_cur_t
 *
	gbå_pcur_t
::
	$gë_∑ge_cur
() const {

743  (
	`bå_cur_gë_∑ge_cur
(
	`gë_bå_cur
()));

744 
	}
}

746 
ölöe
 
∑ge_t
 *
	gbå_pcur_t
::
	$gë_∑ge
() {

747 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

749  (
	`bå_cur_gë_∑ge
(
	`gë_bå_cur
()));

750 
	}
}

752 
ölöe
 c⁄° 
∑ge_t
 *
	gbå_pcur_t
::
	$gë_∑ge
() const {

753 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

755  (
	`bå_cur_gë_∑ge
(
c⁄°_ˇ°
<
bå_pcur_t
 *>(
this
)->
	`gë_bå_cur
()));

756 
	}
}

758 
ölöe
 
buf_block_t
 *
	gbå_pcur_t
::
	$gë_block
() {

759 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

761  (
	`bå_cur_gë_block
(
	`gë_bå_cur
()));

762 
	}
}

764 
ölöe
 c⁄° 
buf_block_t
 *
	gbå_pcur_t
::
	$gë_block
() const {

765 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

767  (
	`bå_cur_gë_block
(
	`gë_bå_cur
()));

768 
	}
}

770 
ölöe
 
ªc_t
 *
	gbå_pcur_t
::
	$gë_ªc
() {

771 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

772 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

774  (
	`bå_cur_gë_ªc
(
	`gë_bå_cur
()));

775 
	}
}

777 
ölöe
 c⁄° 
ªc_t
 *
	gbå_pcur_t
::
	$gë_ªc
() const {

778 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

779 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

781  (
	`bå_cur_gë_ªc
(
	`gë_bå_cur
()));

782 
	}
}

785 
ölöe
 
∑ge_cur_t
 *
	gbå_pcur_t
::
	$gë_∑ge_cur
(Ë{  (&
m_bå_cur
.
∑ge_cur
); 
	}
}

787 
ölöe
 c⁄° 
∑ge_cur_t
 *
	gbå_pcur_t
::
	$gë_∑ge_cur
() const {

788  (&
m_bå_cur
.
∑ge_cur
);

789 
	}
}

791 
ölöe
 
∑ge_t
 *
	gbå_pcur_t
::
	$gë_∑ge
() {

792  (
m_bå_cur
.
∑ge_cur
.
block
->
‰ame
);

793 
	}
}

795 
ölöe
 c⁄° 
∑ge_t
 *
	gbå_pcur_t
::
	$gë_∑ge
() const {

796  (
m_bå_cur
.
∑ge_cur
.
block
->
‰ame
);

797 
	}
}

799 
ölöe
 
buf_block_t
 *
	gbå_pcur_t
::
	$gë_block
() {

800  (
m_bå_cur
.
∑ge_cur
.
block
);

801 
	}
}

803 
ölöe
 c⁄° 
buf_block_t
 *
	gbå_pcur_t
::
	$gë_block
() const {

804  (
m_bå_cur
.
∑ge_cur
.
block
);

805 
	}
}

807 
ölöe
 
ªc_t
 *
	gbå_pcur_t
::
	$gë_ªc
(Ë{  (
m_bå_cur
.
∑ge_cur
.
ªc
); 
	}
}

809 
ölöe
 c⁄° 
ªc_t
 *
	gbå_pcur_t
::
	$gë_ªc
() const {

810  (
m_bå_cur
.
∑ge_cur
.
ªc
);

811 
	}
}

815 #i‚de‡
UNIV_HOTBACKUP


817 
ölöe
 
ulöt
 
	gbå_pcur_t
::
	$gë_ªl_pos
() const {

818 
	`ut_ad
(
m_ﬁd_ªc
 !
nuŒ±r
);

819 
	`ut_ad
(
m_ﬁd_°‹ed
);

820 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_WAS_POSITIONED
 ||

821 
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

823  (
m_ªl_pos
);

824 
	}
}

826 
ölöe
 
	gbå_pcur_t
::
	$˛o£
() {

827 
	`‰ì_ªc_buf
();

829 i‡(
m_bå_cur
.
πr_öfo
 !
nuŒ±r
) {

830 
	`πr_˛ón_πr_öfo
(
m_bå_cur
.
πr_öfo
, 
åue
);

831 
m_bå_cur
.
πr_öfo
 = 
nuŒ±r
;

834 
m_ﬁd_ªc
 = 
nuŒ±r
;

835 
m_bå_cur
.
∑ge_cur
.
ªc
 = 
nuŒ±r
;

836 
m_bå_cur
.
∑ge_cur
.
block
 = 
nuŒ±r
;

838 
m_ﬁd_ªc
 = 
nuŒ±r
;

839 
m_ﬁd_°‹ed
 = 
Ál£
;

841 
m_œtch_mode
 = 
BTR_NO_LATCHES
;

842 
m_pos_°©e
 = 
BTR_PCUR_NOT_POSITIONED
;

844 
m_åx_if_known
 = 
nuŒ±r
;

845 
	}
}

847 
ölöe
 
ulöt
 
	gbå_pcur_t
::
	$gë_up_m©ch
() const {

848 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_WAS_POSITIONED
 ||

849 
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

851 c⁄°áutÿ
cur
 = 
	`gë_bå_cur
();

853 
	`ut_ad
(
cur
->
up_m©ch
 !
ULINT_UNDEFINED
);

855  (
cur
->
up_m©ch
);

856 
	}
}

858 
ölöe
 
ulöt
 
	gbå_pcur_t
::
	$gë_low_m©ch
() const {

859 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_WAS_POSITIONED
 ||

860 
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

862 c⁄°áutÿ
cur
 = 
	`gë_bå_cur
();

864 
	`ut_ad
(
cur
->
low_m©ch
 !
ULINT_UNDEFINED
);

866  (
cur
->
low_m©ch
);

867 
	}
}

869 
ölöe
 
boﬁ
 
	gbå_pcur_t
::
	$is_a·î_œ°_⁄_∑ge
() const {

870 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

871 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

873  (
	`∑ge_cur_is_a·î_œ°
(
	`gë_∑ge_cur
()));

874 
	}
}

876 
ölöe
 
boﬁ
 
	gbå_pcur_t
::
	$is_bef‹e_fú°_⁄_∑ge
() const {

877 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

878 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

880  (
	`∑ge_cur_is_bef‹e_fú°
(
	`gë_∑ge_cur
()));

881 
	}
}

883 
ölöe
 
boﬁ
 
	gbå_pcur_t
::
	$is_⁄_u£r_ªc
() const {

884 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

885 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

887  (!
	`is_bef‹e_fú°_⁄_∑ge
(Ë&& !
	`is_a·î_œ°_⁄_∑ge
());

888 
	}
}

890 
ölöe
 
boﬁ
 
	gbå_pcur_t
::
	$is_bef‹e_fú°_ö_åì
(
må_t
 *
må
) const {

891 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

892 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

894 i‡(
	`bå_∑ge_gë_¥ev
(
	`gë_∑ge
(), 
må
Ë!
FIL_NULL
) {

895  (
Ál£
);

898  (
	`∑ge_cur_is_bef‹e_fú°
(
	`gë_∑ge_cur
()));

899 
	}
}

901 
ölöe
 
boﬁ
 
	gbå_pcur_t
::
	$is_a·î_œ°_ö_åì
(
må_t
 *
må
) const {

902 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

903 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

905 i‡(
	`bå_∑ge_gë_√xt
(
	`gë_∑ge
(), 
må
Ë!
FIL_NULL
) {

906  (
Ál£
);

909  (
	`∑ge_cur_is_a·î_œ°
(
	`gë_∑ge_cur
()));

910 
	}
}

912 
ölöe
 
	gbå_pcur_t
::
	$move_to_√xt_⁄_∑ge
() {

913 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

914 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

916 
	`∑ge_cur_move_to_√xt
(
	`gë_∑ge_cur
());

918 
m_ﬁd_°‹ed
 = 
Ál£
;

919 
	}
}

921 
ölöe
 
	gbå_pcur_t
::
	$move_to_¥ev_⁄_∑ge
() {

922 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

923 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

925 
	`∑ge_cur_move_to_¥ev
(
	`gë_∑ge_cur
());

927 
m_ﬁd_°‹ed
 = 
Ál£
;

928 
	}
}

930 
ölöe
 
	gbå_pcur_t
::
	$move_to_œ°_⁄_∑ge
(
må_t
 *
må
) {

931 
	`UT_NOT_USED
(
må
);

932 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

934 
	`∑ge_cur_£t_a·î_œ°
(
	`gë_block
(), 
	`gë_∑ge_cur
());

936 
m_ﬁd_°‹ed
 = 
Ál£
;

937 
	}
}

939 
ölöe
 
dbîr_t
 
	gbå_pcur_t
::
	$move_to_√xt_u£r_ªc
(
må_t
 *
må
) {

940 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

941 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

944 
m_ﬁd_°‹ed
 = 
Ál£
;

946 i‡(
	`is_a·î_œ°_⁄_∑ge
()) {

947 i‡(
	`is_a·î_œ°_ö_åì
(
må
)) {

948  (
DB_END_OF_INDEX
);

951 
	`move_to_√xt_∑ge
(
må
);

953 
	`move_to_√xt_⁄_∑ge
();

956 i‡(
	`is_⁄_u£r_ªc
()) {

957  (
DB_SUCCESS
);

960 
	}
}

962 
ölöe
 
boﬁ
 
	gbå_pcur_t
::
	$move_to_√xt
(
må_t
 *
må
) {

963 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

964 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

966 
m_ﬁd_°‹ed
 = 
Ál£
;

968 i‡(
	`is_a·î_œ°_⁄_∑ge
()) {

969 i‡(
	`is_a·î_œ°_ö_åì
(
må
)) {

970  (
Ál£
);

973 
	`move_to_√xt_∑ge
(
må
);

975  (
åue
);

978 
	`move_to_√xt_⁄_∑ge
();

980  (
åue
);

981 
	}
}

983 
ölöe
 
	gbå_pcur_t
::
	$commô_•ecify_må
(
må_t
 *
må
) {

984 
	`ut_ad
(
m_pos_°©e
 =
BTR_PCUR_IS_POSITIONED
);

986 
m_œtch_mode
 = 
BTR_NO_LATCHES
;

988 
	`må_commô
(
må
);

990 
m_pos_°©e
 = 
BTR_PCUR_WAS_POSITIONED
;

991 
	}
}

993 
ölöe
 
	gbå_pcur_t
::
	$move_bef‹e_fú°_⁄_∑ge
() {

994 
	`ut_ad
(
m_œtch_mode
 !
BTR_NO_LATCHES
);

996 
	`∑ge_cur_£t_bef‹e_fú°
(
	`gë_block
(), 
	`gë_∑ge_cur
());

998 
m_ﬁd_°‹ed
 = 
Ál£
;

999 
	}
}

1001 
ölöe
 
	gbå_pcur_t
::
	$ª£t
() {

1002 
	`‰ì_ªc_buf
();

1004 
m_ﬁd_ªc_buf
 = 
nuŒ±r
;

1005 
m_bå_cur
.
ödex
 = 
nuŒ±r
;

1006 
m_bå_cur
.
∑ge_cur
.
ªc
 = 
nuŒ±r
;

1007 
m_ﬁd_ªc
 = 
nuŒ±r
;

1008 
m_ﬁd_n_fõlds
 = 0;

1009 
m_ﬁd_°‹ed
 = 
Ál£
;

1011 
m_œtch_mode
 = 
BTR_NO_LATCHES
;

1012 
m_pos_°©e
 = 
BTR_PCUR_NOT_POSITIONED
;

1013 
	}
}

	@btr0sea.h

33 #i‚de‡
bå0£a_h


34 
	#bå0£a_h


	)

36 
	~"univ.i
"

38 
	~"bå0ty≥s.h
"

39 
	~"di˘0di˘.h
"

40 
	~"ha0ha.h
"

41 
	~"må0må.h
"

42 
	~"ªm0ªc.h
"

46 
bå_£¨ch_sys_¸óã
(
ulöt
 
hash_size
);

50 
bå_£¨ch_sys_ªsize
(
ulöt
 
hash_size
);

53 
bå_£¨ch_sys_‰ì
();

57 
bå_£¨ch_dißbÀ
(
boﬁ
 
√ed_muãx
);

59 
bå_£¨ch_íabÀ
();

63 
UNIV_INLINE


64 
bå_£¨ch_t
 *
bå_£¨ch_gë_öfo
(
di˘_ödex_t
 *
ödex
);

69 
bå_£¨ch_t
 *
bå_£¨ch_öfo_¸óã
(
mem_hóp_t
 *
hóp
);

75 
ulöt
 
bå_£¨ch_öfo_gë_ªf_cou¡
(c⁄° 
bå_£¨ch_t
 *
öfo
,

76 c⁄° 
di˘_ödex_t
 *
ödex
);

81 
UNIV_INLINE


82 
bå_£¨ch_öfo_upd©e
(
di˘_ödex_t
 *
ödex
, 
bå_cur_t
 *
curs‹
);

103 
iboﬁ
 
bå_£¨ch_guess_⁄_hash
(
di˘_ödex_t
 *
ödex
, 
bå_£¨ch_t
 *
öfo
,

104 c⁄° 
dtu∂e_t
 *
tu∂e
, 
ulöt
 
mode
,

105 
ulöt
 
œtch_mode
, 
bå_cur_t
 *
curs‹
,

106 
ulöt
 
has_£¨ch_œtch
, 
må_t
 *
må
);

116 
bå_£¨ch_move_‹_dñëe_hash_íåõs
(
buf_block_t
 *
√w_block
,

117 
buf_block_t
 *
block
,

118 
di˘_ödex_t
 *
ödex
);

126 
bå_£¨ch_dr›_∑ge_hash_ödex
(
buf_block_t
 *
block
);

133 
bå_£¨ch_dr›_∑ge_hash_whí_‰ìd
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

134 c⁄° 
∑ge_size_t
 &
∑ge_size
);

138 
bå_dr›_ahi_f‹_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
);

142 
bå_dr›_ahi_f‹_ödex
(
di˘_ödex_t
 *
ödex
);

148 
bå_£¨ch_upd©e_hash_node_⁄_ö£π
(
bå_cur_t
 *
curs‹
);

155 
bå_£¨ch_upd©e_hash_⁄_ö£π
(
bå_cur_t
 *
curs‹
);

160 
bå_£¨ch_upd©e_hash_⁄_dñëe
(
bå_cur_t
 *
curs‹
);

164 
boﬁ
 
bå_£¨ch_vÆid©e
();

168 
UNIV_INLINE


169 
bå_£¨ch_x_lock
(c⁄° 
di˘_ödex_t
 *
ödex
);

173 
UNIV_INLINE


174 
bå_£¨ch_x_u∆ock
(c⁄° 
di˘_ödex_t
 *
ödex
);

177 
UNIV_INLINE


178 
bå_£¨ch_x_lock_Æl
();

181 
UNIV_INLINE


182 
bå_£¨ch_x_u∆ock_Æl
();

186 
UNIV_INLINE


187 
bå_£¨ch_s_lock
(c⁄° 
di˘_ödex_t
 *
ödex
);

191 
UNIV_INLINE


192 
bå_£¨ch_s_u∆ock
(c⁄° 
di˘_ödex_t
 *
ödex
);

195 
UNIV_INLINE


196 
bå_£¨ch_s_lock_Æl
();

198 #ifde‡
UNIV_DEBUG


203 
UNIV_INLINE


204 
boﬁ
 
bå_£¨ch_own_Æl
(
ulöt
 
mode
);

210 
UNIV_INLINE


211 
boﬁ
 
bå_£¨ch_own_™y
(
ulöt
 
mode
);

215 
UNIV_INLINE


216 
bå_£¨ch_s_u∆ock_Æl
();

222 
UNIV_INLINE


223 
rw_lock_t
 *
bå_gë_£¨ch_œtch
(c⁄° 
di˘_ödex_t
 *
ödex
);

229 
UNIV_INLINE


230 
hash_èbÀ_t
 *
bå_gë_£¨ch_èbÀ
(c⁄° 
di˘_ödex_t
 *
ödex
);

233 
	sbå_£¨ch_t
 {

234 
ulöt
 
	mªf_cou¡
;

244 
buf_block_t
 *
	mroŸ_guess
;

246 
ulöt
 
	mhash_™Æysis
;

250 
iboﬁ
 
	mœ°_hash_succ
;

255 
ulöt
 
	mn_hash_pŸítül
;

262 
ulöt
 
	mn_fõlds
;

264 
ulöt
 
	mn_byãs
;

267 
iboﬁ
 
	mÀ·_side
;

272 #ifde‡
UNIV_SEARCH_PERF_STAT


273 
ulöt
 
	mn_hash_succ
;

275 
ulöt
 
	mn_hash_Áû
;

276 
ulöt
 
	mn_∑â_succ
;

278 
ulöt
 
	mn_£¨ches
;

280 #ifde‡
UNIV_DEBUG


281 
ulöt
 
	mmagic_n
;

283 
	#BTR_SEARCH_MAGIC_N
 1112765

	)

288 
	sbå_£¨ch_sys_t
 {

289 
hash_èbÀ_t
 **
	mhash_èbÀs
;

295 
rw_lock_t
 **
bå_£¨ch_œtches
;

298 
bå_£¨ch_sys_t
 *
bå_£¨ch_sys
;

300 #ifde‡
UNIV_SEARCH_PERF_STAT


302 
ulöt
 
bå_£¨ch_n_succ
;

304 
ulöt
 
bå_£¨ch_n_hash_Áû
;

310 
	#BTR_SEARCH_HASH_ANALYSIS
 17

	)

314 
	#BTR_SEARCH_ON_PATTERN_LIMIT
 3

	)

318 
	#BTR_SEARCH_ON_HASH_LIMIT
 3

	)

320 
	~"bå0£a.ic
"

	@btr0sea.ic

33 
	~"bå0cur.h
"

34 
	~"buf0buf.h
"

35 
	~"di˘0mem.h
"

38 
bå_£¨ch_öfo_upd©e_¶ow
(

39 
bå_£¨ch_t
 *
öfo
,

40 
bå_cur_t
 *
curs‹
);

44 
UNIV_INLINE


45 c⁄° 
bå_£¨ch_t
 *
	$bå_£¨ch_gë_öfo
(

46 c⁄° 
di˘_ödex_t
 *
ödex
)

48  (
ödex
->
£¨ch_öfo
);

49 
	}
}

53 
UNIV_INLINE


54 
bå_£¨ch_t
 *
	$bå_£¨ch_gë_öfo
(
di˘_ödex_t
 *
ödex
)

56  (
ödex
->
£¨ch_öfo
);

57 
	}
}

60 
UNIV_INLINE


61 
	$bå_£¨ch_öfo_upd©e
(

62 
di˘_ödex_t
 *
ödex
,

63 
bå_cur_t
 *
curs‹
)

65 
	`ut_ad
(!
	`rw_lock_own
(
	`bå_gë_£¨ch_œtch
(
ödex
), 
RW_LOCK_S
));

66 
	`ut_ad
(!
	`rw_lock_own
(
	`bå_gë_£¨ch_œtch
(
ödex
), 
RW_LOCK_X
));

68 i‡(
	`di˘_ödex_is_•©ül
(
ödex
Ë|| !
bå_£¨ch_íabÀd
) {

72 
bå_£¨ch_t
 *
öfo
;

73 
öfo
 = 
	`bå_£¨ch_gë_öfo
(
ödex
);

75 
öfo
->
hash_™Æysis
++;

77 i‡(
öfo
->
hash_™Æysis
 < 
BTR_SEARCH_HASH_ANALYSIS
) {

83 
	`ut_ad
(
curs‹
->
Êag
 !
BTR_CUR_HASH
);

85 
	`bå_£¨ch_öfo_upd©e_¶ow
(
öfo
, 
curs‹
);

86 
	}
}

90 
UNIV_INLINE


91 
	$bå_£¨ch_x_lock
(c⁄° 
di˘_ödex_t
 *
ödex
) {

92 
	`rw_lock_x_lock
(
	`bå_gë_£¨ch_œtch
(
ödex
));

93 
	}
}

97 
UNIV_INLINE


98 
	$bå_£¨ch_x_u∆ock
(c⁄° 
di˘_ödex_t
 *
ödex
) {

99 
	`rw_lock_x_u∆ock
(
	`bå_gë_£¨ch_œtch
(
ödex
));

100 
	}
}

103 
UNIV_INLINE


104 
	$bå_£¨ch_x_lock_Æl
() {

105 
ulöt
 
i
 = 0; i < 
bå_ahi_∑πs
; ++i) {

106 
	`rw_lock_x_lock
(
bå_£¨ch_œtches
[
i
]);

108 
	}
}

111 
UNIV_INLINE


112 
	$bå_£¨ch_x_u∆ock_Æl
() {

113 
ulöt
 
i
 = 0; i < 
bå_ahi_∑πs
; ++i) {

114 
	`rw_lock_x_u∆ock
(
bå_£¨ch_œtches
[
i
]);

116 
	}
}

120 
UNIV_INLINE


121 
	$bå_£¨ch_s_lock
(c⁄° 
di˘_ödex_t
 *
ödex
) {

122 
	`rw_lock_s_lock
(
	`bå_gë_£¨ch_œtch
(
ödex
));

123 
	}
}

127 
UNIV_INLINE


128 
	$bå_£¨ch_s_u∆ock
(c⁄° 
di˘_ödex_t
 *
ödex
) {

129 
	`rw_lock_s_u∆ock
(
	`bå_gë_£¨ch_œtch
(
ödex
));

130 
	}
}

133 
UNIV_INLINE


134 
	$bå_£¨ch_s_lock_Æl
() {

135 
ulöt
 
i
 = 0; i < 
bå_ahi_∑πs
; ++i) {

136 
	`rw_lock_s_lock
(
bå_£¨ch_œtches
[
i
]);

138 
	}
}

141 
UNIV_INLINE


142 
	$bå_£¨ch_s_u∆ock_Æl
() {

143 
ulöt
 
i
 = 0; i < 
bå_ahi_∑πs
; ++i) {

144 
	`rw_lock_s_u∆ock
(
bå_£¨ch_œtches
[
i
]);

146 
	}
}

148 #ifde‡
UNIV_DEBUG


153 
UNIV_INLINE


154 
boﬁ
 
	$bå_£¨ch_own_Æl
(
ulöt
 
mode
) {

155 
ulöt
 
i
 = 0; i < 
bå_ahi_∑πs
; ++i) {

156 i‡(!
	`rw_lock_own
(
bå_£¨ch_œtches
[
i
], 
mode
)) {

157  (
Ál£
);

160  (
åue
);

161 
	}
}

167 
UNIV_INLINE


168 
boﬁ
 
	$bå_£¨ch_own_™y
(
ulöt
 
mode
) {

169 
ulöt
 
i
 = 0; i < 
bå_ahi_∑πs
; ++i) {

170 i‡(
	`rw_lock_own
(
bå_£¨ch_œtches
[
i
], 
mode
)) {

171  (
åue
);

174  (
Ál£
);

175 
	}
}

181 
UNIV_INLINE


182 
rw_lock_t
 *
	$bå_gë_£¨ch_œtch
(c⁄° 
di˘_ödex_t
 *
ödex
) {

183 
	`ut_ad
(
ödex
 !
nuŒ±r
);

185 
ulöt
 
ifﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(
°©ic_ˇ°
<ulöt>(
ödex
->
id
),

186 
°©ic_ˇ°
<
ulöt
>(
ödex
->
•a˚
));

188  (
bå_£¨ch_œtches
[
ifﬁd
 % 
bå_ahi_∑πs
]);

189 
	}
}

195 
UNIV_INLINE


196 
hash_èbÀ_t
 *
	$bå_gë_£¨ch_èbÀ
(c⁄° 
di˘_ödex_t
 *
ödex
) {

197 
	`ut_ad
(
ödex
 !
nuŒ±r
);

199 
ulöt
 
ifﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(
°©ic_ˇ°
<ulöt>(
ödex
->
id
),

200 
°©ic_ˇ°
<
ulöt
>(
ödex
->
•a˚
));

202  (
bå_£¨ch_sys
->
hash_èbÀs
[
ifﬁd
 % 
bå_ahi_∑πs
]);

203 
	}
}

	@btr0types.h

33 #i‚de‡
bå0ty≥s_h


34 
	#bå0ty≥s_h


	)

36 
	~"univ.i
"

38 
	~"∑ge0size.h
"

39 
	~"∑ge0ty≥s.h
"

40 
	~"ªm0ty≥s.h
"

41 
	~"sync0rw.h
"

44 
	gbå_pcur_t
;

46 
	gbå_cur_t
;

48 
	gbå_£¨ch_t
;

52 
boﬁ
 
bå_£¨ch_íabÀd
;

55 
ul⁄g
 
bå_ahi_∑πs
;

60 
	#BTR_EXTERN_FIELD_REF_SIZE
 
FIELD_REF_SIZE


	)

63 
	#BTR_EXTERN_LOCAL_STORED_MAX_SIZE
 (
BTR_EXTERN_FIELD_REF_SIZE
 * 2)

	)

	@buf0block_hint.h

26 #i‚de‡
buf0block_höt_h


27 
	#buf0block_höt_h


	)

28 
	~"buf0ty≥s.h
"

30 
«me•a˚
 
	gbuf
 {

31 ˛as†
	cBlock_höt
 {

32 
	gpublic
:

35 
°‹e
(
buf_block_t
 *
block
);

38 
˛ór
();

47 
	gãm∂©e
 <
ty≥«me
 
	gF
>

48 autÿ
run_wôh_höt
(
F
 &&
f
) {

49 
buf„r_fix_block_if_°ûl_vÆid
();

52 
buf_block_t
 *
	gbuf„r_fixed_block
 = 
m_block
;

53 autÿ
	gªs
 = 
f
(
buf„r_fixed_block
);

54 
buf„r_unfix_block_if_√eded
(
buf„r_fixed_block
);

55  
	gªs
;

58 
	g¥iv©e
:

60 
buf_block_t
 *
m_block
{
nuŒ±r
};

62 
∑ge_id_t
 
	gm_∑ge_id
{0, 0};

67 
buf„r_fix_block_if_°ûl_vÆid
();

71 
buf„r_unfix_block_if_√eded
(
buf_block_t
 *
block
);

	@buf0buddy.h

33 #i‚de‡
buf0buddy_h


34 
	#buf0buddy_h


	)

36 #ifde‡
UNIV_MATERIALIZE


37 #unde‡
UNIV_INLINE


38 
	#UNIV_INLINE


	)

41 
	~"buf0ty≥s.h
"

42 
	~"univ.i
"

52 
UNIV_INLINE


53 
byã
 *
	$buf_buddy_Æloc
(
buf_poﬁ_t
 *
buf_poﬁ
, 
ulöt
 
size
Ë
	`MY_ATTRIBUTE
((
mÆloc
));

60 
UNIV_INLINE


61 
	`buf_buddy_‰ì
(
buf_poﬁ_t
 *
buf_poﬁ
, *
buf
, 
ulöt
 
size
);

70 
boﬁ
 
	`buf_buddy_ªÆloc
(
buf_poﬁ_t
 *
buf_poﬁ
, *
buf
, 
ulöt
 
size
);

74 
	`buf_buddy_c⁄dí£_‰ì
(
buf_poﬁ_t
 *
buf_poﬁ
);

76 
	~"buf0buddy.ic
"

	@buf0buddy.ic

33 #ifde‡
UNIV_MATERIALIZE


34 #unde‡
UNIV_INLINE


35 
	#UNIV_INLINE


	)

38 
	~"buf0buddy.h
"

39 
	~"buf0buf.h
"

46 *
	$buf_buddy_Æloc_low
(
buf_poﬁ_t
 *
buf_poﬁ
, 
ulöt
 
i
Ë
	`MY_ATTRIBUTE
((
mÆloc
));

55 
	`buf_buddy_‰ì_low
(
buf_poﬁ_t
 *
buf_poﬁ
, *
buf
, 
ulöt
 
i
,

56 
boﬁ
 
has_zù_‰ì
);

60 
UNIV_INLINE


61 
ulöt
 
	$buf_buddy_gë_¶Ÿ
(
ulöt
 
size
)

63 
ulöt
 
i
;

64 
ulöt
 
s
;

66 
	`ut_ad
(
size
 >
UNIV_ZIP_SIZE_MIN
);

68 
i
 = 0, 
s
 = 
BUF_BUDDY_LOW
; s < 
size
; i++, s <<= 1) {

71 
	`ut_ad
(
i
 <
BUF_BUDDY_SIZES
);

72  (
i
);

73 
	}
}

83 
UNIV_INLINE


84 
byã
 *
	$buf_buddy_Æloc
(
buf_poﬁ_t
 *
buf_poﬁ
, 
ulöt
 
size
) {

85 
	`ut_ad
(
	`ut_is_2pow
(
size
));

86 
	`ut_ad
(
size
 >
UNIV_ZIP_SIZE_MIN
);

87 
	`ut_ad
(
size
 <
UNIV_PAGE_SIZE
);

89  (
°©ic_ˇ°
<
byã
 *>(

90 
	`buf_buddy_Æloc_low
(
buf_poﬁ
, 
	`buf_buddy_gë_¶Ÿ
(
size
))));

91 
	}
}

98 
UNIV_INLINE


99 
	$buf_buddy_‰ì
(
buf_poﬁ_t
 *
buf_poﬁ
, *
buf
, 
ulöt
 
size
) {

100 
	`ut_ad
(
	`ut_is_2pow
(
size
));

101 
	`ut_ad
(
size
 >
UNIV_ZIP_SIZE_MIN
);

102 
	`ut_ad
(
size
 <
UNIV_PAGE_SIZE
);

104 
	`buf_buddy_‰ì_low
(
buf_poﬁ
, 
buf
, 
	`buf_buddy_gë_¶Ÿ
(
size
), 
Ál£
);

105 
	}
}

107 #ifde‡
UNIV_MATERIALIZE


108 #unde‡
UNIV_INLINE


109 
	#UNIV_INLINE
 
UNIV_INLINE_ORIGINAL


	)

	@buf0buf.h

33 #i‚de‡
buf0buf_h


34 
	#buf0buf_h


	)

36 
	~"buf0dblwr.h
"

37 
	~"buf0ty≥s.h
"

38 
	~"fû0fû.h
"

39 
	~"hash0hash.h
"

40 
	~"log0log.h
"

41 
	~"må0ty≥s.h
"

42 
	~"os0¥oc.h
"

43 
	~"∑ge0ty≥s.h
"

44 
	~"§v0shutdown.h
"

45 
	~"§v0§v.h
"

46 
	~"univ.i
"

47 
	~"ut0byã.h
"

48 
	~"ut0rbt.h
"

50 
	~"buf/buf.h
"

52 
	~<o°ªam
>

55 
	gfû_addr_t
;

59 ˛as†
	cPage_„tch
 {

61 
	mNORMAL
,

66 
	mSCAN
,

69 
	mIF_IN_POOL
,

72 
	mPEEK_IF_IN_POOL
,

77 
	mNO_LATCH
,

81 
	mIF_IN_POOL_OR_WATCH
,

85 
	mPOSSIBLY_FREED


92 ˛as†
	cCache_höt
 {

95 
	mMAKE_YOUNG
 = 51,

98 
	mKEEP_OLD
 = 52

104 
c⁄°ex¥
 
ulöt
 
	gMAX_BUFFER_POOLS_BITS
 = 6;

107 
c⁄°ex¥
 
ulöt
 
	gMAX_BUFFER_POOLS
 = (1 << 
MAX_BUFFER_POOLS_BITS
);

110 
	#BUF_POOL_WATCH_SIZE
 (
§v_n_purge_thªads
 + 1)

	)

113 
c⁄°ex¥
 
ulöt
 
	gMAX_PAGE_HASH_LOCKS
 = 1024;

116 
buf_poﬁ_t
 *
buf_poﬁ_±r
;

118 #ifde‡
UNIV_HOTBACKUP


120 
buf_block_t
 *
back_block1
;

122 
buf_block_t
 *
back_block2
;

129 
	gbuf_∑ge_°©e
 : 
uöt8_t
 {

131 
BUF_BLOCK_POOL_WATCH
,

133 
	gBUF_BLOCK_ZIP_PAGE
,

135 
	gBUF_BLOCK_ZIP_DIRTY
,

139 
	gBUF_BLOCK_NOT_USED
,

142 
	gBUF_BLOCK_READY_FOR_USE
,

145 
	gBUF_BLOCK_FILE_PAGE
,

148 
	gBUF_BLOCK_MEMORY
,

151 
	gBUF_BLOCK_REMOVE_HASH


156 
	sbuf_poﬁ_öfo_t
 {

158 
ulöt
 
	mpoﬁ_unique_id
;

159 
ulöt
 
	mpoﬁ_size
;

160 
ulöt
 
	mÃu_Àn
;

161 
ulöt
 
	mﬁd_Ãu_Àn
;

162 
ulöt
 
	m‰ì_li°_Àn
;

163 
ulöt
 
	mÊush_li°_Àn
;

164 
ulöt
 
	mn_≥nd_unzù
;

166 
ulöt
 
	mn_≥nd_ªads
;

168 
ulöt
 
	mn_≥ndög_Êush_Ãu
;

169 
ulöt
 
	mn_≥ndög_Êush_sögÀ_∑ge
;

173 
ulöt
 
	mn_≥ndög_Êush_li°
;

175 
ulöt
 
	mn_∑ges_made_young
;

176 
ulöt
 
	mn_∑ges_nŸ_made_young
;

177 
ulöt
 
	mn_∑ges_ªad
;

178 
ulöt
 
	mn_∑ges_¸óãd
;

179 
ulöt
 
	mn_∑ges_wrôãn
;

180 
ulöt
 
	mn_∑ge_gës
;

181 
ulöt
 
	mn_ø_∑ges_ªad_∫d
;

183 
ulöt
 
	mn_ø_∑ges_ªad
;

185 
ulöt
 
	mn_ø_∑ges_evi˘ed
;

188 
ulöt
 
	mn_∑ge_gë_dñè
;

192 
	m∑ge_made_young_øã
;

194 
	m∑ge_nŸ_made_young_øã
;

196 
	m∑ges_ªad_øã
;

197 
	m∑ges_¸óãd_øã
;

198 
	m∑ges_wrôãn_øã
;

199 
ulöt
 
	m∑ge_ªad_dñè
;

201 
ulöt
 
	myoung_makög_dñè
;

203 
ulöt
 
	mnŸ_young_makög_dñè
;

207 
	m∑ges_ªadahód_∫d_øã
;

209 
	m∑ges_ªadahód_øã
;

211 
	m∑ges_evi˘ed_øã
;

215 
ulöt
 
	munzù_Ãu_Àn
;

218 
ulöt
 
	mio_sum
;

219 
ulöt
 
	mio_cur
;

221 
ulöt
 
	munzù_sum
;

222 
ulöt
 
	munzù_cur
;

228 
	sbuf_poﬁs_li°_size_t
 {

229 
ulöt
 
	mLRU_byãs
;

230 
ulöt
 
	munzù_LRU_byãs
;

231 
ulöt
 
	mÊush_li°_byãs
;

234 #i‚de‡
UNIV_HOTBACKUP


239 
dbîr_t
 
buf_poﬁ_öô
(
ulöt
 
tŸÆ_size
, ulöà
n_ö°™˚s
);

243 
buf_poﬁ_‰ì_Æl
();

250 
boﬁ
 
buf_block_wûl_wôhdøwn
(
buf_poﬁ_t
 *
buf_poﬁ
, c⁄° 
buf_block_t
 *
block
);

257 
boﬁ
 
buf_‰ame_wûl_wôhdøwn
(
buf_poﬁ_t
 *
buf_poﬁ
, c⁄° 
byã
 *
±r
);

261 
buf_ªsize_thªad
();

267 
buf_poﬁ_upd©e_madvi£
();

270 
buf_poﬁ_˛ór_hash_ödex
();

274 
UNIV_INLINE


275 
ulöt
 
buf_poﬁ_gë_cuº_size
();

278 
UNIV_INLINE


279 
ulöt
 
buf_poﬁ_gë_n_∑ges
();

298 
l¢_t
 
buf_poﬁ_gë_ﬁde°_modifiˇti⁄_≠¥ox
();

328 
l¢_t
 
buf_poﬁ_gë_ﬁde°_modifiˇti⁄_lwm
();

330 #i‚de‡
UNIV_HOTBACKUP


334 
UNIV_INLINE


335 
buf_∑ge_t
 *
	$buf_∑ge_Æloc_des¸ùt‹
(Ë
	`MY_ATTRIBUTE
((
mÆloc
));

339 
	`buf_∑ge_‰ì_des¸ùt‹
(
buf_∑ge_t
 *
b∑ge
);

343 
buf_block_t
 *
	`buf_block_Æloc
(

344 
buf_poﬁ_t
 *
buf_poﬁ
);

348 
UNIV_INLINE


349 
	`buf_block_‰ì
(
buf_block_t
 *
block
);

356 
UNIV_INLINE


357 
byã
 *
	`buf_‰ame_c›y
(byã *
buf
, c⁄° 
buf_‰ame_t
 *
‰ame
);

359 #i‚de‡
UNIV_HOTBACKUP


363 
	#buf_∑ge_gë
(
ID
, 
SIZE
, 
LA
, 
MTR
) \

364 
	`buf_∑ge_gë_gí
(
ID
, 
SIZE
, 
LA
, 
NULL
, 
Page_„tch
::
NORMAL
, 
__FILE__
, 
__LINE__
, \

365 
MTR
)

	)

371 
	#buf_∑ge_gë_wôh_no_œtch
(
ID
, 
SIZE
, 
MTR
) \

372 
	`buf_∑ge_gë_gí
(
ID
, 
SIZE
, 
RW_NO_LATCH
, 
NULL
, 
Page_„tch
::
NO_LATCH
, \

373 
__FILE__
, 
__LINE__
, 
MTR
)

	)

385 
boﬁ
 
	`buf_∑ge_›timi°ic_gë
(
ulöt
 
rw_œtch
, 
buf_block_t
 *
block
,

386 
uöt64_t
 
modify_˛ock
, 
Page_„tch
 
„tch_mode
,

387 c⁄° *
fûe
, 
ulöt
 
löe
, 
må_t
 *
må
);

398 
boﬁ
 
	`buf_∑ge_gë_known_nowaô
(
ulöt
 
rw_œtch
, 
buf_block_t
 *
block
,

399 
Cache_höt
 
höt
, c⁄° *
fûe
, 
ulöt
 
löe
,

400 
må_t
 *
må
);

410 c⁄° 
buf_block_t
 *
	`buf_∑ge_åy_gë_func
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

411 c⁄° *
fûe
, 
ulöt
 
löe
,

412 
må_t
 *
må
);

420 
	#buf_∑ge_åy_gë
(
∑ge_id
, 
må
) \

421 
	`buf_∑ge_åy_gë_func
((
∑ge_id
), 
__FILE__
, 
__LINE__
, 
må
);

	)

433 
buf_∑ge_t
 *
	`buf_∑ge_gë_zù
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

434 c⁄° 
∑ge_size_t
 &
∑ge_size
);

448 
buf_block_t
 *
	`buf_∑ge_gë_gí
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

449 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
ulöt
 
rw_œtch
,

450 
buf_block_t
 *
guess
, 
Page_„tch
 
mode
,

451 c⁄° *
fûe
, 
ulöt
 
löe
, 
må_t
 *
må
,

452 
boﬁ
 
dúty_wôh_no_œtch
 = 
Ál£
);

463 
buf_block_t
 *
	`buf_∑ge_¸óã
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

464 c⁄° 
∑ge_size_t
 &
∑ge_size
,

465 
rw_lock_ty≥_t
 
rw_œtch
, 
må_t
 *
må
);

473 
	`meb_∑ge_öô
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

474 
buf_block_t
 *
block
);

477 #i‚de‡
UNIV_HOTBACKUP


479 
UNIV_INLINE


480 
	`buf_∑ge_ªÀa£_zù
(
buf_∑ge_t
 *
b∑ge
);

485 
UNIV_INLINE


486 
	`buf_∑ge_ªÀa£_œtch
(
buf_block_t
 *
block
, 
ulöt
 
rw_œtch
);

492 
	`buf_∑ge_make_young
(
buf_∑ge_t
 *
b∑ge
);

497 
	`buf_∑ge_make_ﬁd
(
buf_∑ge_t
 *
b∑ge
);

504 
UNIV_INLINE


505 
iboﬁ
 
	`buf_∑ge_≥ek
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

507 #ifde‡
UNIV_DEBUG


515 
buf_∑ge_t
 *
	`buf_∑ge_£t_fûe_∑ge_was_‰ìd
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

523 
buf_∑ge_t
 *
	`buf_∑ge_ª£t_fûe_∑ge_was_‰ìd
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

528 
UNIV_INLINE


529 
ulöt
 
	$buf_∑ge_gë_‰ìd_∑ge_˛ock
(c⁄° 
buf_∑ge_t
 *
b∑ge
)

530 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

533 
UNIV_INLINE


534 
ulöt
 
	$buf_block_gë_‰ìd_∑ge_˛ock
(c⁄° 
buf_block_t
 *
block
)

535 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

543 
UNIV_INLINE


544 
iboﬁ
 
	`buf_∑ge_≥ek_if_young
(c⁄° 
buf_∑ge_t
 *
b∑ge
);

551 
UNIV_INLINE


552 
iboﬁ
 
	`buf_∑ge_≥ek_if_too_ﬁd
(c⁄° 
buf_∑ge_t
 *
b∑ge
);

557 
UNIV_INLINE


558 
l¢_t
 
	`buf_∑ge_gë_√we°_modifiˇti⁄
(

559 c⁄° 
buf_∑ge_t
 *
b∑ge
);

568 
UNIV_INLINE


569 
	`buf_block_modify_˛ock_öc
(
buf_block_t
 *
block
);

574 
UNIV_INLINE


575 
uöt64_t
 
	`buf_block_gë_modify_˛ock
(c⁄° 
buf_block_t
 *
block
);

578 #ifde‡
UNIV_DEBUG


585 
UNIV_INLINE


586 
	`buf_block_buf_fix_öc_func
(

587 #ifde‡
UNIV_DEBUG


588 c⁄° *
fûe
, 
ulöt
 
löe
,

590 
buf_block_t
 *
block
);

595 
UNIV_INLINE


596 
ulöt
 
	`buf_block_fix
(
buf_∑ge_t
 *
b∑ge
);

601 
UNIV_INLINE


602 
ulöt
 
	`buf_block_fix
(
buf_block_t
 *
block
);

607 
UNIV_INLINE


608 
ulöt
 
	`buf_block_unfix
(
buf_∑ge_t
 *
b∑ge
);

613 
UNIV_INLINE


614 
ulöt
 
	`buf_block_unfix
(
buf_block_t
 *
block
);

616 #i‚de‡
UNIV_HOTBACKUP


620 
	`buf_ªad_∑ge_h™dÀ_îr‹
(
buf_∑ge_t
 *
b∑ge
);

622 #ifde‡
UNIV_DEBUG


627 
	#buf_block_buf_fix_öc
(
b
, 
f
, 
l
Ë
	`buf_block_buf_fix_öc_func
(f,Ü, b)

	)

633 
	#buf_block_buf_fix_öc
(
b
, 
f
, 
l
Ë
	`buf_block_buf_fix_öc_func
(b)

	)

636 
	#buf_block_modify_˛ock_öc
(
block
Ë(()0)

	)

639 #i‚de‡
UNIV_HOTBACKUP


646 
UNIV_INLINE


647 
	`buf_±r_gë_f•_addr
(c⁄° *
±r
, 
•a˚_id_t
 *
•a˚
, 
fû_addr_t
 *
addr
);

652 
UNIV_INLINE


653 
ulöt
 
	$buf_block_gë_lock_hash_vÆ
(c⁄° 
buf_block_t
 *
block
)

654 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

655 #ifde‡
UNIV_DEBUG


662 
buf_block_t
 *
	`buf_poﬁ_c⁄èös_zù
(
buf_poﬁ_t
 *
buf_poﬁ
, c⁄° *
d©a
);

667 
UNIV_INLINE


668 
buf_‰ame_t
 *
	`buf_‰ame_Æign
(

670 
byã
 *
±r
);

672 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_BUF_DEBUG


675 
iboﬁ
 
	`buf_vÆid©e
();

677 #i‡
deföed
 
UNIV_DEBUG_PRINT
 || deföed 
UNIV_DEBUG
 || deföed 
UNIV_BUF_DEBUG


679 
	`buf_¥öt
();

682 
	ebuf_∑ge_¥öt_Êags
 {

684 
BUF_PAGE_PRINT_NO_CRASH
 = 1,

686 
BUF_PAGE_PRINT_NO_FULL
 = 2

694 
	`buf_∑ge_¥öt
(c⁄° 
byã
 *
ªad_buf
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

695 
ulöt
 
Êags
);

699 
iboﬁ
 
	`buf_zù_decom¥ess
(
buf_block_t
 *
block
,

700 
iboﬁ
 
check
);

701 #i‚de‡
UNIV_HOTBACKUP


702 #ifde‡
UNIV_DEBUG


705 
ulöt
 
	`buf_gë_œtched_∑ges_numbî
();

709 
ulöt
 
	`buf_gë_n_≥ndög_ªad_ios
();

711 
	`buf_¥öt_io
(
FILE
 *
fûe
);

715 
	`buf_°©s_gë_poﬁ_öfo
(

716 
buf_poﬁ_t
 *
buf_poﬁ
,

717 
ulöt
 
poﬁ_id
,

718 
buf_poﬁ_öfo_t
 *
Æl_poﬁ_öfo
);

723 
	`buf_gë_modifõd_øtio_p˘
();

725 
	`buf_ª‰esh_io_°©s_Æl
();

728 
	`buf_mu°_be_Æl_‰ìd
();

733 
ulöt
 
	`buf_poﬁ_check_no_≥ndög_io
();

738 
	`buf_poﬁ_övÆid©e
();

745 #ifde‡
UNIV_DEBUG


751 
UNIV_INLINE


752 
	`buf_block_dbg_add_Àvñ
(
buf_block_t
 *
block
, 
œtch_Àvñ_t
 
Àvñ
);

754 
	#buf_block_dbg_add_Àvñ
(
block
, 
Àvñ
Ë

	)

759 
UNIV_INLINE


760 
buf_∑ge_°©e
 
	`buf_∑ge_gë_°©e
(

761 c⁄° 
buf_∑ge_t
 *
b∑ge
);

764 
UNIV_INLINE


765 
buf_∑ge_°©e
 
	$buf_block_gë_°©e
(

766 c⁄° 
buf_block_t
 *
block
)

767 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

772 
UNIV_INLINE


773 
	`buf_∑ge_£t_°©e
(
buf_∑ge_t
 *
b∑ge
, 
buf_∑ge_°©e
 
°©e
);

778 
UNIV_INLINE


779 
	`buf_block_£t_°©e
(
buf_block_t
 *
block
, 
buf_∑ge_°©e
 
°©e
);

783 
UNIV_INLINE


784 
iboﬁ
 
	$buf_∑ge_ö_fûe
(

785 c⁄° 
buf_∑ge_t
 *
b∑ge
)

786 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

787 #i‚de‡
UNIV_HOTBACKUP


790 
UNIV_INLINE


791 
boﬁ
 
	$buf_∑ge_bñ⁄gs_to_unzù_LRU
(

792 c⁄° 
buf_∑ge_t
 *
b∑ge
)

793 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

797 
UNIV_INLINE


798 
BPageMuãx
 *
	$buf_∑ge_gë_muãx
(

799 c⁄° 
buf_∑ge_t
 *
b∑ge
)

800 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

804 
UNIV_INLINE


805 
buf_Êush_t
 
	$buf_∑ge_gë_Êush_ty≥
(

806 c⁄° 
buf_∑ge_t
 *
b∑ge
)

807 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

812 
UNIV_INLINE


813 
	`buf_∑ge_£t_Êush_ty≥
(
buf_∑ge_t
 *
b∑ge
, 
buf_Êush_t
 
Êush_ty≥
);

818 
UNIV_INLINE


819 
	`buf_block_£t_fûe_∑ge
(
buf_block_t
 *
block
, c⁄° 
∑ge_id_t
 &
∑ge_id
);

823 
UNIV_INLINE


824 
buf_io_fix
 
	$buf_∑ge_gë_io_fix
(

825 c⁄° 
buf_∑ge_t
 *
b∑ge
)

826 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

829 
UNIV_INLINE


830 
buf_io_fix
 
	$buf_block_gë_io_fix
(

831 c⁄° 
buf_block_t
 *
block
)

832 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

837 
UNIV_INLINE


838 
	`buf_∑ge_£t_io_fix
(
buf_∑ge_t
 *
b∑ge
, 
buf_io_fix
 
io_fix
);

843 
UNIV_INLINE


844 
	`buf_block_£t_io_fix
(
buf_block_t
 *
block
, 
buf_io_fix
 
io_fix
);

855 
UNIV_INLINE


856 
	`buf_∑ge_£t_°icky
(
buf_∑ge_t
 *
b∑ge
);

859 
UNIV_INLINE


860 
	`buf_∑ge_un£t_°icky
(
buf_∑ge_t
 *
b∑ge
);

863 
UNIV_INLINE


864 
iboﬁ
 
	$buf_∑ge_ˇn_ªloˇã
(

865 c⁄° 
buf_∑ge_t
 *
b∑ge
)

866 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

871 
UNIV_INLINE


872 
iboﬁ
 
	$buf_∑ge_is_ﬁd
(c⁄° 
buf_∑ge_t
 *
b∑ge
)

873 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

878 
UNIV_INLINE


879 
	`buf_∑ge_£t_ﬁd
(
buf_∑ge_t
 *
b∑ge
, 
iboﬁ
 
ﬁd
);

884 
UNIV_INLINE


885 
	$buf_∑ge_is_ac˚s£d
(c⁄° 
buf_∑ge_t
 *
b∑ge
)

886 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

888 
UNIV_INLINE


889 
	`buf_∑ge_£t_ac˚s£d
(
buf_∑ge_t
 *
b∑ge
);

898 
UNIV_INLINE


899 
buf_block_t
 *
	$buf_∑ge_gë_block
(
buf_∑ge_t
 *
b∑ge
)

900 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

901 #ifde‡
UNIV_DEBUG


904 
UNIV_INLINE


905 
buf_‰ame_t
 *
	$buf_block_gë_‰ame
(

906 c⁄° 
buf_block_t
 *
block
)

907 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

909 
	#buf_block_gë_‰ame
(
block
Ë(block)->
‰ame


	)

912 
	#buf_block_gë_‰ame
(
block
Ë(block)->
‰ame


	)

916 
	#buf_block_gë_∑ge_zù
(
block
) \

917 ((
block
)->
∑ge
.
zù
.
d©a
 ? &(block)->∑ge.zù : 
NULL
)

	)

923 
buf_block_t
 *
	`buf_block_‰om_ahi
(c⁄° 
byã
 *
±r
);

938 
boﬁ
 
	`buf_is_block_ö_ö°™˚
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
,

939 c⁄° 
buf_block_t
 *
±r
);

941 #i‚de‡
UNIV_HOTBACKUP


957 
buf_∑ge_t
 *
	`buf_∑ge_öô_f‹_ªad
(
dbîr_t
 *
îr
, 
ulöt
 
mode
,

958 c⁄° 
∑ge_id_t
 &
∑ge_id
,

959 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
iboﬁ
 
unzù
);

966 
boﬁ
 
	`buf_∑ge_io_com∂ëe
(
buf_∑ge_t
 *
b∑ge
, boﬁ 
evi˘
);

973 
boﬁ
 
	$buf_∑ge_‰ì_°Æe
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_∑ge_t
 *
b∑ge
Ë
n€x˚±
;

985 
boﬁ
 
	$buf_∑ge_‰ì_°Æe
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_∑ge_t
 *
b∑ge
,

986 
rw_lock_t
 *
hash_lock
Ë
n€x˚±
;

992 
	$buf_∑ge_‰ì_°Æe_durög_wrôe
(
buf_∑ge_t
 *
b∑ge
,

993 
boﬁ
 
owns_sx_lock
 = 
Ál£
Ë
n€x˚±
;

997 
UNIV_INLINE


998 
ulöt
 
	$buf_poﬁ_ödex
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
)

999 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1002 
UNIV_INLINE


1003 
buf_poﬁ_t
 *
	`buf_poﬁ_‰om_b∑ge
(

1004 c⁄° 
buf_∑ge_t
 *
b∑ge
);

1007 
UNIV_INLINE


1008 
buf_poﬁ_t
 *
	`buf_poﬁ_‰om_block
(c⁄° 
buf_block_t
 *
block
);

1013 
UNIV_INLINE


1014 
buf_poﬁ_t
 *
	`buf_poﬁ_gë
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

1018 
UNIV_INLINE


1019 
buf_poﬁ_t
 *
	`buf_poﬁ_‰om_¨øy
(
ulöt
 
ödex
);

1026 
UNIV_INLINE


1027 
buf_∑ge_t
 *
	`buf_∑ge_hash_gë_low
(
buf_poﬁ_t
 *
buf_poﬁ
,

1028 c⁄° 
∑ge_id_t
 &
∑ge_id
);

1046 
UNIV_INLINE


1047 
buf_∑ge_t
 *
	`buf_∑ge_hash_gë_locked
(
buf_poﬁ_t
 *
buf_poﬁ
,

1048 c⁄° 
∑ge_id_t
 &
∑ge_id
, 
rw_lock_t
 **
lock
,

1049 
ulöt
 
lock_mode
, 
boﬁ
 
w©ch
 = 
Ál£
);

1065 
UNIV_INLINE


1066 
buf_block_t
 *
	`buf_block_hash_gë_locked
(
buf_poﬁ_t
 *
buf_poﬁ
,

1067 c⁄° 
∑ge_id_t
 &
∑ge_id
,

1068 
rw_lock_t
 **
lock
, 
ulöt
 
lock_mode
);

1077 
	#buf_∑ge_hash_gë_s_locked
(
b
, 
∑ge_id
, 
l
) \

1078 
	`buf_∑ge_hash_gë_locked
(
b
, 
∑ge_id
, 
l
, 
RW_LOCK_S
)

	)

1079 
	#buf_∑ge_hash_gë_x_locked
(
b
, 
∑ge_id
, 
l
) \

1080 
	`buf_∑ge_hash_gë_locked
(
b
, 
∑ge_id
, 
l
, 
RW_LOCK_X
)

	)

1081 
	#buf_∑ge_hash_gë
(
b
, 
∑ge_id
) \

1082 
	`buf_∑ge_hash_gë_locked
(
b
, 
∑ge_id
, 
NULL
, 0)

	)

1083 
	#buf_∑ge_gë_Æso_w©ch
(
b
, 
∑ge_id
) \

1084 
	`buf_∑ge_hash_gë_locked
(
b
, 
∑ge_id
, 
NULL
, 0, 
åue
)

	)

1086 
	#buf_block_hash_gë_s_locked
(
b
, 
∑ge_id
, 
l
) \

1087 
	`buf_block_hash_gë_locked
(
b
, 
∑ge_id
, 
l
, 
RW_LOCK_S
)

	)

1088 
	#buf_block_hash_gë_x_locked
(
b
, 
∑ge_id
, 
l
) \

1089 
	`buf_block_hash_gë_locked
(
b
, 
∑ge_id
, 
l
, 
RW_LOCK_X
)

	)

1090 
	#buf_block_hash_gë
(
b
, 
∑ge_id
) \

1091 
	`buf_block_hash_gë_locked
(
b
, 
∑ge_id
, 
NULL
, 0)

	)

1095 
ulöt
 
	`buf_gë_‰ì_li°_Àn
();

1099 
iboﬁ
 
	$buf_poﬁ_w©ch_is_£¡öñ
(

1100 c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
,

1101 c⁄° 
buf_∑ge_t
 *
b∑ge
)

1102 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1107 
	`buf_poﬁ_w©ch_un£t
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

1114 
iboﬁ
 
	$buf_poﬁ_w©ch_occuºed
(c⁄° 
∑ge_id_t
 &
∑ge_id
)

1115 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1121 
	`buf_gë_tŸÆ_li°_Àn
(
ulöt
 *
LRU_Àn
, ulöà*
‰ì_Àn
,

1122 
ulöt
 *
Êush_li°_Àn
);

1125 
	`buf_gë_tŸÆ_li°_size_ö_byãs
(

1126 
buf_poﬁs_li°_size_t
 *
buf_poﬁs_li°_size
);

1129 
	`buf_gë_tŸÆ_°©
(

1130 
buf_poﬁ_°©_t
 *
tŸ_°©
);

1137 
UNIV_INLINE


1138 
buf_block_t
 *
	`buf_gë_¡h_chunk_block
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
, 
ulöt
 
n
,

1139 
ulöt
 *
chunk_size
);

1145 
UNIV_INLINE


1146 
ulöt
 
	`buf_poﬁ_size_Æign
(ulöà
size
);

1151 
ul⁄gl⁄g
 
	`buf_poﬁ_adju°_chunk_unô
(ul⁄gl⁄g 
size
);

1159 
	`buf_Êush_upd©e_zù_checksum
(
buf_‰ame_t
 *
∑ge
, 
ulöt
 
size
, 
l¢_t
 
l¢
,

1160 
boﬁ
 
skù_l¢_check
);

1169 
UNIV_INLINE


1170 
ulöt
 
	`buf_gë_wôhdøw_dïth
(
buf_poﬁ_t
 *
buf_poﬁ
);

1177 
UNIV_INLINE


1178 
buf_io_fix
 
	$buf_block_gë_io_fix_u∆ocked
(c⁄° 
buf_block_t
 *
block
)

1179 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1186 
UNIV_INLINE


1187 
buf_io_fix
 
	$buf_∑ge_gë_io_fix_u∆ocked
(c⁄° 
buf_∑ge_t
 *
b∑ge
)

1188 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1194 
	#BUF_PAGE_STATE_BITS
 3

	)

1196 
˛ass
 
buf_fix_cou¡_©omic_t
 : 
public
 
°d
::
©omic
<
uöt32_t
> {

1197 
public
:

1198 
	`buf_fix_cou¡_©omic_t
(c⁄° 
buf_fix_cou¡_©omic_t
 &
Ÿhî
)

1199 : 
°d
::
©omic
<
uöt32_t
>(
Ÿhî
.
	`lﬂd
()) {}

1200 
	}
};

1202 ˛as†
	cbuf_∑ge_t
 {

1203 
	mpublic
:

1206 
	$buf_∑ge_t
(c⁄° 
buf_∑ge_t
 &
Ÿhî
)

1207 : 
	`id
(
Ÿhî
.
id
),

1208 
	`size
(
Ÿhî
.
size
),

1209 
	`buf_fix_cou¡
(
Ÿhî
.
buf_fix_cou¡
),

1210 
	`io_fix
(
Ÿhî
.
io_fix
),

1211 
	`°©e
(
Ÿhî
.
°©e
),

1212 
	`Êush_ty≥
(
Ÿhî
.
Êush_ty≥
),

1213 
	`buf_poﬁ_ödex
(
Ÿhî
.
buf_poﬁ_ödex
),

1214 #i‚de‡
UNIV_HOTBACKUP


1215 
	`hash
(
Ÿhî
.
hash
),

1217 
	`li°
(
Ÿhî
.
li°
),

1218 
	`√we°_modifiˇti⁄
(
Ÿhî
.
√we°_modifiˇti⁄
),

1219 
	`ﬁde°_modifiˇti⁄
(
Ÿhî
.
ﬁde°_modifiˇti⁄
),

1220 
	`LRU
(
Ÿhî
.
LRU
),

1221 
	$zù
(
Ÿhî
.
zù
)

1222 #i‚de‡
UNIV_HOTBACKUP


1224 
	`m_Êush_ob£rvî
(
Ÿhî
.
m_Êush_ob£rvî
),

1225 
	`m_•a˚
(
Ÿhî
.
m_•a˚
),

1226 
	`‰ìd_∑ge_˛ock
(
Ÿhî
.
‰ìd_∑ge_˛ock
),

1227 
	`ac˚ss_time
(
Ÿhî
.
ac˚ss_time
),

1228 
	`m_vîsi⁄
(
Ÿhî
.
m_vîsi⁄
),

1229 
	`m_dblwr_id
(
Ÿhî
.
m_dblwr_id
),

1230 
	$ﬁd
(
Ÿhî
.
ﬁd
)

1231 #ifde‡
UNIV_DEBUG


1233 
	`fûe_∑ge_was_‰ìd
(
Ÿhî
.
fûe_∑ge_was_‰ìd
),

1234 
	`ö_Êush_li°
(
Ÿhî
.
ö_Êush_li°
),

1235 
	`ö_‰ì_li°
(
Ÿhî
.
ö_‰ì_li°
),

1236 
	`ö_LRU_li°
(
Ÿhî
.
ö_LRU_li°
),

1237 
	`ö_∑ge_hash
(
Ÿhî
.
ö_∑ge_hash
),

1238 
	$ö_zù_hash
(
Ÿhî
.
ö_zù_hash
)

1242 #i‚de‡
UNIV_HOTBACKUP


1243 
m_•a˚
->
	`öc_ªf
();

1247 #i‚de‡
UNIV_HOTBACKUP


1250 
	$£t_dblwr_b©ch_id
(
uöt16_t
 
b©ch_id
Ë{ 
m_dblwr_id
 = b©ch_id; 
	}
}

1253 
uöt16_t
 
	$gë_dblwr_b©ch_id
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

1254  (
m_dblwr_id
);

1255 
	}
}

1259 
•a˚_id_t
 
	$•a˚
(Ëc⁄° 
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

1260  
id
.
	`•a˚
();

1261 
	}
}

1265 
∑ge_no_t
 
	$∑ge_no
(Ëc⁄° 
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

1266  
id
.
	`∑ge_no
();

1267 
	}
}

1274 
ölöe
 
boﬁ
 
	$is_°Æe
() const {

1275 
	`ut_a
(
m_•a˚
 !
nuŒ±r
);

1276 
	`ut_a
(
id
.
	`•a˚
(Ë=
m_•a˚
->id);

1277 
	`ut_a
(
m_vîsi⁄
 <
m_•a˚
->
	`gë_cuºít_vîsi⁄
());

1278 i‡(
m_vîsi⁄
 =
m_•a˚
->
	`gë_cuºít_vîsi⁄
()) {

1279 
	`ut_a
(!
m_•a˚
->
	`is_dñëed
());

1280  
Ál£
;

1282  
åue
;

1284 
	}
}

1291 
ölöe
 
boﬁ
 
	$was_°Æe
() const {

1292 
	`ut_a
(
m_•a˚
 !
nuŒ±r
);

1293 
	`ut_a
(
id
.
	`•a˚
(Ë=
m_•a˚
->id);

1298 
boﬁ
 
was_nŸ_dñëed
 = 
m_•a˚
->
	`was_nŸ_dñëed
();

1299 i‡(
m_vîsi⁄
 =
m_•a˚
->
	`gë_ª˚¡_vîsi⁄
()) {

1300 
	`ut_a
(
was_nŸ_dñëed
);

1301  
Ál£
;

1303  
åue
;

1305 
	}
}

1313 
ölöe
 
fû_•a˚_t
 *
	$gë_•a˚
(Ëc⁄° {  
m_•a˚
; 
	}
}

1318 
ölöe
 
	$ª£t_∑ge_id
(
∑ge_id_t
 
√w_∑ge_id
) {

1319 i‡(
m_•a˚
 !
nuŒ±r
) {

1324 i‡(
§v_shutdown_°©e
.
	`lﬂd
(Ë!
SRV_SHUTDOWN_EXIT_THREADS
) {

1325 
m_•a˚
->
	`dec_ªf
();

1328 
id
 = 
√w_∑ge_id
;

1329 
	`•a˚_id_ch™ged
();

1330 
	}
}

1334 
ölöe
 
	$ª£t_∑ge_id
() {

1335 
	`ª£t_∑ge_id
(
	`∑ge_id_t
(
UINT32_UNDEFINED
, UINT32_UNDEFINED));

1336 
	}
}

1338 
	g¥iv©e
:

1341 
ölöe
 
	$•a˚_id_ch™ged
() {

1342 
m_•a˚
 = 
nuŒ±r
;

1343 
m_vîsi⁄
 = 0;

1344 i‡(
id
.
	`•a˚
(Ë!
UINT32_UNDEFINED
) {

1345 
m_•a˚
 = 
	`fû_•a˚_gë
(
id
.
	`•a˚
());

1346 i‡(
m_•a˚
) {

1347 
m_•a˚
->
	`öc_ªf
();

1350 
m_vîsi⁄
 = 
m_•a˚
->
	`gë_ª˚¡_vîsi⁄
();

1353 
	}
}

1355 
	gpublic
:

1357 
FlushOb£rvî
 *
	$gë_Êush_ob£rvî
(Ë
n€x˚±
 {  
m_Êush_ob£rvî
; 
	}
}

1361 
	$£t_Êush_ob£rvî
(
FlushOb£rvî
 *
Êush_ob£rvî
Ë
n€x˚±
 {

1364 
	`ut_a
(
m_Êush_ob£rvî
 =
nuŒ±r
 || m_Êush_ob£rvî =
Êush_ob£rvî
);

1365 
m_Êush_ob£rvî
 = 
Êush_ob£rvî
;

1366 
	}
}

1369 
	$ª£t_Êush_ob£rvî
(Ë
n€x˚±
 { 
m_Êush_ob£rvî
 = 
nuŒ±r
; 
	}
}

1373 
l¢_t
 
	$gë_√we°_l¢
(Ëc⁄° 
n€x˚±
 {  
√we°_modifiˇti⁄
; 
	}
}

1377 
l¢_t
 
	$gë_ﬁde°_l¢
(Ëc⁄° 
n€x˚±
 {  
ﬁde°_modifiˇti⁄
; 
	}
}

1380 
boﬁ
 
	$is_dúty
(Ëc⁄° 
n€x˚±
 {  
	`gë_ﬁde°_l¢
(Ë> 0; 
	}
}

1384 
	$£t_√we°_l¢
(
l¢_t
 
l¢
Ë
n€x˚±
 { 
√we°_modifiˇti⁄
 =Ü¢; 
	}
}

1388 
	$£t_ﬁde°_l¢
(
l¢_t
 
l¢
Ë
n€x˚±
;

1391 
	$£t_˛ón
(Ë
n€x˚±
 { 
	`£t_ﬁde°_l¢
(0); 
	}
}

1401 
∑ge_id_t
 
	gid
;

1404 
∑ge_size_t
 
	gsize
;

1407 
buf_fix_cou¡_©omic_t
 
	gbuf_fix_cou¡
;

1410 
buf_io_fix
 
	gio_fix
;

1413 
buf_∑ge_°©e
 
	g°©e
;

1417 
buf_Êush_t
 
	gÊush_ty≥
;

1420 
uöt8_t
 
	gbuf_poﬁ_ödex
;

1422 
°©ic_as£π
(
MAX_BUFFER_POOLS
 <= 64,

1426 #i‚de‡
UNIV_HOTBACKUP


1428 
buf_∑ge_t
 *
	ghash
;

1451 
	$UT_LIST_NODE_T
(
buf_∑ge_t
Ë
li°
;

1453 
¥iv©e
:

1456 
l¢_t
 
√we°_modifiˇti⁄
;

1460 
l¢_t
 
ﬁde°_modifiˇti⁄
;

1462 
public
:

1476 
	$UT_LIST_NODE_T
(
buf_∑ge_t
Ë
LRU
;

1481 
∑ge_zù_des_t
 
zù
;

1483 #i‚de‡
UNIV_HOTBACKUP


1485 
FlushOb£rvî
 *
m_Êush_ob£rvî
{
	}
};

1488 
fû_•a˚_t
 *
	gm_•a˚
{};

1493 
uöt32_t
 
	g‰ìd_∑ge_˛ock
;

1498 
uöt32_t
 
	gac˚ss_time
;

1502 
uöt32_t
 
	gm_vîsi⁄
{};

1506 
uöt16_t
 
	gm_dblwr_id
{};

1509 
boﬁ
 
	gﬁd
;

1511 #ifde‡
UNIV_DEBUG


1514 
boﬁ
 
	gfûe_∑ge_was_‰ìd
;

1523 
boﬁ
 
	gö_Êush_li°
;

1527 
boﬁ
 
	gö_‰ì_li°
;

1530 
boﬁ
 
	gö_LRU_li°
;

1533 
boﬁ
 
	gö_∑ge_hash
;

1536 
boﬁ
 
	gö_zù_hash
;

1544 
	sbuf_block_t
 {

1550 
buf_∑ge_t
 
	m∑ge
;

1552 #i‚de‡
UNIV_HOTBACKUP


1554 
BPageLock
 
	mlock
;

1560 
byã
 *
	m‰ame
;

1565 
UT_LIST_NODE_T
(
buf_block_t
Ë
	munzù_LRU
;

1566 #ifde‡
UNIV_DEBUG


1569 
boﬁ
 
	mö_unzù_LRU_li°
;

1571 
boﬁ
 
	mö_wôhdøw_li°
;

1577 
uöt32_t
 
	mlock_hash_vÆ
;

1585 
uöt32_t
 
	mn_hash_hñps
;

1589 vﬁ©ûê
uöt32_t
 
	mn_byãs
;

1592 vﬁ©ûê
uöt32_t
 
	mn_fõlds
;

1596 vﬁ©ûê
boﬁ
 
	mÀ·_side
;

1633 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


1637 
	m°d
::
©omic
<
ulöt
> 
n_poöãrs
;

1639 
	#as£π_block_ahi_em±y
(
block
Ë
	`ut_a
((block)->
n_poöãrs
.
	`lﬂd
(Ë=0)

	)

1640 
	#as£π_block_ahi_em±y_⁄_öô
(
block
) \

1642 
	`UNIV_MEM_VALID
(&(
block
)->
n_poöãrs
, (block)->n_pointers); \

1643 
	`as£π_block_ahi_em±y
(
block
); \

1644 } 0)

	)

1646 
	#as£π_block_ahi_vÆid
(
block
) \

1647 
	`ut_a
((
block
)->
ödex
 || (block)->
n_poöãrs
.
	`lﬂd
(Ë=0)

	)

1649 
	#as£π_block_ahi_em±y
(
block
Ë

	)

1650 
	#as£π_block_ahi_em±y_⁄_öô
(
block
Ë

	)

1651 
	#as£π_block_ahi_vÆid
(
block
Ë

	)

1655 
uöt16_t
 
	mcuº_n_fõlds
;

1658 
uöt16_t
 
	mcuº_n_byãs
;

1661 
boﬁ
 
	mcuº_À·_side
;

1666 
boﬁ
 
	mmade_dúty_wôh_no_œtch
;

1672 
di˘_ödex_t
 *
	mödex
;

1675 #i‚de‡
UNIV_HOTBACKUP


1676 #ifde‡
UNIV_DEBUG


1681 
rw_lock_t
 
	mdebug_œtch
;

1695 
uöt64_t
 
	mmodify_˛ock
;

1702 
BPageMuãx
 
	mmuãx
;

1706 c⁄° 
	m∑ge_id_t
 &
gë_∑ge_id
(Ëc⁄° {  
	m∑ge
.
	mid
; }

1710 
∑ge_no_t
 
gë_∑ge_no
(Ëc⁄° {  (
	m∑ge
.
	mid
.
∑ge_no
()); }

1714 
∑ge_no_t
 
gë_√xt_∑ge_no
() const {

1715  (
mach_ªad_‰om_4
(
‰ame
 + 
FIL_PAGE_NEXT
));

1720 
∑ge_no_t
 
gë_¥ev_∑ge_no
() const {

1721  (
mach_ªad_‰om_4
(
‰ame
 + 
FIL_PAGE_PREV
));

1726 
∑ge_ty≥_t
 
gë_∑ge_ty≥
() const {

1727  (
mach_ªad_‰om_2
(
‰ame
 + 
FIL_PAGE_TYPE
));

1732 c⁄° *
gë_∑ge_ty≥_°r
(Ëc⁄° 
n€x˚±


1733 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1739 
	#buf_block_°©e_vÆid
(
block
) \

1740 (
	`buf_block_gë_°©e
(
block
Ë>
BUF_BLOCK_NOT_USED
 && \

1741 (
	`buf_block_gë_°©e
(
block
Ë<
BUF_BLOCK_REMOVE_HASH
))

	)

1745 
	#BUF_POOL_ZIP_FOLD_PTR
(
±r
Ë((
ulöt
)’åË/ 
UNIV_PAGE_SIZE
)

	)

1746 
	#BUF_POOL_ZIP_FOLD
(
b
Ë
	`BUF_POOL_ZIP_FOLD_PTR
((b)->
‰ame
)

	)

1747 
	#BUF_POOL_ZIP_FOLD_BPAGE
(
b
Ë
	`BUF_POOL_ZIP_FOLD
((
buf_block_t
 *)(b))

	)

1754 ˛as†
	cHaz¨dPoöãr
 {

1755 
	mpublic
:

1759 
	$Haz¨dPoöãr
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
, c⁄° 
ib_muãx_t
 *
muãx
)

1760 : 
	$m_buf_poﬁ
(
buf_poﬁ
)

1761 #ifde‡
UNIV_DEBUG


1763 
	$m_muãx
(
muãx
)

1766 
	$m_hp
() {

1770 
vútuÆ
 ~
	$Haz¨dPoöãr
(Ë{
	}
}

1773 
buf_∑ge_t
 *
	$gë
() const {

1774 
	`ut_ad
(
	`muãx_own
(
m_muãx
));

1775  (
m_hp
);

1776 
	}
}

1780 
£t
(
buf_∑ge_t
 *
b∑ge
);

1785 
boﬁ
 
is_hp
(c⁄° 
buf_∑ge_t
 *
b∑ge
);

1792 
vútuÆ
 
adju°
(c⁄° 
buf_∑ge_t
 *
b∑ge
) = 0;

1799 
move
(c⁄° 
buf_∑ge_t
 *
b∑ge
, buf_∑ge_à*
d∑ge
);

1801 
	g¥Ÿe˘ed
:

1803 
Haz¨dPoöãr
(const HazardPointer &);

1804 
	gHaz¨dPoöãr
 &
	g›î©‹
=(c⁄° 
Haz¨dPoöãr
 &);

1807 c⁄° 
buf_poﬁ_t
 *
	gm_buf_poﬁ
;

1809 #ifde‡
UNIV_DEBUG


1811 c⁄° 
ib_muãx_t
 *
	gm_muãx
;

1815 
buf_∑ge_t
 *
	gm_hp
;

1819 ˛as†
	cFlushHp
 : 
public
 
Haz¨dPoöãr
 {

1820 
public
:

1824 
	$FlushHp
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
, c⁄° 
ib_muãx_t
 *
muãx
)

1825 : 
	$Haz¨dPoöãr
(
buf_poﬁ
, 
muãx
) {}

1828 ~
	$FlushHp
(Ë
ovîride
 {
	}
}

1834 
	$adju°
(c⁄° 
buf_∑ge_t
 *
b∑ge
Ë
ovîride
;

1835 
	}
};

1838 ˛as†
	cLRUHp
 : 
public
 
Haz¨dPoöãr
 {

1839 
public
:

1843 
	$LRUHp
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
, c⁄° 
ib_muãx_t
 *
muãx
)

1844 : 
	$Haz¨dPoöãr
(
buf_poﬁ
, 
muãx
) {}

1847 ~
	$LRUHp
(Ë
ovîride
 {
	}
}

1853 
	$adju°
(c⁄° 
buf_∑ge_t
 *
b∑ge
Ë
ovîride
;

1854 
	}
};

1860 ˛as†
	cLRUIå
 : 
public
 
LRUHp
 {

1861 
public
:

1865 
	$LRUIå
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
, c⁄° 
ib_muãx_t
 *
muãx
)

1866 : 
	$LRUHp
(
buf_poﬁ
, 
muãx
) {}

1869 ~
	$LRUIå
(Ë
ovîride
 {
	}
}

1875 
buf_∑ge_t
 *
°¨t
();

1879 
	sbuf_buddy_‰ì_t
 {

1881 
ulöt
 
	msize
;

1882 
byã
 
	mbyãs
[
FIL_PAGE_DATA
];

1891 } 
	m°amp
;

1893 
buf_∑ge_t
 
	mb∑ge
;

1894 
UT_LIST_NODE_T
(
buf_buddy_‰ì_t
Ë
	mli°
;

1899 
	sbuf_poﬁ_°©_t
 {

1900 
usög
 
	mSh¨ds
 = 
Cou¡î
::
Sh¨ds
<64>;

1905 
Sh¨ds
 
	mm_n_∑ge_gës
;

1908 
	m°d
::
©omic
<
uöt64_t
> 
n_∑ges_ªad
;

1911 
	m°d
::
©omic
<
uöt64_t
> 
n_∑ges_wrôãn
;

1914 
	m°d
::
©omic
<
uöt64_t
> 
n_∑ges_¸óãd
;

1917 
	m°d
::
©omic
<
uöt64_t
> 
n_ø_∑ges_ªad_∫d
;

1920 
	m°d
::
©omic
<
uöt64_t
> 
n_ø_∑ges_ªad
;

1924 
uöt64_t
 
	mn_ø_∑ges_evi˘ed
;

1928 
uöt64_t
 
	mn_∑ges_made_young
;

1932 
uöt64_t
 
	mn_∑ges_nŸ_made_young
;

1935 
uöt64_t
 
	mLRU_byãs
;

1938 
uöt64_t
 
	mÊush_li°_byãs
;

1940 
c›y
(
buf_poﬁ_°©_t
 &
d°
, c⁄° buf_poﬁ_°©_à&
§c
Ë
	mn€x˚±
 {

1941 
	mCou¡î
::
c›y
(
d°
.
m_n_∑ge_gës
, 
§c
.m_n_page_gets);

1943 
	md°
.
	mn_∑ges_ªad
.
°‹e
(
§c
.
n_∑ges_ªad
.
lﬂd
());

1945 
	md°
.
	mn_∑ges_wrôãn
.
°‹e
(
§c
.
n_∑ges_wrôãn
.
lﬂd
());

1947 
	md°
.
	mn_∑ges_¸óãd
.
°‹e
(
§c
.
n_∑ges_¸óãd
.
lﬂd
());

1949 
	md°
.
	mn_ø_∑ges_ªad_∫d
.
°‹e
(
§c
.
n_ø_∑ges_ªad_∫d
.
lﬂd
());

1951 
	md°
.
	mn_ø_∑ges_ªad
.
°‹e
(
§c
.
n_ø_∑ges_ªad
.
lﬂd
());

1953 
	md°
.
	mn_ø_∑ges_evi˘ed
 = 
§c
.
n_ø_∑ges_evi˘ed
;

1955 
	md°
.
	mn_∑ges_made_young
 = 
§c
.
n_∑ges_made_young
;

1957 
	md°
.
	mn_∑ges_nŸ_made_young
 = 
§c
.
n_∑ges_nŸ_made_young
;

1959 
	md°
.
	mLRU_byãs
 = 
§c
.
LRU_byãs
;

1961 
	md°
.
	mÊush_li°_byãs
 = 
§c
.
Êush_li°_byãs
;

1964 
ª£t
() {

1965 
	mCou¡î
::
˛ór
(
m_n_∑ge_gës
);

1967 
	mn_∑ges_ªad
 = 0;

1968 
	mn_∑ges_wrôãn
 = 0;

1969 
	mn_∑ges_¸óãd
 = 0;

1970 
	mn_ø_∑ges_ªad_∫d
 = 0;

1971 
	mn_ø_∑ges_ªad
 = 0;

1972 
	mn_ø_∑ges_evi˘ed
 = 0;

1973 
	mn_∑ges_made_young
 = 0;

1974 
	mn_∑ges_nŸ_made_young
 = 0;

1975 
	mLRU_byãs
 = 0;

1976 
	mÊush_li°_byãs
 = 0;

1981 
	sbuf_buddy_°©_t
 {

1983 
	m°d
::
©omic
<
ulöt
> 
u£d
;

1986 
uöt64_t
 
	mªloˇãd
;

1989 
uöt64_t
 
	mªloˇãd_u£c
;

1991 
	s¢≠shŸ_t
 {

1992 
ulöt
 
	mu£d
;

1993 
uöt64_t
 
	mªloˇãd
;

1994 
uöt64_t
 
	mªloˇãd_u£c
;

1997 
¢≠shŸ_t
 
èke_¢≠shŸ
() {

1998  {
	mu£d
.
lﬂd
(), 
	mªloˇãd
, 
	mªloˇãd_u£c
};

2007 
	sbuf_poﬁ_t
 {

2016 
BufLi°Muãx
 
	mchunks_muãx
;

2019 
BufLi°Muãx
 
	mLRU_li°_muãx
;

2022 
BufLi°Muãx
 
	m‰ì_li°_muãx
;

2025 
BufLi°Muãx
 
	mzù_‰ì_muãx
;

2028 
BufLi°Muãx
 
	mzù_hash_muãx
;

2031 
ib_muãx_t
 
	mÊush_°©e_muãx
;

2035 
BufPoﬁZùMuãx
 
	mzù_muãx
;

2038 
ulöt
 
	mö°™˚_no
;

2041 
ulöt
 
	mcuº_poﬁ_size
;

2044 
ulöt
 
	mLRU_ﬁd_øtio
;

2045 #ifde‡
UNIV_DEBUG


2048 
ulöt
 
	mbuddy_n_‰ames
;

2051 
	mut_Æloˇt‹
<> 
	mÆloˇt‹
;

2054 vﬁ©ûê
ulöt
 
	mn_chunks
;

2057 vﬁ©ûê
ulöt
 
	mn_chunks_√w
;

2060 
buf_chunk_t
 *
	mchunks
;

2063 
buf_chunk_t
 *
	mchunks_ﬁd
;

2066 
ulöt
 
	mcuº_size
;

2069 
ulöt
 
	mﬁd_size
;

2073 
∑ge_no_t
 
	mªad_ahód_¨ó
;

2078 
hash_èbÀ_t
 *
	m∑ge_hash
;

2081 
hash_èbÀ_t
 *
	m∑ge_hash_ﬁd
;

2085 
hash_èbÀ_t
 *
	mzù_hash
;

2088 
	m°d
::
©omic
<
ulöt
> 
n_≥nd_ªads
;

2091 
	m°d
::
©omic
<
ulöt
> 
n_≥nd_unzù
;

2094 
ib_time_m⁄Ÿ⁄ic_t
 
	mœ°_¥ötout_time
;

2098 
buf_buddy_°©_t
 
	mbuddy_°©
[
BUF_BUDDY_SIZES_MAX
 + 1];

2101 
buf_poﬁ_°©_t
 
	m°©
;

2104 
buf_poﬁ_°©_t
 
	mﬁd_°©
;

2115 
BufLi°Muãx
 
	mÊush_li°_muãx
;

2119 
FlushHp
 
	mÊush_hp
;

2122 
FlushHp
 
	mﬁde°_hp
;

2125 
UT_LIST_BASE_NODE_T
(
buf_∑ge_t
Ë
	mÊush_li°
;

2129 
boﬁ
 
	möô_Êush
[
BUF_FLUSH_N_TYPES
];

2133 
ulöt
 
	mn_Êush
[
BUF_FLUSH_N_TYPES
];

2137 
os_evít_t
 
	mno_Êush
[
BUF_FLUSH_N_TYPES
];

2145 
ib_rbt_t
 *
	mÊush_rbt
;

2152 
ulöt
 
	m‰ìd_∑ge_˛ock
;

2158 
boﬁ
 
	måy_LRU_sˇn
;

2161 
l¢_t
 
	måack_∑ge_l¢
;

2164 
l¢_t
 
	mmax_l¢_io
;

2172 
UT_LIST_BASE_NODE_T
(
buf_∑ge_t
Ë
	m‰ì
;

2177 
UT_LIST_BASE_NODE_T
(
buf_∑ge_t
Ë
	mwôhdøw
;

2180 
ulöt
 
	mwôhdøw_èrgë
;

2184 
LRUHp
 
	mÃu_hp
;

2188 
LRUIå
 
	mÃu_sˇn_ôr
;

2192 
LRUIå
 
	msögÀ_sˇn_ôr
;

2195 
UT_LIST_BASE_NODE_T
(
buf_∑ge_t
Ë
	mLRU
;

2200 
buf_∑ge_t
 *
	mLRU_ﬁd
;

2206 
ulöt
 
	mLRU_ﬁd_Àn
;

2210 
UT_LIST_BASE_NODE_T
(
buf_block_t
Ë
	munzù_LRU
;

2218 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_BUF_DEBUG


2220 
UT_LIST_BASE_NODE_T
(
buf_∑ge_t
Ë
	mzù_˛ón
;

2224 
UT_LIST_BASE_NODE_T
(
buf_buddy_‰ì_t
Ë
	mzù_‰ì
[
BUF_BUDDY_SIZES_MAX
];

2229 
buf_∑ge_t
 *
	mw©ch
;

2240 
boﬁ
 
Æloˇã_chunk
(
ul⁄gl⁄g
 
mem_size
, 
buf_chunk_t
 *
chunk
);

2248 
dóŒoˇã_chunk
(
buf_chunk_t
 *
chunk
);

2254 
boﬁ
 
madvi£_dump
();

2260 
boﬁ
 
madvi£_d⁄t_dump
();

2262 #i‡
BUF_BUDDY_LOW
 > 
UNIV_ZIP_SIZE_MIN


2272 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gbuf_poﬁ_t
 &
	gbuf_poﬁ
);

2278 #i‚de‡
UNIV_HOTBACKUP


2280 
	#buf_Êush_li°_muãx_own
(
b
Ë
	`muãx_own
(&(b)->
Êush_li°_muãx
)

	)

2283 
	#buf_Êush_li°_muãx_íãr
(
b
) \

2285 
	`muãx_íãr
(&(
b
)->
Êush_li°_muãx
); \

2286 } 0)

	)

2288 
	#buf_Êush_li°_muãx_exô
(
b
) \

2290 
	`muãx_exô
(&(
b
)->
Êush_li°_muãx
); \

2291 } 0)

	)

2294 
	#buf_∑ge_muãx_íãr
(
b
) \

2296 
	`muãx_íãr
(&(
b
)->
muãx
); \

2297 } 0)

	)

2300 
	#buf_∑ge_muãx_exô
(
b
) \

2302 (
b
)->
muãx
.
	`exô
(); \

2303 } 0)

	)

2306 
	#buf_∑ge_hash_lock_gë
(
buf_poﬁ
, 
∑ge_id
) \

2307 
	`hash_gë_lock
((
buf_poﬁ
)->
∑ge_hash
, (
∑ge_id
).
	`fﬁd
())

	)

2310 
	#buf_∑ge_hash_lock_s_c⁄fúm
(
hash_lock
, 
buf_poﬁ
, 
∑ge_id
) \

2311 
	`hash_lock_s_c⁄fúm
(
hash_lock
, (
buf_poﬁ
)->
∑ge_hash
, (
∑ge_id
).
	`fﬁd
())

	)

2313 
	#buf_∑ge_hash_lock_x_c⁄fúm
(
hash_lock
, 
buf_poﬁ
, 
∑ge_id
) \

2314 
	`hash_lock_x_c⁄fúm
(
hash_lock
, (
buf_poﬁ
)->
∑ge_hash
, (
∑ge_id
).
	`fﬁd
())

	)

2317 #i‡
deföed
(
UNIV_DEBUG
Ë&& !deföed(
UNIV_HOTBACKUP
)

2319 
	#buf_∑ge_hash_lock_hñd_s
(
buf_poﬁ
, 
b∑ge
) \

2320 
	`rw_lock_own
(
	`buf_∑ge_hash_lock_gë
((
buf_poﬁ
), (
b∑ge
)->
id
), 
RW_LOCK_S
)

	)

2323 
	#buf_∑ge_hash_lock_hñd_x
(
buf_poﬁ
, 
b∑ge
) \

2324 
	`rw_lock_own
(
	`buf_∑ge_hash_lock_gë
((
buf_poﬁ
), (
b∑ge
)->
id
), 
RW_LOCK_X
)

	)

2327 
	#buf_∑ge_hash_lock_hñd_s_‹_x
(
buf_poﬁ
, 
b∑ge
) \

2328 (
	`buf_∑ge_hash_lock_hñd_s
((
buf_poﬁ
), (
b∑ge
)) || \

2329 
	`buf_∑ge_hash_lock_hñd_x
((
buf_poﬁ
), (
b∑ge
)))

	)

2331 
	#buf_block_hash_lock_hñd_s
(
buf_poﬁ
, 
block
) \

2332 
	`buf_∑ge_hash_lock_hñd_s
((
buf_poﬁ
), &(
block
)->
∑ge
)

	)

2334 
	#buf_block_hash_lock_hñd_x
(
buf_poﬁ
, 
block
) \

2335 
	`buf_∑ge_hash_lock_hñd_x
((
buf_poﬁ
), &(
block
)->
∑ge
)

	)

2337 
	#buf_block_hash_lock_hñd_s_‹_x
(
buf_poﬁ
, 
block
) \

2338 
	`buf_∑ge_hash_lock_hñd_s_‹_x
((
buf_poﬁ
), &(
block
)->
∑ge
)

	)

2340 
	#buf_∑ge_hash_lock_hñd_s
(
b
, 
p
Ë(
TRUE
)

	)

2341 
	#buf_∑ge_hash_lock_hñd_x
(
b
, 
p
Ë(
TRUE
)

	)

2342 
	#buf_∑ge_hash_lock_hñd_s_‹_x
(
b
, 
p
Ë(
TRUE
)

	)

2343 
	#buf_block_hash_lock_hñd_s
(
b
, 
p
Ë(
TRUE
)

	)

2344 
	#buf_block_hash_lock_hñd_x
(
b
, 
p
Ë(
TRUE
)

	)

2345 
	#buf_block_hash_lock_hñd_s_‹_x
(
b
, 
p
Ë(
TRUE
)

	)

2394 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_BUF_DEBUG


2395 #i‚de‡
UNIV_HOTBACKUP


2397 
	sCheckInLRULi°
 {

2398 
›î©‹
()(c⁄° 
buf_∑ge_t
 *
	mñem
Ëc⁄° { 
ut_a
(
ñem
->
ö_LRU_li°
); }

2400 
vÆid©e
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
) {

2401 
CheckInLRULi°
 
	mcheck
;

2402 
ut_li°_vÆid©e
(
buf_poﬁ
->
LRU
, 
check
);

2407 
	sCheckInFªeLi°
 {

2408 
›î©‹
()(c⁄° 
buf_∑ge_t
 *
	mñem
Ëc⁄° { 
ut_a
(
ñem
->
ö_‰ì_li°
); }

2410 
vÆid©e
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
) {

2411 
CheckInFªeLi°
 
	mcheck
;

2412 
ut_li°_vÆid©e
(
buf_poﬁ
->
‰ì
, 
check
);

2416 
	sCheckUnzùLRUAndLRULi°
 {

2417 
›î©‹
()(c⁄° 
buf_block_t
 *
	mñem
) const {

2418 
ut_a
(
ñem
->
∑ge
.
ö_LRU_li°
);

2419 
ut_a
(
ñem
->
ö_unzù_LRU_li°
);

2422 
vÆid©e
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
) {

2423 
CheckUnzùLRUAndLRULi°
 
	mcheck
;

2424 
ut_li°_vÆid©e
(
buf_poﬁ
->
unzù_LRU
, 
check
);

2430 #i‚de‡
UNIV_HOTBACKUP


2433 
ölöe
 
	$buf_∑ge_¥ï¨e_f‹_‰ì
(
buf_∑ge_t
 *
b∑ge
Ë
n€x˚±
 {

2434 
b∑ge
->
	`ª£t_∑ge_id
();

2435 
	}
}

2438 
	~"buf0buf.ic
"

	@buf0buf.ic

40 
	~"må0må.h
"

42 #i‚de‡
UNIV_HOTBACKUP


43 
	~"buf0Êu.h
"

44 
	~"buf0Ãu.h
"

45 
	~"buf0ªa.h
"

46 
	~"f•0ty≥s.h
"

47 
	~"sync0debug.h
"

48 
	~"ut0√w.h
"

52 
	sbuf_chunk_t
 {

53 
ulöt
 
	msize
;

54 *
	mmem
;

56 
ut_√w_pfx_t
 
	mmem_pfx
;

60 
buf_block_t
 *
	mblocks
;

63 
size_t
 
mem_size
(Ëc⁄° {  (
	mmem_pfx
.
	mm_size
); }

68 
boﬁ
 
madvi£_dump
();

73 
boﬁ
 
madvi£_d⁄t_dump
();

78 
boﬁ
 
c⁄èös
(c⁄° 
buf_block_t
 *
±r
) const {

93  
	m°d
::
Àss_equÆ
<c⁄° 
buf_block_t
 *>{}(
blocks
, 
	m±r
) &&

94 
	m°d
::
Àss
<c⁄° 
buf_block_t
 *>{}(
±r
, 
	mblocks
 + 
	msize
);

100 
UNIV_INLINE


101 
ulöt
 
	$buf_poﬁ_gë_cuº_size
(Ë{  (
§v_buf_poﬁ_cuº_size
); 
	}
}

103 #i‚de‡
UNIV_HOTBACKUP


106 
UNIV_INLINE


107 
ulöt
 
	$buf_poﬁ_ödex
(c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
)

109 
ulöt
 
i
 = 
buf_poﬁ
 - 
buf_poﬁ_±r
;

110 
	`ut_ad
(
i
 < 
MAX_BUFFER_POOLS
);

111 
	`ut_ad
(
i
 < 
§v_buf_poﬁ_ö°™˚s
);

112  (
i
);

113 
	}
}

117 
UNIV_INLINE


118 
buf_poﬁ_t
 *
	$buf_poﬁ_‰om_b∑ge
(

119 c⁄° 
buf_∑ge_t
 *
b∑ge
)

121 
ulöt
 
i
;

122 
i
 = 
b∑ge
->
buf_poﬁ_ödex
;

123 
	`ut_ad
(
i
 < 
§v_buf_poﬁ_ö°™˚s
);

124  (&
buf_poﬁ_±r
[
i
]);

125 
	}
}

129 
UNIV_INLINE


130 
buf_poﬁ_t
 *
	$buf_poﬁ_‰om_block
(c⁄° 
buf_block_t
 *
block
)

132  (
	`buf_poﬁ_‰om_b∑ge
(&
block
->
∑ge
));

133 
	}
}

137 
UNIV_INLINE


138 
ulöt
 
	$buf_poﬁ_gë_n_∑ges
() {

139  (
	`buf_poﬁ_gë_cuº_size
(Ë/ 
UNIV_PAGE_SIZE
);

140 
	}
}

144 
UNIV_INLINE


145 
ulöt
 
	$buf_∑ge_gë_‰ìd_∑ge_˛ock
(c⁄° 
buf_∑ge_t
 *
b∑ge
)

148  (
b∑ge
->
‰ìd_∑ge_˛ock
);

149 
	}
}

153 
UNIV_INLINE


154 
ulöt
 
	$buf_block_gë_‰ìd_∑ge_˛ock
(c⁄° 
buf_block_t
 *
block
)

156  (
	`buf_∑ge_gë_‰ìd_∑ge_˛ock
(&
block
->
∑ge
));

157 
	}
}

165 
UNIV_INLINE


166 
iboﬁ
 
	$buf_∑ge_≥ek_if_young
(c⁄° 
buf_∑ge_t
 *
b∑ge
) {

167 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

169 
	`ut_ad
(
b∑ge
->
buf_fix_cou¡
 > 0 ||

170 
	`buf_∑ge_hash_lock_hñd_s_‹_x
(
buf_poﬁ
, 
b∑ge
));

173  ((
buf_poﬁ
->
‰ìd_∑ge_˛ock
 & ((1UL << 31) - 1)) <

174 ((
ulöt
)
b∑ge
->
‰ìd_∑ge_˛ock
 +

175 (
buf_poﬁ
->
cuº_size
 *

176 (
BUF_LRU_OLD_RATIO_DIV
 - 
buf_poﬁ
->
LRU_ﬁd_øtio
) /

177 (
BUF_LRU_OLD_RATIO_DIV
 * 4))));

178 
	}
}

185 
UNIV_INLINE


186 
iboﬁ
 
	$buf_∑ge_≥ek_if_too_ﬁd
(c⁄° 
buf_∑ge_t
 *
b∑ge
) {

187 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

189 i‡(
buf_poﬁ
->
‰ìd_∑ge_˛ock
 == 0) {

193  (
FALSE
);

194 } i‡(
buf_LRU_ﬁd_thªshﬁd_ms
 && 
b∑ge
->
ﬁd
) {

195 
ac˚ss_time
 = 
	`buf_∑ge_is_ac˚s£d
(
b∑ge
);

203 i‡(
ac˚ss_time
 > 0 &&

204 ((
ib_uöt32_t
)(
	`ut_time_m⁄Ÿ⁄ic_ms
(Ë- 
ac˚ss_time
)) >=

205 
buf_LRU_ﬁd_thªshﬁd_ms
) {

206  (
TRUE
);

209 
buf_poﬁ
->
°©
.
n_∑ges_nŸ_made_young
++;

210  (
FALSE
);

212  (!
	`buf_∑ge_≥ek_if_young
(
b∑ge
));

214 
	}
}

219 
UNIV_INLINE


220 
buf_∑ge_°©e
 
	$buf_∑ge_gë_°©e
(

221 c⁄° 
buf_∑ge_t
 *
b∑ge
)

223 
buf_∑ge_°©e
 
°©e
 = 
b∑ge
->state;

225 #ifde‡
UNIV_DEBUG


226 
°©e
) {

227 
BUF_BLOCK_POOL_WATCH
:

228 
BUF_BLOCK_ZIP_PAGE
:

229 
BUF_BLOCK_ZIP_DIRTY
:

230 
BUF_BLOCK_NOT_USED
:

231 
BUF_BLOCK_READY_FOR_USE
:

232 
BUF_BLOCK_FILE_PAGE
:

233 
BUF_BLOCK_MEMORY
:

234 
BUF_BLOCK_REMOVE_HASH
:

237 
ut_îr‹
;

241  (
°©e
);

242 
	}
}

245 
UNIV_INLINE


246 
buf_∑ge_°©e
 
	$buf_block_gë_°©e
(

247 c⁄° 
buf_block_t
 *
block
)

249  (
	`buf_∑ge_gë_°©e
(&
block
->
∑ge
));

250 
	}
}

252 #i‚de‡
UNIV_HOTBACKUP


253 #ifde‡
UNIV_DEBUG


261 
UNIV_INLINE


262 
boﬁ
 
	$buf_∑ge_is_¥iv©e
(c⁄° 
buf_∑ge_t
 *
b∑ge
, 
boﬁ
 
hﬁd_block_muãx
,

263 
boﬁ
 
hﬁd_zù_‰ì_muãx
) {

264 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

266 
	`ut_a
(!
b∑ge
->
ö_∑ge_hash
);

267 
	`ut_a
(!
b∑ge
->
ö_zù_hash
);

268 
	`ut_a
(!
b∑ge
->
ö_Êush_li°
);

269 
	`ut_a
(!
b∑ge
->
ö_‰ì_li°
);

270 
	`ut_a
(!
b∑ge
->
ö_LRU_li°
);

271 i‡(!
hﬁd_block_muãx
) {

272 
	`ut_a
(!
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

274 
	`ut_a
(!
	`muãx_own
(&
buf_poﬁ
->
‰ì_li°_muãx
));

275 i‡(!
hﬁd_zù_‰ì_muãx
) {

276 
	`ut_a
(!
	`muãx_own
(&
buf_poﬁ
->
zù_‰ì_muãx
));

278 
	`ut_a
(!
	`muãx_own
(&
buf_poﬁ
->
zù_hash_muãx
));

280  (
åue
);

281 
	}
}

288 
UNIV_INLINE


289 
	$buf_∑ge_£t_°©e
(
buf_∑ge_t
 *
b∑ge
, 
buf_∑ge_°©e
 
°©e
) {

290 #i‚de‡
UNIV_HOTBACKUP


291 #ifde‡
UNIV_DEBUG


292 
buf_∑ge_°©e
 
ﬁd_°©e
 = 
	`buf_∑ge_gë_°©e
(
b∑ge
);

293 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

295 
ﬁd_°©e
) {

296 
BUF_BLOCK_POOL_WATCH
:

297 
ut_îr‹
;

299 
BUF_BLOCK_ZIP_PAGE
:

300 
	`ut_a
(
°©e
 =
BUF_BLOCK_ZIP_DIRTY
);

302 
BUF_BLOCK_ZIP_DIRTY
:

303 
	`ut_a
(
°©e
 =
BUF_BLOCK_ZIP_PAGE
);

304 
	`ut_a
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

305 
	`ut_a
(
	`buf_Êush_li°_muãx_own
(
buf_poﬁ
));

306 
	`ut_a
(
b∑ge
->
ö_Êush_li°
);

308 
BUF_BLOCK_NOT_USED
:

309 
	`ut_a
(
°©e
 =
BUF_BLOCK_READY_FOR_USE
);

310 
	`ut_a
(
	`buf_∑ge_is_¥iv©e
(
b∑ge
, 
Ál£
, false));

312 
BUF_BLOCK_READY_FOR_USE
:

313 
	`ut_a
(
°©e
 =
BUF_BLOCK_MEMORY
 || sèã =
BUF_BLOCK_FILE_PAGE
 ||

314 
°©e
 =
BUF_BLOCK_NOT_USED
);

315 
	`ut_a
(
	`buf_∑ge_is_¥iv©e
(
b∑ge
, 
°©e
 =
BUF_BLOCK_FILE_PAGE
,

316 
°©e
 =
BUF_BLOCK_NOT_USED
));

318 
BUF_BLOCK_MEMORY
:

319 
	`ut_a
(
°©e
 =
BUF_BLOCK_NOT_USED
);

320 
	`ut_a
(
	`buf_∑ge_is_¥iv©e
(
b∑ge
, 
Ál£
, 
åue
));

322 
BUF_BLOCK_FILE_PAGE
:

323 
	`ut_a
(
°©e
 =
BUF_BLOCK_NOT_USED
 || sèã =
BUF_BLOCK_REMOVE_HASH
);

324 i‡(
°©e
 =
BUF_BLOCK_REMOVE_HASH
) {

325 
	`ut_a
(!
b∑ge
->
ö_∑ge_hash
);

326 
	`ut_a
(!
b∑ge
->
ö_zù_hash
);

327 
	`ut_a
(!
b∑ge
->
ö_LRU_li°
);

328 
	`ut_a
(!
b∑ge
->
ö_‰ì_li°
);

329 
	`ut_a
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

330 
	`ut_a
(
	`muãx_own
(&
buf_poﬁ
->
LRU_li°_muãx
));

331 
	`ut_a
(
	`buf_∑ge_hash_lock_hñd_x
(
buf_poﬁ
, 
b∑ge
));

334 
BUF_BLOCK_REMOVE_HASH
:

335 
	`ut_a
(
°©e
 =
BUF_BLOCK_MEMORY
);

340 
b∑ge
->
°©e
 = state;

341 
	`ut_ad
(
	`buf_∑ge_gë_°©e
(
b∑ge
Ë=
°©e
);

342 
	}
}

345 
UNIV_INLINE


346 
	$buf_block_£t_°©e
(

347 
buf_block_t
 *
block
,

348 
buf_∑ge_°©e
 
°©e
)

350 
	`buf_∑ge_£t_°©e
(&
block
->
∑ge
, 
°©e
);

351 
	}
}

355 
UNIV_INLINE


356 
iboﬁ
 
	$buf_∑ge_ö_fûe
(

357 c⁄° 
buf_∑ge_t
 *
b∑ge
)

359 
	`buf_∑ge_gë_°©e
(
b∑ge
)) {

360 
BUF_BLOCK_POOL_WATCH
:

361 
ut_îr‹
;

363 
BUF_BLOCK_ZIP_PAGE
:

364 
BUF_BLOCK_ZIP_DIRTY
:

365 
BUF_BLOCK_FILE_PAGE
:

366  (
TRUE
);

367 
BUF_BLOCK_NOT_USED
:

368 
BUF_BLOCK_READY_FOR_USE
:

369 
BUF_BLOCK_MEMORY
:

370 
BUF_BLOCK_REMOVE_HASH
:

374  (
FALSE
);

375 
	}
}

377 #i‚de‡
UNIV_HOTBACKUP


380 
UNIV_INLINE


381 
boﬁ
 
	$buf_∑ge_bñ⁄gs_to_unzù_LRU
(

382 c⁄° 
buf_∑ge_t
 *
b∑ge
)

384 
	`ut_ad
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

386  (
b∑ge
->
zù
.
d©a
 && 
	`buf_∑ge_gë_°©e
(b∑geË=
BUF_BLOCK_FILE_PAGE
);

387 
	}
}

391 
UNIV_INLINE


392 
BPageMuãx
 *
	$buf_∑ge_gë_muãx
(

393 c⁄° 
buf_∑ge_t
 *
b∑ge
)

395 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

397 
	`buf_∑ge_gë_°©e
(
b∑ge
)) {

398 
BUF_BLOCK_POOL_WATCH
:

399 
ut_îr‹
;

400 
BUF_BLOCK_ZIP_PAGE
:

401 
BUF_BLOCK_ZIP_DIRTY
:

402  (&
buf_poﬁ
->
zù_muãx
);

404  (&((
buf_block_t
 *)
b∑ge
)->
muãx
);

406 
	}
}

410 
UNIV_INLINE


411 
buf_Êush_t
 
	$buf_∑ge_gë_Êush_ty≥
(

412 c⁄° 
buf_∑ge_t
 *
b∑ge
)

414 
buf_Êush_t
 
Êush_ty≥
 = (buf_Êush_t)
b∑ge
->flush_type;

416 #ifde‡
UNIV_DEBUG


417 
Êush_ty≥
) {

418 
BUF_FLUSH_LRU
:

419 
BUF_FLUSH_LIST
:

420 
BUF_FLUSH_SINGLE_PAGE
:

421  (
Êush_ty≥
);

422 
BUF_FLUSH_N_TYPES
:

423 
ut_îr‹
;

425 
ut_îr‹
;

427  (
Êush_ty≥
);

429 
	}
}

431 
UNIV_INLINE


432 
	$buf_∑ge_£t_Êush_ty≥
(
buf_∑ge_t
 *
b∑ge
,

433 
buf_Êush_t
 
Êush_ty≥
)

435 
	`ut_ad
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

436 
b∑ge
->
Êush_ty≥
 = flush_type;

437 
	`ut_ad
(
	`buf_∑ge_gë_Êush_ty≥
(
b∑ge
Ë=
Êush_ty≥
);

438 
	}
}

443 
UNIV_INLINE


444 
	$buf_block_£t_fûe_∑ge
(
buf_block_t
 *
block
, c⁄° 
∑ge_id_t
 &
∑ge_id
) {

445 
	`buf_block_£t_°©e
(
block
, 
BUF_BLOCK_FILE_PAGE
);

446 
block
->
∑ge
.
	`ª£t_∑ge_id
(
∑ge_id
);

447 
	}
}

451 
UNIV_INLINE


452 
buf_io_fix
 
	$buf_∑ge_gë_io_fix
(

453 c⁄° 
buf_∑ge_t
 *
b∑ge
)

455 
	`ut_ad
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

456  
	`buf_∑ge_gë_io_fix_u∆ocked
(
b∑ge
);

457 
	}
}

464 
UNIV_INLINE


465 
buf_io_fix
 
	$buf_∑ge_gë_io_fix_u∆ocked
(c⁄° 
buf_∑ge_t
 *
b∑ge
) {

466 
	`ut_ad
(
b∑ge
 !
nuŒ±r
);

468 
buf_io_fix
 
io_fix
 = 
b∑ge
->io_fix;

470 #ifde‡
UNIV_DEBUG


471 
io_fix
) {

472 
BUF_IO_NONE
:

473 
BUF_IO_READ
:

474 
BUF_IO_WRITE
:

475 
BUF_IO_PIN
:

476  (
io_fix
);

478 
ut_îr‹
;

480  (
io_fix
);

482 
	}
}

486 
UNIV_INLINE


487 
buf_io_fix
 
	$buf_block_gë_io_fix
(

488 c⁄° 
buf_block_t
 *
block
)

490  (
	`buf_∑ge_gë_io_fix
(&
block
->
∑ge
));

491 
	}
}

498 
UNIV_INLINE


499 
buf_io_fix
 
	$buf_block_gë_io_fix_u∆ocked
(c⁄° 
buf_block_t
 *
block
) {

500  (
	`buf_∑ge_gë_io_fix_u∆ocked
(&
block
->
∑ge
));

501 
	}
}

504 
UNIV_INLINE


505 
	$buf_∑ge_£t_io_fix
(
buf_∑ge_t
 *
b∑ge
,

506 
buf_io_fix
 
io_fix
)

508 
	`ut_ad
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

510 
b∑ge
->
io_fix
 = io_fix;

511 
	`ut_ad
(
	`buf_∑ge_gë_io_fix
(
b∑ge
Ë=
io_fix
);

512 
	}
}

515 
UNIV_INLINE


516 
	$buf_block_£t_io_fix
(
buf_block_t
 *
block
,

517 
buf_io_fix
 
io_fix
)

519 
	`buf_∑ge_£t_io_fix
(&
block
->
∑ge
, 
io_fix
);

520 
	}
}

531 
UNIV_INLINE


532 
	$buf_∑ge_£t_°icky
(
buf_∑ge_t
 *
b∑ge
) {

533 #ifde‡
UNIV_DEBUG


534 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

535 
	`ut_ad
(
	`muãx_own
(&
buf_poﬁ
->
LRU_li°_muãx
));

538 
	`ut_ad
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

539 
	`ut_ad
(
	`buf_∑ge_gë_io_fix
(
b∑ge
Ë=
BUF_IO_NONE
);

540 
	`ut_ad
(
b∑ge
->
ö_LRU_li°
);

542 
b∑ge
->
io_fix
 = 
BUF_IO_PIN
;

543 
	}
}

546 
UNIV_INLINE


547 
	$buf_∑ge_un£t_°icky
(
buf_∑ge_t
 *
b∑ge
)

549 
	`ut_ad
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

550 
	`ut_ad
(
	`buf_∑ge_gë_io_fix
(
b∑ge
Ë=
BUF_IO_PIN
);

552 
b∑ge
->
io_fix
 = 
BUF_IO_NONE
;

553 
	}
}

557 
UNIV_INLINE


558 
iboﬁ
 
	$buf_∑ge_ˇn_ªloˇã
(

559 c⁄° 
buf_∑ge_t
 *
b∑ge
)

561 
	`ut_ad
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

562 
	`ut_ad
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

563 
	`ut_ad
(
b∑ge
->
ö_LRU_li°
);

565  (
	`buf_∑ge_gë_io_fix
(
b∑ge
Ë=
BUF_IO_NONE
 &&

566 
b∑ge
->
buf_fix_cou¡
 == 0);

567 
	}
}

572 
UNIV_INLINE


573 
iboﬁ
 
	$buf_∑ge_is_ﬁd
(c⁄° 
buf_∑ge_t
 *
b∑ge
) {

574 #ifde‡
UNIV_DEBUG


575 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

579 
	`ut_ad
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)) ||

580 
	`muãx_own
(&
buf_poﬁ
->
LRU_li°_muãx
));

582 
	`ut_ad
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

584  (
b∑ge
->
ﬁd
);

585 
	}
}

590 
UNIV_INLINE


591 
	$buf_∑ge_£t_ﬁd
(
buf_∑ge_t
 *
b∑ge
, 
iboﬁ
 
ﬁd
) {

592 #ifde‡
UNIV_DEBUG


593 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

595 
	`ut_a
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

596 
	`ut_ad
(
	`muãx_own
(&
buf_poﬁ
->
LRU_li°_muãx
));

597 
	`ut_ad
(
b∑ge
->
ö_LRU_li°
);

599 #ifde‡
UNIV_LRU_DEBUG


600 
	`ut_a
((
buf_poﬁ
->
LRU_ﬁd_Àn
 =0Ë=(buf_poﬁ->
LRU_ﬁd
 =
NULL
));

602 
	`ut_a
(!
ﬁd
 || 
buf_poﬁ
->
LRU_ﬁd
);

604 i‡(
	`UT_LIST_GET_PREV
(
LRU
, 
b∑ge
Ë&& 
	`UT_LIST_GET_NEXT
(LRU, bpage)) {

605 c⁄° 
buf_∑ge_t
 *
¥ev
 = 
	`UT_LIST_GET_PREV
(
LRU
, 
b∑ge
);

606 c⁄° 
buf_∑ge_t
 *
√xt
 = 
	`UT_LIST_GET_NEXT
(
LRU
, 
b∑ge
);

607 i‡(
¥ev
->
ﬁd
 =
√xt
->old) {

608 
	`ut_a
(
¥ev
->
ﬁd
 == old);

610 
	`ut_a
(!
¥ev
->
ﬁd
);

611 
	`ut_a
(
buf_poﬁ
->
LRU_ﬁd
 =(
ﬁd
 ? 
b∑ge
 : 
√xt
));

616 
b∑ge
->
ﬁd
 = old;

617 
	}
}

622 
UNIV_INLINE


623 
	$buf_∑ge_is_ac˚s£d
(c⁄° 
buf_∑ge_t
 *
b∑ge
)

625 
	`ut_ad
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

627  (
b∑ge
->
ac˚ss_time
);

628 
	}
}

631 
UNIV_INLINE


632 
	$buf_∑ge_£t_ac˚s£d
(
buf_∑ge_t
 *
b∑ge
)

634 
	`ut_ad
(
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

636 
	`ut_a
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

638 i‡(
b∑ge
->
ac˚ss_time
 == 0) {

640 
b∑ge
->
ac˚ss_time
 = 
°©ic_ˇ°
<
uöt
>(
	`ut_time_m⁄Ÿ⁄ic_ms
());

642 
	}
}

652 
UNIV_INLINE


653 
buf_block_t
 *
	$buf_∑ge_gë_block
(
buf_∑ge_t
 *
b∑ge
) {

654 i‡(
b∑ge
 !
nuŒ±r
) {

655 #i‚de‡
UNIV_HOTBACKUP


656 #ifde‡
UNIV_DEBUG


657 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
);

658 
	`ut_ad
(
	`buf_∑ge_hash_lock_hñd_s_‹_x
(
buf_poﬁ
, 
b∑ge
) ||

659 
	`muãx_own
(&
buf_poﬁ
->
LRU_li°_muãx
));

662 
	`ut_ad
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

664 i‡(
	`buf_∑ge_gë_°©e
(
b∑ge
Ë=
BUF_BLOCK_FILE_PAGE
) {

665  ((
buf_block_t
 *)
b∑ge
);

669  (
nuŒ±r
);

670 
	}
}

672 #i‚de‡
UNIV_HOTBACKUP


673 #ifde‡
UNIV_DEBUG


676 
UNIV_INLINE


677 
buf_‰ame_t
 *
	$buf_block_gë_‰ame
(

678 c⁄° 
buf_block_t
 *
block
)

680 
	`ut_ad
(
block
);

682 
	`buf_block_gë_°©e
(
block
)) {

683 
BUF_BLOCK_POOL_WATCH
:

684 
BUF_BLOCK_ZIP_PAGE
:

685 
BUF_BLOCK_ZIP_DIRTY
:

686 
BUF_BLOCK_NOT_USED
:

687 
ut_îr‹
;

689 
BUF_BLOCK_FILE_PAGE
:

690 
	`ut_a
(
block
->
∑ge
.
buf_fix_cou¡
 > 0);

692 
BUF_BLOCK_READY_FOR_USE
:

693 
BUF_BLOCK_MEMORY
:

694 
BUF_BLOCK_REMOVE_HASH
:

695 
ok
;

697 
ut_îr‹
;

698 
ok
:

699  ((
buf_‰ame_t
 *)
block
->
‰ame
);

700 
	}
}

706 
UNIV_INLINE


707 
buf_‰ame_t
 *
	$buf_‰ame_Æign
(

709 
byã
 *
±r
)

711 
buf_‰ame_t
 *
‰ame
;

713 
	`ut_ad
(
±r
);

715 
‰ame
 = (
buf_‰ame_t
 *)
	`ut_Æign_down
(
±r
, 
UNIV_PAGE_SIZE
);

717  (
‰ame
);

718 
	}
}

722 
UNIV_INLINE


723 
	$buf_±r_gë_f•_addr
(

724 c⁄° *
±r
,

725 
•a˚_id_t
 *
•a˚
,

726 
fû_addr_t
 *
addr
)

728 c⁄° 
∑ge_t
 *
∑ge
 = (c⁄°Öage_à*)
	`ut_Æign_down
(
±r
, 
UNIV_PAGE_SIZE
);

730 *
•a˚
 = 
	`mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID
);

731 
addr
->
∑ge
 = 
	`mach_ªad_‰om_4
’agê+ 
FIL_PAGE_OFFSET
);

732 
addr
->
boff£t
 = 
°©ic_ˇ°
<
uöt32_t
>(
	`ut_Æign_off£t
(
±r
, 
UNIV_PAGE_SIZE
));

733 
	}
}

735 #i‚de‡
UNIV_HOTBACKUP


739 
UNIV_INLINE


740 
ulöt
 
	$buf_block_gë_lock_hash_vÆ
(c⁄° 
buf_block_t
 *
block
)

742 
	`ut_ad
(
block
);

743 
	`ut_ad
(
	`buf_∑ge_ö_fûe
(&
block
->
∑ge
));

744 
	`ut_ad
(
	`rw_lock_own
(&(((
buf_block_t
 *)
block
)->
lock
), 
RW_LOCK_X
) ||

745 
	`rw_lock_own
(&(((
buf_block_t
 *)
block
)->
lock
), 
RW_LOCK_S
));

747  (
block
->
lock_hash_vÆ
);

748 
	}
}

753 
UNIV_INLINE


754 
buf_∑ge_t
 *
	$buf_∑ge_Æloc_des¸ùt‹
() {

755 
buf_∑ge_t
 *
b∑ge
;

757 
b∑ge
 = (
buf_∑ge_t
 *)
	`ut_zÆloc_nokey
( *bpage);

758 
	`ut_ad
(
b∑ge
);

759 
	`UNIV_MEM_ALLOC
(
b∑ge
,  *bpage);

761 
b∑ge
->
m_•a˚
 = 
nuŒ±r
;

763  (
b∑ge
);

764 
	}
}

767 
UNIV_INLINE


768 
	$buf_block_‰ì
(
buf_block_t
 *
block
)

770 
	`ut_a
(
	`buf_block_gë_°©e
(
block
Ë!
BUF_BLOCK_FILE_PAGE
);

772 
	`buf_LRU_block_‰ì_n⁄_fûe_∑ge
(
block
);

773 
	}
}

778 
UNIV_INLINE


779 
byã
 *
	$buf_‰ame_c›y
(
byã
 *
buf
,

780 c⁄° 
buf_‰ame_t
 *
‰ame
)

782 
	`ut_ad
(
buf
 && 
‰ame
);

784 
	`ut_mem˝y
(
buf
, 
‰ame
, 
UNIV_PAGE_SIZE
);

786  (
buf
);

787 
	}
}

789 #i‚de‡
UNIV_HOTBACKUP


790 
UNIV_INLINE


791 
l¢_t
 
	$buf_∑ge_gë_√we°_modifiˇti⁄
(c⁄° 
buf_∑ge_t
 *
b∑ge
) {

792 autÿ
block_muãx
 = 
	`buf_∑ge_gë_muãx
(
b∑ge
);

794 
	`muãx_íãr
(
block_muãx
);

796 autÿ
l¢
 = 
	`buf_∑ge_ö_fûe
(
b∑ge
Ë? b∑ge->
	`gë_√we°_l¢
() : 0;

798 
	`muãx_exô
(
block_muãx
);

800  
l¢
;

801 
	}
}

809 
UNIV_INLINE


810 
	$buf_block_modify_˛ock_öc
(
buf_block_t
 *
block
) {

811 #ifde‡
UNIV_DEBUG


812 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_b∑ge
(&
block
->
∑ge
);

814 
	`as£π_block_ahi_vÆid
(
block
);

817 
	`ut_ad
(
	`f•_is_sy°em_ãmp‹¨y
(
block
->
∑ge
.
id
.
	`•a˚
()) ||

818 (
block
->
∑ge
.
buf_fix_cou¡
 == 0 &&

819 
	`muãx_own
(&
buf_poﬁ
->
LRU_li°_muãx
)) ||

820 
	`rw_lock_own_Êagged
(&
block
->
lock
, 
RW_LOCK_FLAG_X
 | 
RW_LOCK_FLAG_SX
));

822 
block
->
modify_˛ock
++;

823 
	}
}

828 
UNIV_INLINE


829 
ib_uöt64_t
 
	$buf_block_gë_modify_˛ock
(c⁄° 
buf_block_t
 *
block
) {

831 
	`ut_ad
(
	`f•_is_sy°em_ãmp‹¨y
(
block
->
∑ge
.
id
.
	`•a˚
()) ||

832 
	`rw_lock_own_Êagged
(&
block
->
lock
,

833 
RW_LOCK_FLAG_X
 | 
RW_LOCK_FLAG_SX
 | 
RW_LOCK_FLAG_S
));

835  (
block
->
modify_˛ock
);

836 
	}
}

838 
ölöe
 
	gbuf_∑ge_t
::
	$£t_ﬁde°_l¢
(
l¢_t
 
l¢
Ë
n€x˚±
 {

839 
	`ut_ad
(
	`buf_∑ge_gë_°©e
(
this
Ë=
BUF_BLOCK_POOL_WATCH
 ||

840 
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
this
)));

843 
	`ut_ad
(
l¢
 =0 || !
	`was_°Æe
());

844 
ﬁde°_modifiˇti⁄
 = 
l¢
;

845 
	}
}

850 
UNIV_INLINE


851 
ulöt
 
	$buf_block_fix
(
buf_∑ge_t
 *
b∑ge
) {

852 autÿ
cou¡
 = 
b∑ge
->
buf_fix_cou¡
.
	`„tch_add
(1) + 1;

853 
	`ut_ad
(
cou¡
 > 0);

854  (
cou¡
);

855 
	}
}

860 
UNIV_INLINE


861 
ulöt
 
	$buf_block_fix
(
buf_block_t
 *
block
) {

862  (
	`buf_block_fix
(&
block
->
∑ge
));

863 
	}
}

866 
UNIV_INLINE


867 
buf_block_buf_fix_öc_func
(

868 #ifde‡
UNIV_DEBUG


869 c⁄° *
fûe
,

870 
ulöt
 
löe
,

872 
buf_block_t
 *
block
)

874 #ifde‡
UNIV_DEBUG


878 i‡(!
f•_is_sy°em_ãmp‹¨y
(
block
->
∑ge
.
id
.
•a˚
())) {

879 
iboﬁ
 
	gªt
;

880 
	gªt
 = 
rw_lock_s_lock_nowaô
(&
block
->
debug_œtch
, 
fûe
, 
löe
);

881 
ut_a
(
ªt
);

885 
buf_block_fix
(
block
);

891 
UNIV_INLINE


892 
ulöt
 
	$buf_block_unfix
(
buf_∑ge_t
 *
b∑ge
) {

893 
	`ut_ad
(!
	`muãx_own
(
	`buf_∑ge_gë_muãx
(
b∑ge
)));

894 c⁄°áutÿ
cou¡
 = 
b∑ge
->
buf_fix_cou¡
.
	`„tch_sub
(1) - 1;

895 
	`°©ic_as£π
(
°d
::
is_unsig√d
<
	`de˛ty≥
(
cou¡
)>::
vÆue
, "Must be unsigned");

896 
	`ut_ad
(
cou¡
 !
°d
::
numîic_limôs
<
	`de˛ty≥
(cou¡)>::
	`max
());

897  (
cou¡
);

898 
	}
}

903 
UNIV_INLINE


904 
ulöt
 
	$buf_block_unfix
(
buf_block_t
 *
block
) {

905  (
	`buf_block_unfix
(&
block
->
∑ge
));

906 
	}
}

909 
UNIV_INLINE


910 
	$buf_block_buf_fix_dec
(

911 
buf_block_t
 *
block
)

913 #ifde‡
UNIV_DEBUG


917 i‡(!
	`f•_is_sy°em_ãmp‹¨y
(
block
->
∑ge
.
id
.
	`•a˚
())) {

918 
	`rw_lock_s_u∆ock
(&
block
->
debug_œtch
);

922 
	`buf_block_unfix
(
block
);

923 
	}
}

928 
UNIV_INLINE


929 
buf_poﬁ_t
 *
	$buf_poﬁ_gë
(c⁄° 
∑ge_id_t
 &
∑ge_id
) {

931 
∑ge_no_t
 
ign‹ed_∑ge_no
 = 
∑ge_id
.
	`∑ge_no
() >> 6;

933 
∑ge_id_t
 
	`id
(
∑ge_id
.
	`•a˚
(), 
ign‹ed_∑ge_no
);

935 
ulöt
 
i
 = 
id
.
	`fﬁd
(Ë% 
§v_buf_poﬁ_ö°™˚s
;

937  (&
buf_poﬁ_±r
[
i
]);

938 
	}
}

942 
UNIV_INLINE


943 
buf_poﬁ_t
 *
	$buf_poﬁ_‰om_¨øy
(
ulöt
 
ödex
)

946 
	`ut_ad
(
ödex
 < 
MAX_BUFFER_POOLS
);

947 
	`ut_ad
(
ödex
 < 
§v_buf_poﬁ_ö°™˚s
);

948  (&
buf_poﬁ_±r
[
ödex
]);

949 
	}
}

955 
UNIV_INLINE


956 
buf_∑ge_t
 *
	$buf_∑ge_hash_gë_low
(
buf_poﬁ_t
 *
buf_poﬁ
,

957 c⁄° 
∑ge_id_t
 &
∑ge_id
) {

958 
buf_∑ge_t
 *
b∑ge
;

960 #ifde‡
UNIV_DEBUG


961 
rw_lock_t
 *
hash_lock
;

963 
hash_lock
 = 
	`hash_gë_lock
(
buf_poﬁ
->
∑ge_hash
, 
∑ge_id
.
	`fﬁd
());

964 
	`ut_ad
(
	`rw_lock_own
(
hash_lock
, 
RW_LOCK_X
Ë||Ñw_lock_own(hash_lock, 
RW_LOCK_S
));

969 
	`HASH_SEARCH
(
hash
, 
buf_poﬁ
->
∑ge_hash
, 
∑ge_id
.
	`fﬁd
(), 
buf_∑ge_t
 *, 
b∑ge
,

970 
	`ut_ad
(
b∑ge
->
ö_∑ge_hash
 && !b∑ge->
ö_zù_hash
 &&

971 
	`buf_∑ge_ö_fûe
(
b∑ge
)),

972 
∑ge_id
 =
b∑ge
->
id
);

973 i‡(
b∑ge
) {

974 
	`ut_a
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

975 
	`ut_ad
(
b∑ge
->
ö_∑ge_hash
);

976 
	`ut_ad
(!
b∑ge
->
ö_zù_hash
);

977 
	`ut_ad
(
	`buf_poﬁ_‰om_b∑ge
(
b∑ge
Ë=
buf_poﬁ
);

980  (
b∑ge
);

981 
	}
}

999 
UNIV_INLINE


1000 
buf_∑ge_t
 *
	$buf_∑ge_hash_gë_locked
(
buf_poﬁ_t
 *
buf_poﬁ
,

1001 c⁄° 
∑ge_id_t
 &
∑ge_id
, 
rw_lock_t
 **
lock
,

1002 
ulöt
 
lock_mode
, 
boﬁ
 
w©ch
) {

1003 
buf_∑ge_t
 *
b∑ge
 = 
nuŒ±r
;

1004 
rw_lock_t
 *
hash_lock
;

1005 
ulöt
 
mode
 = 
RW_LOCK_S
;

1007 i‡(
lock
 !
nuŒ±r
) {

1008 *
lock
 = 
nuŒ±r
;

1009 
	`ut_ad
(
lock_mode
 =
RW_LOCK_X
 ||Üock_modê=
RW_LOCK_S
);

1010 
mode
 = 
lock_mode
;

1013 
hash_lock
 = 
	`hash_gë_lock
(
buf_poﬁ
->
∑ge_hash
, 
∑ge_id
.
	`fﬁd
());

1015 
	`ut_ad
(!
	`rw_lock_own
(
hash_lock
, 
RW_LOCK_X
) &&

1016 !
	`rw_lock_own
(
hash_lock
, 
RW_LOCK_S
));

1018 i‡(
mode
 =
RW_LOCK_S
) {

1019 
	`rw_lock_s_lock
(
hash_lock
);

1022 
hash_lock
 =

1023 
	`hash_lock_s_c⁄fúm
(
hash_lock
, 
buf_poﬁ
->
∑ge_hash
, 
∑ge_id
.
	`fﬁd
());

1025 
	`rw_lock_x_lock
(
hash_lock
);

1027 
hash_lock
 =

1028 
	`hash_lock_x_c⁄fúm
(
hash_lock
, 
buf_poﬁ
->
∑ge_hash
, 
∑ge_id
.
	`fﬁd
());

1031 
b∑ge
 = 
	`buf_∑ge_hash_gë_low
(
buf_poﬁ
, 
∑ge_id
);

1033 i‡(!
b∑ge
 || 
	`buf_poﬁ_w©ch_is_£¡öñ
(
buf_poﬁ
, bpage)) {

1034 i‡(!
w©ch
) {

1035 
b∑ge
 = 
nuŒ±r
;

1037 
u∆ock_™d_exô
;

1040 
	`ut_ad
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

1041 
	`ut_ad
(
∑ge_id
 =
b∑ge
->
id
);

1043 i‡(
lock
 =
nuŒ±r
) {

1045 
u∆ock_™d_exô
;

1048 *
lock
 = 
hash_lock
;

1049 
exô
;

1052 
u∆ock_™d_exô
:

1053 i‡(
mode
 =
RW_LOCK_S
) {

1054 
	`rw_lock_s_u∆ock
(
hash_lock
);

1056 
	`rw_lock_x_u∆ock
(
hash_lock
);

1058 
exô
:

1059  (
b∑ge
);

1060 
	}
}

1076 
UNIV_INLINE


1077 
buf_block_t
 *
	$buf_block_hash_gë_locked
(
buf_poﬁ_t
 *
buf_poﬁ
,

1078 c⁄° 
∑ge_id_t
 &
∑ge_id
,

1079 
rw_lock_t
 **
lock
, 
ulöt
 
lock_mode
) {

1080 
buf_∑ge_t
 *
b∑ge
 =

1081 
	`buf_∑ge_hash_gë_locked
(
buf_poﬁ
, 
∑ge_id
, 
lock
, 
lock_mode
);

1082 
buf_block_t
 *
block
 = 
	`buf_∑ge_gë_block
(
b∑ge
);

1084 i‡(
block
 !
nuŒ±r
) {

1085 
	`ut_ad
(
	`buf_block_gë_°©e
(
block
Ë=
BUF_BLOCK_FILE_PAGE
);

1086 
	`ut_ad
(!
lock
 || 
	`rw_lock_own
(*lock, 
lock_mode
));

1088  (
block
);

1089 } i‡(
b∑ge
) {

1091 
	`ut_ad
(
	`buf_∑ge_ö_fûe
(
b∑ge
));

1093 i‡(
lock
) {

1094 i‡(
lock_mode
 =
RW_LOCK_S
) {

1095 
	`rw_lock_s_u∆ock
(*
lock
);

1097 
	`rw_lock_x_u∆ock
(*
lock
);

1100 *
lock
 = 
nuŒ±r
;

1101  (
nuŒ±r
);

1104 
	`ut_ad
(!
b∑ge
);

1105 
	`ut_ad
(
lock
 =
nuŒ±r
 || *lock ==Çullptr);

1106  (
nuŒ±r
);

1107 
	}
}

1114 
UNIV_INLINE


1115 
iboﬁ
 
	$buf_∑ge_≥ek
(c⁄° 
∑ge_id_t
 &
∑ge_id
) {

1116 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_gë
(
∑ge_id
);

1118  (
	`buf_∑ge_hash_gë
(
buf_poﬁ
, 
∑ge_id
Ë!
nuŒ±r
);

1119 
	}
}

1122 
UNIV_INLINE


1123 
	$buf_∑ge_ªÀa£_zù
(
buf_∑ge_t
 *
b∑ge
)

1125 
	`ut_ad
(
b∑ge
);

1126 
	`ut_a
(
b∑ge
->
buf_fix_cou¡
 > 0);

1128 
	`buf_∑ge_gë_°©e
(
b∑ge
)) {

1129 
BUF_BLOCK_FILE_PAGE
:

1130 #ifde‡
UNIV_DEBUG


1135 
buf_block_t
 *
block
 = 
ªöãΩªt_ˇ°
<buf_block_à*>(
b∑ge
);

1136 i‡(!
	`f•_is_sy°em_ãmp‹¨y
(
block
->
∑ge
.
id
.
	`•a˚
())) {

1137 
	`rw_lock_s_u∆ock
(&
block
->
debug_œtch
);

1143 
BUF_BLOCK_ZIP_PAGE
:

1144 
BUF_BLOCK_ZIP_DIRTY
:

1145 
	`buf_block_unfix
(
ªöãΩªt_ˇ°
<
buf_block_t
 *>(
b∑ge
));

1148 
BUF_BLOCK_POOL_WATCH
:

1149 
BUF_BLOCK_NOT_USED
:

1150 
BUF_BLOCK_READY_FOR_USE
:

1151 
BUF_BLOCK_MEMORY
:

1152 
BUF_BLOCK_REMOVE_HASH
:

1156 
ut_îr‹
;

1157 
	}
}

1160 
UNIV_INLINE


1161 
	$buf_∑ge_ªÀa£_œtch
(
buf_block_t
 *
block
,

1162 
ulöt
 
rw_œtch
)

1165 #ifde‡
UNIV_DEBUG


1169 i‡(!
	`f•_is_sy°em_ãmp‹¨y
(
block
->
∑ge
.
id
.
	`•a˚
())) {

1170 
	`rw_lock_s_u∆ock
(&
block
->
debug_œtch
);

1174 i‡(
rw_œtch
 =
RW_S_LATCH
) {

1175 
	`rw_lock_s_u∆ock
(&
block
->
lock
);

1176 } i‡(
rw_œtch
 =
RW_SX_LATCH
) {

1177 
	`rw_lock_sx_u∆ock
(&
block
->
lock
);

1178 } i‡(
rw_œtch
 =
RW_X_LATCH
) {

1179 
	`rw_lock_x_u∆ock
(&
block
->
lock
);

1181 
	}
}

1183 #ifde‡
UNIV_DEBUG


1187 
UNIV_INLINE


1188 
	$buf_block_dbg_add_Àvñ
(

1189 
buf_block_t
 *
block
,

1191 
œtch_Àvñ_t
 
Àvñ
)

1193 
	`sync_check_lock
(&
block
->
lock
, 
Àvñ
);

1194 
	}
}

1199 
UNIV_INLINE


1200 
buf_block_t
 *
	$buf_gë_¡h_chunk_block
(

1201 c⁄° 
buf_poﬁ_t
 *
buf_poﬁ
,

1202 
ulöt
 
n
,

1203 
ulöt
 *
chunk_size
)

1205 c⁄° 
buf_chunk_t
 *
chunk
;

1207 
chunk
 = 
buf_poﬁ
->
chunks
 + 
n
;

1208 *
chunk_size
 = 
chunk
->
size
;

1209  (
chunk
->
blocks
);

1210 
	}
}

1216 
UNIV_INLINE


1217 
ulöt
 
	$buf_poﬁ_size_Æign
(
ulöt
 
size
) {

1218 c⁄° 
ulöt
 
m
 = 
§v_buf_poﬁ_ö°™˚s
 * 
§v_buf_poﬁ_chunk_unô
;

1219 
size
 = 
	`ut_max
(size, 
§v_buf_poﬁ_mö_size
);

1221 i‡(
size
 % 
m
 == 0) {

1222  (
size
);

1224  ((
size
 / 
m
 + 1) * m);

1226 
	}
}

1233 
UNIV_INLINE


1234 
ulöt
 
	$buf_gë_wôhdøw_dïth
(
buf_poﬁ_t
 *
buf_poﬁ
) {

1235 
os_rmb
;

1236 i‡(
buf_poﬁ
->
cuº_size
 >buf_poﬁ->
ﬁd_size
)  0;

1237 
	`muãx_íãr
(&
buf_poﬁ
->
‰ì_li°_muãx
);

1238 
ulöt
 
wôhdøw_Àn
 = 
	`UT_LIST_GET_LEN
(
buf_poﬁ
->
wôhdøw
);

1239 
	`muãx_exô
(&
buf_poﬁ
->
‰ì_li°_muãx
);

1240  (
buf_poﬁ
->
wôhdøw_èrgë
 > 
wôhdøw_Àn


1241 ? 
buf_poﬁ
->
wôhdøw_èrgë
 - 
wôhdøw_Àn


1243 
	}
}

	@buf0checksum.h

33 #i‚de‡
buf0checksum_h


34 
	#buf0checksum_h


	)

36 
	~"buf0ty≥s.h
"

37 
	~"∑ge0size.h
"

38 
	~"univ.i
"

49 
uöt32_t
 
buf_ˇlc_∑ge_¸c32
(c⁄° 
byã
 *
∑ge
,

50 
boﬁ
 
u£_Àgacy_big_ídün
 = 
Ál£
);

56 
ulöt
 
buf_ˇlc_∑ge_√w_checksum
(c⁄° 
byã
 *
∑ge
);

65 
ulöt
 
buf_ˇlc_∑ge_ﬁd_checksum
(c⁄° 
byã
 *
∑ge
);

69 c⁄° *
buf_checksum_Æg‹ôhm_«me
(

70 
§v_checksum_Æg‹ôhm_t
 
Ægo
);

72 
ul⁄g
 
§v_checksum_Æg‹ôhm
;

75 ˛as†
	cBlockRï‹ãr
 {

76 
	mpublic
:

83 
	$BlockRï‹ãr
(
boﬁ
 
check_l¢
, c⁄° 
byã
 *
ªad_buf
,

84 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
boﬁ
 
skù_checksum
)

85 : 
	`m_check_l¢
(
check_l¢
),

86 
	`m_ªad_buf
(
ªad_buf
),

87 
	`m_∑ge_size
(
∑ge_size
),

88 
	$m_skù_checksum
(
skù_checksum
) {}

90 
vútuÆ
 ~
	$BlockRï‹ãr
(Ë{
	}
}

91 
BlockRï‹ãr
(const BlockReporter &) = ;

96 
boﬁ
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
	$is_c‹ru±ed
() const;

101 
boﬁ
 
	$is_í¸y±ed
(Ëc⁄° 
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

105 
vútuÆ
 
ölöe
 
	$ªp‹t_em±y_∑ge
(
boﬁ
 
em±y
Ëc⁄° {
	}
}

112 
vútuÆ
 
ölöe
 
	$¥öt_°ri˘_¸c32
(
ulöt
 
checksum_fõld1
,

113 
ulöt
 
checksum_fõld2
, 
uöt32_t
 
¸c32
,

114 
§v_checksum_Æg‹ôhm_t
 
Ægo
Ëc⁄° {
	}
}

119 
vútuÆ
 
ölöe
 
	$¥öt_°ri˘_önodb
(
ulöt
 
checksum_fõld1
,

120 
ulöt
 
checksum_fõld2
Ëc⁄° {
	}
}

126 
vútuÆ
 
ölöe
 
	$¥öt_°ri˘_n⁄e
(
ulöt
 
checksum_fõld1
,

127 
ulöt
 
checksum_fõld2
,

128 
§v_checksum_Æg‹ôhm_t
 
Ægo
Ëc⁄° {
	}
}

136 
vútuÆ
 
ölöe
 
	$¥öt_önodb_checksum
(

137 
ulöt
 
ﬁd_checksum
, ulöà
√w_checksum
, ulöà
checksum_fõld1
,

138 
ulöt
 
checksum_fõld2
, 
§v_checksum_Æg‹ôhm_t
 
Ægo
Ëc⁄° {
	}
}

142 
vútuÆ
 
ölöe
 
	$¥öt_önodb_Áû
(Ëc⁄° {
	}
}

147 
vútuÆ
 
ölöe
 
	$¥öt_¸c32_checksum
(
ulöt
 
checksum_fõld1
,

148 
ulöt
 
checksum_fõld2
Ëc⁄° {
	}
}

151 
vútuÆ
 
ölöe
 
	$¥öt_¸c32_Áû
(Ëc⁄° {
	}
}

154 
vútuÆ
 
ölöe
 
	$¥öt_n⁄e_Áû
(Ëc⁄° {
	}
}

159 
vútuÆ
 
ölöe
 
	$¥öt_com¥es£d_checksum
(
ib_uöt32_t
 
ˇlc
,

160 
ib_uöt32_t
 
°‹ed
Ëc⁄° {
	}
}

167 
boﬁ
 
	$vîify_zù_checksum
() const;

180 
uöt32_t
 
	$ˇlc_zù_checksum
(c⁄° 
byã
 *
ªad_buf
, 
ulöt
 
phys_∑ge_size
,

181 
§v_checksum_Æg‹ôhm_t
 
Ægo
,

182 
boﬁ
 
u£_Àgacy_big_ídün
 = 
Ál£
) const;

191 
uöt32_t
 
	$ˇlc_zù_checksum
(
§v_checksum_Æg‹ôhm_t
 
Ægo
,

192 
boﬁ
 
u£_Àgacy_big_ídün
 = 
Ál£
) const;

194 
boﬁ
 
	$is_l¢_vÆid
(c⁄° 
byã
 *
‰ame
, 
uöt32_t
 
∑ge_size
Ë
n€x˚±


195 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

197 
¥iv©e
:

203 
boﬁ
 
	$is_checksum_vÆid_önodb
(
ulöt
 
checksum_fõld1
, ulöà
checksum_fõld2
,

204 c⁄° 
§v_checksum_Æg‹ôhm_t
 
Ægo
) const;

211 
boﬁ
 
	$is_checksum_vÆid_n⁄e
(
ulöt
 
checksum_fõld1
, ulöà
checksum_fõld2
,

212 c⁄° 
§v_checksum_Æg‹ôhm_t
 
Ægo
) const;

220 
boﬁ
 
	$is_checksum_vÆid_¸c32
(
ulöt
 
checksum_fõld1
, ulöà
checksum_fõld2
,

221 c⁄° 
§v_checksum_Æg‹ôhm_t
 
Ægo
,

222 
boﬁ
 
u£_Àgacy_big_ídün
) const;

229 
	$∑ge_w¨n_°ri˘_checksum
(
§v_checksum_Æg‹ôhm_t
 
cuº_Ægo
,

230 
§v_checksum_Æg‹ôhm_t
 
∑ge_checksum
,

231 c⁄° 
∑ge_id_t
 &
∑ge_id
) const;

233 
•a˚_id_t
 
	$•a˚_id
(Ëc⁄° 
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

234 
∑ge_no_t
 
	$∑ge_no
(Ëc⁄° 
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

236 
¥Ÿe˘ed
:

238 
boﬁ
 
m_check_l¢
;

240 c⁄° 
byã
 *
m_ªad_buf
;

242 c⁄° 
∑ge_size_t
 &
m_∑ge_size
;

244 
boﬁ
 
m_skù_checksum
;

245 
	}
};

	@buf0dblwr.h

33 #i‚de‡
buf0dblwr_h


34 
	#buf0dblwr_h


	)

36 
	~"buf0ty≥s.h
"

37 
	~"log0log.h
"

38 
	~"log0ªcv.h
"

39 
	~"ut0byã.h
"

42 
	#DBLWR_V1_EXTENT_SIZE
 
FSP_EXTENT_SIZE


	)

45 
	#TRX_SYS_DBLWR_V1
 (
UNIV_PAGE_SIZE
 - 200)

	)

48 
c⁄°ex¥
 
ulöt
 
	gDBLWR_VER
 = 
FSEG_HEADER_SIZE
;

52 
c⁄°ex¥
 
ulöt
 
	gDBLWR_V1_BLOCK1
 = (4 + 
FSEG_HEADER_SIZE
);

56 
c⁄°ex¥
 
ulöt
 
	gDBLWR_V1_BLOCK2
 = (8 + 
FSEG_HEADER_SIZE
);

58 
«me•a˚
 
	gdblwr
 {

61 
	sBuf„r
 {

64 
ex∂icô
 
Buf„r
(
size_t
 
n_∑ges
Ë
	gn€x˚±


65 : 
m_n_byãs
(
n_∑ges
 * 
univ_∑ge_size
.
physiˇl
()) {

66 
ut_a
(
n_∑ges
 > 0);

68 autÿ
	gn_byãs
 = 
m_n_byãs
 + 
univ_∑ge_size
.
physiˇl
();

70 
	gm_±r_u«lig√d
 = 
°©ic_ˇ°
<
byã
 *>(
ut_zÆloc_nokey
(
n_byãs
));

72 
	gm_±r
 = 
°©ic_ˇ°
<
byã
 *>(
ut_Æign
(
m_±r_u«lig√d
, 
UNIV_PAGE_SIZE
));

74 
ut_a
(
±rdiff_t
(
m_±r
 - 
m_±r_u«lig√d
) <=

75 (
ssize_t
)
univ_∑ge_size
.
physiˇl
());

77 
	gm_√xt
 = 
m_±r
;

81 ~
Buf„r
(Ë
	gn€x˚±
 {

82 i‡(
	gm_±r_u«lig√d
 !
nuŒ±r
) {

83 
ut_‰ì
(
m_±r_u«lig√d
);

85 
	gm_±r_u«lig√d
 = 
nuŒ±r
;

90 
boﬁ
 
≠≥nd
(c⁄° *
±r
, 
size_t
 
n_byãs
Ë
	gn€x˚±
 {

91 
ut_a
(
m_√xt
 >
m_±r
 && m_√xà<m_±∏+ 
m_n_byãs
);

93 i‡(
	gm_√xt
 + 
	guniv_∑ge_size
.
physiˇl
(Ë> 
	gm_±r
 + 
	gm_n_byãs
) {

94  
	gÁl£
;

97 
mem˝y
(
m_√xt
, 
±r
, 
n_byãs
);

98 
	gm_√xt
 +
univ_∑ge_size
.
physiˇl
();

100  
	gåue
;

104 
byã
 *
begö
(Ë
	gn€x˚±
 {  
	gm_±r
; }

107 c⁄° 
byã
 *
begö
(Ëc⁄° 
	gn€x˚±
 {  
	gm_±r
; }

110 
size_t
 
size
(Ëc⁄° 
	gn€x˚±
 {

111 
ut_a
(
m_√xt
 >
m_±r
);

112  
	g°d
::
±rdiff_t
(
m_√xt
 - 
m_±r
);

116 
size_t
 
ˇ∑côy
(Ëc⁄° 
	gn€x˚±
 {  
	gm_n_byãs
; }

119 
boﬁ
 
em±y
(Ëc⁄° 
	gn€x˚±
 {  
size
() == 0; }

122 
˛ór
(Ë
	gn€x˚±
 { 
	gm_√xt
 = 
m_±r
; }

127 
byã
 *
	gm_±r
{};

130 
byã
 *
	gm_√xt
{};

133 
byã
 *
	gm_±r_u«lig√d
{};

136 c⁄° 
size_t
 
	gm_n_byãs
{};

139 
Buf„r
(c⁄° Buf„∏&Ë
dñëe
;

140 
Buf„r
(c⁄° Buf„∏&&Ë
dñëe
;

141 
	gBuf„r
 &
	g›î©‹
=(
Buf„r
 &&Ë
dñëe
;

142 
	gBuf„r
 &
	g›î©‹
=(c⁄° 
Buf„r
 &Ë
dñëe
;

147 #i‚de‡
UNIV_HOTBACKUP


150 
˛ass
 
	gbuf_∑ge_t
;

151 
˛ass
 
	gDoubÀ_wrôe
;

153 
«me•a˚
 
	gdblwr
 {

156 
°d
::
°rög
 
dú
;

158 #ifde‡
UNIV_DEBUG


160 
∑ge_id_t
 
F‹˚_¸ash
;

166 
dbîr_t
 
›í
(
boﬁ
 
¸óã_√w_db
Ë
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

169 
˛o£
(Ë
	gn€x˚±
;

174 
f‹˚_Êush
(
buf_Êush_t
 
Êush_ty≥
, 
uöt32_t
 
buf_poﬁ_ödex
Ë
	gn€x˚±
;

182 
dbîr_t
 
wrôe
(
buf_Êush_t
 
Êush_ty≥
, 
buf_∑ge_t
 *
b∑ge
, 
boﬁ
 
sync
Ë
n€x˚±


183 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

189 
	gfûe
::
Block
 *
gë_í¸y±ed_‰ame
(
buf_∑ge_t
 *
b∑ge
, 
uöt32_t
 &
Àn
Ë
n€x˚±


190 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

195 
wrôe_com∂ëe
(
buf_∑ge_t
 *
b∑ge
, 
buf_Êush_t
 
Êush_ty≥
Ë
	gn€x˚±
;

198 
ª£t_fûes
(Ë
	gn€x˚±
;

200 
«me•a˚
 
	gv1
 {

203 
dbîr_t
 
öô
(Ë
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

207 
dbîr_t
 
¸óã
(Ë
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

213 
boﬁ
 
is_öside
(
∑ge_no_t
 
∑ge_no
Ë
n€x˚±


214 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

222 
«me•a˚
 
	gdblwr
 {

225 
ul⁄g
 
n_∑ges
;

228 
boﬁ
 
íabÀd
;

232 
ul⁄g
 
n_fûes
;

235 
ul⁄g
 
b©ch_size
;

238 
£t
();

240 
«me•a˚
 
	gªcv
 {

242 
˛ass
 
	gPages
;

246 
¸óã
(
Pages
 *&
∑ges
Ë
	gn€x˚±
;

252 
dbîr_t
 
lﬂd
(
Pages
 *
∑ges
Ë
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

258 
ªcovî
(
Pages
 *
∑ges
, 
fû_•a˚_t
 *
•a˚
Ë
	gn€x˚±
;

265 c⁄° 
byã
 *
föd
(c⁄° 
Pages
 *
∑ges
, c⁄° 
∑ge_id_t
 &
∑ge_id
Ë
n€x˚±


266 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

271 
check_missög_èbÀ•a˚s
(c⁄° 
Pages
 *
∑ges
Ë
	gn€x˚±
;

275 
de°roy
(
Pages
 *&
∑ges
Ë
	gn€x˚±
;

278 ˛as†
	cDBLWR
 {

279 
	gpublic
:

281 
ex∂icô
 
DBLWR
(Ë
n€x˚±
 { 
¸óã
(
m_∑ges
); }

284 ~
DBLWR
(Ë
	gn€x˚±
 { 
de°roy
(
m_∑ges
); }

287 
boﬁ
 
em±y
(Ëc⁄° 
	gn€x˚±
 {  (
	gm_∑ges
 =
nuŒ±r
); }

291 
dbîr_t
 
lﬂd
(Ë
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

292  (
	gdblwr
::
ªcv
::
lﬂd
(
m_∑ges
));

299 
ªcovî
(
fû_•a˚_t
 *
•a˚
 = 
nuŒ±r
Ë
n€x˚±
 {

300 
dblwr
::
ªcv
::
ªcovî
(
m_∑ges
, 
•a˚
);

308 c⁄° 
byã
 *
föd
(c⁄° 
∑ge_id_t
 &
∑ge_id
Ë
n€x˚±


309 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

310  (
	gdblwr
::
ªcv
::
föd
(
m_∑ges
, 
∑ge_id
));

316 
check_missög_èbÀ•a˚s
(Ë
	gn€x˚±
 {

317 
	gdblwr
::
ªcv
::
check_missög_èbÀ•a˚s
(
m_∑ges
);

320 #i‚de‡
UNIV_HOTBACKUP


322 
ªcovîed
(Ë
	gn€x˚±
 { 
	gdblwr
::
ª£t_fûes
(); }

326 
DBLWR
(c⁄° DBLWR &Ë
dñëe
;

327 
DBLWR
(c⁄° DBLWR &&Ë
dñëe
;

328 
	gDBLWR
 &
	g›î©‹
=(
DBLWR
 &&Ë
dñëe
;

329 
	gDBLWR
 &
	g›î©‹
=(c⁄° 
DBLWR
 &Ë
dñëe
;

331 
	g¥iv©e
:

333 
Pages
 *
m_∑ges
{};

337 #ifde‡
UNIV_DEBUG


341 
boﬁ
 
	$has_í¸y±ed_∑ges
(Ë
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

343 
	}
}

	@buf0dump.h

33 #i‚de‡
buf0dump_h


34 
	#buf0dump_h


	)

36 
	~"univ.i
"

42 
buf_dump_°¨t
();

48 
buf_lﬂd_°¨t
();

53 
buf_lﬂd_ab‹t
();

58 
buf_dump_thªad
();

63 
buf_dump_gíî©e_∑th
(*
∑th
, 
size_t
 
∑th_size
);

	@buf0flu.h

33 #i‚de‡
buf0Êu_h


34 
	#buf0Êu_h


	)

36 
	~"buf0ty≥s.h
"

37 
	~"log0log.h
"

38 
	~"univ.i
"

39 
	~"ut0byã.h
"

41 #i‚de‡
UNIV_HOTBACKUP


43 
boﬁ
 
buf_Êush_∑ge_˛ó√r_is_a˘ive
();

45 #ifde‡
UNIV_DEBUG


48 
boﬁ
 
önodb_∑ge_˛ó√r_dißbÀd_debug
;

53 
os_evít_t
 
buf_Êush_evít
;

56 
os_evít_t
 
buf_Êush_tick_evít
;

58 
˛ass
 
	gut_°age_Æãr_t
;

62 
buf_Êush_ªmove
(
buf_∑ge_t
 *
b∑ge
);

67 
buf_Êush_ªloˇã_⁄_Êush_li°
(

68 
buf_∑ge_t
 *
b∑ge
,

69 
buf_∑ge_t
 *
d∑ge
);

73 
buf_Êush_wrôe_com∂ëe
(
buf_∑ge_t
 *
b∑ge
);

80 
boﬁ
 
∑ge_is_uncom¥es£d_ty≥
(c⁄° 
byã
 *
∑ge
);

89 
buf_Êush_öô_f‹_wrôög
(c⁄° 
buf_block_t
 *
block
, 
byã
 *
∑ge
,

90 *
∑ge_zù_
, 
l¢_t
 
√we°_l¢
,

91 
boﬁ
 
skù_checksum
, boﬁ 
skù_l¢_check
);

93 #i‚de‡
UNIV_HOTBACKUP


94 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_IBUF_DEBUG


102 
boﬁ
 
	$buf_Êush_∑ge_åy
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_block_t
 *
block
)

103 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

118 
boﬁ
 
	`buf_Êush_do_b©ch
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_Êush_t
 
ty≥
, 
ulöt
 
mö_n
,

119 
l¢_t
 
l¢_limô
, 
ulöt
 *
n_¥o˚s£d
);

134 
boﬁ
 
	`buf_Êush_li°s
(
ulöt
 
mö_n
, 
l¢_t
 
l¢_limô
, ulöà*
n_¥o˚s£d
);

144 
boﬁ
 
	`buf_Êush_sögÀ_∑ge_‰om_LRU
(
buf_poﬁ_t
 *
buf_poﬁ
);

149 
	`buf_Êush_waô_b©ch_íd
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_Êush_t
 
Êush_ty≥
);

156 
	`buf_Êush_waô_b©ch_íd_waô_⁄ly
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_Êush_t
 
ty≥
);

165 
UNIV_INLINE


166 
	`buf_Êush_nŸe_modifiˇti⁄
(
buf_block_t
 *
block
, 
l¢_t
 
°¨t_l¢
,

167 
l¢_t
 
íd_l¢
, 
FlushOb£rvî
 *
ob£rvî
);

173 
UNIV_INLINE


174 
	`buf_Êush_ªcv_nŸe_modifiˇti⁄
(
buf_block_t
 *
block
, 
l¢_t
 
°¨t_l¢
,

175 
l¢_t
 
íd_l¢
);

183 
boﬁ
 
	`buf_Êush_ªady_f‹_ª∂a˚
(
buf_∑ge_t
 *
b∑ge
);

185 #ifde‡
UNIV_DEBUG


186 
SYS_VAR
;

194 
	`buf_Êush_∑ge_˛ó√r_dißbÀd_debug_upd©e
(
THD
 *
thd
, 
SYS_VAR
 *
v¨
,

195 *
v¨_±r
,

196 c⁄° *
ßve
);

201 
	`buf_Êush_∑ge_˛ó√r_öô
(
size_t
 
n_∑ge_˛ó√rs
);

204 
	`buf_Êush_waô_LRU_b©ch_íd
();

206 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_BUF_DEBUG


209 
boﬁ
 
	`buf_Êush_vÆid©e
(
buf_poﬁ_t
 *
buf_poﬁ
);

215 
	`buf_Êush_öô_Êush_rbt
();

218 
	`buf_Êush_‰ì_Êush_rbt
();

231 
iboﬁ
 
	`buf_Êush_∑ge
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_∑ge_t
 *
b∑ge
,

232 
buf_Êush_t
 
Êush_ty≥
, 
boﬁ
 
sync
);

238 
boﬁ
 
	$buf_Êush_ªady_f‹_Êush
(
buf_∑ge_t
 *
b∑ge
, 
buf_Êush_t
 
Êush_ty≥
)

239 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

244 
ulöt
 
	`buf_poﬁ_gë_dúty_∑ges_cou¡
(

245 
buf_poﬁ_t
 *
buf_poﬁ
,

246 
•a˚_id_t
 
id
,

247 
FlushOb£rvî
 *
ob£rvî
);

252 
	`buf_Êush_sync_Æl_buf_poﬁs
();

259 
boﬁ
 
	`buf_¨e_Êush_li°s_em±y_vÆid©e
();

266 ˛as†
	cFlushOb£rvî
 {

267 
public
:

274 
	$FlushOb£rvî
(
•a˚_id_t
 
•a˚_id
, 
åx_t
 *
åx
,

275 
ut_°age_Æãr_t
 *
°age
Ë
n€x˚±
;

278 ~
	$FlushOb£rvî
(Ë
n€x˚±
;

284 
boﬁ
 
	$is_com∂ëe
(
size_t
 
ö°™˚_no
) {

285  
m_Êushed
[
ö°™˚_no
].
	`„tch_add
(0, 
°d
::
mem‹y_‹dî_ªœxed
) ==

286 
m_ªmoved
[
ö°™˚_no
].
	`„tch_add
(0, 
°d
::
mem‹y_‹dî_ªœxed
) ||

287 
m_öãºu±ed
;

291 
	$öãºu±ed
(Ë{ 
m_öãºu±ed
 = 
åue
; 
	}
}

295 
boﬁ
 
check_öãºu±ed
();

298 
Êush
();

303 
nŸify_Êush
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_∑ge_t
 *
b∑ge
);

308 
nŸify_ªmove
(
buf_poﬁ_t
 *
buf_poﬁ
, 
buf_∑ge_t
 *
b∑ge
);

310 
	g¥iv©e
:

311 
usög
 
Cou¡î
 = 
°d
::
©omic_öt
;

312 
usög
 
	gCou¡îs
 = 
°d
::
ve˘‹
<
Cou¡î
, 
	gut_Æloˇt‹
<
	gCou¡î
>>;

315 
•a˚_id_t
 
	gm_•a˚_id
{};

318 
åx_t
 *
	gm_åx
{};

325 
ut_°age_Æãr_t
 *
	gm_°age
{};

328 
Cou¡îs
 
	gm_Êushed
{};

331 
Cou¡îs
 
	gm_ªmoved
{};

334 
Cou¡î
 
	gm_n_ªf_cou¡
{};

337 
boﬁ
 
	gm_öãºu±ed
{};

339 
l¢_t
 
	$gë_Êush_sync_l¢
(Ë
n€x˚±
;

342 
	~"buf0Êu.ic
"

	@buf0flu.ic

33 
	~"buf0buf.h
"

34 
	~"f•0ty≥s.h
"

35 
	~"må0må.h
"

36 
	~"§v0§v.h
"

38 #i‚de‡
UNIV_HOTBACKUP


40 
buf_Êush_ö£π_öto_Êush_li°
(

41 
buf_poﬁ_t
 *
buf_poﬁ
,

42 
buf_block_t
 *
block
,

43 
l¢_t
 
l¢
);

48 
buf_Êush_ö£π_s‹ãd_öto_Êush_li°
(

49 
buf_poﬁ_t
 *
buf_poﬁ
,

50 
buf_block_t
 *
block
,

51 
l¢_t
 
l¢
);

56 
UNIV_INLINE


57 
	$buf_Êush_nŸe_modifiˇti⁄
(

58 
buf_block_t
 *
block
,

59 
l¢_t
 
°¨t_l¢
,

61 
l¢_t
 
íd_l¢
,

63 
FlushOb£rvî
 *
ob£rvî
)

65 #ifde‡
UNIV_DEBUG


69 
	`ut_ad
(!
§v_ªad_⁄ly_mode
 ||

70 
	`f•_is_sy°em_ãmp‹¨y
(
block
->
∑ge
.
id
.
	`•a˚
()));

71 
	`ut_ad
(
	`buf_block_gë_°©e
(
block
Ë=
BUF_BLOCK_FILE_PAGE
);

72 
	`ut_ad
(
block
->
∑ge
.
buf_fix_cou¡
 > 0);

74 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_block
(
block
);

76 
	`ut_ad
(!
	`buf_Êush_li°_muãx_own
(
buf_poﬁ
));

80 
	`muãx_íãr
(&
block
->
muãx
);

82 i‡(
íd_l¢
 != 0) {

83 
	`ut_ad
(
block
->
∑ge
.
	`gë_√we°_l¢
(Ë<
íd_l¢
);

84 
block
->
∑ge
.
	`£t_√we°_l¢
(
íd_l¢
);

95 i‡(
ob£rvî
 !
nuŒ±r
) {

96 
block
->
∑ge
.
	`£t_Êush_ob£rvî
(
ob£rvî
);

98 
block
->
∑ge
.
	`ª£t_Êush_ob£rvî
();

101 i‡(!
block
->
∑ge
.
	`is_dúty
()) {

102 autÿ
buf_poﬁ
 = 
	`buf_poﬁ_‰om_block
(
block
);

104 
	`buf_Êush_ö£π_öto_Êush_li°
(
buf_poﬁ
, 
block
, 
°¨t_l¢
);

105 } i‡(
°¨t_l¢
 != 0) {

106 
	`ut_ad
(
block
->
∑ge
.
	`gë_ﬁde°_l¢
(Ë<
°¨t_l¢
);

109 
	`buf_∑ge_muãx_exô
(
block
);

111 
§v_°©s
.
buf_poﬁ_wrôe_ªque°s
.
	`öc
();

112 
	}
}

115 
UNIV_INLINE


116 
	$buf_Êush_ªcv_nŸe_modifiˇti⁄
(

117 
buf_block_t
 *
block
,

118 
l¢_t
 
°¨t_l¢
,

120 
l¢_t
 
íd_l¢
)

123 #ifde‡
UNIV_DEBUG


125 
	`ut_ad
(!
§v_ªad_⁄ly_mode
);

126 
	`ut_ad
(
	`buf_block_gë_°©e
(
block
Ë=
BUF_BLOCK_FILE_PAGE
);

127 
	`ut_ad
(
block
->
∑ge
.
buf_fix_cou¡
 > 0);

129 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_block
(
block
);

131 
	`ut_ad
(!
	`buf_Êush_li°_muãx_own
(
buf_poﬁ
));

133 
	`ut_ad
(
°¨t_l¢
 != 0);

134 
	`ut_ad
(
block
->
∑ge
.
	`gë_√we°_l¢
(Ë<
íd_l¢
);

138 
	`buf_∑ge_muãx_íãr
(
block
);

140 
block
->
∑ge
.
	`£t_√we°_l¢
(
íd_l¢
);

142 i‡(!
block
->
∑ge
.
	`is_dúty
()) {

143 
buf_poﬁ_t
 *
buf_poﬁ
 = 
	`buf_poﬁ_‰om_block
(
block
);

145 
	`buf_Êush_ö£π_s‹ãd_öto_Êush_li°
(
buf_poﬁ
, 
block
, 
°¨t_l¢
);

147 
	`ut_ad
(
block
->
∑ge
.
	`gë_ﬁde°_l¢
(Ë<
°¨t_l¢
);

150 
	`buf_∑ge_muãx_exô
(
block
);

151 
	}
}

	@buf0lru.h

27 
	~<sys/ty≥s.h
>

35 #i‚de‡
buf0Ãu_h


36 
	#buf0Ãu_h


	)

38 
	~"buf0ty≥s.h
"

39 
	~"univ.i
"

40 #i‚de‡
UNIV_HOTBACKUP


41 
	~"ut0byã.h
"

44 
	gåx_t
;

50 
iboﬁ
 
buf_LRU_buf_poﬁ_ru¬ög_out
();

57 
	#BUF_LRU_OLD_MIN_LEN
 512

	)

68 
buf_LRU_Êush_‹_ªmove_∑ges
(
•a˚_id_t
 
id
, 
buf_ªmove_t
 
buf_ªmove
,

69 c⁄° 
åx_t
 *
åx
, 
boﬁ
 
°ri˘
 = 
åue
);

71 #i‚de‡
UNIV_HOTBACKUP


72 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_BUF_DEBUG


75 
buf_LRU_ö£π_zù_˛ón
(
buf_∑ge_t
 *
b∑ge
);

89 
boﬁ
 
	$buf_LRU_‰ì_∑ge
(
buf_∑ge_t
 *
b∑ge
, 
boﬁ
 
zù
)

90 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

97 
boﬁ
 
	$buf_LRU_sˇn_™d_‰ì_block
(
buf_poﬁ_t
 *
buf_poﬁ
, 
boﬁ
 
sˇn_Æl
)

98 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

104 
buf_block_t
 *
	`buf_LRU_gë_‰ì_⁄ly
(
buf_poﬁ_t
 *
buf_poﬁ
);

130 
buf_block_t
 *
	$buf_LRU_gë_‰ì_block
(
buf_poﬁ_t
 *
buf_poﬁ
)

131 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

137 
iboﬁ
 
	`buf_LRU_evi˘_‰om_unzù_LRU
(
buf_poﬁ_t
 *
buf_poﬁ
);

141 
	`buf_LRU_block_‰ì_n⁄_fûe_∑ge
(
buf_block_t
 *
block
);

146 
	`buf_LRU_add_block
(
buf_∑ge_t
 *
b∑ge
,

147 
iboﬁ
 
ﬁd
);

156 
	`buf_unzù_LRU_add_block
(
buf_block_t
 *
block
, 
iboﬁ
 
ﬁd
);

160 
	`buf_LRU_make_block_young
(
buf_∑ge_t
 *
b∑ge
);

164 
	`buf_LRU_make_block_ﬁd
(
buf_∑ge_t
 *
b∑ge
);

168 
uöt
 
	`buf_LRU_ﬁd_øtio_upd©e
(

169 
uöt
 
ﬁd_p˘
,

171 
iboﬁ
 
adju°
);

176 
	`buf_LRU_°©_upd©e
();

188 
	`buf_LRU_‰ì_⁄e_∑ge
(
buf_∑ge_t
 *
b∑ge
, 
boﬁ
 
zù
, boﬁ 
ign‹e_c⁄ã¡
);

193 
	`buf_LRU_adju°_hp
(
buf_poﬁ_t
 *
buf_poﬁ
, c⁄° 
buf_∑ge_t
 *
b∑ge
);

195 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_BUF_DEBUG


198 
iboﬁ
 
	`buf_LRU_vÆid©e
();

200 
usög
 
S∑˚_Re„ªn˚s
 = 
°d
::
m≠
<
fû_•a˚_t
 *, 
size_t
>;

205 
S∑˚_Re„ªn˚s
 
	`buf_LRU_cou¡_•a˚_ª„ªn˚s
();

208 #i‡
deföed
 
UNIV_DEBUG_PRINT
 || deföed 
UNIV_DEBUG
 || deföed 
UNIV_BUF_DEBUG


210 
	`buf_LRU_¥öt
();

216 
	#BUF_LRU_OLD_RATIO_DIV
 1024

	)

220 
	#BUF_LRU_OLD_RATIO_MAX
 
BUF_LRU_OLD_RATIO_DIV


	)

226 
	#BUF_LRU_OLD_RATIO_MIN
 51

	)

228 #i‡
BUF_LRU_OLD_RATIO_MIN
 >
BUF_LRU_OLD_RATIO_MAX


231 #i‡
BUF_LRU_OLD_RATIO_MAX
 > 
BUF_LRU_OLD_RATIO_DIV


237 
uöt
 
buf_LRU_ﬁd_thªshﬁd_ms
;

245 
	sbuf_LRU_°©_t
 {

246 
ulöt
 
io
;

247 
ulöt
 
unzù
;

252 
buf_LRU_°©_t
 
buf_LRU_°©_cur
;

256 
buf_LRU_°©_t
 
buf_LRU_°©_sum
;

259 
	#buf_LRU_°©_öc_io
(Ë
buf_LRU_°©_cur
.
io
++

	)

261 
	#buf_LRU_°©_öc_unzù
(Ë
buf_LRU_°©_cur
.
unzù
++

	)

	@buf0rea.h

33 #i‚de‡
buf0ªa_h


34 
	#buf0ªa_h


	)

36 
	~"buf0buf.h
"

37 
	~"buf0ty≥s.h
"

57 
ulöt
 
buf_ªad_∑ge_low
(
dbîr_t
 *
îr
, 
boﬁ
 
sync
, ulöà
ty≥
, ulöà
mode
,

58 c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

59 
boﬁ
 
unzù
);

68 
boﬁ
 
buf_ªad_∑ge
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
);

78 
boﬁ
 
buf_ªad_∑ge_background
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

79 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
boﬁ
 
sync
);

97 
ulöt
 
buf_ªad_ahód_øndom
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

98 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
boﬁ
 
öside_ibuf
);

105 
size_t
 
buf_phy_ªad_ahód
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

106 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
size_t
 
n_∑ges
);

134 
ulöt
 
buf_ªad_ahód_löór
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

135 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
boﬁ
 
öside_ibuf
);

147 
buf_ªad_ibuf_mîge_∑ges
(
boﬁ
 
sync
, c⁄° 
•a˚_id_t
 *
•a˚_ids
,

148 c⁄° 
∑ge_no_t
 *
∑ge_nos
, 
ulöt
 
n_°‹ed
);

158 
buf_ªad_ªcv_∑ges
(
boﬁ
 
sync
, 
•a˚_id_t
 
•a˚_id
,

159 c⁄° 
∑ge_no_t
 *
∑ge_nos
, 
ulöt
 
n_°‹ed
);

163 
	#BUF_READ_AHEAD_AREA
(
b
Ë((b)->
ªad_ahód_¨ó
)

	)

168 
	#BUF_READ_IBUF_PAGES_ONLY
 131

	)

170 
	#BUF_READ_ANY_PAGE
 132

	)

	@buf0stats.h

33 #i‚de‡
buf0°©s_h


34 
	#buf0°©s_h


	)

36 
	~"univ.i
"

38 
	~"di˘0ty≥s.h
"

39 
	~"f•0sys•a˚.h
"

40 
	~"ibuf0ibuf.h
"

41 
	~"ut0lock_‰ì_hash.h
"

42 
	~"ut0√w.h
"

48 ˛as†
	cbuf_°©_≥r_ödex_t
 {

49 
	mpublic
:

51 
	$buf_°©_≥r_ödex_t
() {

52 
m_°‹e
 =

53 
	`UT_NEW
(
	`ut_lock_‰ì_hash_t
(1024, 
åue
), 
mem_key_buf_°©_≥r_ödex_t
);

57 ~
	$buf_°©_≥r_ödex_t
(Ë{ 
	`UT_DELETE
(
m_°‹e
); 
	}
}

61 
	$öc
(c⁄° 
ödex_id_t
 &
id
) {

62 i‡(
	`should_skù
(
id
)) {

66 
m_°‹e
->
	`öc
(
id
.
	`c⁄v_to_öt
());

67 
	}
}

71 
	$dec
(c⁄° 
ödex_id_t
 &
id
) {

72 i‡(
	`should_skù
(
id
)) {

76 
m_°‹e
->
	`dec
(
id
.
	`c⁄v_to_öt
());

77 
	}
}

82 
uöt64_t
 
	$gë
(c⁄° 
ödex_id_t
 &
id
) {

83 i‡(
	`should_skù
(
id
)) {

87 c⁄° 
öt64_t
 
ªt
 = 
m_°‹e
->
	`gë
(
id
.
	`c⁄v_to_öt
());

89 i‡(
ªt
 =
ut_lock_‰ì_hash_t
::
NOT_FOUND
) {

95  (
°©ic_ˇ°
<
uöt64_t
>(
ªt
 >= 0 ?Ñet : 0));

96 
	}
}

98 
	g¥iv©e
:

102 
boﬁ
 
	$should_skù
(c⁄° 
ödex_id_t
 &
id
) {

103 c⁄° 
boﬁ
 
is_ãmp
 = 
	`f•_is_sy°em_ãmp‹¨y
(
id
.
m_•a˚_id
);

105  (
id
.
	`is_ibuf
(Ë|| 
is_ãmp
 ||

106 (
id
.
m_ödex_id
 & 0xFFFFFFFF00000000ULL) != 0);

107 
	}
}

110 
ut_lock_‰ì_hash_t
 *
	gm_°‹e
;

115 
buf_°©_≥r_ödex_t
 *
buf_°©_≥r_ödex
;

	@buf0types.h

33 #i‚de‡
buf0ty≥s_h


34 
	#buf0ty≥s_h


	)

36 
	~"os0evít.h
"

37 
	~"sync0rw.h
"

38 
	~"ut0muãx.h
"

39 
	~"ut0ut.h
"

42 
	#BUF_NO_CHECKSUM_MAGIC
 0xDEADBEEFUL

	)

45 
˛ass
 
	gbuf_∑ge_t
;

47 
	gbuf_block_t
;

49 
	gbuf_chunk_t
;

51 
	gbuf_poﬁ_t
;

53 
	gbuf_poﬁ_°©_t
;

55 
	gbuf_buddy_°©_t
;

57 
	gbuf_dblwr_t
;

59 
˛ass
 
	gFlushOb£rvî
;

62 
byã
 
	tbuf_‰ame_t
;

65 
	gbuf_Êush_t
 : 
uöt8_t
 {

67 
BUF_FLUSH_LRU
 = 0,

70 
	gBUF_FLUSH_LIST
,

73 
	gBUF_FLUSH_SINGLE_PAGE
,

76 
	gBUF_FLUSH_N_TYPES


81 
	ebuf_ªmove_t
 {

83 
	mBUF_REMOVE_NONE
,

86 
	mBUF_REMOVE_ALL_NO_WRITE
,

89 
	mBUF_REMOVE_FLUSH_NO_WRITE
,

92 
	mBUF_REMOVE_FLUSH_WRITE


96 
	gbuf_io_fix
 : 
uöt8_t
 {

98 
BUF_IO_NONE
 = 0,

101 
	gBUF_IO_READ
,

104 
	gBUF_IO_WRITE
,

107 
	gBUF_IO_PIN


112 
	e§v_checksum_Æg‹ôhm_t
 {

113 
	mSRV_CHECKSUM_ALGORITHM_CRC32
,

115 
	mSRV_CHECKSUM_ALGORITHM_STRICT_CRC32
,

117 
	mSRV_CHECKSUM_ALGORITHM_INNODB
,

119 
	mSRV_CHECKSUM_ALGORITHM_STRICT_INNODB
,

121 
	mSRV_CHECKSUM_ALGORITHM_NONE
,

123 
	mSRV_CHECKSUM_ALGORITHM_STRICT_NONE


127 
ölöe
 
boﬁ
 
	$is_checksum_°ri˘
(
§v_checksum_Æg‹ôhm_t
 
Ægo
) {

128  (
Ægo
 =
SRV_CHECKSUM_ALGORITHM_STRICT_CRC32
 ||

129 
Ægo
 =
SRV_CHECKSUM_ALGORITHM_STRICT_INNODB
 ||

130 
Ægo
 =
SRV_CHECKSUM_ALGORITHM_STRICT_NONE
);

131 
	}
}

133 
ölöe
 
boﬁ
 
	$is_checksum_°ri˘
(
ulöt
 
Ægo
) {

134  (
Ægo
 =
SRV_CHECKSUM_ALGORITHM_STRICT_CRC32
 ||

135 
Ægo
 =
SRV_CHECKSUM_ALGORITHM_STRICT_INNODB
 ||

136 
Ægo
 =
SRV_CHECKSUM_ALGORITHM_STRICT_NONE
);

137 
	}
}

142 
	#BUF_BUDDY_LOW_SHIFT
 
UNIV_ZIP_SIZE_SHIFT_MIN


	)

145 
	#BUF_BUDDY_LOW
 (1U << 
BUF_BUDDY_LOW_SHIFT
)

	)

148 
	#BUF_BUDDY_SIZES
 (
UNIV_PAGE_SIZE_SHIFT
 - 
BUF_BUDDY_LOW_SHIFT
)

	)

151 
	#BUF_BUDDY_SIZES_MAX
 (
UNIV_PAGE_SIZE_SHIFT_MAX
 - 
BUF_BUDDY_LOW_SHIFT
)

	)

156 
	#BUF_BUDDY_HIGH
 (
BUF_BUDDY_LOW
 << 
BUF_BUDDY_SIZES
)

	)

159 
ib_bpmuãx_t
 
	tBPageMuãx
;

160 
ib_muãx_t
 
	tBufLi°Muãx
;

161 
ib_muãx_t
 
	tFlushLi°Muãx
;

162 
BPageMuãx
 
	tBufPoﬁZùMuãx
;

163 #i‚de‡
UNIV_HOTBACKUP


164 
rw_lock_t
 
	tBPageLock
;

168 ˛as†
	c∑ge_id_t
 {

169 
	mpublic
:

190 
∑ge_id_t
(Ë
dñëe
;

195 
	$∑ge_id_t
(
•a˚_id_t
 
•a˚
, 
∑ge_no_t
 
∑ge_no
)

196 : 
	`m_•a˚
(
•a˚
), 
	$m_∑ge_no
(
∑ge_no
) {}

200 
ölöe
 
•a˚_id_t
 
	$•a˚
(Ëc⁄° {  (
m_•a˚
); 
	}
}

204 
ölöe
 
∑ge_no_t
 
	$∑ge_no
(Ëc⁄° {  (
m_∑ge_no
); 
	}
}

208 
ölöe
 
uöt32_t
 
	$fﬁd
(Ëc⁄° {  (
m_•a˚
 << 20Ë+ m_•a˚ + 
m_∑ge_no
; 
	}
}

213 
ölöe
 
	$ª£t
(
•a˚_id_t
 
•a˚
, 
∑ge_no_t
 
∑ge_no
) {

214 
m_•a˚
 = 
•a˚
;

215 
m_∑ge_no
 = 
∑ge_no
;

216 
	}
}

220 
ölöe
 
	$£t_∑ge_no
(
∑ge_no_t
 
∑ge_no
Ë{ 
m_∑ge_no
 =Öage_no; 
	}
}

225 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
∑ge_id_t
 &
a
) const {

226  (
a
.
•a˚
(Ë=
m_•a˚
 &&á.
∑ge_no
(Ë=
m_∑ge_no
);

232 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
∑ge_id_t
 &
a
Ëc⁄° {  !(*
this
 ==á); }

237 
ölöe
 
boﬁ
 
	g›î©‹
<(c⁄° 
	g∑ge_id_t
 &
	gŸhî
) const {

238  
	gm_•a˚
 < 
	gŸhî
.
•a˚
() ||

239 (
	gm_•a˚
 =
Ÿhî
.
•a˚
(Ë&& 
m_∑ge_no
 < othî.
∑ge_no
());

242 
	g¥iv©e
:

244 
•a˚_id_t
 
m_•a˚
;

247 
∑ge_no_t
 
	gm_∑ge_no
;

249 
‰õnd
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	g∑ge_id_t
 &
	g∑ge_id
);

256 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	g∑ge_id_t
 &
	g∑ge_id
);

	@clone0api.h

32 #i‚de‡
CLONE_API_INCLUDE


33 
	#CLONE_API_INCLUDE


	)

35 
	~"univ.i
"

36 #i‚de‡
UNIV_HOTBACKUP


37 
	~"sql/h™dÀr.h
"

41 
önodb_˛⁄e_gë_ˇ∑bûôy
(
Ha_˛⁄e_Êag£t
 &
Êags
);

52 
önodb_˛⁄e_begö
(
h™dÀπ⁄
 *
ht⁄
, 
THD
 *
thd
, c⁄° 
byã
 *&
loc
,

53 
uöt
 &
loc_Àn
, uöà&
èsk_id
, 
Ha_˛⁄e_ty≥
 
ty≥
,

54 
Ha_˛⁄e_mode
 
mode
);

64 
önodb_˛⁄e_c›y
(
h™dÀπ⁄
 *
ht⁄
, 
THD
 *
thd
, c⁄° 
byã
 *
loc
, 
uöt
 
loc_Àn
,

65 
uöt
 
èsk_id
, 
Ha_˛⁄e_cbk
 *
cbk
);

76 
önodb_˛⁄e_ack
(
h™dÀπ⁄
 *
ht⁄
, 
THD
 *
thd
, c⁄° 
byã
 *
loc
, 
uöt
 
loc_Àn
,

77 
uöt
 
èsk_id
, 
ö_îr
, 
Ha_˛⁄e_cbk
 *
cbk
);

87 
önodb_˛⁄e_íd
(
h™dÀπ⁄
 *
ht⁄
, 
THD
 *
thd
, c⁄° 
byã
 *
loc
, 
uöt
 
loc_Àn
,

88 
uöt
 
èsk_id
, 
ö_îr
);

99 
önodb_˛⁄e_≠∂y_begö
(
h™dÀπ⁄
 *
ht⁄
, 
THD
 *
thd
, c⁄° 
byã
 *&
loc
,

100 
uöt
 &
loc_Àn
, uöà&
èsk_id
, 
Ha_˛⁄e_mode
 
mode
,

101 c⁄° *
d©a_dú
);

112 
önodb_˛⁄e_≠∂y
(
h™dÀπ⁄
 *
ht⁄
, 
THD
 *
thd
, c⁄° 
byã
 *
loc
,

113 
uöt
 
loc_Àn
, uöà
èsk_id
, 
ö_îr
,

114 
Ha_˛⁄e_cbk
 *
cbk
);

124 
önodb_˛⁄e_≠∂y_íd
(
h™dÀπ⁄
 *
ht⁄
, 
THD
 *
thd
, c⁄° 
byã
 *
loc
,

125 
uöt
 
loc_Àn
, uöà
èsk_id
, 
ö_îr
);

128 
˛⁄e_öô_li°_fûes
();

134 
˛⁄e_add_to_li°_fûe
(c⁄° *
li°_fûe_«me
, c⁄° *
fûe_«me
);

137 
˛⁄e_fûes_îr‹
();

139 #ifde‡
UNIV_DEBUG


142 
boﬁ
 
˛⁄e_check_ªcovîy_¸ashpoöt
(boﬁ 
is_˛⁄ed_db
);

147 
˛⁄e_fûes_ªcovîy
(
boﬁ
 
föished
);

151 
˛⁄e_upd©e_gtid_°©us
(
°d
::
°rög
 &
gtids
);

155 
dbîr_t
 
˛⁄e_öô
();

158 
˛⁄e_‰ì
();

163 
boﬁ
 
˛⁄e_m¨k_ab‹t
(boﬁ 
f‹˚
);

166 
˛⁄e_m¨k_a˘ive
();

170 
boﬁ
 
˛⁄e_check_a˘ive
();

175 
boﬁ
 
˛⁄e_m¨k_waô
();

178 
˛⁄e_m¨k_‰ì
();

181 
	#˛⁄e_m¨k_ab‹t
(
_P_
Ë

	)

182 
	#˛⁄e_m¨k_a˘ive
(Ë

	)

188 
boﬁ
 
fix_˛⁄ed_èbÀs
(
THD
 *
thd
);

	@clone0clone.h

32 #i‚de‡
CLONE_CLONE_INCLUDE


33 
	#CLONE_CLONE_INCLUDE


	)

35 
	~<chr⁄o
>

36 
	~"db0îr.h
"

37 
	~"mysql/∂ugö.h
"

38 
	~"sql/h™dÀr.h
"

39 
	~"univ.i
"

40 
	~"ut0muãx.h
"

42 
	~"˛⁄e0desc.h
"

43 
	~"˛⁄e0ª∂.h
"

44 
	~"˛⁄e0¢≠shŸ.h
"

47 
	#CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "˛⁄e" 
OS_PATH_SEPARATOR_STR


	)

50 c⁄° 
size_t
 
	gCLONE_INNODB_FILE_LEN
 = 64;

52 #ifde‡
UNIV_DEBUG


54 c⁄° 
	gCLONE_INNODB_RECOVERY_CRASH_POINT
[] =

55 
CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "status_crash_point";

59 c⁄° 
	gCLONE_INNODB_IN_PROGRESS_FILE
[] =

60 
CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "status_in_progress";

63 c⁄° 
	gCLONE_INNODB_ERROR_FILE
[] =

64 
CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "status_error";

67 c⁄° 
	gCLONE_INNODB_FIXUP_FILE
[] =

68 
CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "status_fix";

71 c⁄° 
	gCLONE_INNODB_RECOVERY_FILE
[] =

72 
CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "status_recovery";

75 c⁄° 
	gCLONE_INNODB_NEW_FILES
[] =

76 
CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "new_files";

79 c⁄° 
	gCLONE_INNODB_REPLACED_FILES
[] =

80 
CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "replace_files";

83 c⁄° 
	gCLONE_INNODB_OLD_FILES
[] =

84 
CLONE_FILES_DIR
 
OS_FILE_PREFIX
 "old_files";

87 c⁄° 
	gCLONE_INNODB_REPLACED_FILE_EXTN
[] = "." 
OS_FILE_PREFIX
 "clone";

90 c⁄° 
	gCLONE_INNODB_SAVED_FILE_EXTN
[] = "." 
OS_FILE_PREFIX
 "clone_save";

92 
usög
 
	gCl⁄e_M£c
 = 
°d
::
chr⁄o
::
mûli£c⁄ds
;

93 
usög
 
	gCl⁄e_Sec
 = 
°d
::
chr⁄o
::
£c⁄ds
;

94 
usög
 
	gCl⁄e_Mö
 = 
°d
::
chr⁄o
::
möuãs
;

97 c⁄° 
Cl⁄e_M£c
 
	gCLONE_DEF_SLEEP
{100};

100 c⁄° 
Cl⁄e_Sec
 
	gCLONE_DEF_ALERT_INTERVAL
{5};

103 c⁄° 
Cl⁄e_Mö
 
	gCLONE_DEF_TIMEOUT
{30};

106 
	eCl⁄e_Sy°em_Sèã
 {

107 
	mCLONE_SYS_INACTIVE
,

108 
	mCLONE_SYS_ACTIVE
,

109 
	mCLONE_SYS_ABORT


112 
usög
 
	gCl⁄e_Sys_Sèã
 = 
°d
::
©omic
<
Cl⁄e_Sy°em_Sèã
>;

115 
	eCl⁄e_H™dÀ_Sèã
 {

116 
	mCLONE_STATE_INIT
 = 1,

117 
	mCLONE_STATE_ACTIVE
,

118 
	mCLONE_STATE_IDLE
,

119 
	mCLONE_STATE_ABORT


123 
	eCl⁄e_Task_Sèã
 { 
	mCLONE_TASK_INACTIVE
 = 1, 
	mCLONE_TASK_ACTIVE
 };

126 c⁄° 
	gMAX_SNAPSHOTS
 = 1;

129 c⁄° 
	gMAX_CLONES
 = 1;

132 c⁄° 
	gCLONE_ARR_SIZE
 = 2 * 
MAX_CLONES
;

135 c⁄° 
	gSNAPSHOT_ARR_SIZE
 = 2 * 
MAX_SNAPSHOTS
;

139 
	sCl⁄e_Task
 {

141 
Cl⁄e_Task_Mëa
 
	mm_èsk_mëa
;

144 
Cl⁄e_Task_Sèã
 
	mm_èsk_°©e
;

147 
byã
 *
	mm_£rül_desc
;

150 
uöt
 
	mm_Æloc_Àn
;

153 
pfs_os_fûe_t
 
	mm_cuºít_fûe_des
;

156 
uöt
 
	mm_cuºít_fûe_ödex
;

159 
boﬁ
 
	mm_fûe_ˇche
;

162 
boﬁ
 
	mm_is_ma°î
;

165 
boﬁ
 
	mm_has_thd
;

167 #ifde‡
UNIV_DEBUG


169 
boﬁ
 
	mm_ign‹e_sync
;

172 
	mm_debug_cou¡î
;

176 
byã
 *
	mm_cuºít_buf„r
;

179 
uöt
 
	mm_buf„r_Æloc_Àn
;

182 
uöt32_t
 
	mm_d©a_size
;

185 
˛ass
 
	gCl⁄e_H™dÀ
;

188 ˛as†
	cCl⁄e_Task_M™agî
 {

189 
	mpublic
:

192 
öô
(
Cl⁄e_S«pshŸ
 *
¢≠shŸ
);

196 
ib_muãx_t
 *
	$gë_muãx
(Ë{  (&
m_°©e_muãx
); }

201 
	`h™dÀ_îr‹_Ÿhî_èsk
(
boﬁ
 
øi£_îr‹
);

206 
	$£t_îr‹
(
îr
, c⁄° *
fûe_«me
) {

207 
	`muãx_íãr
(&
m_°©e_muãx
);

209 
ib
::
	`öfo
(
ER_IB_CLONE_OPERATION
Ë<< "Cl⁄êSë Eº‹ code: " << 
îr


210 << " Saved Eº‹ code: " << 
m_ßved_îr‹
;

214 i‡(
m_ßved_îr‹
 =0 || 
	`is_√tw‹k_îr‹
(m_saved_error)) {

215 
m_ßved_îr‹
 = 
îr
;

217 i‡(
fûe_«me
 !
nuŒ±r
) {

218 
	`ut_ad
(
m_îr_fûe_«me
 !
nuŒ±r
);

219 
	`ut_ad
(
m_îr_fûe_Àn
 != 0);

221 
	`°∫˝y
(
m_îr_fûe_«me
, 
fûe_«me
, 
m_îr_fûe_Àn
);

225 
	`muãx_exô
(&
m_°©e_muãx
);

226 
	}
}

234 
add_èsk
(
THD
 *
thd
, c⁄° 
byã
 *
ªf_loc
, 
uöt
 
loc_Àn
, uöà&
èsk_id
);

241 
boﬁ
 
dr›_èsk
(
THD
 *
thd
, 
uöt
 
èsk_id
, boﬁ &
is_ma°î
);

245 
	$ª£t_chunk
(
Cl⁄e_Task
 *
èsk
) {

246 
	`ut_ad
(
	`muãx_own
(&
m_°©e_muãx
));

249 
èsk
->
m_èsk_mëa
.
m_chunk_num
 = 0;

250 
èsk
->
m_èsk_mëa
.
m_block_num
 = 0;

252 i‡(
èsk
->
m_d©a_size
 > 0) {

253 
	`ut_ad
(
	`gë_°©e
(Ë!
CLONE_SNAPSHOT_NONE
);

254 
	`ut_ad
(
	`gë_°©e
(Ë!
CLONE_SNAPSHOT_INIT
);

255 
	`ut_ad
(
	`gë_°©e
(Ë!
CLONE_SNAPSHOT_DONE
);

257 autÿ&
m⁄ô‹
 = 
m_˛⁄e_¢≠shŸ
->
	`gë_˛⁄e_m⁄ô‹
();

259 
m⁄ô‹
.
	`upd©e_w‹k
(
èsk
->
m_d©a_size
);

262 
èsk
->
m_d©a_size
 = 0;

263 
	}
}

268 
Cl⁄e_Task
 *
	$gë_èsk_by_ödex
(
uöt
 
ödex
) {

269 autÿ
èsk
 = (
m_˛⁄e_èsks
 + 
ödex
);

270 
	`ut_ad
(
èsk
->
m_èsk_°©e
 =
CLONE_TASK_ACTIVE
);

272  (
èsk
);

273 
	}
}

281 
ª£rve_√xt_chunk
(
Cl⁄e_Task
 *
èsk
, 
uöt32_t
 &
ªt_chunk
,

282 
uöt32_t
 &
ªt_block
);

288 
£t_chunk
(
Cl⁄e_Task
 *
èsk
, 
Cl⁄e_Task_Mëa
 *
√w_mëa
);

292 
add_öcom∂ëe_chunk
(
Cl⁄e_Task
 *
èsk
);

295 
öô_°©e
();

300 
ªöô_c›y_°©e
(c⁄° 
byã
 *
loc
, 
uöt
 
loc_Àn
);

308 
ªöô_≠∂y_°©e
(c⁄° 
byã
 *
ªf_loc
, 
uöt
 
ªf_Àn
, byã *&
√w_loc
,

309 
uöt
 &
√w_Àn
, uöà&
Æloc_Àn
);

312 
	$ª£t_å™sôi⁄
() {

313 
m_num_èsks_å™sô
 = 0;

314 
m_num_èsks_föished
 = 0;

315 
m_√xt_°©e
 = 
CLONE_SNAPSHOT_NONE
;

316 
	}
}

319 
	$ª£t_îr‹
() {

320 
m_ßved_îr‹
 = 0;

321 
	`°∫˝y
(
m_îr_fûe_«me
, "Cl⁄êFûe", 
m_îr_fûe_Àn
);

322 
	}
}

326 
S«pshŸ_Sèã
 
	$gë_°©e
(Ë{  (
m_cuºít_°©e
); 
	}
}

330 
boﬁ
 
	$ö_å™sô_°©e
(Ë{  (
m_√xt_°©e
 !
CLONE_SNAPSHOT_NONE
); 
	}
}

334 
Cl⁄e_S«pshŸ
 *
	$gë_¢≠shŸ
(Ë{  (
m_˛⁄e_¢≠shŸ
); 
	}
}

345 
ch™ge_°©e
(
Cl⁄e_Task
 *
èsk
, 
Cl⁄e_Desc_Sèã
 *
°©e_desc
,

346 
S«pshŸ_Sèã
 
√w_°©e
, 
Cl⁄e_AÀπ_Func
 
cbk
,

347 
uöt
 &
num_waô
);

356 
check_°©e
(
Cl⁄e_Task
 *
èsk
, 
S«pshŸ_Sèã
 
√w_°©e
, 
boﬁ
 
exô_⁄_waô
,

357 
ö_îr
, 
uöt32_t
 &
num_waô
);

362 
boﬁ
 
	$is_ª°¨t_mëad©a
(
Cl⁄e_Task
 *
èsk
) {

363 i‡(
èsk
->
m_is_ma°î
 && 
m_£nd_°©e_mëa
) {

364 
m_£nd_°©e_mëa
 = 
Ál£
;

365  (
åue
);

368  (
Ál£
);

369 
	}
}

372 
boﬁ
 
	$is_fûe_mëad©a_å™s„ºed
() const {

373  (
m_å™s„ºed_fûe_mëa
);

374 
	}
}

377 
	$£t_fûe_mëa_å™s„ºed
(Ë{ 
m_å™s„ºed_fûe_mëa
 = 
åue
; 
	}
}

382 
föish_°©e
(
Cl⁄e_Task
 *
èsk
);

386 
ack_°©e
(c⁄° 
Cl⁄e_Desc_Sèã
 *
°©e_desc
);

393 
waô_ack
(
Cl⁄e_H™dÀ
 *
˛⁄e
, 
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

398 
boﬁ
 
	$check_ack
(c⁄° 
Cl⁄e_Desc_Sèã
 *
°©e_desc
) {

399 
boﬁ
 
ªt
 = 
åue
;

401 
	`muãx_íãr
(&
m_°©e_muãx
);

404 i‡(
m_ack_°©e
 =
°©e_desc
->
m_°©e
) {

405 
	`ut_ad
(
m_ª°¨t_cou¡
 > 0);

406 
ªt
 = 
Ál£
;

407 ++
m_num_èsks_föished
;

410 
	`muãx_exô
(&
m_°©e_muãx
);

412  (
ªt
);

413 
	}
}

417 
boﬁ
 
	$is_ª°¨ãd
(Ë{  (
m_ª°¨t_cou¡
 > 0); 
	}
}

422 
Æloc_buf„r
(
Cl⁄e_Task
 *
èsk
);

424 #ifde‡
UNIV_DEBUG


428 
debug_waô
(
uöt
 
chunk_num
, 
Cl⁄e_Task
 *
èsk
);

435 
debug_ª°¨t
(
Cl⁄e_Task
 *
èsk
, 
ö_îr
, 
ª°¨t_cou¡
);

438 
	g¥iv©e
:

443 
boﬁ
 
waô_bef‹e_add
(c⁄° 
byã
 *
ªf_loc
, 
uöt
 
loc_Àn
);

445 
	g¥iv©e
:

449 
boﬁ
 
	$is_√tw‹k_îr‹
(
îr
) {

450 i‡(
îr
 =
ER_NET_ERROR_ON_WRITE
 ||Éº =
ER_NET_READ_ERROR
 ||

451 
îr
 =
ER_NET_WRITE_INTERRUPTED
 ||Éº =
ER_NET_READ_INTERRUPTED
 ||

452 
îr
 =
ER_NET_WAIT_ERROR
) {

453  (
åue
);

455  (
Ál£
);

456 
	}
}

461 
ª£rve_èsk
(
THD
 *
thd
, 
uöt
 &
èsk_id
);

467 
ölöe
 
boﬁ
 
	$¥o˚ss_ö˛om∂ëe_chunk
() {

469 autÿ&
chunks
 = 
m_chunk_öfo
.
m_öcom∂ëe_chunks
;

470 i‡(
chunks
.
	`em±y
()) {

471  (
Ál£
);

475 autÿ
mö_com∂ëe_chunk
 = 
m_chunk_öfo
.
m_mö_uƒes_chunk
;

476 i‡(
mö_com∂ëe_chunk
 > 
m_chunk_öfo
.
m_tŸÆ_chunks
) {

477  (
åue
);

481 autÿ
ô
 = 
chunks
.
	`begö
();

482 autÿ
mö_öcom∂ëe_chunk
 = 
ô
->
fú°
;

484 
	`ut_ad
(
mö_com∂ëe_chunk
 !
mö_öcom∂ëe_chunk
);

485  (
mö_öcom∂ëe_chunk
 < 
mö_com∂ëe_chunk
);

486 
	}
}

491 
uöt32_t
 
gë_√xt_öcom∂ëe_chunk
(
uöt32
 &
block_num
);

495 
uöt32_t
 
gë_√xt_chunk
();

497 
	g¥iv©e
:

499 
ib_muãx_t
 
m_°©e_muãx
;

502 
Chunk_Info
 
	gm_chunk_öfo
;

505 
Cl⁄e_Task
 
	gm_˛⁄e_èsks
[
CLONE_MAX_TASKS
];

508 
uöt
 
	gm_num_èsks
;

511 
uöt
 
	gm_num_èsks_föished
;

514 
uöt
 
	gm_num_èsks_å™sô
;

517 
uöt
 
	gm_ª°¨t_cou¡
;

520 
S«pshŸ_Sèã
 
	gm_ack_°©e
;

523 
S«pshŸ_Sèã
 
	gm_cuºít_°©e
;

526 
S«pshŸ_Sèã
 
	gm_√xt_°©e
;

529 
boﬁ
 
	gm_å™s„ºed_fûe_mëa
;

532 
boﬁ
 
	gm_£nd_°©e_mëa
;

535 
	gm_ßved_îr‹
;

538 *
	gm_îr_fûe_«me
;

541 
size_t
 
	gm_îr_fûe_Àn
;

544 
Cl⁄e_S«pshŸ
 *
	gm_˛⁄e_¢≠shŸ
;

548 ˛as†
	cCl⁄e_H™dÀ
 {

549 
	mpublic
:

554 
Cl⁄e_H™dÀ
(
Cl⁄e_H™dÀ_Ty≥
 
h™dÀ_ty≥
, 
uöt
 
˛⁄e_vîsi⁄
,

555 
uöt
 
˛⁄e_ödex
);

558 ~
Cl⁄e_H™dÀ
();

566 
öô
(c⁄° 
byã
 *
ªf_loc
, 
uöt
 
ªf_Àn
, 
Ha_˛⁄e_ty≥
 
ty≥
,

567 c⁄° *
d©a_dú
);

570 
	$©èch
(Ë{ ++
m_ªf_cou¡
; }

574 
uöt
 
	$dëach
() {

575 
	`ut_a
(
m_ªf_cou¡
 > 0);

576 --
m_ªf_cou¡
;

578  (
m_ªf_cou¡
);

579 
	}
}

584 
byã
 *
gë_loˇt‹
(
uöt
 &
loc_Àn
);

587 c⁄° *
	$gë_d©adú
(Ëc⁄° {  (
m_˛⁄e_dú
); 
	}
}

590 
boﬁ
 
	$ª∂a˚_d©adú
() const {

591  (!
	`is_c›y_˛⁄e
(Ë&& 
m_˛⁄e_dú
 =
nuŒ±r
);

592 
	}
}

596 
buûd_des¸ùt‹
(
Cl⁄e_Desc_Loˇt‹
 *
loc_desc
);

604 
	$add_èsk
(
THD
 *
thd
, c⁄° 
byã
 *
ªf_loc
, 
uöt
 
ªf_Àn
, uöà&
èsk_id
) {

605  (
m_˛⁄e_èsk_m™agî
.
	`add_èsk
(
thd
, 
ªf_loc
, 
ªf_Àn
, 
èsk_id
));

606 
	}
}

614 
boﬁ
 
dr›_èsk
(
THD
 *
thd
, 
uöt
 
èsk_id
, 
ö_îr
, boﬁ &
is_ma°î
);

618 
	$ßve_îr‹
(
îr
) {

619 i‡(
îr
 != 0) {

620 
m_˛⁄e_èsk_m™agî
.
	`£t_îr‹
(
îr
, 
nuŒ±r
);

622 
	}
}

627 
	$check_îr‹
(
THD
 *
thd
) {

628 
boﬁ
 
has_thd
 = (
thd
 !
nuŒ±r
);

629 autÿ
îr
 = 
m_˛⁄e_èsk_m™agî
.
	`h™dÀ_îr‹_Ÿhî_èsk
(
has_thd
);

631 
	`ßve_îr‹
(
îr
);

632  (
îr
);

633 
	}
}

636 
boﬁ
 
	$is_öãºu±ed
() {

637 autÿ
îr
 = 
m_˛⁄e_èsk_m™agî
.
	`h™dÀ_îr‹_Ÿhî_èsk
(
Ál£
);

638  (
îr
 =
ER_QUERY_INTERRUPTED
);

639 
	}
}

643 
uöt
 
	$gë_ödex
(Ë{  (
m_˛⁄e_¨r_ödex
); 
	}
}

647 
uöt
 
	$gë_vîsi⁄
(Ë{  (
m_˛⁄e_desc_vîsi⁄
); 
	}
}

651 
boﬁ
 
	$is_c›y_˛⁄e
(Ëc⁄° {  (
m_˛⁄e_h™dÀ_ty≥
 =
CLONE_HDL_COPY
); 
	}
}

656 
boﬁ
 
	$m©ch_hdl_ty≥
(
Cl⁄e_H™dÀ_Ty≥
 
Ÿhî_h™dÀ_ty≥
) {

657  (
m_˛⁄e_h™dÀ_ty≥
 =
Ÿhî_h™dÀ_ty≥
);

658 
	}
}

662 
	$£t_°©e
(
Cl⁄e_H™dÀ_Sèã
 
°©e
Ë{ 
m_˛⁄e_h™dÀ_°©e
 = sèã; 
	}
}

666 
boﬁ
 
	$is_a˘ive
(Ë{  (
m_˛⁄e_h™dÀ_°©e
 =
CLONE_STATE_ACTIVE
); 
	}
}

670 
boﬁ
 
	$is_öô
(Ë{  (
m_˛⁄e_h™dÀ_°©e
 =
CLONE_STATE_INIT
); 
	}
}

674 
boﬁ
 
	$is_idÀ
(Ë{  (
m_˛⁄e_h™dÀ_°©e
 =
CLONE_STATE_IDLE
); 
	}
}

678 
boﬁ
 
	$is_ab‹t
(Ë{  (
m_˛⁄e_h™dÀ_°©e
 =
CLONE_STATE_ABORT
); 
	}
}

685 
ª°¨t_c›y
(
THD
 *
thd
, c⁄° 
byã
 *
loc
, 
uöt
 
loc_Àn
);

692 
ª°¨t_≠∂y
(
THD
 *
thd
, c⁄° 
byã
 *&
loc
, 
uöt
 &
loc_Àn
);

699 
c›y
(
THD
 *
thd
, 
uöt
 
èsk_id
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

706 
≠∂y
(
THD
 *
thd
, 
uöt
 
èsk_id
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

712 
£nd_kìp_Æive
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

714 
	g¥iv©e
:

717 
check_•a˚
();

721 
¸óã_˛⁄e_dúe˘‹y
();

728 
di•œy_¥ogªss
(
uöt32_t
 
cur_chunk
, uöt32_à
max_chunk
,

729 
uöt32_t
 &
≥r˚¡_d⁄e
,

730 
ib_time_m⁄Ÿ⁄ic_ms_t
 &
di•_time
);

739 
›í_fûe
(
Cl⁄e_Task
 *
èsk
, 
Cl⁄e_Fûe_Mëa
 *
fûe_mëa
, 
ulöt
 
fûe_ty≥
,

740 
boﬁ
 
¸óã_fûe
, boﬁ 
£t_™d_˛o£
);

745 
˛o£_fûe
(
Cl⁄e_Task
 *
èsk
);

756 
fûe_ˇŒback
(
Ha_˛⁄e_cbk
 *
cbk
, 
Cl⁄e_Task
 *
èsk
, 
uöt
 
Àn
, 
boﬁ
 
buf_cbk
,

757 
uöt64_t
 
off£t


758 #ifde‡
UNIV_PFS_IO


760 c⁄° *
«me
, 
uöt
 
löe


769 
move_to_√xt_°©e
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
,

770 
Cl⁄e_Desc_Sèã
 *
°©e_desc
);

777 
£nd_°©e_mëad©a
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
,

778 
boﬁ
 
is_°¨t
);

784 
£nd_èsk_mëad©a
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

790 
£nd_Æl_fûe_mëad©a
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

797 
£nd_fûe_mëad©a
(
Cl⁄e_Task
 *
èsk
, 
Cl⁄e_Fûe_Mëa
 *
fûe_mëa
,

798 
Ha_˛⁄e_cbk
 *
ˇŒback
);

808 
£nd_d©a
(
Cl⁄e_Task
 *
èsk
, 
Cl⁄e_Fûe_Mëa
 *
fûe_mëa
,

809 
ib_uöt64_t
 
off£t
, 
byã
 *
buf„r
, 
uöt
 
size
,

810 
Ha_˛⁄e_cbk
 *
ˇŒback
);

818 
¥o˚ss_chunk
(
Cl⁄e_Task
 *
èsk
, 
uöt32_t
 
chunk_num
, uöt32_à
block_num
,

819 
Ha_˛⁄e_cbk
 *
ˇŒback
);

825 
≠∂y_èsk_mëad©a
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

833 
ack_°©e_mëad©a
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
,

834 
Cl⁄e_Desc_Sèã
 *
°©e_desc
);

840 
nŸify_°©e_ch™ge
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
,

841 
Cl⁄e_Desc_Sèã
 *
°©e_desc
);

848 
≠∂y_°©e_mëad©a
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

854 
≠∂y_fûe_mëad©a
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

860 
≠∂y_d©a
(
Cl⁄e_Task
 *
èsk
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

869 
ª˚ive_d©a
(
Cl⁄e_Task
 *
èsk
, 
uöt64_t
 
off£t
, uöt64_à
fûe_size
,

870 
uöt32_t
 
size
, 
Ha_˛⁄e_cbk
 *
ˇŒback
);

880 
dbîr_t
 
punch_hﬁes
(
os_fûe_t
 
fûe
, c⁄° 
byã
 *
buf„r
, 
uöt32_t
 
Àn
,

881 
uöt64_t
 
°¨t_off
, 
uöt32_t
 
∑ge_Àn
,

882 
uöt32_t
 
block_size
);

890 
modify_™d_wrôe
(c⁄° 
Cl⁄e_Task
 *
èsk
, 
uöt64_t
 
off£t
,

891 *
buf„r
, 
uöt32_t
 
buf_Àn
);

893 
	g¥iv©e
:

895 
Cl⁄e_H™dÀ_Ty≥
 
m_˛⁄e_h™dÀ_ty≥
;

898 
Cl⁄e_H™dÀ_Sèã
 
	gm_˛⁄e_h™dÀ_°©e
;

901 
byã
 
	gm_vîsi⁄_loˇt‹
[
CLONE_DESC_MAX_BASE_LEN
];

904 
byã
 *
	gm_˛⁄e_loˇt‹
;

907 
uöt
 
	gm_loˇt‹_Àngth
;

910 
byã
 *
	gm_ª°¨t_loc
;

913 
uöt
 
	gm_ª°¨t_loc_Àn
;

916 
uöt
 
	gm_˛⁄e_desc_vîsi⁄
;

919 
uöt
 
	gm_˛⁄e_¨r_ödex
;

922 
ib_uöt64_t
 
	gm_˛⁄e_id
;

925 
uöt
 
	gm_ªf_cou¡
;

928 
boﬁ
 
	gm_Ælow_ª°¨t
;

931 c⁄° *
	gm_˛⁄e_dú
;

934 
Cl⁄e_Task_M™agî
 
	gm_˛⁄e_èsk_m™agî
;

938 ˛as†
	cCl⁄e_Sys
 {

939 
	mpublic
:

941 
Cl⁄e_Sys
();

944 ~
Cl⁄e_Sys
();

951 
add_˛⁄e
(c⁄° 
byã
 *
loc
, 
Cl⁄e_H™dÀ_Ty≥
 
hdl_ty≥
,

952 
Cl⁄e_H™dÀ
 *&
˛⁄e_hdl
);

956 
dr›_˛⁄e
(
Cl⁄e_H™dÀ
 *
˛⁄e_h™dÀ
);

963 
Cl⁄e_H™dÀ
 *
föd_˛⁄e
(c⁄° 
byã
 *
ªf_loc
, 
uöt
 
loc_Àn
,

964 
Cl⁄e_H™dÀ_Ty≥
 
hdl_ty≥
);

970 
Cl⁄e_H™dÀ
 *
gë_˛⁄e_by_ödex
(c⁄° 
byã
 *
loc
, 
uöt
 
loc_Àn
);

979 
©èch_¢≠shŸ
(
Cl⁄e_H™dÀ_Ty≥
 
hdl_ty≥
, 
Ha_˛⁄e_ty≥
 
˛⁄e_ty≥
,

980 
ib_uöt64_t
 
¢≠shŸ_id
, 
boﬁ
 
is_pfs_m⁄ô‹
,

981 
Cl⁄e_S«pshŸ
 *&
¢≠shŸ
);

986 
dëach_¢≠shŸ
(
Cl⁄e_S«pshŸ
 *
¢≠shŸ
, 
Cl⁄e_H™dÀ_Ty≥
 
hdl_ty≥
);

992 
boﬁ
 
m¨k_ab‹t
(boﬁ 
f‹˚
);

995 
m¨k_a˘ive
();

999 
boﬁ
 
m¨k_waô
();

1002 
m¨k_‰ì
();

1007 
waô_f‹_‰ì
(
THD
 *
thd
);

1011 
ib_uöt64_t
 
gë_√xt_id
();

1015 
ib_muãx_t
 *
	$gë_muãx
(Ë{  (&
m_˛⁄e_sys_muãx
); }

1018 
Cl⁄e_Sys_Sèã
 
s_˛⁄e_sys_°©e
;

1021 
uöt
 
s_˛⁄e_ab‹t_cou¡
;

1024 
uöt
 
s_˛⁄e_waô_cou¡
;

1030 
usög
 
Waô_C⁄d_Cbk_Func
 = 
°d
::
fun˘i⁄
<(
boﬁ
 
is_Æît
, boﬁ &
ªsu…
)>;

1040 
	$waô
(
Cl⁄e_M£c
 
¶ìp_time
, 
Cl⁄e_Sec
 
timeout
,

1041 
Cl⁄e_Sec
 
Æît_öãrvÆ
, 
Waô_C⁄d_Cbk_Func
 &&
func
,

1042 
ib_muãx_t
 *
muãx
, 
boﬁ
 &
is_timeout
) {

1043 
îr
 = 0;

1044 
boﬁ
 
waô
 = 
åue
;

1045 
is_timeout
 = 
Ál£
;

1047 
lo›_cou¡
 = 0;

1048 autÿ
Æît_cou¡
 = 
°©ic_ˇ°
<>(
Æît_öãrvÆ
 / 
¶ìp_time
);

1049 autÿ
tŸÆ_cou¡
 = 
°©ic_ˇ°
<>(
timeout
 / 
¶ìp_time
);

1052 
îr
 = 
	`func
(
Ál£
, 
waô
);

1055 
Cl⁄e_M£c
 
cur_¶ìp_time
{1};

1057 !
is_timeout
 && 
waô
 && 
îr
 == 0) {

1059 i‡(
muãx
 !
nuŒ±r
) {

1060 
	`ut_ad
(
	`muãx_own
(
muãx
));

1061 
	`muãx_exô
(
muãx
);

1065 i‡(
cur_¶ìp_time
 > 
¶ìp_time
) {

1066 
cur_¶ìp_time
 = 
¶ìp_time
;

1069 
°d
::
this_thªad
::
	`¶ìp_f‹
(
cur_¶ìp_time
);

1071 i‡(
cur_¶ìp_time
 < 
¶ìp_time
) {

1073 
cur_¶ìp_time
 *= 2;

1076 ++
lo›_cou¡
;

1080 i‡(
muãx
 !
nuŒ±r
) {

1081 
	`muãx_íãr
(
muãx
);

1085 i‡(
lo›_cou¡
 == 0) {

1086 
îr
 = 
	`func
(
Ál£
, 
waô
);

1090 autÿ
Æît
 = (
Æît_cou¡
 > 0Ë? (
lo›_cou¡
 %áÀπ_cou¡ =0Ë: 
åue
;

1092 
îr
 = 
	`func
(
Æît
, 
waô
);

1094 
is_timeout
 = (
lo›_cou¡
 > 
tŸÆ_cou¡
);

1096  (
îr
);

1097 
	}
}

1104 
	$waô_deÁu…
(
Waô_C⁄d_Cbk_Func
 &&
func
, 
ib_muãx_t
 *
muãx
,

1105 
boﬁ
 &
is_timeout
) {

1106  (
	`waô
(
CLONE_DEF_SLEEP
, 
	`Cl⁄e_Sec
(
CLONE_DEF_TIMEOUT
),

1107 
CLONE_DEF_ALERT_INTERVAL
,

1108 
°d
::
f‹w¨d
<
Waô_C⁄d_Cbk_Func
>(
func
), 
muãx
, 
is_timeout
));

1109 
	}
}

1114 
boﬁ
 
check_a˘ive_˛⁄e
(boﬁ 
¥öt_Æît
);

1117 
	gCl⁄e_≥rsi°_gtid
 &
	$gë_gtid_≥rsi°‹
(Ë{  (
m_gtid_≥rsi°î
); 
	}
}

1119 
	g¥iv©e
:

1124 
föd_‰ì_ödex
(
Cl⁄e_H™dÀ_Ty≥
 
hdl_ty≥
, 
uöt
 &
‰ì_ödex
);

1126 
	g¥iv©e
:

1128 
Cl⁄e_H™dÀ
 *
m_˛⁄e_¨r
[
CLONE_ARR_SIZE
];

1131 
uöt
 
	gm_num_˛⁄es
;

1134 
uöt
 
	gm_num_≠∂y_˛⁄es
;

1137 
Cl⁄e_S«pshŸ
 *
	gm_¢≠shŸ_¨r
[
SNAPSHOT_ARR_SIZE
];

1140 
uöt
 
	gm_num_¢≠shŸs
;

1143 
uöt
 
	gm_num_≠∂y_¢≠shŸs
;

1146 
ib_muãx_t
 
	gm_˛⁄e_sys_muãx
;

1149 
ib_uöt64_t
 
	gm_˛⁄e_id_gíî©‹
;

1152 
Cl⁄e_≥rsi°_gtid
 
	gm_gtid_≥rsi°î
;

1156 
Cl⁄e_Sys
 *
˛⁄e_sys
;

	@clone0desc.h

32 #i‚de‡
CLONE_DESC_INCLUDE


33 
	#CLONE_DESC_INCLUDE


	)

35 
	~"mem0mem.h
"

36 
	~"os0fûe.h
"

37 
	~"univ.i
"

40 c⁄° 
ib_uöt64_t
 
	gCLONE_LOC_INVALID_ID
 = 0;

44 c⁄° 
uöt32_t
 
	gCLONE_DESC_MAX_BASE_LEN
 = 64;

47 c⁄° 
uöt32_t
 
	gCLONE_ALIGN_DIRECT_IO
 = 4 * 1024;

50 c⁄° 
	gCLONE_MAX_TASKS
 = 128;

92 
	eS«pshŸ_Sèã
 {

94 
	mCLONE_SNAPSHOT_NONE
 = 0,

97 
	mCLONE_SNAPSHOT_INIT
,

100 
	mCLONE_SNAPSHOT_FILE_COPY
,

103 
	mCLONE_SNAPSHOT_PAGE_COPY
,

106 
	mCLONE_SNAPSHOT_REDO_COPY
,

109 
	mCLONE_SNAPSHOT_DONE


116 
uöt
 
choo£_desc_vîsi⁄
(c⁄° 
byã
 *
ªf_loc
);

122 
boﬁ
 
˛⁄e_vÆid©e_loˇt‹
(c⁄° 
byã
 *
desc_loc
, 
uöt
 
desc_Àn
);

126 
	eCl⁄e_Desc_Ty≥
 {

128 
	mCLONE_DESC_LOCATOR
 = 1,

131 
	mCLONE_DESC_TASK_METADATA
,

134 
	mCLONE_DESC_STATE
,

137 
	mCLONE_DESC_FILE_METADATA
,

140 
	mCLONE_DESC_DATA
,

143 
	mCLONE_DESC_MAX


147 
	sCl⁄e_Desc_Hódî
 {

149 
uöt
 
	mm_vîsi⁄
;

152 
uöt
 
	mm_Àngth
;

155 
Cl⁄e_Desc_Ty≥
 
	mm_ty≥
;

160 
£rülize
(
byã
 *
desc_hdr
);

166 
boﬁ
 
de£rülize
(c⁄° 
byã
 *
desc_hdr
, 
uöt
 
desc_Àn
);

170 
	sCl⁄e_Task_Mëa
 {

172 
uöt
 
	mm_èsk_ödex
;

175 
uöt
 
	mm_chunk_num
;

178 
uöt
 
	mm_block_num
;

183 
usög
 
	gChunk_M≠
 = 
°d
::
m≠
<
uöt32_t
, 
	guöt32_t
>;

186 ˛as†
	cChnunk_Bôm≠
 {

187 
	mpublic
:

189 
	$Chnunk_Bôm≠
(Ë: 
	`m_bôm≠
(), 
	`m_size
(), 
	$m_bôs
() {}

192 ˛as†
	cBôm≠_O≥øt‹_Im∂
 {

193 
public
:

197 
	`Bôm≠_O≥øt‹_Im∂
(
uöt32_t
 *&
bôm≠
, uöt32_à
ödex
)

199 : 
	`m_bôm≠_ªf
(
bôm≠
) {

201 autÿ
byã_ödex
 = 
ödex
 >> 3;

202 
	`ut_ad
(
byã_ödex
 =
ödex
 / 8);

205 
m_m≠_ödex
 = 
byã_ödex
 >> 2;

206 
	`ut_ad
(
m_m≠_ödex
 =
byã_ödex
 / 4);

209 autÿ
bô_pos
 = 
ödex
 & 31;

210 
	`ut_ad
(
bô_pos
 =
ödex
 % 32);

212 
m_bô_mask
 = 1 << 
bô_pos
;

217 
›î©‹
 
	`boﬁ
() const {

218 autÿ&
vÆ
 = 
m_bôm≠_ªf
[
m_m≠_ödex
];

220 i‡((
vÆ
 & 
m_bô_mask
) == 0) {

221  (
Ál£
);

224  (
åue
);

229 
›î©‹
=(
boﬁ
 
bô
) {

230 autÿ&
vÆ
 = 
m_bôm≠_ªf
[
m_m≠_ödex
];

232 i‡(
bô
) {

233 
vÆ
 |
m_bô_mask
;

235 
vÆ
 &~
m_bô_mask
;

239 
¥iv©e
:

241 
uöt32_t
 *&
m_bôm≠_ªf
;

244 
uöt32_t
 
m_m≠_ödex
;

247 
uöt32_t
 
m_bô_mask
;

248 
	}
};

253 
Bôm≠_O≥øt‹_Im∂
 
	g›î©‹
[](
uöt32_t
 
	gödex
) {

255 --
	gödex
;

257 
ut_a
(
ödex
 < 
m_bôs
);

258  (
Bôm≠_O≥øt‹_Im∂
(
m_bôm≠
, 
ödex
));

265 
uöt32_t
 *
ª£t
(uöt32_à
max_bôs
, 
mem_hóp_t
 *
hóp
);

269 
uöt32_t
 
gë_mö_un£t_bô
();

273 
uöt32_t
 
gë_max_£t_bô
();

279 
£rülize
(
byã
 *&
desc_chunk
, 
uöt
 &
Àn
);

284 
de£rülize
(c⁄° 
byã
 *
desc_chunk
, 
uöt
 &
Àn_À·
);

288 
size_t
 
gë_£rülized_Àngth
();

292 
size_t
 
	$ˇ∑côy
(Ëc⁄° {  (8 * 
	`size
()); 
	}
}

296 
size_t
 
	$size
(Ëc⁄° {  (
m_size
 * 4); 
	}
}

300 
uöt32_t
 
	$size_bôs
(Ëc⁄° {  (
m_bôs
); 
	}
}

302 
	g¥iv©e
:

304 
uöt32_t
 *
m_bôm≠
;

307 
size_t
 
	gm_size
;

310 
uöt32_t
 
	gm_bôs
;

314 
	sChunk_Info
 {

316 
Chnunk_Bôm≠
 
	mm_ª£rved_chunks
;

319 
Chunk_M≠
 
	mm_öcom∂ëe_chunks
;

322 
uöt32_t
 
	mm_tŸÆ_chunks
;

325 
uöt32_t
 
	mm_mö_uƒes_chunk
;

328 
uöt32_t
 
	mm_max_ªs_chunk
;

331 
öô_chunk_nums
() {

332 
	mm_mö_uƒes_chunk
 = 
m_ª£rved_chunks
.
gë_mö_un£t_bô
();

333 
ut_ad
(
m_mö_uƒes_chunk
 <
m_tŸÆ_chunks
 + 1);

335 
	mm_max_ªs_chunk
 = 
m_ª£rved_chunks
.
gë_max_£t_bô
();

336 
ut_ad
(
m_max_ªs_chunk
 <
m_tŸÆ_chunks
);

343 
£rülize
(
byã
 *
desc_chunk
, 
uöt
 &
Àn
);

348 
de£rülize
(c⁄° 
byã
 *
desc_chunk
, 
uöt
 &
Àn_À·
);

353 
size_t
 
gë_£rülized_Àngth
(
uöt32_t
 
num_èsks
);

358 
	sCl⁄e_Desc_Loˇt‹
 {

360 
Cl⁄e_Desc_Hódî
 
	mm_hódî
;

363 
uöt64_t
 
	mm_˛⁄e_id
;

366 
uöt64_t
 
	mm_¢≠shŸ_id
;

369 
uöt32_t
 
	mm_˛⁄e_ödex
;

372 
S«pshŸ_Sèã
 
	mm_°©e
;

375 
boﬁ
 
	mm_mëad©a_å™s„ºed
;

383 
öô
(
ib_uöt64_t
 
id
, ib_uöt64_à
¢≠_id
, 
S«pshŸ_Sèã
 
°©e
,

384 
uöt
 
vîsi⁄
, uöà
ödex
);

389 
boﬁ
 
m©ch
(
Cl⁄e_Desc_Loˇt‹
 *
Ÿhî_desc
);

397 
£rülize
(
byã
 *&
desc_loc
, 
uöt
 &
Àn
, 
Chunk_Info
 *
chunk_öfo
,

398 
mem_hóp_t
 *
hóp
);

404 
de£rülize
(c⁄° 
byã
 *
desc_loc
, 
uöt
 
desc_Àn
, 
Chunk_Info
 *
chunk_öfo
);

409 
	sCl⁄e_Desc_Task_Mëa
 {

411 
Cl⁄e_Desc_Hódî
 
	mm_hódî
;

414 
Cl⁄e_Task_Mëa
 
	mm_èsk_mëa
;

418 
öô_hódî
(
uöt
 
vîsi⁄
);

425 
£rülize
(
byã
 *&
desc_èsk
, 
uöt
 &
Àn
, 
mem_hóp_t
 *
hóp
);

431 
boﬁ
 
de£rülize
(c⁄° 
byã
 *
desc_èsk
, 
uöt
 
desc_Àn
);

435 
	sCl⁄e_Desc_Sèã
 {

437 
Cl⁄e_Desc_Hódî
 
	mm_hódî
;

440 
S«pshŸ_Sèã
 
	mm_°©e
;

443 
uöt
 
	mm_èsk_ödex
;

446 
uöt
 
	mm_num_chunks
;

449 
uöt
 
	mm_num_fûes
;

452 
uöt64_t
 
	mm_e°im©e
;

455 
uöt64_t
 
	mm_e°im©e_disk
;

458 
boﬁ
 
	mm_is_°¨t
;

461 
boﬁ
 
	mm_is_ack
;

465 
öô_hódî
(
uöt
 
vîsi⁄
);

472 
£rülize
(
byã
 *&
desc_°©e
, 
uöt
 &
Àn
, 
mem_hóp_t
 *
hóp
);

478 
boﬁ
 
de£rülize
(c⁄° 
byã
 *
desc_°©e
, 
uöt
 
desc_Àn
);

482 
	sCl⁄e_Fûe_Mëa
 {

484 
uöt64_t
 
	mm_fûe_size
;

487 
uöt64_t
 
	mm_Æloc_size
;

490 
uöt32_t
 
	mm_f•_Êags
;

493 
	mCom¥essi⁄
::
Ty≥
 
m_com¥ess_ty≥
;

496 
	mEn¸y±i⁄
::
Ty≥
 
m_í¸y±_ty≥
;

500 
boﬁ
 
	mm_punch_hﬁe
;

503 
size_t
 
	mm_fsblk_size
;

506 
•a˚_id_t
 
	mm_•a˚_id
;

509 
uöt
 
	mm_fûe_ödex
;

512 
uöt
 
	mm_begö_chunk
;

515 
uöt
 
	mm_íd_chunk
;

518 
size_t
 
	mm_fûe_«me_Àn
;

521 c⁄° *
	mm_fûe_«me
;

525 
	sCl⁄e_Desc_Fûe_MëaD©a
 {

527 
Cl⁄e_Desc_Hódî
 
	mm_hódî
;

530 
S«pshŸ_Sèã
 
	mm_°©e
;

533 
Cl⁄e_Fûe_Mëa
 
	mm_fûe_mëa
;

537 
öô_hódî
(
uöt
 
vîsi⁄
);

544 
£rülize
(
byã
 *&
desc_fûe
, 
uöt
 &
Àn
, 
mem_hóp_t
 *
hóp
);

550 
boﬁ
 
de£rülize
(c⁄° 
byã
 *
desc_fûe
, 
uöt
 
desc_Àn
);

554 
	sCl⁄e_Desc_D©a
 {

556 
Cl⁄e_Desc_Hódî
 
	mm_hódî
;

559 
S«pshŸ_Sèã
 
	mm_°©e
;

562 
Cl⁄e_Task_Mëa
 
	mm_èsk_mëa
;

565 
uöt32_t
 
	mm_fûe_ödex
;

568 
uöt32_t
 
	mm_d©a_Àn
;

571 
uöt64_t
 
	mm_fûe_off£t
;

574 
uöt64_t
 
	mm_fûe_size
;

578 
öô_hódî
(
uöt
 
vîsi⁄
);

585 
£rülize
(
byã
 *&
desc_d©a
, 
uöt
 &
Àn
, 
mem_hóp_t
 *
hóp
);

591 
boﬁ
 
de£rülize
(c⁄° 
byã
 *
desc_d©a
, 
uöt
 
desc_Àn
);

	@clone0monitor.h

32 #i‚de‡
CLONE_MONITOR_H


33 
	#CLONE_MONITOR_H


	)

36 
	~"mysql/psi/mysql_°age.h
"

37 
	~"univ.i
"

38 
	~"ut0dbg.h
"

42 
usög
 
	gCl⁄e_AÀπ_Func
 = 
°d
::
fun˘i⁄
<()>;

45 ˛as†
	cCl⁄e_M⁄ô‹
 {

46 
	mpublic
:

48 
	$Cl⁄e_M⁄ô‹
()

49 : 
	`m_e°im©e
(),

50 
	`m_w‹k_d⁄e
(),

51 
	`m_¥ogªss
(),

52 
	`m_e°im©e_byãs_À·
(),

53 
	`m_w‹k_byãs_À·
(),

54 
	$m_cur_pha£
(
NOT_STARTED
) {

55 
m_pfs_d©a_chunk_size
 = 
	`ut_2_exp
(
PFS_DATA_CHUNK_SIZE_POW2
);

59 ~
	$Cl⁄e_M⁄ô‹
() {

60 i‡(
m_¥ogªss
 =
nuŒ±r
) {

64 
	`mysql_íd_°age
();

65 
	}
}

70 
	$öô_°©e
(
PSI_°age_key
 
key
, 
boﬁ
 
íabÀ
) {

71 
	`ch™ge_pha£
();

72 
m_¥ogªss
 = 
nuŒ±r
;

73 
m_e°im©e
 = 0;

74 
m_w‹k_d⁄e
 = 0;

75 
m_e°im©e_byãs_À·
 = 0;

76 
m_w‹k_byãs_À·
 = 0;

78 i‡(
íabÀ
 && 
key
 !
PSI_NOT_INSTRUMENTED
) {

79 
m_¥ogªss
 = 
	`mysql_£t_°age
(
key
);

82 i‡(
m_¥ogªss
 =
nuŒ±r
) {

83 
m_cur_pha£
 = 
NOT_STARTED
;

87 
m_cur_pha£
 = 
ESTIMATE_WORK
;

88 
	}
}

91 
boﬁ
 
	$is_e°im©i⁄_pha£
(Ëc⁄° {  (
m_cur_pha£
 =
ESTIMATE_WORK
); 
	}
}

94 
uöt64_t
 
	$gë_e°im©e
() {

95 
uöt64_t
 
ªt_e°im©e
 = 0;

96 i‡(
m_e°im©e
 > 0) {

97 
ªt_e°im©e
 = 
m_e°im©e
 << 
PFS_DATA_CHUNK_SIZE_POW2
;

99 
ªt_e°im©e
 +
m_e°im©e_byãs_À·
;

100  (
ªt_e°im©e
);

101 
	}
}

106 
	$add_e°im©e
(
uöt64_t
 
size
) {

107 
m_e°im©e
 +
	`c⁄vît_byãs_to_w‹k
(
size
, 
åue
);

109 i‡(
m_cur_pha£
 =
NOT_STARTED
) {

113 
	`ut_ad
(
m_cur_pha£
 =
ESTIMATE_WORK
);

114 
	`ut_ad
(
m_¥ogªss
 !
nuŒ±r
);

116 
	`mysql_°age_£t_w‹k_e°im©ed
(
m_¥ogªss
, 
m_e°im©e
);

117 
	}
}

122 
	$upd©e_w‹k
(
uöt
 
size
) {

123 i‡(
m_cur_pha£
 =
NOT_STARTED
) {

127 
	`ut_ad
(
m_¥ogªss
 !
nuŒ±r
);

128 
	`ut_ad
(
m_cur_pha£
 =
COMPLETE_WORK
);

130 
m_w‹k_d⁄e
 +
	`c⁄vît_byãs_to_w‹k
(
size
, 
Ál£
);

131 
	`mysql_°age_£t_w‹k_com∂ëed
(
m_¥ogªss
, 
m_w‹k_d⁄e
);

132 
	}
}

135 
	$ch™ge_pha£
() {

136 
m_cur_pha£
) {

137 
NOT_STARTED
:

140 
ESTIMATE_WORK
:

141 i‡(
m_e°im©e_byãs_À·
 != 0) {

142 
	`mysql_°age_£t_w‹k_e°im©ed
(
m_¥ogªss
, 
m_e°im©e
 + 1);

145 
m_cur_pha£
 = 
COMPLETE_WORK
;

148 
COMPLETE_WORK
:

149 i‡(
m_w‹k_byãs_À·
 != 0) {

150 
uöt64_t
 
rounded_e°im©e
 = 
m_e°im©e
;

151 i‡(
m_e°im©e_byãs_À·
 != 0) {

152 ++
rounded_e°im©e
;

154 i‡(
m_w‹k_d⁄e
 < 
rounded_e°im©e
) {

155 
m_w‹k_d⁄e
++;

157 
	`mysql_°age_£t_w‹k_com∂ëed
(
m_¥ogªss
, 
m_w‹k_d⁄e
);

160 
m_cur_pha£
 = 
NOT_STARTED
;

163 
	}
}

165 
	g¥iv©e
:

171 
uöt64_t
 
	$c⁄vît_byãs_to_w‹k
(
uöt64_t
 
size
, 
boﬁ
 
is_e°im©e
) {

172 autÿ&
byãs_À·
 = 
is_e°im©e
 ? 
m_e°im©e_byãs_À·
 : 
m_w‹k_byãs_À·
;

173 
size
 +
byãs_À·
;

175 autÿ
Æig√d_size
 = 
	`ut_uöt64_Æign_down
(
size
, 
m_pfs_d©a_chunk_size
);

176 
byãs_À·
 = 
size
 - 
Æig√d_size
;

178  (
Æig√d_size
 >> 
PFS_DATA_CHUNK_SIZE_POW2
);

179 
	}
}

182 
uöt64_t
 
	gm_e°im©e
;

185 
uöt64_t
 
	gm_w‹k_d⁄e
;

188 
PSI_°age_¥ogªss
 *
	gm_¥ogªss
;

191 
uöt64_t
 
	gm_e°im©e_byãs_À·
;

194 
uöt64_t
 
	gm_w‹k_byãs_À·
;

197 íum { 
	gNOT_STARTED
 = 0, 
	gESTIMATE_WORK
, 
	gCOMPLETE_WORK
 } 
	gm_cur_pha£
;

200 c⁄° 
	gPFS_DATA_CHUNK_SIZE_POW2
 = 20;

203 
uöt
 
	gm_pfs_d©a_chunk_size
;

	@clone0repl.h

32 #i‚de‡
CLONE_REPL_INCLUDE


33 
	#CLONE_REPL_INCLUDE


	)

35 
	~<ve˘‹
>

36 
	~"˛⁄e0m⁄ô‹.h
"

37 
	~"os0thªad-¸óã.h
"

38 
	~"sql/Ωl_gtid.h
"

39 
	~"§v0§v.h
"

40 
	~"§v0°¨t.h
"

41 
	~"åx0sys.h
"

43 
˛ass
 
	gCl⁄e_≥rsi°_gtid
;

46 c⁄° 
size_t
 
	gGTID_INFO_SIZE
 = 64;

49 c⁄° 
uöt32_t
 
	gGTID_VERSION
 = 1;

52 
usög
 
	gGtid_öfo
 = 
°d
::
¨øy
<, 
	gGTID_INFO_SIZE
>;

55 
usög
 
	gGôd_öfo_li°
 = 
°d
::
ve˘‹
<
Gtid_öfo
>;

58 
	sGtid_desc
 {

60 
boﬁ
 
	mm_is_£t
;

62 
Gtid_öfo
 
	mm_öfo
;

64 
uöt32_t
 
	mm_vîsi⁄
;

68 ˛as†
	cCl⁄e_≥rsi°_gtid
 {

69 
	mpublic
:

71 
	$Cl⁄e_≥rsi°_gtid
() {

72 
m_evít
 = 
	`os_evít_¸óã
();

74 
m_thªad_a˘ive
.
	`°‹e
(
Ál£
);

75 
m_gtid_åx_no
.
	`°‹e
(0);

76 
m_Êush_numbî
.
	`°‹e
(0);

77 
m_ex∂icô_ªque°
.
	`°‹e
(
Ál£
);

78 
m_a˘ive_numbî
.
	`°‹e
(
m_Êush_numbî
.
	`lﬂd
() + 1);

81 
m_a˘ive
.
	`°‹e
(
åue
);

82 
m_num_gtid_mem
.
	`°‹e
(0);

83 
m_Êush_ö_¥ogªss
.
	`°‹e
(
Ál£
);

84 
m_˛o£_thªad
.
	`°‹e
(
Ál£
);

88 ~
	$Cl⁄e_≥rsi°_gtid
() {

89 
	`ut_ad
(!
m_thªad_a˘ive
.
	`lﬂd
());

90 
	`°›
();

91 
	`os_evít_de°roy
(
m_evít
);

92 
	}
}

96 
boﬁ
 
°¨t
();

99 
°›
();

105 
waô_Êush
(
boﬁ
 
com¥ess_gtid
, boﬁ 
óæy_timeout
, 
Cl⁄e_AÀπ_Func
 
cbk
);

108 
boﬁ
 
	$is_a˘ive
(Ëc⁄° {  (
m_a˘ive
.
	`lﬂd
()); 
	}
}

111 
boﬁ
 
	$is_thªad_a˘ive
(Ëc⁄° {  (
m_thªad_a˘ive
.
	`lﬂd
()); 
	}
}

116 
åx_id_t
 
	$gë_ﬁde°_åx_no
() {

117 
åx_id_t
 
ªt_no
 = 
m_gtid_åx_no
.
	`lﬂd
();

120 
	`ut_ad
(
ªt_no
 > 0 || 
§v_f‹˚_ªcovîy
 >
SRV_FORCE_NO_UNDO_LOG_SCAN
);

121 i‡(
ªt_no
 =
TRX_ID_MAX
) {

122 
	`ut_ad
(!
	`is_thªad_a˘ive
());

123 
	`ut_ad
(
m_num_gtid_mem
.
	`lﬂd
() == 0);

124 } i‡(
m_num_gtid_mem
.
	`lﬂd
() == 0) {

129 i‡(!
m_Êush_ö_¥ogªss
.
	`lﬂd
()) {

130 
ªt_no
 = 
TRX_ID_MAX
;

133  (
ªt_no
);

134 
	}
}

139 
	$£t_ﬁde°_åx_no_ªcovîy
(
åx_id_t
 
max_åx_no
) {

140 
ib
::
	`öfo
(
ER_IB_CLONE_GTID_PERSIST
)

141 << "GTIDÑecovîyÅrx_no: " << 
max_åx_no
;

144 i‡(
max_åx_no
 == 0) {

145 
max_åx_no
 = 
TRX_ID_MAX
;

147 
m_gtid_åx_no
.
	`°‹e
(
max_åx_no
);

148 
	}
}

153 
gë_gtid_öfo
(
åx_t
 *
åx
, 
Gtid_desc
 &
gtid_desc
);

162 
boﬁ
 
åx_check_£t
(
åx_t
 *
åx
, boﬁ 
¥ï¨e
, boﬁ 
rﬁlback
,

163 
boﬁ
 &
£t_ex∂icô
);

170 
boﬁ
 
has_gtid
(
åx_t
 *
åx
, 
THD
 *&
thd
, boﬁ &
∑s£d_check
);

175 
	gåx_undo_t
::
Gtid_°‹age
 
≥rsi°s_gtid
(c⁄° 
åx_t
 *
åx
);

180 
£t_≥rsi°_gtid
(
åx_t
 *
åx
, 
boﬁ
 
£t
);

184 
add
(c⁄° 
Gtid_desc
 &
gtid_desc
);

187 
≥riodic_wrôe
();

190 
wrôe_Ÿhî_gtids
();

193 
Cl⁄e_≥rsi°_gtid
(Cl⁄e_≥rsi°_gtid c⁄° &Ë
dñëe
;

196 
	gCl⁄e_≥rsi°_gtid
 &
	g›î©‹
=(
Cl⁄e_≥rsi°_gtid
 c⁄° &Ë
dñëe
;

198 
	g¥iv©e
:

206 
boﬁ
 
check_gtid_¥ï¨e
(
THD
 *
thd
, 
åx_t
 *
åx
, boﬁ 
found_gtid
, boﬁ &
Æloc
);

213 
boﬁ
 
check_gtid_commô
(
THD
 *
thd
, boﬁ 
found_gtid
, boﬁ &
£t_ex∂icô
);

220 
boﬁ
 
check_gtid_rﬁlback
(
THD
 *
thd
, 
åx_t
 *
åx
, boﬁ 
found_gtid
);

230 
boﬁ
 
waô_thªad
(boﬁ 
°¨t
, boﬁ 
Êush
, 
uöt64_t
 
Êush_numbî
, boﬁ 
com¥ess
,

231 
boﬁ
 
óæy_timeout
, 
Cl⁄e_AÀπ_Func
 
cbk
);

234 
	gGôd_öfo_li°
 &
	$gë_a˘ive_li°
() {

235 
	`ut_ad
(
	`åx_sys_muãx_own
());

236  (
	`gë_li°
(
m_a˘ive_numbî
));

237 
	}
}

242 
	gGôd_öfo_li°
 &
	$gë_li°
(
uöt64_t
 
li°_numbî
) {

243 
li°_ödex
 = (
li°_numbî
 & 
°©ic_ˇ°
<
uöt64_t
>(1));

244  (
m_gtids
[
li°_ödex
]);

245 
	}
}

250 
boﬁ
 
debug_skù_wrôe
(boﬁ 
com¥essi⁄
);

255 
uöt64_t
 
	$ªque°_immedüã_Êush
(
boﬁ
 
com¥ess
) {

256 
	`åx_sys_muãx_íãr
();

258 
uöt64_t
 
ªque°_numbî
 = 
m_a˘ive_numbî
.
	`lﬂd
();

260 i‡(
m_num_gtid_mem
.
	`lﬂd
() == 0) {

261 
	`ut_a
(
ªque°_numbî
 > 0);

262 --
ªque°_numbî
;

264 
m_Êush_ªque°_numbî
 = 
ªque°_numbî
;

265 
	`åx_sys_muãx_exô
();

267 i‡(
com¥ess
) {

268 
m_ex∂icô_ªque°
.
	`°‹e
(
åue
);

270  (
ªque°_numbî
);

271 
	}
}

276 
boﬁ
 
	$check_Êushed
(
uöt64_t
 
ªque°_numbî
) const {

277  (
m_Êush_numbî
 >
ªque°_numbî
);

278 
	}
}

281 
boﬁ
 
	$Êush_immedüã
() const {

282  (
m_Êush_numbî
 < 
m_Êush_ªque°_numbî
 || 
m_ex∂icô_ªque°
);

283 
	}
}

287 
boﬁ
 
check_com¥ess
();

290 
uöt64_t
 
	$swôch_a˘ive_li°
() {

292 
	`ut_ad
(
	`åx_sys_muãx_own
());

293 
uöt64_t
 
Êush_numbî
 = 
m_a˘ive_numbî
;

294 ++
m_a˘ive_numbî
;

295 
m_com¥essi⁄_gtid_cou¡î
 +
m_num_gtid_mem
;

296 
m_num_gtid_mem
.
	`°‹e
(0);

297 #ifde‡
UNIV_DEBUG


299 autÿ&
a˘ive_li°
 = 
	`gë_a˘ive_li°
();

300 
	`ut_ad
(
a˘ive_li°
.
	`size
() == 0);

302  (
Êush_numbî
);

303 
	}
}

310 
wrôe_to_èbÀ
(
uöt64_t
 
Êush_li°_numbî
, 
Gtid_£t
 &
èbÀ_gtid_£t
,

311 
Sid_m≠
 &
sid_m≠
);

315 
upd©e_gtid_åx_no
(
åx_id_t
 
√w_gtid_åx_no
);

319 
Êush_gtids
(
THD
 *
thd
);

322 
boﬁ
 
check_max_gtid_thªshﬁd
();

324 
	g¥iv©e
:

327 c⁄° 
uöt32_t
 
s_time_thªshﬁd_ms
 = 100;

330 c⁄° 
uöt32_t
 
	gs_com¥essi⁄_thªshﬁd
 = 50;

333 c⁄° 
	gs_gtid_thªshﬁd
 = 1024;

338 c⁄° 
	gs_max_gtid_thªshﬁd
 = 1024 * 1024;

343 
Gôd_öfo_li°
 
	gm_gtids
[2];

346 
	g°d
::
©omic
<
uöt64_t
> 
m_a˘ive_numbî
;

349 
	g°d
::
©omic
<
uöt64_t
> 
m_Êush_numbî
;

352 
	g°d
::
©omic
<
boﬁ
> 
m_ex∂icô_ªque°
;

355 
uöt64_t
 
	gm_Êush_ªque°_numbî
{0};

358 
os_evít_t
 
	gm_evít
;

362 
uöt32_t
 
	gm_com¥essi⁄_cou¡î
{0};

365 
uöt32_t
 
	gm_com¥essi⁄_gtid_cou¡î
{0};

368 
	g°d
::
©omic
<
uöt64_t
> 
m_gtid_åx_no
;

371 
	g°d
::
©omic
<> 
m_num_gtid_mem
;

374 
	g°d
::
©omic
<
boﬁ
> 
m_Êush_ö_¥ogªss
;

377 
	g°d
::
©omic
<
boﬁ
> 
m_˛o£_thªad
;

380 
	g°d
::
©omic
<
boﬁ
> 
m_thªad_a˘ive
;

383 
	g°d
::
©omic
<
boﬁ
> 
m_a˘ive
;

	@clone0snapshot.h

32 #i‚de‡
CLONE_SNAPSHOT_INCLUDE


33 
	#CLONE_SNAPSHOT_INCLUDE


	)

35 
	~"univ.i
"

37 
	~"¨ch0log.h
"

38 
	~"¨ch0∑ge.h
"

39 
	~"˛⁄e0desc.h
"

40 
	~"˛⁄e0m⁄ô‹.h
"

41 
	~"fû0fû.h
"

42 
	~"sql/h™dÀr.h
"

44 
	~<m≠
>

45 
	~<ve˘‹
>

48 
usög
 
	gCl⁄e_Fûe_Vec
 = 
°d
::
ve˘‹
<
Cl⁄e_Fûe_Mëa
 *>;

51 
usög
 
	gCl⁄e_Fûe_M≠
 = 
°d
::
m≠
<
•a˚_id_t
, 
	guöt
>;

54 
	sCl⁄e_Page
 {

56 
ib_uöt32_t
 
	mm_•a˚_id
;

59 
ib_uöt32_t
 
	mm_∑ge_no
;

63 
	sLess_Cl⁄e_Page
 {

68 
ölöe
 
boﬁ
 
›î©‹
()(c⁄° 
	mCl⁄e_Page
 &
	m∑ge1
,

69 c⁄° 
	mCl⁄e_Page
 &
	m∑ge2
) const {

70 i‡(
	m∑ge1
.
	mm_•a˚_id
 < 
	m∑ge2
.m_space_id) {

71  (
	måue
);

74 i‡(
	m∑ge1
.
	mm_•a˚_id
 =
∑ge2
.
m_•a˚_id
 &&

75 
∑ge1
.
m_∑ge_no
 < 
∑ge2
.m_page_no) {

76  (
åue
);

78  (
	mÁl£
);

83 
usög
 
	gCl⁄e_Page_Vec
 = 
°d
::
ve˘‹
<
Cl⁄e_Page
>;

86 
usög
 
	gCl⁄e_Page_Së
 = 
°d
::
£t
<
Cl⁄e_Page
, 
	gLess_Cl⁄e_Page
>;

89 
	eCl⁄e_H™dÀ_Ty≥
 {

91 
	mCLONE_HDL_COPY
 = 1,

94 
	mCLONE_HDL_APPLY


100 c⁄° 
uöt
 
	gSNAPSHOT_DEF_CHUNK_SIZE_POW2
 = 12;

106 c⁄° 
uöt
 
	gSNAPSHOT_DEF_BLOCK_SIZE_POW2
 = 6;

110 c⁄° 
uöt
 
	gSNAPSHOT_MAX_BLOCK_SIZE_POW2
 = 12;

113 c⁄° 
uöt
 
	gSNAPSHOT_STATE_CHANGE_SLEEP
 = 100 * 1000;

116 ˛as†
	cCl⁄e_S«pshŸ
 {

117 
	mpublic
:

123 
Cl⁄e_S«pshŸ
(
Cl⁄e_H™dÀ_Ty≥
 
hdl_ty≥
, 
Ha_˛⁄e_ty≥
 
˛⁄e_ty≥
,

124 
uöt
 
¨r_idx
, 
ib_uöt64_t
 
¢≠_id
);

127 ~
Cl⁄e_S«pshŸ
();

130 
uöt64_t
 
	$gë_disk_e°im©e
(Ëc⁄° {  (
m_d©a_byãs_disk
); }

134 
ib_uöt64_t
 
	$gë_id
(Ë{  (
m_¢≠shŸ_id
); 
	}
}

138 
uöt
 
	$gë_ödex
(Ë{  (
m_¢≠shŸ_¨r_idx
); 
	}
}

143 
	gCl⁄e_M⁄ô‹
 &
	$gë_˛⁄e_m⁄ô‹
(Ë{  (
m_m⁄ô‹
); 
	}
}

147 
mem_hóp_t
 *
	$lock_hóp
() {

148 
	`muãx_íãr
(&
m_¢≠shŸ_muãx
);

149  (
m_¢≠shŸ_hóp
);

150 
	}
}

153 
	$ªÀa£_hóp
(
mem_hóp_t
 *&
hóp
) {

154 
hóp
 = 
nuŒ±r
;

155 
	`muãx_exô
(&
m_¢≠shŸ_muãx
);

156 
	}
}

160 
S«pshŸ_Sèã
 
	$gë_°©e
(Ë{  (
m_¢≠shŸ_°©e
); 
	}
}

164 
ib_uöt64_t
 
	$gë_ªdo_fûe_size
(Ë{  (
m_ªdo_fûe_size
); 
	}
}

168 
uöt
 
	$gë_num_chunks
(Ë{  (
m_num_cuºít_chunks
); 
	}
}

172 
size_t
 
	$gë_max_fûe_«me_Àngth
(Ë{  (
m_max_fûe_«me_Àn
); 
	}
}

176 
uöt
 
	$gë_dyn_buf„r_Àngth
() {

177 
uöt
 
ªt_Àn
 = 0;

179 i‡(
	`is_c›y
(Ë&& 
m_¢≠shŸ_ty≥
 !
HA_CLONE_BLOCKING
) {

180 
ªt_Àn
 = 
°©ic_ˇ°
<
uöt
>(2 * 
UNIV_PAGE_SIZE
);

183  (
ªt_Àn
);

184 
	}
}

186 
usög
 
	gFûe_Cbk_Func
 = 
°d
::
fun˘i⁄
<(
Cl⁄e_Fûe_Mëa
 *)>;

191 
ôî©e_fûes
(
Fûe_Cbk_Func
 &&
func
);

196 
gë_°©e_öfo
(
boﬁ
 
do_e°im©e
, 
Cl⁄e_Desc_Sèã
 *
°©e_desc
);

200 
£t_°©e_öfo
(
Cl⁄e_Desc_Sèã
 *
°©e_desc
);

204 
S«pshŸ_Sèã
 
gë_√xt_°©e
();

210 
boﬁ
 
©èch
(
Cl⁄e_H™dÀ_Ty≥
 
hdl_ty≥
, boﬁ 
pfs_m⁄ô‹
);

214 
uöt
 
dëach
();

224 
ch™ge_°©e
(
Cl⁄e_Desc_Sèã
 *
°©e_desc
, 
S«pshŸ_Sèã
 
√w_°©e
,

225 
byã
 *
ãmp_buf„r
, 
uöt
 
ãmp_buf„r_Àn
,

226 
Cl⁄e_AÀπ_Func
 
cbk
, 
uöt
 &
≥ndög_˛⁄es
);

232 
uöt
 
check_°©e
(
S«pshŸ_Sèã
 
√w_°©e
, 
boﬁ
 
exô_⁄_waô
);

247 
gë_fûe_‰om_desc
(
Cl⁄e_Fûe_Mëa
 *&
fûe_desc
, c⁄° *
d©a_dú
,

248 
boﬁ
 
desc_¸óã
, boﬁ &
desc_exi°s
);

253 
boﬁ
 
add_fûe_‰om_desc
(
Cl⁄e_Fûe_Mëa
 *&
fûe_desc
);

258 
dbîr_t
 
add_node
(
fû_node_t
 *
node
);

264 
add_∑ge
(
ib_uöt32_t
 
•a˚_id
, ib_uöt32_à
∑ge_num
);

271 
add_ªdo_fûe
(*
fûe_«me
, 
ib_uöt64_t
 
fûe_size
,

272 
ib_uöt64_t
 
fûe_off£t
);

277 
Cl⁄e_Fûe_Mëa
 *
gë_fûe_by_ödex
(
uöt
 
ödex
);

287 
gë_√xt_block
(
uöt
 
chunk_num
, uöà&
block_num
,

288 
Cl⁄e_Fûe_Mëa
 *
fûe_mëa
, 
ib_uöt64_t
 &
d©a_off£t
,

289 
byã
 *&
d©a_buf
, 
uöt
 &
d©a_size
);

293 
upd©e_block_size
(
uöt
 
buff_size
);

297 
boﬁ
 
	$is_c›y
(Ëc⁄° {  (
m_¢≠shŸ_h™dÀ_ty≥
 =
CLONE_HDL_COPY
); 
	}
}

302 
upd©e_fûe_size
(
uöt32_t
 
fûe_ödex
, 
uöt64_t
 
fûe_size
);

308 
boﬁ
 
í¸y±_key_ö_hódî
(c⁄° 
∑ge_size_t
 &
∑ge_size
, 
byã
 *
∑ge_d©a
);

314 
boﬁ
 
í¸y±_key_ö_log_hódî
(
byã
 *
log_hódî
, 
uöt32_t
 
hódî_Àn
);

320 
de¸y±_key_ö_hódî
(
fû_•a˚_t
 *
•a˚
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

321 
byã
 *&
∑ge_d©a
);

323 
	g¥iv©e
:

327 
synchr⁄ize_bölog_gtid
(
Cl⁄e_AÀπ_Func
 
cbk
);

334 
upd©e_bölog_posôi⁄
();

338 
waô_f‹_bölog_¥ï¨ed_åx
();

344 
waô_åx_íd
(
THD
 *
thd
, 
åx_id_t
 
åx_id
);

348 
boﬁ
 
	$ö_å™sô_°©e
() {

349 
	`muãx_own
(&
m_¢≠shŸ_muãx
);

350  (
m_¢≠shŸ_√xt_°©e
 !
CLONE_SNAPSHOT_NONE
);

351 
	}
}

359 
öô_°©e
(
Cl⁄e_Desc_Sèã
 *
°©e_desc
, 
byã
 *
ãmp_buf„r
,

360 
uöt
 
ãmp_buf„r_Àn
, 
Cl⁄e_AÀπ_Func
 
cbk
);

364 
öô_fûe_c›y
();

367 
	$öô_disk_e°im©e
() {

369 
m_d©a_byãs_disk
 = 
	`log_gë_fûe_ˇ∑côy
(*
log_sys
);

370 
	}
}

376 
öô_∑ge_c›y
(
byã
 *
∑ge_buf„r
, 
uöt
 
∑ge_buf„r_Àn
);

381 
öô_ªdo_c›y
(
Cl⁄e_AÀπ_Func
 
cbk
);

386 
öô_≠∂y_°©e
(
Cl⁄e_Desc_Sèã
 *
°©e_desc
);

391 
exãnd_™d_Êush_fûes
(
boﬁ
 
is_ªdo
);

397 
¸óã_desc
(c⁄° *
d©a_dú
, 
Cl⁄e_Fûe_Mëa
 *&
fûe_desc
);

405 
Cl⁄e_Fûe_Mëa
 *
gë_fûe
(
Cl⁄e_Fûe_Vec
 &
fûe_ve˘‹
, 
uöt
 
num_fûes
,

406 
uöt
 
chunk_num
, uöà
°¨t_ödex
);

416 
gë_√xt_∑ge
(
uöt
 
chunk_num
, uöà&
block_num
, 
Cl⁄e_Fûe_Mëa
 *
fûe_mëa
,

417 
ib_uöt64_t
 &
d©a_off£t
, 
byã
 *&
d©a_buf
, 
uöt
 &
d©a_size
);

426 
gë_∑ge_f‹_wrôe
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

427 
Cl⁄e_Fûe_Mëa
 *
fûe_mëa
, 
byã
 *&
∑ge_d©a
,

428 
uöt
 &
d©a_size
);

434 
∑ge_upd©e_f‹_Êush
(c⁄° 
∑ge_size_t
 &
∑ge_size
, 
l¢_t
 
∑ge_l¢
,

435 
byã
 *&
∑ge_d©a
);

444 
Cl⁄e_Fûe_Mëa
 *
buûd_fûe
(c⁄° *
fûe_«me
, 
uöt64_t
 
fûe_size
,

445 
uöt64_t
 
fûe_off£t
, 
uöt
 &
num_chunks
,

446 
boﬁ
 
c›y_fûe_«me
);

450 
add_buf_poﬁ_fûe
();

459 
add_fûe
(c⁄° *
«me
, 
uöt64_t
 
size_byãs
, uöt64_à
Æloc_byãs
,

460 
fû_node_t
 *
node
, 
boﬁ
 
c›y_«me
);

464 
uöt
 
	$chunk_size
() {

465 
uöt
 
size
;

467 
size
 = 
°©ic_ˇ°
<
uöt
>(
	`ut_2_exp
(
m_chunk_size_pow2
));

468  (
size
);

469 
	}
}

473 
uöt
 
	$block_size
() {

474 
uöt
 
size
;

476 
	`ut_a
(
m_block_size_pow2
 <
SNAPSHOT_MAX_BLOCK_SIZE_POW2
);

477 
size
 = 
°©ic_ˇ°
<
uöt
>(
	`ut_2_exp
(
m_block_size_pow2
));

479  (
size
);

480 
	}
}

484 
uöt
 
	$blocks_≥r_chunk
() {

485 
	`ut_a
(
m_block_size_pow2
 <
m_chunk_size_pow2
);

486  (1 << (
m_chunk_size_pow2
 - 
m_block_size_pow2
));

487 
	}
}

495 
upd©e_fûe_«me
(c⁄° *
d©a_dú
, 
Cl⁄e_Fûe_Mëa
 *
fûe_desc
,

496 *
∑th
, 
size_t
 
∑th_Àn
);

503 
buûd_fûe_∑th
(c⁄° *
d©a_dú
, 
ulöt
 
Æloc_size
,

504 
Cl⁄e_Fûe_Mëa
 *&
fûe_desc
);

510 
h™dÀ_exi°ög_fûe
(
boﬁ
 
ª∂a˚
, 
Cl⁄e_Fûe_Mëa
 *
fûe_desc
);

516 
size_t
 
compuã_∑th_Àngth
(c⁄° *
d©a_dú
,

517 c⁄° 
Cl⁄e_Fûe_Mëa
 *
fûe_desc
);

519 
	g¥iv©e
:

523 
Cl⁄e_H™dÀ_Ty≥
 
m_¢≠shŸ_h™dÀ_ty≥
;

526 
Ha_˛⁄e_ty≥
 
	gm_¢≠shŸ_ty≥
;

529 
ib_uöt64_t
 
	gm_¢≠shŸ_id
;

532 
uöt
 
	gm_¢≠shŸ_¨r_idx
;

537 
ib_muãx_t
 
	gm_¢≠shŸ_muãx
;

540 
boﬁ
 
	gm_Ælow_√w_˛⁄e
;

543 
uöt
 
	gm_num_˛⁄es
;

546 
uöt
 
	gm_num_˛⁄es_cuºít
;

549 
uöt
 
	gm_num_˛⁄es_√xt
;

552 
S«pshŸ_Sèã
 
	gm_¢≠shŸ_°©e
;

555 
S«pshŸ_Sèã
 
	gm_¢≠shŸ_√xt_°©e
;

560 
mem_hóp_t
 *
	gm_¢≠shŸ_hóp
;

563 
uöt
 
	gm_chunk_size_pow2
;

566 
uöt
 
	gm_block_size_pow2
;

569 
uöt
 
	gm_num_cuºít_chunks
;

572 
size_t
 
	gm_max_fûe_«me_Àn
;

577 
Cl⁄e_Fûe_Vec
 
	gm_d©a_fûe_ve˘‹
;

580 
Cl⁄e_Fûe_M≠
 
	gm_d©a_fûe_m≠
;

583 
uöt
 
	gm_num_d©a_fûes
;

586 
uöt
 
	gm_num_d©a_chunks
;

589 
uöt64_t
 
	gm_d©a_byãs_disk
;

592 
	g°d
::
ve˘‹
<> 
m_undo_fûe_ödexes
;

597 
Page_Arch_Clõ¡_Ctx
 
	gm_∑ge_˘x
;

600 
Cl⁄e_Page_Së
 
	gm_∑ge_£t
;

603 
Cl⁄e_Page_Vec
 
	gm_∑ge_ve˘‹
;

606 
uöt
 
	gm_num_∑ges
;

609 
uöt
 
	gm_num_du∂iˇã_∑ges
;

614 
Log_Arch_Clõ¡_Ctx
 
	gm_ªdo_˘x
;

617 
Cl⁄e_Fûe_Vec
 
	gm_ªdo_fûe_ve˘‹
;

620 
ib_uöt64_t
 
	gm_ªdo_°¨t_off£t
;

623 
byã
 *
	gm_ªdo_hódî
;

626 
uöt
 
	gm_ªdo_hódî_size
;

629 
byã
 *
	gm_ªdo_åaûî
;

632 
uöt
 
	gm_ªdo_åaûî_size
;

635 
ib_uöt64_t
 
	gm_ªdo_åaûî_off£t
;

638 
ib_uöt64_t
 
	gm_ªdo_fûe_size
;

641 
uöt
 
	gm_num_ªdo_fûes
;

644 
uöt
 
	gm_num_ªdo_chunks
;

647 
boﬁ
 
	gm_íabÀ_pfs
;

650 
Cl⁄e_M⁄ô‹
 
	gm_m⁄ô‹
;

	@data0data.h

33 #i‚de‡
d©a0d©a_h


34 
	#d©a0d©a_h


	)

36 
	~"univ.i
"

39 
	~"d©a0ty≥.h
"

40 
	~"d©a0ty≥s.h
"

41 
	~"di˘0ty≥s.h
"

42 
	~"mem0mem.h
"

43 
	~"åx0ty≥s.h
"

44 
	~"ut0bô£t.h
"

46 
	~<o°ªam
>

50 
	gbig_ªc_t
;

51 
	gupd_t
;

53 #ifde‡
UNIV_DEBUG


56 
UNIV_INLINE


57 
dty≥_t
 *
	$dfõld_gë_ty≥
(c⁄° 
dfõld_t
 *
fõld
)

58 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

61 
UNIV_INLINE


62 *
	$dfõld_gë_d©a
(c⁄° 
dfõld_t
 *
fõld
)

63 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

65 
	#dfõld_gë_ty≥
(
fõld
Ë(&(fõld)->
ty≥
)

	)

66 
	#dfõld_gë_d©a
(
fõld
Ë((fõld)->
d©a
)

	)

72 
UNIV_INLINE


73 
	`dfõld_£t_ty≥
(
dfõld_t
 *
fõld
, c⁄° 
dty≥_t
 *
ty≥
);

77 
UNIV_INLINE


78 
uöt32_t
 
	$dfõld_gë_Àn
(c⁄° 
dfõld_t
 *
fõld
)

79 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

84 
UNIV_INLINE


85 
	`dfõld_£t_Àn
(
dfõld_t
 *
fõld
, 
ulöt
 
Àn
);

89 
UNIV_INLINE


90 
ulöt
 
	$dfõld_is_nuŒ
(c⁄° 
dfõld_t
 *
fõld
)

91 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

94 
UNIV_INLINE


95 
ulöt
 
	$dfõld_is_ext
(c⁄° 
dfõld_t
 *
fõld
)

96 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

98 
UNIV_INLINE


99 
	`dfõld_£t_ext
(
dfõld_t
 *
fõld
);

103 
UNIV_INLINE


104 
•©ül_°©us_t
 
	`dfõld_gë_•©ül_°©us
(c⁄° 
dfõld_t
 *
fõld
);

109 
UNIV_INLINE


110 
	`dfõld_£t_•©ül_°©us
(
dfõld_t
 *
fõld
,

111 
•©ül_°©us_t
 
•©ül_°©us
);

117 
UNIV_INLINE


118 
	`dfõld_£t_d©a
(
dfõld_t
 *
fõld
, c⁄° *
d©a
, 
ulöt
 
Àn
);

123 
UNIV_INLINE


124 
	`dfõld_wrôe_mbr
(
dfõld_t
 *
fõld
, c⁄° *
mbr
);

127 
UNIV_INLINE


128 
	`dfõld_£t_nuŒ
(
dfõld_t
 *
fõld
);

133 
UNIV_INLINE


134 
	`d©a_wrôe_sql_nuŒ
(
byã
 *
d©a
, 
ulöt
 
Àn
);

139 
UNIV_INLINE


140 
	`dfõld_c›y_d©a
(
dfõld_t
 *
fõld1
, c⁄° dfõld_à*
fõld2
);

145 
UNIV_INLINE


146 
	`dfõld_c›y
(
dfõld_t
 *
fõld1
, c⁄° dfõld_à*
fõld2
);

151 
UNIV_INLINE


152 
	`dfõld_dup
(
dfõld_t
 *
fõld
, 
mem_hóp_t
 *
hóp
);

158 
UNIV_INLINE


159 
	`dfõld_mu…i_vÆue_dup
(
dfõld_t
 *
fõld
, 
mem_hóp_t
 *
hóp
);

164 
UNIV_INLINE


165 
boﬁ
 
	`dfõld_is_mu…i_vÆue
(c⁄° 
dfõld_t
 *
fõld
);

176 
ölöe
 
boﬁ
 
	$dfõld_d©as_¨e_bö¨y_equÆ
(c⁄° 
dfõld_t
 *
fõld1
,

177 c⁄° 
dfõld_t
 *
fõld2
, 
ulöt
 
Àn
)

178 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

181 
UNIV_INLINE


182 
boﬁ
 
	$dfõld_d©a_is_bö¨y_equÆ
(

183 c⁄° 
dfõld_t
 *
fõld
,

184 
ulöt
 
Àn
,

185 c⁄° 
byã
 *
d©a
)

186 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

189 
UNIV_INLINE


190 
ulöt
 
	$dtu∂e_gë_n_fõlds
(c⁄° 
dtu∂e_t
 *
tu∂e
)

191 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

196 
UNIV_INLINE


197 
ulöt
 
	`dtu∂e_gë_n_v_fõlds
(c⁄° 
dtu∂e_t
 *
tu∂e
);

199 #ifde‡
UNIV_DEBUG


204 
UNIV_INLINE


205 
dfõld_t
 *
	`dtu∂e_gë_¡h_fõld
(c⁄° 
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n
);

211 
UNIV_INLINE


212 
dfõld_t
 *
	`dtu∂e_gë_¡h_v_fõld
(c⁄° 
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n
);

215 
	#dtu∂e_gë_¡h_fõld
(
tu∂e
, 
n
Ë(—u∂e)->
fõlds
 + (n))

	)

216 
	#dtu∂e_gë_¡h_v_fõld
(
tu∂e
, 
n
) \

217 ((
tu∂e
)->
fõlds
 + (tu∂e)->
n_fõlds
 + (
n
))

	)

221 
UNIV_INLINE


222 
ulöt
 
	$dtu∂e_gë_öfo_bôs
(c⁄° 
dtu∂e_t
 *
tu∂e
)

223 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

228 
UNIV_INLINE


229 
	`dtu∂e_£t_öfo_bôs
(
dtu∂e_t
 *
tu∂e
, 
ulöt
 
öfo_bôs
);

233 
UNIV_INLINE


234 
ulöt
 
	$dtu∂e_gë_n_fõlds_cmp
(c⁄° 
dtu∂e_t
 *
tu∂e
)

235 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

241 
UNIV_INLINE


242 
	`dtu∂e_£t_n_fõlds_cmp
(
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n_fõlds_cmp
);

246 
	#DTUPLE_EST_ALLOC
(
n_fõlds
) \

247 ((
dtu∂e_t
Ë+ (
n_fõlds
Ë* (
dfõld_t
))

	)

258 
UNIV_INLINE


259 
dtu∂e_t
 *
	$dtu∂e_¸óã_‰om_mem
(*
buf
, 
ulöt
 
buf_size
, ulöà
n_fõlds
,

260 
ulöt
 
n_v_fõlds
)

261 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

265 
UNIV_INLINE


266 
dtu∂e_t
 *
	$dtu∂e_¸óã
(

267 
mem_hóp_t
 *
hóp
,

270 
ulöt
 
n_fõlds
)

271 
	`MY_ATTRIBUTE
((
mÆloc
));

275 
UNIV_INLINE


276 
	`dtu∂e_öô_v_Êd
(c⁄° 
dtu∂e_t
 *
vrow
);

281 
UNIV_INLINE


282 
	`dtu∂e_dup_v_Êd
(c⁄° 
dtu∂e_t
 *
vrow
, 
mem_hóp_t
 *
hóp
);

289 
UNIV_INLINE


290 
dtu∂e_t
 *
	`dtu∂e_¸óã_wôh_vcﬁ
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n_fõlds
,

291 
ulöt
 
n_v_fõlds
);

296 
	`dtu∂e_£t_n_fõlds
(
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n_fõlds
);

301 
UNIV_INLINE


302 
	`dtu∂e_c›y_v_fõlds
(
dtu∂e_t
 *
d_tu∂e
, c⁄° dtu∂e_à*
s_tu∂e
);

306 
UNIV_INLINE


307 
dtu∂e_t
 *
	$dtu∂e_c›y
(c⁄° 
dtu∂e_t
 *
tu∂e
,

308 
mem_hóp_t
 *
hóp
)

310 
	`MY_ATTRIBUTE
((
mÆloc
));

317 
UNIV_INLINE


318 
ulöt
 
	`dtu∂e_gë_d©a_size
(c⁄° 
dtu∂e_t
 *
tu∂e
, ulöà
comp
);

324 
boﬁ
 
	$dtu∂e_cﬁl_eq
(c⁄° 
dtu∂e_t
 *
tu∂e1
, c⁄° dtu∂e_à*
tu∂e2
)

325 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

333 
UNIV_INLINE


334 
ulöt
 
	$dtu∂e_fﬁd
(c⁄° 
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n_fõlds
, ulöà
n_byãs
,

335 
ulöt
 
fﬁd
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

340 
UNIV_INLINE


341 
	`dtu∂e_£t_ty≥s_bö¨y
(
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n
);

345 
UNIV_INLINE


346 
boﬁ
 
	$dtu∂e_c⁄èös_nuŒ
(c⁄° 
dtu∂e_t
 *
tu∂e
)

347 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

350 
boﬁ
 
	$dfõld_check_ty≥d
(c⁄° 
dfõld_t
 *
fõld
)

351 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

354 
boﬁ
 
	$dtu∂e_check_ty≥d
(c⁄° 
dtu∂e_t
 *
tu∂e
)

355 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

356 #ifde‡
UNIV_DEBUG


360 
boﬁ
 
	$dtu∂e_vÆid©e
(c⁄° 
dtu∂e_t
 *
tu∂e
)

361 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

365 
	`dfõld_¥öt_Æso_hex
(c⁄° 
dfõld_t
 *
dfõld
);

370 
	`dtu∂e_¥öt
(
FILE
 *
f
, c⁄° 
dtu∂e_t
 *
tu∂e
);

376 
	`dfõld_¥öt
(
°d
::
o°ªam
 &
o
, c⁄° 
dfõld_t
 *
fõld
, 
ulöt
 
n
);

381 
	`dtu∂e_¥öt
(
°d
::
o°ªam
 &
o
, c⁄° 
dtu∂e_t
 *
tu∂e
);

386 
ölöe
 
°d
::
o°ªam
 &
›î©‹
<<(°d::o°ªam &
o
, c⁄° 
dtu∂e_t
 &
tu∂e
) {

387 
	`dtu∂e_¥öt
(
o
, &
tu∂e
);

388  (
o
);

389 
	}
}

401 
big_ªc_t
 *
	$dtu∂e_c⁄vît_big_ªc
(
di˘_ödex_t
 *
ödex
, 
upd_t
 *
upd
,

402 
dtu∂e_t
 *
íåy
)

403 
	`MY_ATTRIBUTE
((
mÆloc
, 
w¨n_unu£d_ªsu…
));

410 
	`dtu∂e_c⁄vît_back_big_ªc
(
dtu∂e_t
 *
íåy
, 
big_ªc_t
 *
ve˘‹
);

413 
UNIV_INLINE


414 
	`dtu∂e_big_ªc_‰ì
(
big_ªc_t
 *
ve˘‹
);

420 
	smu…i_vÆue_d©a
 {

421 
public
:

423 c⁄° **
d©≠
;

426 
uöt32_t
 *
d©a_Àn
;

429 
uöt64_t
 *
c⁄v_buf
;

432 
uöt32_t
 
num_v
;

435 
uöt32_t
 
num_Æc
;

444 
Bô£t
 *
bô£t
;

452 
	`Æloc
(
uöt32_t
 
num
, 
boﬁ
 
bô£t
, 
mem_hóp_t
 *
hóp
);

458 
	`Æloc_bô£t
(
mem_hóp_t
 *
hóp
, 
uöt32_t
 
size
 = 0);

463 
boﬁ
 
	`equÆ
(c⁄° 
mu…i_vÆue_d©a
 *
mu…i_vÆue
) const {

464 i‡(
num_v
 !
mu…i_vÆue
->num_v) {

465  (
Ál£
);

468 
uöt32_t
 
i
 = 0; i < 
num_v
; ++i) {

469 i‡(
d©a_Àn
[
i
] !
mu…i_vÆue
->data_len[i] ||

470 
	`memcmp
(
d©≠
[
i
], 
mu…i_vÆue
->d©≠[i], 
d©a_Àn
[i]) != 0) {

471  (
Ál£
);

475  (
åue
);

481 
	`c›y
(c⁄° 
mu…i_vÆue_d©a
 *
mu…i_vÆue
, 
mem_hóp_t
 *
hóp
) {

482 i‡(
num_Æc
 < 
mu…i_vÆue
->
num_v
) {

483 
	`Æloc
(
mu…i_vÆue
->
num_v
, (mu…i_vÆue->
bô£t
 !
nuŒ±r
), 
hóp
);

486 
	`c›y_low
(
mu…i_vÆue
, 
hóp
);

498 
boﬁ
 
	`has
(c⁄° 
dty≥_t
 *
ty≥
, c⁄° 
byã
 *
d©a
, 
uöt64_t
 
Àn
) const;

510 
boﬁ
 
	`has
(
ulöt
 
mty≥
, ulöà
¥ty≥
, c⁄° 
byã
 *
d©a
, 
uöt64_t
 
Àn
) const;

512 #ifde‡
UNIV_DEBUG


516 
boﬁ
 
	`du∂iˇã
() const {

520 i‡(
num_v
 > 1) {

521 
uöt32_t
 
i
 = 1; i < 
num_v
; ++i) {

522 i‡(
d©a_Àn
[
i
] == data_len[i - 1] &&

523 
	`memcmp
(
d©≠
[
i
], d©≠[ò- 1], 
d©a_Àn
[i]) == 0) {

524  (
åue
);

528  (
Ál£
);

532 
¥iv©e
:

537 
	`c›y_low
(c⁄° 
mu…i_vÆue_d©a
 *
mu…i_vÆue
, 
mem_hóp_t
 *
hóp
) {

538 
	`ut_ad
(
num_Æc
 >
mu…i_vÆue
->
num_v
);

539 
uöt32_t
 
i
 = 0; i < 
mu…i_vÆue
->
num_v
; ++i) {

540 
d©≠
[
i
] =

541 
	`mem_hóp_dup
(
hóp
, 
mu…i_vÆue
->
d©≠
[
i
], mu…i_vÆue->
d©a_Àn
[i]);

543 
	`mem˝y
(
d©a_Àn
, 
mu…i_vÆue
->data_len,

544 (*
d©a_Àn
Ë* 
mu…i_vÆue
->
num_v
);

545 
	`mem˝y
(
c⁄v_buf
, 
mu…i_vÆue
->conv_buf,

546 (*
c⁄v_buf
Ë* 
mu…i_vÆue
->
num_v
);

547 i‡(
mu…i_vÆue
->
bô£t
 !
nuŒ±r
) {

548 
	`ut_ad
(
bô£t
 !
nuŒ±r
);

549 *
bô£t
 = *
mu…i_vÆue
->bitset;

551 
num_v
 = 
mu…i_vÆue
->num_v;

554 
public
:

556 
c⁄°ex¥
 
uöt32_t
 
s_deÁu…_Æloˇã_num
 = 24;

560 ˛as†
	cMu…i_vÆue_loggî
 {

561 
public
:

565 
	$Mu…i_vÆue_loggî
(c⁄° 
mu…i_vÆue_d©a
 *
mv_d©a
, 
uöt32_t
 
fõld_Àn
)

566 : 
	`m_mv_d©a
(
mv_d©a
), 
	$m_fõld_Àn
(
fõld_Àn
) {}

572 
uöt32_t
 
	$gë_log_Àn
(
boﬁ
 
¥eci£
) const;

577 
byã
 *
	`log
(byã **
±r
);

582 
uöt32_t
 
	`ªad_log_Àn
(c⁄° 
byã
 *
±r
);

589 c⁄° 
byã
 *
	`ªad
(c⁄° byã *
±r
, 
dfõld_t
 *
fõld
, 
mem_hóp_t
 *
hóp
);

598 
uöt32_t
 
	`gë_keys_ˇ∑côy
(uöt32_à
log_size
, uöt32_à
key_Àngth
,

599 
uöt32_t
 *
num_keys
);

603 
boﬁ
 
	$is_mu…i_vÆue_log
(c⁄° 
byã
 *
±r
) {

604  (*
±r
 =
s_mu…i_vÆue_vútuÆ_cﬁ_Àngth_m¨kî
);

605 
	}
}

607 
	g¥iv©e
:

609 c⁄° 
mu…i_vÆue_d©a
 *
m_mv_d©a
;

612 
uöt32_t
 
	gm_fõld_Àn
;

615 
c⁄°ex¥
 
uöt32_t
 
	gs_log_Àngth_f‹_nuŒ_‹_em±y
 = 2;

621 
c⁄°ex¥
 
uöt8_t
 
	gs_mu…i_vÆue_vútuÆ_cﬁ_Àngth_m¨kî
 = 0xFF;

625 
c⁄°ex¥
 
uöt16_t
 
	gs_mu…i_vÆue_no_ödex_vÆue
 = 0x0;

631 
c⁄°ex¥
 
uöt16_t
 
	gs_mu…i_vÆue_nuŒ
 = 0x1;

637 
c⁄°ex¥
 
uöt8_t
 
	gs_max_com¥es£d_mv_key_Àngth_size
 = 2;

641 
	sdfõld_t
 {

642 *
	md©a
;

643 
	mext
 : 1;

644 
	m•©ül_°©us
 : 2;

647 
	mÀn
;

648 
dty≥_t
 
	mty≥
;

650 
boﬁ
 
is_vútuÆ
(Ëc⁄° {  (
	mty≥
.is_virtual()); }

652 
ª£t
() {

653 
	md©a
 = 
nuŒ±r
;

654 
	mext
 = 
FALSE
;

655 
	m•©ül_°©us
 = 
SPATIAL_UNKNOWN
, 
	mÀn
 = 0;

662 
dfõld_t
 *
˛⁄e
(
mem_hóp_t
 *
hóp
);

664 
byã
 *
blobªf
() const;

668 
uöt32_t
 
lob_vîsi⁄
() const;

670 
dfõld_t
()

671 : 
d©a
(
nuŒ±r
), 
ext
(0), 
•©ül_°©us
(0), 
Àn
(0), 
ty≥
({0, 0, 0, 0}) {}

676 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

685 
adju°_v_d©a_mysql
(c⁄° 
di˘_v_cﬁ_t
 *
vcﬁ
, 
boﬁ
 
comp
,

686 c⁄° 
byã
 *
fõld
, 
ulöt
 
Àn
, 
mem_hóp_t
 *
hóp
);

698 
boﬁ
 
is_mu…i_vÆue_˛u°_™d_£c_equÆ
(c⁄° 
byã
 *
˛u°_fõld
,

699 
uöt64_t
 
˛u°_Àn
,

700 c⁄° 
byã
 *
£c_fõld
, 
uöt64_t
 
£c_Àn
,

701 c⁄° 
di˘_cﬁ_t
 *
cﬁ
);

708 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gdfõld_t
 &
	gobj
) {

709  (
	gobj
.
¥öt
(
out
));

713 
	sdtu∂e_t
 {

716 
ulöt
 
	möfo_bôs
;

719 
ulöt
 
	mn_fõlds
;

724 
ulöt
 
	mn_fõlds_cmp
;

727 
dfõld_t
 *
	mfõlds
;

730 
ulöt
 
	mn_v_fõlds
;

733 
dfõld_t
 *
	mv_fõlds
;

736 
UT_LIST_NODE_T
(
dtu∂e_t
Ë
	mtu∂e_li°
;

737 #ifde‡
UNIV_DEBUG


739 
mem_hóp_t
 *
	mm_hóp
;

742 
ulöt
 
	mmagic_n
;

745 
	#DATA_TUPLE_MAGIC_N
 65478679

	)

752 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

753 
dtu∂e_¥öt
(
out
, 
this
);

754  (
	mout
);

759 
åx_id_t
 
gë_åx_id
() const;

764 
ign‹e_åaûög_deÁu…
(c⁄° 
di˘_ödex_t
 *
ödex
);

775 
com∑ª
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
ulöt
 *
off£ts
,

776 
ulöt
 *
m©ched_fõlds
) const;

786 
ölöe
 
com∑ª
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
di˘_ödex_t
 *
ödex
,

787 c⁄° 
ulöt
 *
off£ts
) const {

788 
ulöt
 
	mm©ched_fõlds
{};

790  (
com∑ª
(
ªc
, 
ödex
, 
off£ts
, &
m©ched_fõlds
));

795 
ölöe
 
ulöt
 
gë_n_ext
() const {

796 
ulöt
 
	mn_ext
 = 0;

797 
size_t
 
	mi
 = 0; i < 
	mn_fõlds
; ++i) {

798 i‡(
dfõld_is_ext
(&
fõlds
[
i
])) {

799 
	mn_ext
++;

802  (
	mn_ext
);

807 
ölöe
 
boﬁ
 
has_ext
() const {

808 
size_t
 
	mi
 = 0; i < 
	mn_fõlds
; ++i) {

809 i‡(
dfõld_is_ext
(&
fõlds
[
i
])) {

810  (
	måue
);

813  (
	mÁl£
);

818 
	sbig_ªc_fõld_t
 {

823 
big_ªc_fõld_t
(
ulöt
 
fõld_no_
, ulöà
Àn_
, *
d©a_
)

824 : 
fõld_no
(
fõld_no_
),

825 
Àn
(
Àn_
),

826 
d©a
(
d©a_
),

827 
ext_ö_ﬁd
(
Ál£
),

828 
ext_ö_√w
(
Ál£
) {}

830 
byã
 *
±r
(Ëc⁄° {  (
	m°©ic_ˇ°
<
	mbyã
 *>(
	md©a
)); }

832 
ulöt
 
	mfõld_no
;

833 
ulöt
 
	mÀn
;

834 *
	md©a
;

838 
boﬁ
 
	mext_ö_ﬁd
;

842 
boﬁ
 
	mext_ö_√w
;

847 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

855 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gbig_ªc_fõld_t
 &
	gobj
) {

856  (
	gobj
.
¥öt
(
out
));

861 
	sbig_ªc_t
 {

862 
mem_hóp_t
 *
	mhóp
;

864 c⁄° 
ulöt
 
	mˇ∑côy
;

865 
ulöt
 
	mn_fõlds
;

866 
big_ªc_fõld_t
 *
	mfõlds
;

870 
ex∂icô
 
big_ªc_t
(c⁄° 
ulöt
 
max
)

871 : 
hóp
(
nuŒ±r
), 
ˇ∑côy
(
max
), 
n_fõlds
(0), 
fõlds
(nullptr) {}

874 
≠≥nd
(c⁄° 
big_ªc_fõld_t
 &
fõld
) {

875 
ut_ad
(
n_fõlds
 < 
ˇ∑côy
);

876 
	mfõlds
[
n_fõlds
] = 
fõld
;

877 
	mn_fõlds
++;

886 
big_ªc_t
 *
Æloc
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n_Êd
);

891 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

899 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gbig_ªc_t
 &
	gobj
) {

900  (
	gobj
.
¥öt
(
out
));

903 
	~"d©a0d©a.ic
"

	@data0data.ic

33 
	~"bå0ty≥s.h
"

34 
	~"mem0mem.h
"

36 #ifde‡
UNIV_DEBUG


40 
byã
 
d©a_îr‹
;

44 
UNIV_INLINE


45 
dty≥_t
 *
	$dfõld_gë_ty≥
(c⁄° 
dfõld_t
 *
fõld
)

47 
	`ut_ad
(
fõld
);

49  ((
dty≥_t
 *)&(
fõld
->
ty≥
));

50 
	}
}

54 
UNIV_INLINE


55 
	$dfõld_£t_ty≥
(

56 
dfõld_t
 *
fõld
,

57 c⁄° 
dty≥_t
 *
ty≥
)

59 
	`ut_ad
(
fõld
 !
nuŒ±r
);

60 
	`ut_ad
(
ty≥
 !
nuŒ±r
);

62 
fõld
->
ty≥
 = *type;

63 
	}
}

65 #ifde‡
UNIV_DEBUG


68 
UNIV_INLINE


69 *
	$dfõld_gë_d©a
(c⁄° 
dfõld_t
 *
fõld
)

71 
	`ut_ad
(
fõld
);

72 
	`ut_ad
((
fõld
->
Àn
 =
UNIV_SQL_NULL
Ë|| (fõld->
d©a
 !&
d©a_îr‹
));

74  ((*)
fõld
->
d©a
);

75 
	}
}

80 
UNIV_INLINE


81 
uöt32_t
 
	$dfõld_gë_Àn
(c⁄° 
dfõld_t
 *
fõld
)

83 
	`ut_ad
(
fõld
);

84 
	`ut_ad
((
fõld
->
Àn
 =
UNIV_SQL_NULL
Ë|| (fõld->
d©a
 !&
d©a_îr‹
));

86  (
fõld
->
Àn
);

87 
	}
}

90 
UNIV_INLINE


91 
	$dfõld_£t_Àn
(
dfõld_t
 *
fõld
,

92 
ulöt
 
Àn
)

94 
	`ut_ad
(
fõld
);

95 #ifde‡
UNIV_VALGRIND_DEBUG


96 i‡(
Àn
 !
UNIV_SQL_NULL
Ë
	`UNIV_MEM_ASSERT_RW
(
fõld
->
d©a
,Üen);

99 
fõld
->
ext
 = 0;

100 
fõld
->
Àn
 = 
°©ic_ˇ°
<>(len);

101 
	}
}

105 
UNIV_INLINE


106 
ulöt
 
	$dfõld_is_nuŒ
(c⁄° 
dfõld_t
 *
fõld
)

108 
	`ut_ad
(
fõld
);

110  (
fõld
->
Àn
 =
UNIV_SQL_NULL
);

111 
	}
}

115 
UNIV_INLINE


116 
ulöt
 
	$dfõld_is_ext
(c⁄° 
dfõld_t
 *
fõld
)

118 
	`ut_ad
(
fõld
);

119 
	`ut_ad
(!
fõld
->
ext
 || fõld->
Àn
 >
BTR_EXTERN_FIELD_REF_SIZE
);

121  (
fõld
->
ext
);

122 
	}
}

125 
UNIV_INLINE


126 
	$dfõld_£t_ext
(
dfõld_t
 *
fõld
)

128 
	`ut_ad
(
fõld
);

130 
fõld
->
ext
 = 1;

131 
	}
}

135 
UNIV_INLINE


136 
•©ül_°©us_t
 
	$dfõld_gë_•©ül_°©us
(c⁄° 
dfõld_t
 *
fõld
) {

137 
	`ut_ad
(
fõld
);

138 
	`ut_ad
(
	`dfõld_is_ext
(
fõld
));

140  (
°©ic_ˇ°
<
•©ül_°©us_t
>(
fõld
->
•©ül_°©us
));

141 
	}
}

146 
UNIV_INLINE


147 
	$dfõld_£t_•©ül_°©us
(
dfõld_t
 *
fõld
,

148 
•©ül_°©us_t
 
•©ül_°©us
) {

149 
	`ut_ad
(
fõld
);

150 
	`ut_ad
(
	`dfõld_is_ext
(
fõld
));

152 
fõld
->
•©ül_°©us
 = spatial_status;

153 
	}
}

156 
UNIV_INLINE


157 
	$dfõld_£t_d©a
(
dfõld_t
 *
fõld
,

158 c⁄° *
d©a
,

159 
ulöt
 
Àn
)

161 
	`ut_ad
(
fõld
);

163 #ifde‡
UNIV_VALGRIND_DEBUG


164 i‡(
Àn
 !
UNIV_SQL_NULL
Ë
	`UNIV_MEM_ASSERT_RW
(
d©a
,Üen);

166 
fõld
->
d©a
 = (*)data;

167 
fõld
->
ext
 = 0;

168 
fõld
->
Àn
 = 
°©ic_ˇ°
<>(len);

169 
	}
}

172 
UNIV_INLINE


173 
	$dfõld_wrôe_mbr
(
dfõld_t
 *
fõld
,

174 c⁄° *
mbr
)

176 
	`ut_ad
(
fõld
);

178 #ifde‡
UNIV_VALGRIND_DEBUG


179 i‡(
Àn
 !
UNIV_SQL_NULL
Ë
	`UNIV_MEM_ASSERT_RW
(
d©a
,Üen);

181 
fõld
->
ext
 = 0;

183 
i
 = 0; i < 
SPDIMS
 * 2; i++) {

184 
	`mach_doubÀ_wrôe
(
°©ic_ˇ°
<
byã
 *>(
fõld
->
d©a
Ë+ 
i
 * (),

185 
mbr
[
i
]);

188 
fõld
->
Àn
 = 
DATA_MBR_LEN
;

189 
	}
}

192 
UNIV_INLINE


193 
	$dfõld_£t_nuŒ
(
dfõld_t
 *
fõld
)

195 
	`dfõld_£t_d©a
(
fõld
, 
nuŒ±r
, 
UNIV_SQL_NULL
);

196 
	}
}

199 
UNIV_INLINE


200 
	$dfõld_c›y_d©a
(
dfõld_t
 *
fõld1
,

201 c⁄° 
dfõld_t
 *
fõld2
)

203 
	`ut_ad
(
fõld1
 !
nuŒ±r
);

204 
	`ut_ad
(
fõld2
 !
nuŒ±r
);

206 
fõld1
->
d©a
 = 
fõld2
->data;

207 
fõld1
->
Àn
 = 
fõld2
->len;

208 
fõld1
->
ext
 = 
fõld2
->ext;

209 
fõld1
->
•©ül_°©us
 = 
fõld2
->spatial_status;

210 
	}
}

213 
UNIV_INLINE


214 
	$dfõld_c›y
(
dfõld_t
 *
fõld1
,

215 c⁄° 
dfõld_t
 *
fõld2
)

217 *
fõld1
 = *
fõld2
;

218 
	}
}

221 
UNIV_INLINE


222 
	$dfõld_dup
(
dfõld_t
 *
fõld
,

223 
mem_hóp_t
 *
hóp
)

225 
	`ut_ad
(!
	`dfõld_is_mu…i_vÆue
(
fõld
) ||

226 
	`dfõld_gë_Àn
(
fõld
Ë!
UNIV_MULTI_VALUE_ARRAY_MARKER
);

228 i‡(!
	`dfõld_is_nuŒ
(
fõld
Ë&& fõld->
d©a
 !
nuŒ±r
) {

229 
	`UNIV_MEM_ASSERT_RW
(
fõld
->
d©a
, fõld->
Àn
);

230 
fõld
->
d©a
 = 
	`mem_hóp_dup
(
hóp
, fõld->d©a, fõld->
Àn
);

232 
	}
}

234 
UNIV_INLINE


235 
boﬁ
 
	$dfõld_is_mu…i_vÆue
(c⁄° 
dfõld_t
 *
fõld
) {

237 
	`ut_ad
(
fõld
->
ty≥
.
¥ty≥
 !
DATA_ERROR
);

238  ((
fõld
->
ty≥
.
¥ty≥
 & 
DATA_MULTI_VALUE
) != 0);

239 
	}
}

245 
UNIV_INLINE


246 
	$dfõld_mu…i_vÆue_dup
(
dfõld_t
 *
fõld
, 
mem_hóp_t
 *
hóp
) {

247 
	`ut_ad
(
	`dfõld_is_mu…i_vÆue
(
fõld
));

250 i‡(!
	`dfõld_is_nuŒ
(
fõld
Ë&& fõld->
d©a
 !
nuŒ±r
) {

251 
	`ut_ad
(
fõld
->
Àn
 =
UNIV_MULTI_VALUE_ARRAY_MARKER
);

252 
mu…i_vÆue_d©a
 *
mv_d©a
 = 
°©ic_ˇ°
<mu…i_vÆue_d©®*>(
fõld
->
d©a
);

253 
mu…i_vÆue_d©a
 *
vÆue
 =

254 
°©ic_ˇ°
<
mu…i_vÆue_d©a
 *>(
	`mem_hóp_zÆloc
(
hóp
, (*
vÆue
)));

255 
vÆue
->
	`c›y
(
mv_d©a
, 
hóp
);

256 
fõld
->
d©a
 = 
vÆue
;

258 
	}
}

260 
ölöe
 
boﬁ
 
	$dfõld_d©as_¨e_bö¨y_equÆ
(c⁄° 
dfõld_t
 *
fõld1
,

261 c⁄° 
dfõld_t
 *
fõld2
, 
ulöt
 
Àn
) {

262 i‡(
	`dfõld_is_mu…i_vÆue
(
fõld1
)) {

263 
	`ut_ad
(
	`dfõld_is_mu…i_vÆue
(
fõld2
));

264 
	`ut_ad
(
fõld1
->
Àn
 =
UNIV_MULTI_VALUE_ARRAY_MARKER
 ||

265 
fõld1
->
Àn
 =
UNIV_SQL_NULL
 || fõld1->À¿=
UNIV_NO_INDEX_VALUE
);

266 
	`ut_ad
(
fõld2
->
Àn
 =
UNIV_MULTI_VALUE_ARRAY_MARKER
 ||

267 
fõld2
->
Àn
 =
UNIV_SQL_NULL
 || fõld2->À¿=
UNIV_NO_INDEX_VALUE
);

268 i‡(
fõld1
->
Àn
 !
fõld2
->len) {

269  (
Ál£
);

272 i‡(
fõld2
->
Àn
 !
UNIV_MULTI_VALUE_ARRAY_MARKER
) {

273  (
åue
);

276 
	`ut_ad
(
fõld1
->
Àn
 =
UNIV_MULTI_VALUE_ARRAY_MARKER
);

277 
	`ut_ad
(
fõld2
->
Àn
 =
UNIV_MULTI_VALUE_ARRAY_MARKER
);

279 c⁄°áutÿ*
mu…i_vÆ1
 = 
°©ic_ˇ°
<
mu…i_vÆue_d©a
 *>(
fõld1
->
d©a
);

280 c⁄°áutÿ*
mu…i_vÆ2
 = 
°©ic_ˇ°
<
mu…i_vÆue_d©a
 *>(
fõld2
->
d©a
);

282  (
mu…i_vÆ1
->
	`equÆ
(
mu…i_vÆ2
));

285 autÿ
Àn2
 = 
Àn
;

287 i‡(
fõld1
->
Àn
 =
UNIV_SQL_NULL
 ||Üen == 0 || field1->len <Üen) {

288 
Àn
 = 
fõld1
->len;

291 i‡(
fõld2
->
Àn
 =
UNIV_SQL_NULL
 || 
Àn2
 == 0 || field2->len <Üen2) {

292 
Àn2
 = 
fõld2
->
Àn
;

295  (
Àn
 =
Àn2
 &&

296 (
Àn
 =
UNIV_SQL_NULL
 || !
	`memcmp
(
fõld1
->
d©a
, 
fõld2
->data,Üen)));

297 
	}
}

301 
UNIV_INLINE


302 
boﬁ
 
	$dfõld_d©a_is_bö¨y_equÆ
(

303 c⁄° 
dfõld_t
 *
fõld
,

304 
ulöt
 
Àn
,

305 c⁄° 
byã
 *
d©a
)

307 i‡(
	`dfõld_is_mu…i_vÆue
(
fõld
)) {

308 
uöt64_t
 
fõld_Àn
 = 
	`dfõld_gë_Àn
(
fõld
);

309 i‡(
fõld_Àn
 =
UNIV_MULTI_VALUE_ARRAY_MARKER
) {

310 i‡(
Àn
 !
UNIV_MULTI_VALUE_ARRAY_MARKER
) {

311  (
Ál£
);

314 
mu…i_vÆue_d©a
 *
mv_d©a
 =

315 
ªöãΩªt_ˇ°
<
mu…i_vÆue_d©a
 *>(
fõld
->
d©a
);

316  (
mv_d©a
->
	`equÆ
(
ªöãΩªt_ˇ°
<c⁄° 
mu…i_vÆue_d©a
 *>(
d©a
)));

318  (
fõld_Àn
 =
Àn
 &&

319 (
Àn
 =
UNIV_SQL_NULL
 ||Üí =
UNIV_NO_INDEX_VALUE
 ||

320 
	`memcmp
(
	`dfõld_gë_d©a
(
fõld
), 
d©a
, 
Àn
) == 0));

323  (
Àn
 =
	`dfõld_gë_Àn
(
fõld
) &&

324 (
Àn
 =
UNIV_SQL_NULL
 ||Üen == 0 ||

325 !
	`memcmp
(
	`dfõld_gë_d©a
(
fõld
), 
d©a
, 
Àn
)));

327 
	}
}

328 #i‚de‡
UNIV_HOTBACKUP


333 
UNIV_INLINE


334 
ulöt
 
	$dtu∂e_gë_öfo_bôs
(c⁄° 
dtu∂e_t
 *
tu∂e
)

336 
	`ut_ad
(
tu∂e
);

338  (
tu∂e
->
öfo_bôs
);

339 
	}
}

342 
UNIV_INLINE


343 
	$dtu∂e_£t_öfo_bôs
(
dtu∂e_t
 *
tu∂e
,

344 
ulöt
 
öfo_bôs
)

346 
	`ut_ad
(
tu∂e
);

348 
tu∂e
->
öfo_bôs
 = info_bits;

349 
	}
}

353 
UNIV_INLINE


354 
ulöt
 
	$dtu∂e_gë_n_fõlds_cmp
(c⁄° 
dtu∂e_t
 *
tu∂e
)

356 
	`ut_ad
(
tu∂e
);

358  (
tu∂e
->
n_fõlds_cmp
);

359 
	}
}

361 
UNIV_INLINE
 
	$dtu∂e_£t_n_fõlds_cmp
(
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n_fõlds_cmp
) {

362 
	`ut_ad
(
tu∂e
);

363 
	`ut_ad
(
n_fõlds_cmp
 <
tu∂e
->
n_fõlds
);

365 
tu∂e
->
n_fõlds_cmp
 =Ç_fields_cmp;

366 
	}
}

370 
UNIV_INLINE


371 
ulöt
 
	$dtu∂e_gë_n_fõlds
(c⁄° 
dtu∂e_t
 *
tu∂e
)

373 
	`ut_ad
(
tu∂e
);

375  (
tu∂e
->
n_fõlds
);

376 
	}
}

381 
UNIV_INLINE


382 
ulöt
 
	$dtu∂e_gë_n_v_fõlds
(c⁄° 
dtu∂e_t
 *
tu∂e
) {

383 
	`ut_ad
(
tu∂e
);

385  (
tu∂e
->
n_v_fõlds
);

386 
	}
}

387 #ifde‡
UNIV_DEBUG


392 
UNIV_INLINE


393 
dfõld_t
 *
	$dtu∂e_gë_¡h_fõld
(c⁄° 
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n
) {

394 
	`ut_ad
(
tu∂e
);

395 
	`ut_ad
(
n
 < 
tu∂e
->
n_fõlds
);

397  ((
dfõld_t
 *)
tu∂e
->
fõlds
 + 
n
);

398 
	}
}

403 
UNIV_INLINE


404 
dfõld_t
 *
	$dtu∂e_gë_¡h_v_fõld
(c⁄° 
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n
) {

405 
	`ut_ad
(
tu∂e
);

406 
	`ut_ad
(
n
 < 
tu∂e
->
n_v_fõlds
);

408  (
°©ic_ˇ°
<
dfõld_t
 *>(
tu∂e
->
v_fõlds
 + 
n
));

409 
	}
}

421 
UNIV_INLINE


422 
dtu∂e_t
 *
	$dtu∂e_¸óã_‰om_mem
(*
buf
, 
ulöt
 
buf_size
, ulöà
n_fõlds
,

423 
ulöt
 
n_v_fõlds
) {

424 
dtu∂e_t
 *
tu∂e
;

425 
ulöt
 
n_t_fõlds
 = 
n_fõlds
 + 
n_v_fõlds
;

427 
	`ut_ad
(
buf
 !
nuŒ±r
);

428 
	`ut_a
(
buf_size
 >
	`DTUPLE_EST_ALLOC
(
n_t_fõlds
));

430 
tu∂e
 = (
dtu∂e_t
 *)
buf
;

431 
tu∂e
->
öfo_bôs
 = 0;

432 
tu∂e
->
n_fõlds
 =Ç_fields;

433 
tu∂e
->
n_v_fõlds
 =Ç_v_fields;

434 
tu∂e
->
n_fõlds_cmp
 = 
n_fõlds
;

435 
tu∂e
->
fõlds
 = (
dfõld_t
 *)&tuple[1];

436 i‡(
n_v_fõlds
 > 0) {

437 
tu∂e
->
v_fõlds
 = &tu∂e->
fõlds
[
n_fõlds
];

439 
tu∂e
->
v_fõlds
 = 
nuŒ±r
;

442 #ifde‡
UNIV_DEBUG


443 
tu∂e
->
magic_n
 = 
DATA_TUPLE_MAGIC_N
;

446 
ulöt
 
i
;

448 
i
 = 0; i < 
n_t_fõlds
; i++) {

449 
dfõld_t
 *
fõld
;

451 i‡(
i
 >
n_fõlds
) {

452 
fõld
 = 
	`dtu∂e_gë_¡h_v_fõld
(
tu∂e
, 
i
 - 
n_fõlds
);

454 
fõld
 = 
	`dtu∂e_gë_¡h_fõld
(
tu∂e
, 
i
);

457 
	`dfõld_£t_Àn
(
fõld
, 
UNIV_SQL_NULL
);

458 
fõld
->
d©a
 = &
d©a_îr‹
;

459 
	`dfõld_gë_ty≥
(
fõld
)->
mty≥
 = 
DATA_ERROR
;

460 
	`dfõld_gë_ty≥
(
fõld
)->
¥ty≥
 = 
DATA_ERROR
;

464 
	`UNIV_MEM_ASSERT_W
(
tu∂e
->
fõlds
, 
n_t_fõlds
 *  *tuple->fields);

465 
	`UNIV_MEM_INVALID
(
tu∂e
->
fõlds
, 
n_t_fõlds
 *  *tuple->fields);

466  (
tu∂e
);

467 
	}
}

472 
UNIV_INLINE


473 
	$dtu∂e_dup_v_Êd
(c⁄° 
dtu∂e_t
 *
vrow
, 
mem_hóp_t
 *
hóp
) {

474 
ulöt
 
i
 = 0; i < 
vrow
->
n_v_fõlds
; i++) {

475 
dfõld_t
 *
dfõld
 = 
	`dtu∂e_gë_¡h_v_fõld
(
vrow
, 
i
);

476 i‡(
	`dfõld_is_mu…i_vÆue
(
dfõld
)) {

477 
	`dfõld_mu…i_vÆue_dup
(
dfõld
, 
hóp
);

479 
	`dfõld_dup
(
dfõld
, 
hóp
);

482 
	}
}

486 
UNIV_INLINE


487 
	$dtu∂e_öô_v_Êd
(c⁄° 
dtu∂e_t
 *
vrow
) {

488 
ulöt
 
i
 = 0; i < 
vrow
->
n_v_fõlds
; i++) {

489 
dfõld_t
 *
dfõld
 = 
	`dtu∂e_gë_¡h_v_fõld
(
vrow
, 
i
);

490 
	`dfõld_gë_ty≥
(
dfõld
)->
mty≥
 = 
DATA_MISSING
;

491 
	`dfõld_gë_ty≥
(
dfõld
)->
¥ty≥
 = 0;

492 
	`dfõld_£t_Àn
(
dfõld
, 
UNIV_SQL_NULL
);

494 
	}
}

499 
UNIV_INLINE


500 
dtu∂e_t
 *
	$dtu∂e_¸óã
(

501 
mem_hóp_t
 *
hóp
,

504 
ulöt
 
n_fõlds
)

506  (
	`dtu∂e_¸óã_wôh_vcﬁ
(
hóp
, 
n_fõlds
, 0));

507 
	}
}

514 
UNIV_INLINE


515 
dtu∂e_t
 *
	$dtu∂e_¸óã_wôh_vcﬁ
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n_fõlds
,

516 
ulöt
 
n_v_fõlds
) {

517 *
buf
;

518 
ulöt
 
buf_size
;

519 
dtu∂e_t
 *
tu∂e
;

521 
	`ut_ad
(
hóp
);

523 
buf_size
 = 
	`DTUPLE_EST_ALLOC
(
n_fõlds
 + 
n_v_fõlds
);

524 
buf
 = 
	`mem_hóp_zÆloc
(
hóp
, 
buf_size
);

526 
tu∂e
 = 
	`dtu∂e_¸óã_‰om_mem
(
buf
, 
buf_size
, 
n_fõlds
, 
n_v_fõlds
);

528 #ifde‡
UNIV_DEBUG


529 
tu∂e
->
m_hóp
 = 
hóp
;

532  (
tu∂e
);

533 
	}
}

538 
UNIV_INLINE


539 
	$dtu∂e_c›y_v_fõlds
(
dtu∂e_t
 *
d_tu∂e
, c⁄° dtu∂e_à*
s_tu∂e
) {

540 
ulöt
 
n_v_fõlds
 = 
	`dtu∂e_gë_n_v_fõlds
(
d_tu∂e
);

541 
	`ut_ad
(
n_v_fõlds
 =
	`dtu∂e_gë_n_v_fõlds
(
s_tu∂e
));

543 
ulöt
 
i
 = 0; i < 
n_v_fõlds
; i++) {

544 
	`dfõld_c›y
(
	`dtu∂e_gë_¡h_v_fõld
(
d_tu∂e
, 
i
),

545 
	`dtu∂e_gë_¡h_v_fõld
(
s_tu∂e
, 
i
));

547 
	}
}

552 
UNIV_INLINE


553 
dtu∂e_t
 *
	$dtu∂e_c›y
(c⁄° 
dtu∂e_t
 *
tu∂e
,

554 
mem_hóp_t
 *
hóp
)

557 
ulöt
 
n_fõlds
 = 
	`dtu∂e_gë_n_fõlds
(
tu∂e
);

558 
ulöt
 
n_v_fõlds
 = 
	`dtu∂e_gë_n_v_fõlds
(
tu∂e
);

559 
dtu∂e_t
 *
√w_tu∂e
 = 
	`dtu∂e_¸óã_wôh_vcﬁ
(
hóp
, 
n_fõlds
, 
n_v_fõlds
);

560 
ulöt
 
i
;

562 
i
 = 0; i < 
n_fõlds
; i++) {

563 
	`dfõld_c›y
(
	`dtu∂e_gë_¡h_fõld
(
√w_tu∂e
, 
i
),

564 
	`dtu∂e_gë_¡h_fõld
(
tu∂e
, 
i
));

567 
i
 = 0; i < 
n_v_fõlds
; i++) {

568 
	`dfõld_c›y
(
	`dtu∂e_gë_¡h_v_fõld
(
√w_tu∂e
, 
i
),

569 
	`dtu∂e_gë_¡h_v_fõld
(
tu∂e
, 
i
));

572  (
√w_tu∂e
);

573 
	}
}

579 
UNIV_INLINE


580 
ulöt
 
	$dtu∂e_gë_d©a_size
(c⁄° 
dtu∂e_t
 *
tu∂e
,

581 
ulöt
 
comp
)

583 c⁄° 
dfõld_t
 *
fõld
;

584 
ulöt
 
n_fõlds
;

585 
ulöt
 
Àn
;

586 
ulöt
 
i
;

587 
ulöt
 
sum
 = 0;

589 
	`ut_ad
(
tu∂e
);

590 
	`ut_ad
(
	`dtu∂e_check_ty≥d
(
tu∂e
));

591 
	`ut_ad
(
tu∂e
->
magic_n
 =
DATA_TUPLE_MAGIC_N
);

593 
n_fõlds
 = 
tu∂e
->n_fields;

595 
i
 = 0; i < 
n_fõlds
; i++) {

596 
fõld
 = 
	`dtu∂e_gë_¡h_fõld
(
tu∂e
, 
i
);

597 
Àn
 = 
	`dfõld_gë_Àn
(
fõld
);

599 i‡(
Àn
 =
UNIV_SQL_NULL
) {

600 
Àn
 = 
	`dty≥_gë_sql_nuŒ_size
(
	`dfõld_gë_ty≥
(
fõld
), 
comp
);

603 
sum
 +
Àn
;

606  (
sum
);

607 
	}
}

610 
UNIV_INLINE


611 
	$dtu∂e_£t_ty≥s_bö¨y
(
dtu∂e_t
 *
tu∂e
,

612 
ulöt
 
n
)

614 
dty≥_t
 *
dfõld_ty≥
;

615 
ulöt
 
i
;

617 
i
 = 0; i < 
n
; i++) {

618 
boﬁ
 
is_mu…i_vÆue
 = 
	`dfõld_is_mu…i_vÆue
(
	`dtu∂e_gë_¡h_fõld
(
tu∂e
, 
i
));

619 
dfõld_ty≥
 = 
	`dfõld_gë_ty≥
(
	`dtu∂e_gë_¡h_fõld
(
tu∂e
, 
i
));

620 
	`dty≥_£t
(
dfõld_ty≥
, 
DATA_BINARY
, (
is_mu…i_vÆue
 ? 
DATA_MULTI_VALUE
 : 0),

623 
	}
}

625 
UNIV_INLINE


626 
ulöt
 
	$dtu∂e_fﬁd
(c⁄° 
dtu∂e_t
 *
tu∂e
, 
ulöt
 
n_fõlds
, ulöà
n_byãs
,

627 
ulöt
 
fﬁd
) {

628 c⁄° 
dfõld_t
 *
fõld
;

629 
ulöt
 
i
;

630 c⁄° 
byã
 *
d©a
;

631 
ulöt
 
Àn
;

633 
	`ut_ad
(
tu∂e
);

634 
	`ut_ad
(
tu∂e
->
magic_n
 =
DATA_TUPLE_MAGIC_N
);

635 
	`ut_ad
(
	`dtu∂e_check_ty≥d
(
tu∂e
));

637 
i
 = 0; i < 
n_fõlds
; i++) {

638 
fõld
 = 
	`dtu∂e_gë_¡h_fõld
(
tu∂e
, 
i
);

640 
d©a
 = (c⁄° 
byã
 *)
	`dfõld_gë_d©a
(
fõld
);

641 
Àn
 = 
	`dfõld_gë_Àn
(
fõld
);

643 i‡(
Àn
 !
UNIV_SQL_NULL
) {

644 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, 
	`ut_fﬁd_bö¨y
(
d©a
, 
Àn
));

648 i‡(
n_byãs
 > 0) {

649 
fõld
 = 
	`dtu∂e_gë_¡h_fõld
(
tu∂e
, 
i
);

651 
d©a
 = (c⁄° 
byã
 *)
	`dfõld_gë_d©a
(
fõld
);

652 
Àn
 = 
	`dfõld_gë_Àn
(
fõld
);

654 i‡(
Àn
 !
UNIV_SQL_NULL
) {

655 i‡(
Àn
 > 
n_byãs
) {

656 
Àn
 = 
n_byãs
;

659 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, 
	`ut_fﬁd_bö¨y
(
d©a
, 
Àn
));

663  (
fﬁd
);

664 
	}
}

666 
UNIV_INLINE


667 
	$d©a_wrôe_sql_nuŒ
(
byã
 *
d©a
, 
ulöt
 
Àn
Ë{ 
	`mem£t
(d©a, 0,Üí); 
	}
}

669 
UNIV_INLINE


670 
boﬁ
 
	$dtu∂e_c⁄èös_nuŒ
(c⁄° 
dtu∂e_t
 *
tu∂e
) {

671 autÿ
n
 = 
	`dtu∂e_gë_n_fõlds
(
tu∂e
);

673 
ulöt
 
i
 = 0; i < 
n
; i++) {

674 i‡(
	`dfõld_is_nuŒ
(
	`dtu∂e_gë_¡h_fõld
(
tu∂e
, 
i
))) {

675  (
åue
);

679  (
Ál£
);

680 
	}
}

682 
	$dtu∂e_big_ªc_‰ì
(
big_ªc_t
 *
ve˘‹
Ë{ 
	`mem_hóp_‰ì
(ve˘‹->
hóp
); 
	}
}

	@data0type.h

33 #i‚de‡
d©a0ty≥_h


34 
	#d©a0ty≥_h


	)

36 
	~"univ.i
"

38 
ulöt
 
d©a_mysql_deÁu…_ch¨£t_cﬁl
;

39 
	#DATA_MYSQL_BINARY_CHARSET_COLL
 63

	)

42 
	gdty≥_t
;

45 
	eib_like_t
 {

46 
	mIB_LIKE_EXACT
,

47 
	mIB_LIKE_PREFIX


52 
	#DATA_MISSING
 0

	)

53 
	#DATA_VARCHAR
 \

54 1

	)

60 
	#DATA_CHAR
 \

61 2

	)

63 
	#DATA_FIXBINARY
 3

	)

64 
	#DATA_BINARY
 4

	)

65 
	#DATA_BLOB
 \

66 5

	)

72 
	#DATA_INT
 6

	)

73 
	#DATA_SYS_CHILD
 7

	)

74 
	#DATA_SYS
 8

	)

79 
	#DATA_FLOAT
 9

	)

80 
	#DATA_DOUBLE
 10

	)

81 
	#DATA_DECIMAL
 11

	)

82 
	#DATA_VARMYSQL
 12

	)

83 
	#DATA_MYSQL
 13

	)

97 
	#DATA_GEOMETRY
 14

	)

102 
	#DATA_POINT
 15

	)

103 
	#DATA_VAR_POINT
 \

104 16

	)

107 
	#DATA_MTYPE_MAX
 \

108 63

	)

111 
	#DATA_MTYPE_CURRENT_MIN
 
DATA_VARCHAR


	)

112 
	#DATA_MTYPE_CURRENT_MAX
 
DATA_VAR_POINT


	)

157 
	#DATA_ENGLISH
 \

158 4

	)

161 
	#DATA_ERROR
 111

	)

163 
	#DATA_MYSQL_TYPE_MASK
 \

164 255

	)

166 
	#DATA_MYSQL_TRUE_VARCHAR
 \

167 15

	)

173 
	#DATA_ROW_ID
 0

	)

174 
	#DATA_ROW_ID_LEN
 6

	)

177 
c⁄°ex¥
 
size_t
 
	gDATA_TRX_ID
 = 1;

180 
c⁄°ex¥
 
size_t
 
	gDATA_TRX_ID_LEN
 = 6;

183 
c⁄°ex¥
 
size_t
 
	gDATA_ROLL_PTR
 = 2;

186 
c⁄°ex¥
 
size_t
 
	gDATA_ROLL_PTR_LEN
 = 7;

188 
	#DATA_N_SYS_COLS
 3

	)

190 
	#DATA_ITT_N_SYS_COLS
 2

	)

194 
	#DATA_FTS_DOC_ID
 3

	)

196 
	#DATA_SYS_PRTYPE_MASK
 0xF

	)

199 
	#DATA_NOT_NULL
 \

200 256

	)

202 
	#DATA_UNSIGNED
 \

203 512

	)

205 
	#DATA_BINARY_TYPE
 \

206 1024

	)

214 
	#DATA_GIS_MBR
 2048

	)

215 
	#DATA_MBR_LEN
 
SPDIMS
 * 2 * (Ë

	)

217 
	#DATA_LONG_TRUE_VARCHAR
 \

218 4096

	)

222 
	#DATA_VIRTUAL
 8192

	)

223 
	#DATA_MULTI_VALUE
 16384

	)

230 
	#DATA_ORDER_NULL_TYPE_BUF_SIZE
 4

	)

233 
	#DATA_NEW_ORDER_NULL_TYPE_BUF_SIZE
 6

	)

236 
	#DATA_MBMAX
 5

	)

245 
	#DATA_POINT_LEN
 25

	)

248 
	#DATA_MBMINMAXLEN
(
mbmöÀn
, 
mbmaxÀn
) \

249 ((
mbmaxÀn
)*
DATA_MBMAX
 + (
mbmöÀn
))

	)

252 
	#DATA_MBMINLEN
(
mbmömaxÀn
) \

253 ((
ulöt
)
	`UNIV_EXPECT
(((
mbmömaxÀn
Ë% 
DATA_MBMAX
), 1))

	)

255 
	#DATA_MBMAXLEN
(
mbmömaxÀn
Ë((
ulöt
)((mbmömaxÀnË/ 
DATA_MBMAX
))

	)

258 
	#DATA_POINT_MTYPE
(
mty≥
) \

259 ((
mty≥
Ë=
DATA_POINT
 || (mty≥Ë=
DATA_VAR_POINT
)

	)

262 
	#DATA_GEOMETRY_MTYPE
(
mty≥
) \

263 (
	`DATA_POINT_MTYPE
(
mty≥
Ë|| (mty≥Ë=
DATA_GEOMETRY
)

	)

267 
	#DATA_LARGE_MTYPE
(
mty≥
) \

268 ((
mty≥
Ë=
DATA_BLOB
 || (mty≥Ë=
DATA_VAR_POINT
 || \

269 (
mty≥
Ë=
DATA_GEOMETRY
)

	)

272 
	#DATA_BIG_LEN_MTYPE
(
Àn
, 
mty≥
Ë(÷íË> 255 || 
	`DATA_LARGE_MTYPE
(mty≥))

	)

275 
	#DATA_BIG_COL
(
cﬁ
Ë
	`DATA_BIG_LEN_MTYPE
((cﬁ)->
Àn
, (cﬁ)->
mty≥
)

	)

278 
	#DATA_LARGE_BINARY
(
mty≥
, 
¥ty≥
) \

279 ((
mty≥
Ë=
DATA_GEOMETRY
 || \

280 ((
mty≥
Ë=
DATA_BLOB
 && !((
¥ty≥
)&
DATA_BINARY_TYPE
)))

	)

283 
	#MAX_CHAR_COLL_NUM
 32767

	)

286 
	#CHAR_COLL_MASK
 
MAX_CHAR_COLL_NUM


	)

288 #i‚de‡
UNIV_HOTBACKUP


291 
UNIV_INLINE


292 
ulöt
 
dty≥_gë_mysql_ty≥
(c⁄° 
dty≥_t
 *
ty≥
);

297 
ulöt
 
dty≥_gë_©_mo°_n_mbch¨s
(

298 
ulöt
 
¥ty≥
,

299 
ulöt
 
mbmömaxÀn
,

301 
ulöt
 
¥efix_Àn
,

304 
ulöt
 
d©a_Àn
,

305 c⁄° *
°r
);

311 
iboﬁ
 
dty≥_is_°rög_ty≥
(

312 
ulöt
 
mty≥
);

317 
iboﬁ
 
dty≥_is_bö¨y_°rög_ty≥
(
ulöt
 
mty≥
,

318 
ulöt
 
¥ty≥
);

324 
iboﬁ
 
dty≥_is_n⁄_bö¨y_°rög_ty≥
(
ulöt
 
mty≥
,

325 
ulöt
 
¥ty≥
);

332 
UNIV_INLINE


333 
dty≥_£t
(
dty≥_t
 *
ty≥
, 
ulöt
 
mty≥
, ulöà
¥ty≥
, ulöà
Àn
);

338 
UNIV_INLINE


339 
dty≥_c›y
(
dty≥_t
 *
ty≥1
, c⁄° dty≥_à*
ty≥2
);

343 
UNIV_INLINE


344 
ulöt
 
dty≥_gë_mty≥
(c⁄° 
dty≥_t
 *
ty≥
);

347 
UNIV_INLINE


348 
ulöt
 
dty≥_gë_¥ty≥
(c⁄° 
dty≥_t
 *
ty≥
);

355 
UNIV_INLINE


356 
dty≥_gë_mbÀn
(
ulöt
 
mty≥
, ulöà
¥ty≥
, ulöà*
mbmöÀn
,

357 
ulöt
 *
mbmaxÀn
);

361 
UNIV_INLINE


362 
ulöt
 
dty≥_gë_ch¨£t_cﬁl
(ulöà
¥ty≥
);

366 
ulöt
 
dty≥_f‹m_¥ty≥
(

367 
ulöt
 
ﬁd_¥ty≥
,

369 
ulöt
 
ch¨£t_cﬁl
);

374 
UNIV_INLINE


375 
iboﬁ
 
dty≥_is_utf8
(
ulöt
 
¥ty≥
);

378 
UNIV_INLINE


379 
ulöt
 
dty≥_gë_Àn
(c⁄° 
dty≥_t
 *
ty≥
);

380 #i‚de‡
UNIV_HOTBACKUP


384 
UNIV_INLINE


385 
ulöt
 
dty≥_gë_mbmöÀn
(c⁄° 
dty≥_t
 *
ty≥
);

389 
UNIV_INLINE


390 
ulöt
 
dty≥_gë_mbmaxÀn
(c⁄° 
dty≥_t
 *
ty≥
);

398 
UNIV_INLINE


399 
dty≥_£t_mbmömaxÀn
(
dty≥_t
 *
ty≥
, 
ulöt
 
mbmöÀn
, ulöà
mbmaxÀn
);

410 
UNIV_INLINE


411 
ulöt
 
dty≥_gë_fixed_size_low
(ulöà
mty≥
, ulöà
¥ty≥
, ulöà
Àn
,

412 
ulöt
 
mbmömaxÀn
, ulöà
comp
);

421 
UNIV_INLINE


422 
ulöt
 
dty≥_gë_mö_size_low
(ulöà
mty≥
, ulöà
¥ty≥
, ulöà
Àn
,

423 
ulöt
 
mbmömaxÀn
);

430 
UNIV_INLINE


431 
ulöt
 
dty≥_gë_max_size_low
(ulöà
mty≥
, ulöà
Àn
);

438 
UNIV_INLINE


439 
ulöt
 
dty≥_gë_sql_nuŒ_size
(c⁄° 
dty≥_t
 *
ty≥
, ulöà
comp
);

441 #i‚de‡
UNIV_HOTBACKUP


446 
UNIV_INLINE


447 
dty≥_ªad_f‹_‹dî_™d_nuŒ_size
(
dty≥_t
 *
ty≥
, c⁄° 
byã
 *
buf
);

456 
UNIV_INLINE


457 
dty≥_√w_°‹e_f‹_‹dî_™d_nuŒ_size
(
byã
 *
buf
, c⁄° 
dty≥_t
 *
ty≥
,

458 
ulöt
 
¥efix_Àn
);

465 
UNIV_INLINE


466 
dty≥_√w_ªad_f‹_‹dî_™d_nuŒ_size
(
dty≥_t
 *
ty≥
, c⁄° 
byã
 *
buf
);

475 
UNIV_INLINE


476 *
dty≥_sql_«me
(
mty≥
, 
¥ty≥
, 
Àn
, *
«me
,

477 
«me_sz
);

482 
iboﬁ
 
dty≥_vÆid©e
(c⁄° 
dty≥_t
 *
ty≥
);

483 #ifde‡
UNIV_DEBUG


486 
dty≥_¥öt
(c⁄° 
dty≥_t
 *
ty≥
);

497 
	sdty≥_t
 {

498 
	m¥ty≥
 : 32;

505 
	mmty≥
 : 8;

509 
	mÀn
 : 16;

517 
	mmbmömaxÀn
 : 5;

523 
boﬁ
 
is_vútuÆ
(Ëc⁄° {  ((
	m¥ty≥
 & 
	mDATA_VIRTUAL
Ë=
DATA_VIRTUAL
); }

525 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

528 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gdty≥_t
 &
	gobj
) {

529  (
	gobj
.
¥öt
(
out
));

532 
°©ic_as£π
(
TRUE
 == 1, "TRUE != 1");

534 
°©ic_as£π
(
DATA_TRX_ID_LEN
 == 6, "DATA_TRX_ID_LEN != 6!");

536 
°©ic_as£π
(
DATA_ROLL_PTR_LEN
 == 7, "DATA_PTR_LEN != 7!");

538 
°©ic_as£π
(
DATA_TRX_ID
 + 1 =
DATA_ROLL_PTR
, "DATA_TRX_ID value invalid!");

540 
	~"d©a0ty≥.ic
"

	@data0type.ic

33 
	~"ha_¥ŸŸy≥s.h
"

34 
	~"mach0d©a.h
"

38 
UNIV_INLINE


39 
ulöt
 
	$dty≥_gë_ch¨£t_cﬁl
(
ulöt
 
¥ty≥
)

41  ((
¥ty≥
 >> 16Ë& 
CHAR_COLL_MASK
);

42 
	}
}

44 #i‚de‡
UNIV_HOTBACKUP


49 
UNIV_INLINE


50 
iboﬁ
 
	$dty≥_is_utf8
(
ulöt
 
¥ty≥
)

54 
	`dty≥_gë_ch¨£t_cﬁl
(
¥ty≥
)) {

60  (
TRUE
);

63  (
FALSE
);

64 
	}
}

68 
UNIV_INLINE


69 
ulöt
 
	$dty≥_gë_mysql_ty≥
(c⁄° 
dty≥_t
 *
ty≥
)

71  (
ty≥
->
¥ty≥
 & 0xFFUL);

72 
	}
}

75 
UNIV_INLINE


76 
	$dty≥_gë_mbÀn
(
ulöt
 
mty≥
,

77 
ulöt
 
¥ty≥
,

78 
ulöt
 *
mbmöÀn
,

80 
ulöt
 *
mbmaxÀn
)

83 i‡(
	`dty≥_is_°rög_ty≥
(
mty≥
)) {

84 
	`önoba£_gë_c£t_width
(
	`dty≥_gë_ch¨£t_cﬁl
(
¥ty≥
), 
mbmöÀn
, 
mbmaxÀn
);

85 
	`ut_ad
(*
mbmöÀn
 <*
mbmaxÀn
);

86 
	`ut_ad
(*
mbmöÀn
 < 
DATA_MBMAX
);

87 
	`ut_ad
(*
mbmaxÀn
 < 
DATA_MBMAX
);

89 *
mbmöÀn
 = *
mbmaxÀn
 = 0;

91 
	}
}

94 
UNIV_INLINE


95 
	$dty≥_£t_mbmömaxÀn
(
dty≥_t
 *
ty≥
,

96 
ulöt
 
mbmöÀn
,

99 
ulöt
 
mbmaxÀn
)

103 
	`ut_ad
(
mbmöÀn
 < 
DATA_MBMAX
);

104 
	`ut_ad
(
mbmaxÀn
 < 
DATA_MBMAX
);

105 
	`ut_ad
(
mbmöÀn
 <
mbmaxÀn
);

107 
ty≥
->
mbmömaxÀn
 = 
	`DATA_MBMINMAXLEN
(
mbmöÀn
, 
mbmaxÀn
);

108 
	}
}

111 
UNIV_INLINE


112 
	$dty≥_£t_mbÀn
(
dty≥_t
 *
ty≥
)

114 
ulöt
 
mbmöÀn
;

115 
ulöt
 
mbmaxÀn
;

117 
	`dty≥_gë_mbÀn
(
ty≥
->
mty≥
,Åy≥->
¥ty≥
, &
mbmöÀn
, &
mbmaxÀn
);

118 
	`dty≥_£t_mbmömaxÀn
(
ty≥
, 
mbmöÀn
, 
mbmaxÀn
);

120 
	`ut_ad
(
	`dty≥_vÆid©e
(
ty≥
));

121 
	}
}

123 
	#dty≥_£t_mbÀn
(
ty≥
Ë()0

	)

127 
UNIV_INLINE


128 
	$dty≥_£t
(
dty≥_t
 *
ty≥
,

129 
ulöt
 
mty≥
,

130 
ulöt
 
¥ty≥
,

131 
ulöt
 
Àn
)

133 
	`ut_ad
(
ty≥
);

134 
	`ut_ad
(
mty≥
 <
DATA_MTYPE_MAX
);

136 
ty≥
->
mty≥
 = mtype;

137 
ty≥
->
¥ty≥
 =Örtype;

138 
ty≥
->
Àn
 =Üen;

140 
	`dty≥_£t_mbÀn
(
ty≥
);

141 
	}
}

144 
UNIV_INLINE


145 
	$dty≥_c›y
(
dty≥_t
 *
ty≥1
,

146 c⁄° 
dty≥_t
 *
ty≥2
)

148 *
ty≥1
 = *
ty≥2
;

150 
	`ut_ad
(
	`dty≥_vÆid©e
(
ty≥1
));

151 
	}
}

155 
UNIV_INLINE


156 
ulöt
 
	$dty≥_gë_mty≥
(c⁄° 
dty≥_t
 *
ty≥
)

158 
	`ut_ad
(
ty≥
);

160  (
ty≥
->
mty≥
);

161 
	}
}

165 
UNIV_INLINE


166 
ulöt
 
	$dty≥_gë_¥ty≥
(c⁄° 
dty≥_t
 *
ty≥
)

168 
	`ut_ad
(
ty≥
);

170  (
ty≥
->
¥ty≥
);

171 
	}
}

175 
UNIV_INLINE


176 
ulöt
 
	$dty≥_gë_Àn
(c⁄° 
dty≥_t
 *
ty≥
)

178 
	`ut_ad
(
ty≥
);

180  (
ty≥
->
Àn
);

181 
	}
}

183 #i‚de‡
UNIV_HOTBACKUP


187 
UNIV_INLINE


188 
ulöt
 
	$dty≥_gë_mbmöÀn
(c⁄° 
dty≥_t
 *
ty≥
)

190 
	`ut_ad
(
ty≥
);

191  (
	`DATA_MBMINLEN
(
ty≥
->
mbmömaxÀn
));

192 
	}
}

196 
UNIV_INLINE


197 
ulöt
 
	$dty≥_gë_mbmaxÀn
(c⁄° 
dty≥_t
 *
ty≥
)

199 
	`ut_ad
(
ty≥
);

200  (
	`DATA_MBMAXLEN
(
ty≥
->
mbmömaxÀn
));

201 
	}
}

206 
UNIV_INLINE


207 
	$dty≥_√w_°‹e_f‹_‹dî_™d_nuŒ_size
(

208 
byã
 *
buf
,

211 c⁄° 
dty≥_t
 *
ty≥
,

212 
ulöt
 
¥efix_Àn
)

215 #i‡6 !
DATA_NEW_ORDER_NULL_TYPE_BUF_SIZE


218 
ulöt
 
Àn
;

220 
	`ut_ad
(
ty≥
);

221 
	`ut_ad
(
ty≥
->
mty≥
 >
DATA_VARCHAR
);

222 
	`ut_ad
(
ty≥
->
mty≥
 <
DATA_MTYPE_MAX
);

224 
buf
[0] = (
byã
)(
ty≥
->
mty≥
 & 0xFFUL);

226 i‡(
ty≥
->
¥ty≥
 & 
DATA_BINARY_TYPE
) {

227 
buf
[0] |= 128;

234 i‡(
ty≥
->
¥ty≥
 & 
DATA_MULTI_VALUE
) {

235 
buf
[0] |= 64;

238 
buf
[1] = (
byã
)(
ty≥
->
¥ty≥
 & 0xFFUL);

240 
Àn
 = 
¥efix_Àn
 ?Öªfix_À¿: 
ty≥
->len;

242 
	`mach_wrôe_to_2
(
buf
 + 2, 
Àn
 & 0xFFFFUL);

244 
	`ut_ad
(
	`dty≥_gë_ch¨£t_cﬁl
(
ty≥
->
¥ty≥
Ë<
MAX_CHAR_COLL_NUM
);

245 
	`mach_wrôe_to_2
(
buf
 + 4, 
	`dty≥_gë_ch¨£t_cﬁl
(
ty≥
->
¥ty≥
));

247 i‡(
ty≥
->
¥ty≥
 & 
DATA_NOT_NULL
) {

248 
buf
[4] |= 128;

250 
	}
}

255 
UNIV_INLINE


256 
	$dty≥_ªad_f‹_‹dî_™d_nuŒ_size
(

257 
dty≥_t
 *
ty≥
,

258 c⁄° 
byã
 *
buf
)

260 #i‡4 !
DATA_ORDER_NULL_TYPE_BUF_SIZE


264 
ty≥
->
mty≥
 = 
buf
[0] & 63;

265 
ty≥
->
¥ty≥
 = 
buf
[1];

267 i‡(
buf
[0] & 128) {

268 
ty≥
->
¥ty≥
 |
DATA_BINARY_TYPE
;

271 
ty≥
->
Àn
 = 
	`mach_ªad_‰om_2
(
buf
 + 2);

273 
ty≥
->
¥ty≥
 =

274 
	`dty≥_f‹m_¥ty≥
(
ty≥
->
¥ty≥
, 
d©a_mysql_deÁu…_ch¨£t_cﬁl
);

275 
	`dty≥_£t_mbÀn
(
ty≥
);

276 
	}
}

281 
UNIV_INLINE


282 
	$dty≥_√w_ªad_f‹_‹dî_™d_nuŒ_size
(

283 
dty≥_t
 *
ty≥
,

284 c⁄° 
byã
 *
buf
)

286 
ulöt
 
ch¨£t_cﬁl
;

288 #i‡6 !
DATA_NEW_ORDER_NULL_TYPE_BUF_SIZE


292 
ty≥
->
mty≥
 = 
buf
[0] & 63;

293 
ty≥
->
¥ty≥
 = 
buf
[1];

295 i‡(
buf
[0] & 128) {

296 
ty≥
->
¥ty≥
 |
DATA_BINARY_TYPE
;

299 i‡(
buf
[0] & 64) {

300 
ty≥
->
¥ty≥
 |
DATA_MULTI_VALUE
;

303 i‡(
buf
[4] & 128) {

304 
ty≥
->
¥ty≥
 |
DATA_NOT_NULL
;

307 
ty≥
->
Àn
 = 
	`mach_ªad_‰om_2
(
buf
 + 2);

309 
ch¨£t_cﬁl
 = 
	`mach_ªad_‰om_2
(
buf
 + 4Ë& 
CHAR_COLL_MASK
;

311 i‡(
	`dty≥_is_°rög_ty≥
(
ty≥
->
mty≥
)) {

312 
	`ut_a
(
ch¨£t_cﬁl
 <
MAX_CHAR_COLL_NUM
);

314 i‡(
ch¨£t_cﬁl
 == 0) {

321 
ch¨£t_cﬁl
 = 
d©a_mysql_deÁu…_ch¨£t_cﬁl
;

324 
ty≥
->
¥ty≥
 = 
	`dty≥_f‹m_¥ty≥
—y≥->¥ty≥, 
ch¨£t_cﬁl
);

326 
	`dty≥_£t_mbÀn
(
ty≥
);

327 
	}
}

331 
UNIV_INLINE


332 *
	$dty≥_sql_«me
(
mty≥
,

333 
¥ty≥
,

334 
Àn
,

335 *
«me
,

336 
«me_sz
)

338 
	#APPEND_UNSIGNED
() \

340 i‡(
¥ty≥
 & 
DATA_UNSIGNED
) { \

341 
	`¢¥ötf
(
«me
 + 
	`°æí
“ame), 
«me_sz
 - strlen(name), " UNSIGNED"); \

343 } 0)

	)

345 
	`¢¥ötf
(
«me
, 
«me_sz
, "UNKNOWN");

347 
mty≥
) {

348 
DATA_INT
:

349 
Àn
) {

351 
	`¢¥ötf
(
«me
, 
«me_sz
, "TINYINT");

354 
	`¢¥ötf
(
«me
, 
«me_sz
, "SMALLINT");

357 
	`¢¥ötf
(
«me
, 
«me_sz
, "MEDIUMINT");

360 
	`¢¥ötf
(
«me
, 
«me_sz
, "INT");

363 
	`¢¥ötf
(
«me
, 
«me_sz
, "BIGINT");

366 
	`APPEND_UNSIGNED
();

368 
DATA_FLOAT
:

369 
	`¢¥ötf
(
«me
, 
«me_sz
, "FLOAT");

370 
	`APPEND_UNSIGNED
();

372 
DATA_DOUBLE
:

373 
	`¢¥ötf
(
«me
, 
«me_sz
, "DOUBLE");

374 
	`APPEND_UNSIGNED
();

376 
DATA_FIXBINARY
:

377 
	`¢¥ötf
(
«me
, 
«me_sz
, "BINARY(%u)", 
Àn
);

379 
DATA_CHAR
:

380 
DATA_MYSQL
:

381 
	`¢¥ötf
(
«me
, 
«me_sz
, "CHAR(%u)", 
Àn
);

383 
DATA_VARCHAR
:

384 
DATA_VARMYSQL
:

385 
	`¢¥ötf
(
«me
, 
«me_sz
, "VARCHAR(%u)", 
Àn
);

387 
DATA_BINARY
:

388 
	`¢¥ötf
(
«me
, 
«me_sz
, "VARBINARY(%u)", 
Àn
);

390 
DATA_GEOMETRY
:

391 
	`¢¥ötf
(
«me
, 
«me_sz
, "GEOMETRY");

393 
DATA_BLOB
:

394 
Àn
) {

396 
	`¢¥ötf
(
«me
, 
«me_sz
, "TINYBLOB");

399 
	`¢¥ötf
(
«me
, 
«me_sz
, "BLOB");

402 
	`¢¥ötf
(
«me
, 
«me_sz
, "MEDIUMBLOB");

405 
	`¢¥ötf
(
«me
, 
«me_sz
, "LONGBLOB");

410 i‡(
¥ty≥
 & 
DATA_NOT_NULL
) {

411 
	`¢¥ötf
(
«me
 + 
	`°æí
“ame), 
«me_sz
 - strlen(name), " NOT NULL");

414  (
«me
);

415 
	}
}

421 
UNIV_INLINE


422 
ulöt
 
	$dty≥_gë_fixed_size_low
(

423 
ulöt
 
mty≥
,

424 
ulöt
 
¥ty≥
,

425 
ulöt
 
Àn
,

426 
ulöt
 
mbmömaxÀn
,

428 
ulöt
 
comp
)

430 
mty≥
) {

431 
DATA_SYS
:

432 #ifde‡
UNIV_DEBUG


433 
¥ty≥
 & 
DATA_MYSQL_TYPE_MASK
) {

434 
DATA_ROW_ID
:

435 
	`ut_ad
(
Àn
 =
DATA_ROW_ID_LEN
);

437 
DATA_TRX_ID
:

438 
	`ut_ad
(
Àn
 =
DATA_TRX_ID_LEN
);

440 
DATA_ROLL_PTR
:

441 
	`ut_ad
(
Àn
 =
DATA_ROLL_PTR_LEN
);

444 
	`ut_ad
(0);

449 
DATA_CHAR
:

450 
DATA_FIXBINARY
:

451 
DATA_INT
:

452 
DATA_FLOAT
:

453 
DATA_DOUBLE
:

454 
DATA_POINT
:

455  (
Àn
);

456 
DATA_MYSQL
:

457 #i‚de‡
UNIV_LIBRARY


458 i‡(
¥ty≥
 & 
DATA_BINARY_TYPE
) {

459  (
Àn
);

460 } i‡(!
comp
) {

461  (
Àn
);

463 #i‚de‡
UNIV_HOTBACKUP


464 #ifde‡
UNIV_DEBUG


465 
ulöt
 
i_mbmöÀn
, 
i_mbmaxÀn
;

467 
	`önoba£_gë_c£t_width
(
	`dty≥_gë_ch¨£t_cﬁl
(
¥ty≥
), &
i_mbmöÀn
,

468 &
i_mbmaxÀn
);

470 
	`ut_ad
(
	`DATA_MBMINMAXLEN
(
i_mbmöÀn
, 
i_mbmaxÀn
Ë=
mbmömaxÀn
);

473 i‡(
	`DATA_MBMINLEN
(
mbmömaxÀn
Ë=
	`DATA_MBMAXLEN
(mbminmaxlen)) {

474  (
Àn
);

478  (
Àn
);

481 
DATA_VARCHAR
:

482 
DATA_BINARY
:

483 
DATA_DECIMAL
:

484 
DATA_VARMYSQL
:

485 
DATA_VAR_POINT
:

486 
DATA_GEOMETRY
:

487 
DATA_BLOB
:

490 
ut_îr‹
;

492 
	}
}

496 
UNIV_INLINE


497 
ulöt
 
	$dty≥_gë_mö_size_low
(

498 
ulöt
 
mty≥
,

499 
ulöt
 
¥ty≥
,

500 
ulöt
 
Àn
,

501 
ulöt
 
mbmömaxÀn
)

504 
mty≥
) {

505 
DATA_SYS
:

506 #ifde‡
UNIV_DEBUG


507 
¥ty≥
 & 
DATA_MYSQL_TYPE_MASK
) {

508 
DATA_ROW_ID
:

509 
	`ut_ad
(
Àn
 =
DATA_ROW_ID_LEN
);

511 
DATA_TRX_ID
:

512 
	`ut_ad
(
Àn
 =
DATA_TRX_ID_LEN
);

514 
DATA_ROLL_PTR
:

515 
	`ut_ad
(
Àn
 =
DATA_ROLL_PTR_LEN
);

518 
	`ut_ad
(0);

523 
DATA_CHAR
:

524 
DATA_FIXBINARY
:

525 
DATA_INT
:

526 
DATA_FLOAT
:

527 
DATA_DOUBLE
:

528 
DATA_POINT
:

529  (
Àn
);

530 
DATA_MYSQL
:

531 i‡(
¥ty≥
 & 
DATA_BINARY_TYPE
) {

532  (
Àn
);

534 
ulöt
 
mbmöÀn
 = 
	`DATA_MBMINLEN
(
mbmömaxÀn
);

535 
ulöt
 
mbmaxÀn
 = 
	`DATA_MBMAXLEN
(
mbmömaxÀn
);

537 i‡(
mbmöÀn
 =
mbmaxÀn
) {

538  (
Àn
);

542 
	`ut_a
(
mbmöÀn
 > 0);

543 
	`ut_a
(
mbmaxÀn
 > 
mbmöÀn
);

544 
	`ut_a
(
Àn
 % 
mbmaxÀn
 == 0);

545  (
Àn
 * 
mbmöÀn
 / 
mbmaxÀn
);

547 
DATA_VARCHAR
:

548 
DATA_BINARY
:

549 
DATA_DECIMAL
:

550 
DATA_VARMYSQL
:

551 
DATA_VAR_POINT
:

552 
DATA_GEOMETRY
:

553 
DATA_BLOB
:

556 
ut_îr‹
;

558 
	}
}

565 
UNIV_INLINE


566 
ulöt
 
	$dty≥_gë_max_size_low
(
ulöt
 
mty≥
,

567 
ulöt
 
Àn
)

569 
mty≥
) {

570 
DATA_SYS
:

571 
DATA_CHAR
:

572 
DATA_FIXBINARY
:

573 
DATA_INT
:

574 
DATA_FLOAT
:

575 
DATA_DOUBLE
:

576 
DATA_MYSQL
:

577 
DATA_VARCHAR
:

578 
DATA_BINARY
:

579 
DATA_DECIMAL
:

580 
DATA_VARMYSQL
:

581 
DATA_POINT
:

582  (
Àn
);

583 
DATA_VAR_POINT
:

584 
DATA_GEOMETRY
:

585 
DATA_BLOB
:

588 
ut_îr‹
;

590  (
ULINT_MAX
);

591 
	}
}

596 
UNIV_INLINE


597 
ulöt
 
	$dty≥_gë_sql_nuŒ_size
(c⁄° 
dty≥_t
 *
ty≥
,

598 
ulöt
 
comp
)

600 #i‚de‡
UNIV_HOTBACKUP


601  (
	`dty≥_gë_fixed_size_low
(
ty≥
->
mty≥
,Åy≥->
¥ty≥
,Åy≥->
Àn
,

602 
ty≥
->
mbmömaxÀn
, 
comp
));

604  (
	`dty≥_gë_fixed_size_low
(
ty≥
->
mty≥
,Åy≥->
¥ty≥
,Åy≥->
Àn
, 0, 0));

606 
	}
}

	@data0types.h

33 #i‚de‡
d©a0ty≥s_h


34 
	#d©a0ty≥s_h


	)

37 
	gdfõld_t
;

40 
	gdtu∂e_t
;

	@db0err.h

33 #i‚de‡
db0îr_h


34 
	#db0îr_h


	)

38 
	edbîr_t
 {

39 
	mDB_ERROR_UNSET
 = 0,

41 
	mDB_SUCCESS_LOCKED_REC
 = 9,

42 
	mDB_SUCCESS
 = 10,

46 
	mDB_ERROR
,

47 
	mDB_INTERRUPTED
,

48 
	mDB_OUT_OF_MEMORY
,

50 
	mDB_OUT_OF_FILE_SPACE
,

51 
	mDB_OUT_OF_DISK_SPACE
,

52 
	mDB_LOCK_WAIT
,

53 
	mDB_DEADLOCK
,

54 
	mDB_ROLLBACK
,

55 
	mDB_DUPLICATE_KEY
,

58 
	mDB_MISSING_HISTORY
,

60 
	mDB_SKIP_LOCKED
,

62 
	mDB_LOCK_NOWAIT
,

64 
	mDB_NO_SESSION_TEMP
,

65 
	mDB_CLUSTER_NOT_FOUND
 = 30,

66 
	mDB_TABLE_NOT_FOUND
,

68 
	mDB_MUST_GET_MORE_FILE_SPACE
,

69 
	mDB_TABLE_IS_BEING_USED
,

72 
	mDB_TOO_BIG_RECORD
,

74 
	mDB_LOCK_WAIT_TIMEOUT
,

77 
	mDB_NO_REFERENCED_ROW
,

80 
	mDB_ROW_IS_REFERENCED
,

82 
	mDB_CANNOT_ADD_CONSTRAINT
,

84 
	mDB_CORRUPTION
,

86 
	mDB_CANNOT_DROP_CONSTRAINT
,

88 
	mDB_NO_SAVEPOINT
,

91 
	mDB_TABLESPACE_EXISTS
,

93 
	mDB_TABLESPACE_DELETED
,

96 
	mDB_TABLESPACE_NOT_FOUND
,

99 
	mDB_LOCK_TABLE_FULL
,

102 
	mDB_FOREIGN_DUPLICATE_KEY
,

105 
	mDB_TOO_MANY_CONCURRENT_TRXS
,

108 
	mDB_UNSUPPORTED
,

110 
	mDB_INVALID_NULL
,

114 
	mDB_STATS_DO_NOT_EXIST
,

117 
	mDB_FOREIGN_EXCEED_MAX_CASCADE
,

120 
	mDB_CHILD_NO_INDEX
,

123 
	mDB_PARENT_NO_INDEX
,

125 
	mDB_TOO_BIG_INDEX_COL
,

127 
	mDB_INDEX_CORRUPT
,

129 
	mDB_UNDO_RECORD_TOO_BIG
,

131 
	mDB_READ_ONLY
,

133 
	mDB_FTS_INVALID_DOCID
,

135 
	mDB_TABLE_IN_FK_CHECK
,

137 
	mDB_ONLINE_LOG_TOO_BIG
,

139 
	mDB_IDENTIFIER_TOO_LONG
,

141 
	mDB_FTS_EXCEED_RESULT_CACHE_LIMIT
,

143 
	mDB_TEMP_FILE_WRITE_FAIL
,

145 
	mDB_CANT_CREATE_GEOMETRY_OBJECT
,

147 
	mDB_CANNOT_OPEN_FILE
,

149 
	mDB_FTS_TOO_MANY_WORDS_IN_PHRASE
,

151 
	mDB_SERVER_VERSION_LOW
,

153 
	mDB_TOO_LONG_PATH
,

155 
	mDB_IO_ERROR
 = 100,

157 
	mDB_IO_DECOMPRESS_FAIL
,

159 
	mDB_IO_NO_PUNCH_HOLE
,

161 
	mDB_IO_NO_PUNCH_HOLE_FS
,

163 
	mDB_IO_NO_PUNCH_HOLE_TABLESPACE
,

165 
	mDB_IO_DECRYPT_FAIL
,

167 
	mDB_IO_NO_ENCRYPT_TABLESPACE
,

169 
	mDB_IO_PARTIAL_FAILED
,

171 
	mDB_FORCED_ABORT
,

173 
	mDB_TABLE_CORRUPT
,

175 
	mDB_WRONG_FILE_NAME
,

177 
	mDB_COMPUTE_VALUE_FAILED
,

179 
	mDB_NO_FK_ON_S_BASE_COL
,

181 
	mDB_INVALID_ENCRYPTION_META
,

183 
	mDB_ABORT_INCOMPLETE_CLONE
,

185 
	mDB_BTREE_LEVEL_LIMIT_EXCEEDED
,

187 
	mDB_DBLWR_NOT_EXISTS
,

189 
	mDB_V1_DBLWR_INIT_FAILED
,

191 
	mDB_V1_DBLWR_CREATE_FAILED
,

193 
	mDB_DBLWR_INIT_FAILED
,

195 
	mDB_SCHEMA_MISMATCH
,

197 
	mDB_OUT_OF_RESOURCES
,

199 
	mDB_PAGE_IS_STALE
,

203 
	mDB_FAIL
 = 1000,

204 
	mDB_OVERFLOW
,

205 
	mDB_UNDERFLOW
,

206 
	mDB_STRONG_FAIL
,

207 
	mDB_ZIP_OVERFLOW
,

208 
	mDB_RECORD_NOT_FOUND
 = 1500,

209 
	mDB_END_OF_BLOCK
,

210 
	mDB_END_OF_INDEX
,

211 
	mDB_END_SAMPLE_READ
,

214 
	mDB_NOT_FOUND
,

219 
	mDB_DATA_MISMATCH
 = 2000,

221 
	mDB_CACHE_RECORDS
,

223 
	mDB_FTS_TOO_MANY_NESTED_EXP


	@dict0boot.h

33 #i‚de‡
di˘0boŸ_h


34 
	#di˘0boŸ_h


	)

36 
	~"univ.i
"

38 
	~"buf0buf.h
"

39 
	~"di˘0di˘.h
"

40 
	~"f•0f•.h
"

41 
	~"må0log.h
"

42 
	~"må0må.h
"

43 
	~"ut0byã.h
"

45 
byã
 
	tdi˘_hdr_t
;

49 
di˘_hdr_t
 *
di˘_hdr_gë
(
må_t
 *
må
);

57 
di˘_hdr_gë_√w_id
(
èbÀ_id_t
 *
èbÀ_id
, 
•a˚_ödex_t
 *
ödex_id
,

58 
•a˚_id_t
 *
•a˚_id
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

59 
boﬁ
 
dißbÀ_ªdo
);

63 
di˘_hdr_Êush_row_id
();

66 
UNIV_INLINE


67 
row_id_t
 
di˘_sys_gë_√w_row_id
();

70 
UNIV_INLINE


71 
row_id_t
 
di˘_sys_ªad_row_id
(c⁄° 
byã
 *
fõld
);

76 
UNIV_INLINE


77 
di˘_sys_wrôe_row_id
(
byã
 *
fõld
, 
row_id_t
 
row_id
);

82 
dbîr_t
 
	$di˘_boŸ
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

86 
dbîr_t
 
	$di˘_¸óã
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

91 
UNIV_INLINE


92 
boﬁ
 
	$di˘_is_ﬁd_sys_èbÀ
(
èbÀ_id_t
 
id
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

95 
	#DICT_HDR_SPACE
 0

	)

96 
	#DICT_HDR_PAGE_NO
 
FSP_DICT_HDR_PAGE_NO


	)

99 
	#DICT_TABLES_ID
 1

	)

100 
	#DICT_COLUMNS_ID
 2

	)

101 
	#DICT_INDEXES_ID
 3

	)

102 
	#DICT_FIELDS_ID
 4

	)

104 
	#DICT_TABLE_IDS_ID
 5

	)

106 
	#DICT_HDR_FIRST_ID
 \

107 10

	)

115 
	#DICT_HDR
 
FSEG_PAGE_DATA


	)

119 
	#DICT_HDR_ROW_ID
 0

	)

120 
	#DICT_HDR_TABLE_ID
 8

	)

121 
	#DICT_HDR_INDEX_ID
 16

	)

122 
	#DICT_HDR_MAX_SPACE_ID
 24

	)

123 
	#DICT_HDR_MIX_ID_LOW
 28

	)

124 
	#DICT_HDR_TABLES
 32

	)

125 
	#DICT_HDR_TABLE_IDS
 36

	)

126 
	#DICT_HDR_COLUMNS
 40

	)

127 
	#DICT_HDR_INDEXES
 44

	)

128 
	#DICT_HDR_FIELDS
 48

	)

130 
	#DICT_HDR_FSEG_HEADER
 \

131 56

	)

137 
	edi˘_cﬁ_sys_èbÀs_íum
 {

138 
DICT_COL__SYS_TABLES__NAME
 = 0,

139 
DICT_COL__SYS_TABLES__ID
 = 1,

140 
DICT_COL__SYS_TABLES__N_COLS
 = 2,

141 
DICT_COL__SYS_TABLES__TYPE
 = 3,

142 
DICT_COL__SYS_TABLES__MIX_ID
 = 4,

143 
DICT_COL__SYS_TABLES__MIX_LEN
 = 5,

144 
DICT_COL__SYS_TABLES__CLUSTER_ID
 = 6,

145 
DICT_COL__SYS_TABLES__SPACE
 = 7,

146 
DICT_NUM_COLS__SYS_TABLES
 = 8

149 
	edi˘_Êd_sys_èbÀs_íum
 {

150 
DICT_FLD__SYS_TABLES__NAME
 = 0,

151 
DICT_FLD__SYS_TABLES__DB_TRX_ID
 = 1,

152 
DICT_FLD__SYS_TABLES__DB_ROLL_PTR
 = 2,

153 
DICT_FLD__SYS_TABLES__ID
 = 3,

154 
DICT_FLD__SYS_TABLES__N_COLS
 = 4,

155 
DICT_FLD__SYS_TABLES__TYPE
 = 5,

156 
DICT_FLD__SYS_TABLES__MIX_ID
 = 6,

157 
DICT_FLD__SYS_TABLES__MIX_LEN
 = 7,

158 
DICT_FLD__SYS_TABLES__CLUSTER_ID
 = 8,

159 
DICT_FLD__SYS_TABLES__SPACE
 = 9,

160 
DICT_NUM_FIELDS__SYS_TABLES
 = 10

163 
	edi˘_Êd_sys_èbÀ_ids_íum
 {

164 
DICT_FLD__SYS_TABLE_IDS__ID
 = 0,

165 
DICT_FLD__SYS_TABLE_IDS__NAME
 = 1,

166 
DICT_NUM_FIELDS__SYS_TABLE_IDS
 = 2

169 
	edi˘_cﬁ_sys_cﬁumns_íum
 {

170 
DICT_COL__SYS_COLUMNS__TABLE_ID
 = 0,

171 
DICT_COL__SYS_COLUMNS__POS
 = 1,

172 
DICT_COL__SYS_COLUMNS__NAME
 = 2,

173 
DICT_COL__SYS_COLUMNS__MTYPE
 = 3,

174 
DICT_COL__SYS_COLUMNS__PRTYPE
 = 4,

175 
DICT_COL__SYS_COLUMNS__LEN
 = 5,

176 
DICT_COL__SYS_COLUMNS__PREC
 = 6,

177 
DICT_NUM_COLS__SYS_COLUMNS
 = 7

180 
	edi˘_Êd_sys_cﬁumns_íum
 {

181 
DICT_FLD__SYS_COLUMNS__TABLE_ID
 = 0,

182 
DICT_FLD__SYS_COLUMNS__POS
 = 1,

183 
DICT_FLD__SYS_COLUMNS__DB_TRX_ID
 = 2,

184 
DICT_FLD__SYS_COLUMNS__DB_ROLL_PTR
 = 3,

185 
DICT_FLD__SYS_COLUMNS__NAME
 = 4,

186 
DICT_FLD__SYS_COLUMNS__MTYPE
 = 5,

187 
DICT_FLD__SYS_COLUMNS__PRTYPE
 = 6,

188 
DICT_FLD__SYS_COLUMNS__LEN
 = 7,

189 
DICT_FLD__SYS_COLUMNS__PREC
 = 8,

190 
DICT_NUM_FIELDS__SYS_COLUMNS
 = 9

193 
	edi˘_cﬁ_sys_ödexes_íum
 {

194 
DICT_COL__SYS_INDEXES__TABLE_ID
 = 0,

195 
DICT_COL__SYS_INDEXES__ID
 = 1,

196 
DICT_COL__SYS_INDEXES__NAME
 = 2,

197 
DICT_COL__SYS_INDEXES__N_FIELDS
 = 3,

198 
DICT_COL__SYS_INDEXES__TYPE
 = 4,

199 
DICT_COL__SYS_INDEXES__SPACE
 = 5,

200 
DICT_COL__SYS_INDEXES__PAGE_NO
 = 6,

201 
DICT_COL__SYS_INDEXES__MERGE_THRESHOLD
 = 7,

202 
DICT_NUM_COLS__SYS_INDEXES
 = 8

205 
	edi˘_Êd_sys_ödexes_íum
 {

206 
DICT_FLD__SYS_INDEXES__TABLE_ID
 = 0,

207 
DICT_FLD__SYS_INDEXES__ID
 = 1,

208 
DICT_FLD__SYS_INDEXES__DB_TRX_ID
 = 2,

209 
DICT_FLD__SYS_INDEXES__DB_ROLL_PTR
 = 3,

210 
DICT_FLD__SYS_INDEXES__NAME
 = 4,

211 
DICT_FLD__SYS_INDEXES__N_FIELDS
 = 5,

212 
DICT_FLD__SYS_INDEXES__TYPE
 = 6,

213 
DICT_FLD__SYS_INDEXES__SPACE
 = 7,

214 
DICT_FLD__SYS_INDEXES__PAGE_NO
 = 8,

215 
DICT_FLD__SYS_INDEXES__MERGE_THRESHOLD
 = 9,

216 
DICT_NUM_FIELDS__SYS_INDEXES
 = 10

219 
	edi˘_cﬁ_sys_fõlds_íum
 {

220 
DICT_COL__SYS_FIELDS__INDEX_ID
 = 0,

221 
DICT_COL__SYS_FIELDS__POS
 = 1,

222 
DICT_COL__SYS_FIELDS__COL_NAME
 = 2,

223 
DICT_NUM_COLS__SYS_FIELDS
 = 3

226 
	edi˘_Êd_sys_fõlds_íum
 {

227 
DICT_FLD__SYS_FIELDS__INDEX_ID
 = 0,

228 
DICT_FLD__SYS_FIELDS__POS
 = 1,

229 
DICT_FLD__SYS_FIELDS__DB_TRX_ID
 = 2,

230 
DICT_FLD__SYS_FIELDS__DB_ROLL_PTR
 = 3,

231 
DICT_FLD__SYS_FIELDS__COL_NAME
 = 4,

232 
DICT_NUM_FIELDS__SYS_FIELDS
 = 5

235 
	edi˘_cﬁ_sys_f‹eign_íum
 {

236 
DICT_COL__SYS_FOREIGN__ID
 = 0,

237 
DICT_COL__SYS_FOREIGN__FOR_NAME
 = 1,

238 
DICT_COL__SYS_FOREIGN__REF_NAME
 = 2,

239 
DICT_COL__SYS_FOREIGN__N_COLS
 = 3,

240 
DICT_NUM_COLS__SYS_FOREIGN
 = 4

243 
	edi˘_Êd_sys_f‹eign_íum
 {

244 
DICT_FLD__SYS_FOREIGN__ID
 = 0,

245 
DICT_FLD__SYS_FOREIGN__DB_TRX_ID
 = 1,

246 
DICT_FLD__SYS_FOREIGN__DB_ROLL_PTR
 = 2,

247 
DICT_FLD__SYS_FOREIGN__FOR_NAME
 = 3,

248 
DICT_FLD__SYS_FOREIGN__REF_NAME
 = 4,

249 
DICT_FLD__SYS_FOREIGN__N_COLS
 = 5,

250 
DICT_NUM_FIELDS__SYS_FOREIGN
 = 6

253 
	edi˘_Êd_sys_f‹eign_f‹_«me_íum
 {

254 
DICT_FLD__SYS_FOREIGN_FOR_NAME__NAME
 = 0,

255 
DICT_FLD__SYS_FOREIGN_FOR_NAME__ID
 = 1,

256 
DICT_NUM_FIELDS__SYS_FOREIGN_FOR_NAME
 = 2

259 
	edi˘_cﬁ_sys_f‹eign_cﬁs_íum
 {

260 
DICT_COL__SYS_FOREIGN_COLS__ID
 = 0,

261 
DICT_COL__SYS_FOREIGN_COLS__POS
 = 1,

262 
DICT_COL__SYS_FOREIGN_COLS__FOR_COL_NAME
 = 2,

263 
DICT_COL__SYS_FOREIGN_COLS__REF_COL_NAME
 = 3,

264 
DICT_NUM_COLS__SYS_FOREIGN_COLS
 = 4

267 
	edi˘_Êd_sys_f‹eign_cﬁs_íum
 {

268 
DICT_FLD__SYS_FOREIGN_COLS__ID
 = 0,

269 
DICT_FLD__SYS_FOREIGN_COLS__POS
 = 1,

270 
DICT_FLD__SYS_FOREIGN_COLS__DB_TRX_ID
 = 2,

271 
DICT_FLD__SYS_FOREIGN_COLS__DB_ROLL_PTR
 = 3,

272 
DICT_FLD__SYS_FOREIGN_COLS__FOR_COL_NAME
 = 4,

273 
DICT_FLD__SYS_FOREIGN_COLS__REF_COL_NAME
 = 5,

274 
DICT_NUM_FIELDS__SYS_FOREIGN_COLS
 = 6

277 
	edi˘_cﬁ_sys_èbÀ•a˚s_íum
 {

278 
DICT_COL__SYS_TABLESPACES__SPACE
 = 0,

279 
DICT_COL__SYS_TABLESPACES__NAME
 = 1,

280 
DICT_COL__SYS_TABLESPACES__FLAGS
 = 2,

281 
DICT_NUM_COLS__SYS_TABLESPACES
 = 3

284 
	edi˘_Êd_sys_èbÀ•a˚s_íum
 {

285 
DICT_FLD__SYS_TABLESPACES__SPACE
 = 0,

286 
DICT_FLD__SYS_TABLESPACES__DB_TRX_ID
 = 1,

287 
DICT_FLD__SYS_TABLESPACES__DB_ROLL_PTR
 = 2,

288 
DICT_FLD__SYS_TABLESPACES__NAME
 = 3,

289 
DICT_FLD__SYS_TABLESPACES__FLAGS
 = 4,

290 
DICT_NUM_FIELDS__SYS_TABLESPACES
 = 5

293 
	edi˘_cﬁ_sys_d©afûes_íum
 {

294 
DICT_COL__SYS_DATAFILES__SPACE
 = 0,

295 
DICT_COL__SYS_DATAFILES__PATH
 = 1,

296 
DICT_NUM_COLS__SYS_DATAFILES
 = 2

299 
	edi˘_Êd_sys_d©afûes_íum
 {

300 
DICT_FLD__SYS_DATAFILES__SPACE
 = 0,

301 
DICT_FLD__SYS_DATAFILES__DB_TRX_ID
 = 1,

302 
DICT_FLD__SYS_DATAFILES__DB_ROLL_PTR
 = 2,

303 
DICT_FLD__SYS_DATAFILES__PATH
 = 3,

304 
DICT_NUM_FIELDS__SYS_DATAFILES
 = 4

308 
	edi˘_cﬁ_sys_vútuÆ_íum
 {

309 
DICT_COL__SYS_VIRTUAL__TABLE_ID
 = 0,

310 
DICT_COL__SYS_VIRTUAL__POS
 = 1,

311 
DICT_COL__SYS_VIRTUAL__BASE_POS
 = 2,

312 
DICT_NUM_COLS__SYS_VIRTUAL
 = 3

315 
	edi˘_Êd_sys_vútuÆ_íum
 {

316 
DICT_FLD__SYS_VIRTUAL__TABLE_ID
 = 0,

317 
DICT_FLD__SYS_VIRTUAL__POS
 = 1,

318 
DICT_FLD__SYS_VIRTUAL__BASE_POS
 = 2,

319 
DICT_FLD__SYS_VIRTUAL__DB_TRX_ID
 = 3,

320 
DICT_FLD__SYS_VIRTUAL__DB_ROLL_PTR
 = 4,

321 
DICT_NUM_FIELDS__SYS_VIRTUAL
 = 5

326 
	#DICT_FLD_LEN_SPACE
 4

	)

327 
	#DICT_FLD_LEN_FLAGS
 4

	)

332 
	#DICT_HDR_ROW_ID_WRITE_MARGIN
 256

	)

334 #i‚de‡
UNIV_HOTBACKUP


335 
	~"di˘0boŸ.ic
"

	@dict0boot.ic

35 
UNIV_INLINE


36 
row_id_t
 
	$di˘_sys_gë_√w_row_id
() {

37 
row_id_t
 
id
;

39 
	`muãx_íãr
(&
di˘_sys
->
muãx
);

41 
id
 = 
di˘_sys
->
row_id
;

43 i‡(0 =(
id
 % 
DICT_HDR_ROW_ID_WRITE_MARGIN
)) {

44 
	`di˘_hdr_Êush_row_id
();

47 
di˘_sys
->
row_id
++;

49 
	`muãx_exô
(&
di˘_sys
->
muãx
);

51  (
id
);

52 
	}
}

56 
UNIV_INLINE


57 
row_id_t
 
	$di˘_sys_ªad_row_id
(c⁄° 
byã
 *
fõld
)

59 #i‡
DATA_ROW_ID_LEN
 != 6

63  (
	`mach_ªad_‰om_6
(
fõld
));

64 
	}
}

67 
UNIV_INLINE


68 
	$di˘_sys_wrôe_row_id
(
byã
 *
fõld
,

69 
row_id_t
 
row_id
)

71 #i‡
DATA_ROW_ID_LEN
 != 6

75 
	`mach_wrôe_to_6
(
fõld
, 
row_id
);

76 
	}
}

81 
UNIV_INLINE


82 
boﬁ
 
	$di˘_is_ﬁd_sys_èbÀ
(
èbÀ_id_t
 
id
) {

83 i‡(
§v_is_upgøde_mode
) {

84  (
id
 < 
DICT_HDR_FIRST_ID
);

86  (
Ál£
);

87 
	}
}

	@dict0crea.h

33 #i‚de‡
di˘0¸ó_h


34 
	#di˘0¸ó_h


	)

36 
	~"di˘0di˘.h
"

37 
	~"di˘0ty≥s.h
"

38 
	~"f•0•a˚.h
"

39 
	~"må0må.h
"

40 
	~"que0ty≥s.h
"

41 
	~"row0ty≥s.h
"

42 
	~"sql/h™dÀr.h
"

43 
	~"univ.i
"

49 
dbîr_t
 
di˘_buûd_èbÀ_def
(
di˘_èbÀ_t
 *
èbÀ
,

50 c⁄° 
HA_CREATE_INFO
 *
¸óã_öfo
, 
åx_t
 *
åx
);

56 
dbîr_t
 
di˘_buûd_èbÀ•a˚
(
åx_t
 *
åx
, 
TabÀ•a˚
 *
èbÀ•a˚
);

62 
dbîr_t
 
di˘_buûd_èbÀ•a˚_f‹_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
,

63 c⁄° 
HA_CREATE_INFO
 *
¸óã_öfo
,

64 
åx_t
 *
åx
);

69 
di˘_èbÀ_assign_√w_id
(
di˘_èbÀ_t
 *
èbÀ
, 
åx_t
 *
åx
);

72 
di˘_buûd_ödex_def
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

73 
di˘_ödex_t
 *
ödex
,

74 
åx_t
 *
åx
);

80 
dbîr_t
 
di˘_¸óã_ödex_åì_ö_mem
(
di˘_ödex_t
 *
ödex
, 
åx_t
 *
åx
);

85 
di˘_dr›_ãmp‹¨y_èbÀ_ödex
(c⁄° 
di˘_ödex_t
 *
ödex
,

86 
∑ge_no_t
 
roŸ_∑ge_no
);

95 
UNIV_INLINE


96 
dbîr_t
 
di˘_¸óã_add_f‹eign_id
(
ulöt
 *
id_ƒ
, c⁄° *
«me
,

97 
di˘_f‹eign_t
 *
f‹eign
);

107 
boﬁ
 
di˘_f‹eigns_has_s_ba£_cﬁ
(c⁄° 
di˘_f‹eign_£t
 &
loˇl_fk_£t
,

108 c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

111 
	sèb_node_t
 {

112 
que_comm⁄_t
 
	mcomm⁄
;

113 
di˘_èbÀ_t
 *
	mèbÀ
;

116 
ös_node_t
 *
	mèb_def
;

119 
ös_node_t
 *
	mcﬁ_def
;

123 
ös_node_t
 *
	mv_cﬁ_def
;

129 
ulöt
 
	m°©e
;

130 
ulöt
 
	mcﬁ_no
;

131 
ulöt
 
	mba£_cﬁ_no
;

132 
mem_hóp_t
 *
	mhóp
;

142 
di˘_ödex_t
 *
di˘_sdi_¸óã_idx_ö_mem
(
•a˚_id_t
 
•a˚
, 
boﬁ
 
•a˚_disˇrded
,

143 
uöt32_t
 
ö_Êags
, 
boﬁ
 
is_¸óã
);

147 
	söd_node_t
 {

148 
que_comm⁄_t
 
	mcomm⁄
;

149 
di˘_ödex_t
 *
	mödex
;

152 
ös_node_t
 *
	möd_def
;

155 
ös_node_t
 *
	mfõld_def
;

161 
ulöt
 
	m°©e
;

162 
ulöt
 
	m∑ge_no
;

163 
di˘_èbÀ_t
 *
	mèbÀ
;

164 
dtu∂e_t
 *
	möd_row
;

165 
ulöt
 
	mfõld_no
;

166 
mem_hóp_t
 *
	mhóp
;

168 c⁄° 
di˘_add_v_cﬁ_t
 *
	madd_v
;

178 
UNIV_INLINE


179 
ulöt
 
di˘_¸óã_v_cﬁ_pos
(ulöà
v_pos
, ulöà
cﬁ_pos
);

185 
UNIV_INLINE


186 
ulöt
 
di˘_gë_v_cﬁ_mysql_pos
(ulöà
pos
);

192 
UNIV_INLINE


193 
ulöt
 
di˘_gë_v_cﬁ_pos
(ulöà
pos
);

195 
	~"di˘0¸ó.ic
"

	@dict0crea.ic

33 
	~"ha_¥ŸŸy≥s.h
"

35 
	~"mem0mem.h
"

40 
boﬁ
 
	$row_is_mysql_tmp_èbÀ_«me
(c⁄° *
«me
)

41 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

49 
UNIV_INLINE


50 
dbîr_t
 
	$di˘_¸óã_add_f‹eign_id
(

51 
ulöt
 *
id_ƒ
,

53 c⁄° *
«me
,

54 
di˘_f‹eign_t
 *
f‹eign
)

56 
DBUG_TRACE
;

58 i‡(
f‹eign
->
id
 =
nuŒ±r
) {

60 
ulöt
 
«mñí
 = 
	`°æí
(
«me
);

61 *
id
 = 
°©ic_ˇ°
<*>(
	`mem_hóp_Æloc
(
f‹eign
->
hóp
, 
«mñí
 + 20));

63 i‡(
	`row_is_mysql_tmp_èbÀ_«me
(
«me
)) {

65 
	`•rötf
(
id
, "%s_ibfk_%lu", 
«me
, (
ul⁄g
)(*
id_ƒ
)++);

67 
èbÀ_«me
[
MAX_TABLE_NAME_LEN
 + 20 + 1] = "";

68 
uöt
 
îr‹s
 = 0;

70 
	`°∫˝y
(
èbÀ_«me
, 
«me
, 
MAX_TABLE_NAME_LEN
 + 20);

72 
	`önoba£_c⁄vît_to_sy°em_ch¨£t
(
	`°rchr
(
èbÀ_«me
, '/') + 1,

73 
	`°rchr
(
«me
, '/') + 1,

74 
MAX_TABLE_NAME_LEN
, &
îr‹s
);

76 i‡(
îr‹s
) {

77 
	`°∫˝y
(
èbÀ_«me
, 
«me
, 
MAX_TABLE_NAME_LEN
 + 20);

81 
	`•rötf
(
id
, "%s_ibfk_%lu", 
èbÀ_«me
, (
ul⁄g
)(*
id_ƒ
)++);

83 i‡(
	`önoba£_check_idítifõr_Àngth
(
	`°rchr
(
id
, '/') + 1)) {

86 
	`ut_ad
(0);

87  
DB_IDENTIFIER_TOO_LONG
;

90 
f‹eign
->
id
 = id;

92 
	`DBUG_PRINT
("di˘_¸óã_add_f‹eign_id", ("gíî©ed f‹eig¿id: %s", 
id
));

95  
DB_SUCCESS
;

96 
	}
}

104 
UNIV_INLINE


105 
ulöt
 
	$di˘_¸óã_v_cﬁ_pos
(
ulöt
 
v_pos
, ulöà
cﬁ_pos
) {

106 
	`ut_ad
(
v_pos
 <
REC_MAX_N_FIELDS
);

107 
	`ut_ad
(
cﬁ_pos
 <
REC_MAX_N_FIELDS
);

109  (((
v_pos
 + 1Ë<< 16Ë+ 
cﬁ_pos
);

110 
	}
}

116 
UNIV_INLINE


117 
ulöt
 
	$di˘_gë_v_cﬁ_mysql_pos
(
ulöt
 
pos
Ë{  (po†& 0xFFFF); 
	}
}

123 
UNIV_INLINE


124 
ulöt
 
	$di˘_gë_v_cﬁ_pos
(
ulöt
 
pos
Ë{  (’o†>> 16Ë- 1); 
	}
}

	@dict0dd.h

30 #i‚de‡
di˘0dd_h


31 
	#di˘0dd_h


	)

33 
	~"di˘0di˘.h
"

34 
	~"di˘0mem.h
"

35 
	~"di˘0ty≥s.h
"

36 
	~"my_compûî.h
"

37 
	~"univ.i
"

39 #i‚de‡
UNIV_HOTBACKUP


40 
	~"dd/ˇche/di˘i⁄¨y_˛õ¡.h
"

41 
	~"dd/dd.h
"

42 
	~"dd/dd_schema.h
"

43 
	~"dd/dd_èbÀ.h
"

44 
	~"dd/di˘i⁄¨y.h
"

45 
	~"dd/¥›îtõs.h
"

46 
	~"dd/ty≥s/cﬁumn.h
"

47 
	~"dd/ty≥s/f‹eign_key.h
"

48 
	~"dd/ty≥s/f‹eign_key_ñemít.h
"

49 
	~"dd/ty≥s/ödex.h
"

50 
	~"dd/ty≥s/ödex_ñemít.h
"

51 
	~"dd/ty≥s/∑πôi⁄.h
"

52 
	~"dd/ty≥s/∑πôi⁄_ödex.h
"

53 
	~"dd/ty≥s/èbÀ.h
"

54 
	~"dd/ty≥s/èbÀ•a˚.h
"

55 
	~"dd/ty≥s/èbÀ•a˚_fûe.h
"

56 
	~"dd_èbÀ_sh¨e.h
"

57 
	~"£ss0£ss.h
"

59 
	~"mysql_com.h
"

61 
	~"mysql_vîsi⁄.h
"

63 #i‚de‡
UNIV_HOTBACKUP


64 
˛ass
 
	gTHD
;

65 
˛ass
 
	gMDL_tickë
;

69 
	#DD_SUCCESS
 
Ál£


	)

70 
	#DD_FAILURE
 
åue


	)

73 
c⁄°ex¥
 
	gh™dÀr_«me
[] = "InnoDB";

75 c⁄° 
	gönoba£_ht⁄_«me
[] = "InnoDB";

78 
c⁄°ex¥
 
	gaut€xãnd_size_°r
[] = "autoextend_size";

81 
	#DICT_MAX_DD_TABLES
 1024

	)

84 
	edd_èbÀ_keys
 {

86 
	mDD_TABLE_AUTOINC
,

88 
	mDD_TABLE_DATA_DIRECTORY
,

90 
	mDD_TABLE_VERSION
,

96 
	mDD_TABLE_DISCARD
,

98 
	mDD_TABLE_INSTANT_COLS
,

100 
	mDD_TABLE__LAST


112 
	edd_cﬁumn_keys
 {

114 
	mDD_INSTANT_COLUMN_DEFAULT
,

116 
	mDD_INSTANT_COLUMN_DEFAULT_NULL
,

118 
	mDD_COLUMN__LAST


124 c⁄° 
uöt32
 
	gDD_SPACE_CURRENT_SRV_VERSION
 = 
MYSQL_VERSION_ID
;

127 c⁄° 
uöt32
 
	gDD_SPACE_CURRENT_SPACE_VERSION
 = 1;

129 #i‚de‡
UNIV_HOTBACKUP


131 
	edd_∑πôi⁄_keys
 {

133 
	mDD_PARTITION_ROW_FORMAT
,

139 
	mDD_PARTITION_INSTANT_COLS
,

145 
	mDD_PARTITION_DISCARD
,

147 
	mDD_PARTITION__LAST


151 
	edd_•a˚_keys
 {

153 
	mDD_SPACE_FLAGS
,

155 
	mDD_SPACE_ID
,

157 
	mDD_SPACE_DISCARD
,

159 
	mDD_SPACE_SERVER_VERSION
,

161 
	mDD_SPACE_VERSION
,

163 
	mDD_SPACE_STATE
,

165 
	mDD_SPACE__LAST


169 
	edd_•a˚_°©es
 {

171 
	mDD_SPACE_STATE_NORMAL
,

173 
	mDD_SPACE_STATE_DISCARDED
,

175 
	mDD_SPACE_STATE_CORRUPTED
,

177 
	mDD_SPACE_STATE_ACTIVE
,

182 
	mDD_SPACE_STATE_INACTIVE
,

185 
	mDD_SPACE_STATE_EMPTY
,

187 
	mDD_SPACE_STATE__LAST


192 
c⁄°ex¥
 
	gª£rved_im∂icô_«me
[] = "innodb_file_per_table";

196 c⁄° *c⁄° 
	gdd_•a˚_key_°rögs
[
DD_SPACE__LAST
] = {

201 c⁄° *c⁄° 
	gdd_•a˚_°©e_vÆues
[
DD_SPACE_STATE__LAST
 + 1] = {

212 c⁄° *c⁄° 
	gdd_èbÀ_key_°rögs
[
DD_TABLE__LAST
] = {

216 c⁄° *c⁄° 
	gdd_cﬁumn_key_°rögs
[
DD_COLUMN__LAST
] = {"default",

220 c⁄° *c⁄° 
	gdd_∑πôi⁄_key_°rögs
[
DD_PARTITION__LAST
] = {

224 
	edd_ödex_keys
 {

226 
	mDD_INDEX_ID
,

228 
	mDD_INDEX_SPACE_ID
,

230 
	mDD_TABLE_ID
,

232 
	mDD_INDEX_ROOT
,

234 
	mDD_INDEX_TRX_ID
,

236 
	mDD_INDEX__LAST


241 c⁄° *c⁄° 
	gdd_ödex_key_°rögs
[
DD_INDEX__LAST
] = {

246 c⁄° *c⁄° 
dd_ödex_key_°rögs
[
DD_INDEX__LAST
];

249 c⁄° 
	gdd
::
Såög_ty≥
 
ödex_fûe_«me_key
("index_file_name");

251 c⁄° 
	gdd
::
Såög_ty≥
 
d©a_fûe_«me_key
("data_file_name");

254 c⁄° 
	gdd
::
Såög_ty≥
 
dd_èbÀs_«me
("mysql/tables");

255 c⁄° 
	gdd
::
Såög_ty≥
 
dd_∑πôi⁄s_«me
("mysql/table_partitions");

256 c⁄° 
	gdd
::
Såög_ty≥
 
dd_èbÀ•a˚s_«me
("mysql/tablespaces");

257 c⁄° 
	gdd
::
Såög_ty≥
 
dd_ödexes_«me
("mysql/indexes");

258 c⁄° 
	gdd
::
Såög_ty≥
 
dd_cﬁumns_«me
("mysql/columns");

260 #ifde‡
UNIV_DEBUG


263 
	sönodb_dd_èbÀ_t
 {

265 c⁄° *
	m«me
;

267 c⁄° 
uöt
 
	mn_ödexes
;

271 c⁄° 
önodb_dd_èbÀ_t
 
	gönodb_dd_èbÀ
[] = {

272 
INNODB_DD_TABLE
("dd_properties", 1),

274 
INNODB_DD_TABLE
("innodb_dynamic_metadata", 1),

275 
INNODB_DD_TABLE
("innodb_table_stats", 1),

276 
INNODB_DD_TABLE
("innodb_index_stats", 1),

277 
INNODB_DD_TABLE
("innodb_ddl_log", 2),

279 
INNODB_DD_TABLE
("catalogs", 2),

280 
INNODB_DD_TABLE
("character_sets", 3),

281 
INNODB_DD_TABLE
("check_constraints", 3),

282 
INNODB_DD_TABLE
("collations", 3),

283 
INNODB_DD_TABLE
("column_statistics", 3),

284 
INNODB_DD_TABLE
("column_type_elements", 1),

285 
INNODB_DD_TABLE
("columns", 5),

286 
INNODB_DD_TABLE
("events", 6),

287 
INNODB_DD_TABLE
("foreign_key_column_usage", 3),

288 
INNODB_DD_TABLE
("foreign_keys", 4),

289 
INNODB_DD_TABLE
("index_column_usage", 3),

290 
INNODB_DD_TABLE
("index_partitions", 3),

291 
INNODB_DD_TABLE
("index_stats", 1),

292 
INNODB_DD_TABLE
("indexes", 3),

293 
INNODB_DD_TABLE
("parameter_type_elements", 1),

294 
INNODB_DD_TABLE
("parameters", 3),

295 
INNODB_DD_TABLE
("resource_groups", 2),

296 
INNODB_DD_TABLE
("routines", 7),

297 
INNODB_DD_TABLE
("schemata", 3),

298 
INNODB_DD_TABLE
("st_spatial_reference_systems", 3),

299 
INNODB_DD_TABLE
("table_partition_values", 1),

300 
INNODB_DD_TABLE
("table_partitions", 7),

301 
INNODB_DD_TABLE
("table_stats", 1),

302 
INNODB_DD_TABLE
("tables", 10),

303 
INNODB_DD_TABLE
("tablespace_files", 2),

304 
INNODB_DD_TABLE
("tablespaces", 2),

305 
INNODB_DD_TABLE
("triggers", 7),

306 
INNODB_DD_TABLE
("view_routine_usage", 2),

307 
INNODB_DD_TABLE
("view_table_usage", 2)};

310 
c⁄°ex¥
 
size_t
 
	gönodb_dd_èbÀ_size
 = 
UT_ARR_SIZE
(
önodb_dd_èbÀ
);

313 
uöt32_t
 
dd_gë_tŸÆ_ödexes_num
();

327 ˛as†
	cDD_ö°™t_cﬁ_vÆ_codî
 {

328 
	mpublic
:

330 
	$DD_ö°™t_cﬁ_vÆ_codî
(Ë: 
	$m_ªsu…
(
nuŒ±r
) {}

333 ~
	$DD_ö°™t_cﬁ_vÆ_codî
(Ë{ 
	`˛ónup
(); 
	}
}

341 c⁄° *
ícode
(c⁄° 
byã
 *
°ªam
, 
size_t
 
ö_Àn
, size_à*
out_Àn
);

349 c⁄° 
byã
 *
decode
(c⁄° *
°ªam
, 
size_t
 
ö_Àn
, size_à*
out_Àn
);

351 
	g¥iv©e
:

353 
	$˛ónup
(Ë{ 
	`UT_DELETE_ARRAY
(
m_ªsu…
); 
	}
}

355 
	g¥iv©e
:

357 
byã
 *
m_ªsu…
;

360 #i‚de‡
UNIV_HOTBACKUP


365 
ölöe
 
boﬁ
 
	$dd_∑π_is_fú°
(c⁄° 
dd
::
P¨tôi⁄
 *
dd_∑π
) {

366  (
dd_∑π
 =*(dd_∑π->
	`èbÀ
().
	`Àaf_∑πôi⁄s
().
	`begö
()));

367 
	}
}

373 
ölöe
 
boﬁ
 
	$dd_èbÀ_is_∑πôi⁄ed
(c⁄° 
dd
::
TabÀ
 &
èbÀ
) {

374  (
èbÀ
.
	`∑πôi⁄_ty≥
(Ë!
dd
::
TabÀ
::
PT_NONE
);

375 
	}
}

377 #ifde‡
UNIV_DEBUG


382 
boﬁ
 
dd_ö°™t_cﬁumns_exi°
(c⁄° 
dd
::
TabÀ
 &
dd_èbÀ
);

389 
ölöe
 
boﬁ
 
	$dd_èbÀ_has_ö°™t_cﬁs
(c⁄° 
dd
::
TabÀ
 &
èbÀ
) {

390 
boﬁ
 
ö°™t
 = 
èbÀ
.
	`£_¥iv©e_d©a
().
	`exi°s
(

391 
dd_èbÀ_key_°rögs
[
DD_TABLE_INSTANT_COLS
]);

393 
	`ut_ad
(!
ö°™t
 || 
	`dd_ö°™t_cﬁumns_exi°
(
èbÀ
));

395  (
ö°™t
);

396 
	}
}

402 
ölöe
 
boﬁ
 
	$dd_∑π_has_ö°™t_cﬁs
(c⁄° 
dd
::
P¨tôi⁄
 &
∑π
) {

403 
boﬁ
 
ö°™t
 = 
∑π
.
	`£_¥iv©e_d©a
().
	`exi°s
(

404 
dd_∑πôi⁄_key_°rögs
[
DD_PARTITION_INSTANT_COLS
]);

405 
	`ut_ad
(!
ö°™t
 || 
	`dd_èbÀ_has_ö°™t_cﬁs
(
∑π
.
	`èbÀ
()));

407  (
ö°™t
);

408 
	}
}

414 
ölöe
 
boﬁ
 
	$dd_èbÀ_∑π_has_ö°™t_cﬁs
(c⁄° 
dd
::
TabÀ
 &
èbÀ
) {

415 
	`ut_ad
(
	`dd_èbÀ_is_∑πôi⁄ed
(
èbÀ
));

417 i‡(!
	`dd_èbÀ_has_ö°™t_cﬁs
(
èbÀ
)) {

418  (
Ál£
);

421 autÿ
∑π
 : 
èbÀ
.
	`Àaf_∑πôi⁄s
()) {

422 i‡(
	`dd_∑π_has_ö°™t_cﬁs
(*
∑π
)) {

423  (
åue
);

426  (
Ál£
);

427 
	}
}

437 
ölöe
 
boﬁ
 
	$dd_is_disˇrded
(c⁄° 
dd
::
TabÀ
 &
èbÀ
) {

438 c⁄° 
dd
::
Pr›îtõs
 &
èbÀ_¥iv©e
 = 
èbÀ
.
	`£_¥iv©e_d©a
();

439 
boﬁ
 
is_disˇrded
 = 
Ál£
;

440 i‡(
èbÀ_¥iv©e
.
	`exi°s
(
dd_èbÀ_key_°rögs
[
DD_TABLE_DISCARD
])) {

441 
èbÀ_¥iv©e
.
	`gë
(
dd_èbÀ_key_°rögs
[
DD_TABLE_DISCARD
], &
is_disˇrded
);

446 
	`ut_ad
(!
is_disˇrded
 || !
	`dd_èbÀ_is_∑πôi⁄ed
(
èbÀ
));

448  
is_disˇrded
;

449 
	}
}

461 
ölöe
 
boﬁ
 
	$dd_is_disˇrded
(c⁄° 
dd
::
P¨tôi⁄
 &
∑πôi⁄
) {

462 c⁄° 
dd
::
Pr›îtõs
 &
∑πôi⁄_¥iv©e
 = 
∑πôi⁄
.
	`£_¥iv©e_d©a
();

463 
boﬁ
 
is_disˇrded
 = 
Ál£
;

464 i‡(
∑πôi⁄_¥iv©e
.
	`exi°s
(

465 
dd_∑πôi⁄_key_°rögs
[
DD_PARTITION_DISCARD
])) {

466 
∑πôi⁄_¥iv©e
.
	`gë
(
dd_∑πôi⁄_key_°rögs
[
DD_PARTITION_DISCARD
],

467 &
is_disˇrded
);

470  
is_disˇrded
;

471 
	}
}

478 
ölöe
 
	$dd_£t_disˇrded
(
dd
::
TabÀ
 &
èbÀ
, 
boﬁ
 
disˇrded
) {

479 
	`ut_ad
(!
	`dd_èbÀ_is_∑πôi⁄ed
(
èbÀ
));

481 
dd
::
Pr›îtõs
 &
p
 = 
èbÀ
.
	`£_¥iv©e_d©a
();

482 
p
.
	`£t
(
dd_èbÀ_key_°rögs
[
DD_TABLE_DISCARD
], 
disˇrded
);

483 
	}
}

491 
ölöe
 
	$dd_£t_disˇrded
(
dd
::
P¨tôi⁄
 &
∑πôi⁄
, 
boﬁ
 
disˇrded
) {

492 #ifde‡
UNIV_DEBUG


493 
boﬁ
 
is_Àaf
 = 
Ál£
;

494 c⁄° 
dd
::
P¨tôi⁄
 *
∑π
 : *
∑πôi⁄
.
	`èbÀ
().
	`Àaf_∑πôi⁄s
()) {

495 i‡(
∑π
 =&
∑πôi⁄
) {

496 
is_Àaf
 = 
åue
;

500 
	`ut_ad
(
is_Àaf
);

503 
dd
::
Pr›îtõs
 &
p
 = 
∑πôi⁄
.
	`£_¥iv©e_d©a
();

504 
p
.
	`£t
(
dd_∑πôi⁄_key_°rögs
[
DD_PARTITION_DISCARD
], 
disˇrded
);

505 
	}
}

513 
	gãm∂©e
 <
ty≥«me
 
	gTabÀ
,Åy≥«mê
	gIndex
>

514 
ölöe
 c⁄° 
Index
 *
	$dd_fú°
(c⁄° 
TabÀ
 *
èbÀ
) {

515  (*
èbÀ
->
	`ödexes
().
	`begö
());

516 
	}
}

522 
ölöe
 c⁄° 
	gdd
::
Index
 *
	$dd_fú°_ödex
(c⁄° 
dd
::
TabÀ
 *
èbÀ
) {

523  (
dd_fú°
<
dd
::
TabÀ
, dd::
Index
>(
èbÀ
));

524 
	}
}

530 
ölöe
 c⁄° 
	gdd
::
P¨tôi⁄_ödex
 *
	$dd_fú°_ödex
(

531 c⁄° 
dd
::
P¨tôi⁄
 *
∑πôi⁄
) {

532  (
dd_fú°
<
dd
::
P¨tôi⁄
, dd::
P¨tôi⁄_ödex
>(
∑πôi⁄
));

533 
	}
}

535 #ifde‡
UNIV_DEBUG


539 
ölöe
 
boﬁ
 
	$dd_∑π_is_°‹ed
(c⁄° 
dd
::
P¨tôi⁄
 *
∑π
) {

540  (
∑π
->
	`èbÀ
().
	`sub∑πôi⁄_ty≥
(Ë=
dd
::
TabÀ
::
ST_NONE
 ||

541 
∑π
->
	`∑ª¡
());

542 
	}
}

549 
ölöe
 
	gdd
::
Obje˘_id
 
	$dd_gë_•a˚_id
(c⁄° 
dd
::
TabÀ
 &
èbÀ
) {

550 
	`ut_ad
(!
	`dd_èbÀ_is_∑πôi⁄ed
(
èbÀ
));

551  (
èbÀ
.
	`èbÀ•a˚_id
());

552 
	}
}

558 
ölöe
 
	gdd
::
Obje˘_id
 
dd_gë_•a˚_id
(c⁄° 
dd
::
P¨tôi⁄
 &
∑πôi⁄
);

563 
dd_£t_autoöc
(
dd
::
Pr›îtõs
 &
£_¥iv©e_d©a
, 
uöt64
 
autoöc
);

568 
ölöe
 
uöt64_t
 
dd_gë_vîsi⁄
(c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
);

573 
dd_c›y_autoöc
(c⁄° 
dd
::
Pr›îtõs
 &
§c
, dd::Pr›îtõ†&
de°
);

580 
dd_c›y_ö°™t_n_cﬁs
(
dd
::
TabÀ
 &
√w_èbÀ
, c⁄° dd::TabÀ &
ﬁd_èbÀ
);

588 
	gãm∂©e
 <
ty≥«me
 
	gTabÀ
>

589 
dd_c›y_¥iv©e
(
TabÀ
 &
√w_èbÀ
, c⁄° TabÀ &
ﬁd_èbÀ
);

594 
dd_c›y_èbÀ_cﬁumns
(
dd
::
TabÀ
 &
√w_èbÀ
, c⁄° dd::TabÀ &
ﬁd_èbÀ
);

602 
ölöe
 
	$dd_c›y_èbÀ
(
dd
::
TabÀ
 &
√w_èbÀ
, c⁄° dd::TabÀ &
ﬁd_èbÀ
) {

604 
	`dd_c›y_èbÀ_cﬁumns
(
√w_èbÀ
, 
ﬁd_èbÀ
);

605 i‡(
	`dd_èbÀ_has_ö°™t_cﬁs
(
ﬁd_èbÀ
)) {

606 
	`dd_c›y_ö°™t_n_cﬁs
(
√w_èbÀ
, 
ﬁd_èbÀ
);

608 
	}
}

614 
dd_∑π_adju°_èbÀ_id
(
dd
::
TabÀ
 *
√w_èbÀ
);

621 
dd_add_ö°™t_cﬁumns
(c⁄° 
TABLE
 *
ﬁd_èbÀ
, c⁄° TABLE *
Æãªd_èbÀ
,

622 
dd
::
TabÀ
 *
√w_dd_èbÀ
,

623 c⁄° 
di˘_èbÀ_t
 *
√w_èbÀ
);

627 
dd_˛ór_ö°™t_èbÀ
(
dd
::
TabÀ
 &
dd_èbÀ
);

632 
dd_˛ór_ö°™t_∑π
(
dd
::
P¨tôi⁄
 &
dd_∑π
);

641 
boﬁ
 
dd_m©ch_deÁu…_vÆue
(c⁄° 
dd
::
Cﬁumn
 *
dd_cﬁ
, c⁄° 
di˘_cﬁ_t
 *
cﬁ
);

646 
dd_wrôe_deÁu…_vÆue
(c⁄° 
di˘_cﬁ_t
 *
cﬁ
, 
dd
::
Cﬁumn
 *
dd_cﬁ
);

652 
dd_imp‹t_ö°™t_add_cﬁumns
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

653 
dd
::
TabÀ
 *
dd_èbÀ
);

660 
	gãm∂©e
 <
ty≥«me
 
	gTabÀ
>

661 
dd_wrôe_èbÀ
(
dd
::
Obje˘_id
 
dd_•a˚_id
, 
TabÀ
 *
dd_èbÀ
,

662 c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

668 
	gãm∂©e
 <
ty≥«me
 
	gTabÀ
>

669 
dd_£t_èbÀ_›ti⁄s
(
TabÀ
 *
dd_èbÀ
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

675 
dd_upd©e_v_cﬁs
(
dd
::
TabÀ
 *
dd_èbÀ
, 
èbÀ_id_t
 
id
);

682 
dd_wrôe_èbÀ•a˚
(
dd
::
TabÀ•a˚
 *
dd_•a˚
, 
•a˚_id_t
 
•a˚_id
,

683 
uöt32_t
 
f•_Êags
, 
dd_•a˚_°©es
 
°©e
);

689 
dd_add_·s_doc_id_ödex
(
dd
::
TabÀ
 &
√w_èbÀ
, c⁄° dd::TabÀ &
ﬁd_èbÀ
);

691 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

692 
	$MY_COMPILER_CLANG_WORKAROUND_TPARAM_DOCBUG
()

698 
ãm∂©e
 <
ty≥«me
 
Index
>

699 c⁄° 
di˘_ödex_t
 *
	`dd_föd_ödex
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, 
Index
 *
dd_ödex
);

700 
	$MY_COMPILER_DIAGNOSTIC_POP
()

709 
UNIV_INLINE
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
boﬁ
 
	`dd_mdl_acquúe
(

710 
THD
 *
thd
, 
MDL_tickë
 **
mdl
, c⁄° *
db
, c⁄° *
èbÀ
);

715 
	`dd_mdl_ªÀa£
(
THD
 *
thd
, 
MDL_tickë
 **
mdl
);

720 
THD
 *
	`dd_thd_f‹_undo
(c⁄° 
åx_t
 *
åx
);

725 
boﬁ
 
	`dd_mdl_f‹_undo
(c⁄° 
åx_t
 *
åx
);

735 
dbîr_t
 
	`dd_èbÀ_lﬂd_fk_‰om_dd
(
di˘_èbÀ_t
 *
m_èbÀ
,

736 c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
,

737 c⁄° **
cﬁ_«mes
,

738 
di˘_îr_ign‹e_t
 
ign‹e_îr
,

739 
boﬁ
 
di˘_locked
);

744 
	`dd_£t_autoöc
(
dd
::
Pr›îtõs
 &
£_¥iv©e_d©a
, 
uöt64
 
autoöc
);

754 c⁄° 
ªc_t
 *
	`dd_°¨tsˇn_sy°em
(
THD
 *
thd
, 
MDL_tickë
 **
mdl
, 
bå_pcur_t
 *
pcur
,

755 
må_t
 *
må
, c⁄° *
sy°em_èbÀ_«me
,

756 
di˘_èbÀ_t
 **
èbÀ
);

766 c⁄° *
	`dd_¥o˚ss_dd_èbÀs_ªc_™d_må_commô
(

767 
mem_hóp_t
 *
hóp
, c⁄° 
ªc_t
 *
ªc
, 
di˘_èbÀ_t
 **
èbÀ
,

768 
di˘_èbÀ_t
 *
dd_èbÀs
, 
MDL_tickë
 **
mdl
, 
må_t
 *
må
);

777 c⁄° *
	`dd_¥o˚ss_dd_∑πôi⁄s_ªc_™d_må_commô
(

778 
mem_hóp_t
 *
hóp
, c⁄° 
ªc_t
 *
ªc
, 
di˘_èbÀ_t
 **
èbÀ
,

779 
di˘_èbÀ_t
 *
dd_èbÀs
, 
MDL_tickë
 **
mdl
, 
må_t
 *
må
);

791 
boﬁ
 
	`dd_¥o˚ss_dd_cﬁumns_ªc
(
mem_hóp_t
 *
hóp
, c⁄° 
ªc_t
 *
ªc
,

792 
di˘_cﬁ_t
 *
cﬁ
, 
èbÀ_id_t
 *
èbÀ_id
,

793 **
cﬁ_«me
, 
ulöt
 *
¡h_v_cﬁ
,

794 c⁄° 
di˘_èbÀ_t
 *
dd_cﬁumns
, 
må_t
 *
må
);

806 
boﬁ
 
	`dd_¥o˚ss_dd_vútuÆ_cﬁumns_ªc
(
mem_hóp_t
 *
hóp
, c⁄° 
ªc_t
 *
ªc
,

807 
èbÀ_id_t
 *
èbÀ_id
, 
ulöt
 **
pos
,

808 
ulöt
 **
ba£_pos
, ulöà*
n_row
,

809 
di˘_èbÀ_t
 *
dd_cﬁumns
, 
må_t
 *
må
);

815 c⁄° 
ªc_t
 *
	`dd_gë√xt_sy°em_ªc
(
bå_pcur_t
 *
pcur
, 
må_t
 *
må
);

827 
boﬁ
 
	`dd_¥o˚ss_dd_ödexes_ªc
(
mem_hóp_t
 *
hóp
, c⁄° 
ªc_t
 *
ªc
,

828 c⁄° 
di˘_ödex_t
 **
ödex
, 
MDL_tickë
 **
mdl
,

829 
di˘_èbÀ_t
 **
∑ª¡
, 
MDL_tickë
 **
∑ª¡_mdl
,

830 
di˘_èbÀ_t
 *
dd_ödexes
, 
må_t
 *
må
);

839 
boﬁ
 
	`dd_¥o˚ss_dd_ödexes_ªc_sim∂e
(
mem_hóp_t
 *
hóp
, c⁄° 
ªc_t
 *
ªc
,

840 
•a˚_ödex_t
 *
ödex_id
,

841 
•a˚_id_t
 *
•a˚_id
,

842 
di˘_èbÀ_t
 *
dd_ödexes
);

857 
boﬁ
 
	`dd_¥o˚ss_dd_èbÀ•a˚s_ªc
(
mem_hóp_t
 *
hóp
, c⁄° 
ªc_t
 *
ªc
,

858 
•a˚_id_t
 *
•a˚_id
, **
«me
,

859 
uöt32_t
 *
Êags
, 
uöt32
 *
£rvî_vîsi⁄
,

860 
uöt32
 *
•a˚_vîsi⁄
, 
boﬁ
 *
is_í¸y±ed
,

861 
uöt64_t
 *
aut€xãnd_size
,

862 
dd
::
Såög_ty≥
 *
°©e
,

863 
di˘_èbÀ_t
 *
dd_•a˚s
);

871 
ãm∂©e
 <
ty≥«me
 
TabÀ
>

872 
	`dd_gë_™d_ßve_d©a_dú_∑th
(
di˘_èbÀ_t
 *
èbÀ
, c⁄° 
TabÀ
 *
dd_èbÀ
,

873 
boﬁ
 
di˘_muãx_own
);

881 
ãm∂©e
 <
ty≥«me
 
TabÀ
>

882 
	`dd_gë_™d_ßve_•a˚_«me
(
di˘_èbÀ_t
 *
èbÀ
, c⁄° 
TabÀ
 *
dd_èbÀ
,

883 
boﬁ
 
di˘_muãx_own
);

891 
	`dd_gë_mëa_d©a_fûíame
(
di˘_èbÀ_t
 *
èbÀ
, 
dd
::
TabÀ
 *
dd_èbÀ
,

892 *
fûíame
, 
ulöt
 
max_Àn
);

907 
dbîr_t
 
	`dd_èbÀ_lﬂd_fk
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
˛õ¡
,

908 c⁄° *
tbl_«me
, c⁄° **
cﬁ_«mes
,

909 
di˘_èbÀ_t
 *
m_èbÀ
, c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
,

910 
THD
 *
thd
, 
boﬁ
 
di˘_locked
, boﬁ 
check_ch¨£ts
,

911 
di˘_«mes_t
 *
fk_èbÀs
);

925 
dbîr_t
 
	`dd_èbÀ_check_f‹_chûd
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
˛õ¡
,

926 c⁄° *
tbl_«me
, c⁄° **
cﬁ_«mes
,

927 
di˘_èbÀ_t
 *
m_èbÀ
,

928 c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
, 
THD
 *
thd
,

929 
boﬁ
 
check_ch¨£ts
,

930 
di˘_îr_ign‹e_t
 
ign‹e_îr
,

931 
di˘_«mes_t
 *
fk_èbÀs
);

943 
	`acquúe_unˇched_èbÀ
(
THD
 *
thd
, 
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
˛õ¡
,

944 c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
, c⁄° *
«me
,

945 
TABLE_SHARE
 *
ts
, 
TABLE
 *
td
);

951 
	`ªÀa£_unˇched_èbÀ
(
TABLE_SHARE
 *
ts
, 
TABLE
 *
td
);

964 
	`dd_èbÀ_›í_⁄_dd_obj
(
THD
 *
thd
, 
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
˛õ¡
,

965 c⁄° 
dd
::
TabÀ
 &
dd_èbÀ
,

966 c⁄° 
dd
::
P¨tôi⁄
 *
dd_∑π
, c⁄° *
tbl_«me
,

967 
di˘_èbÀ_t
 *&
èbÀ
, c⁄° 
TABLE
 *
td
);

981 
di˘_èbÀ_t
 *
	`dd_èbÀ_›í_⁄_id
(
èbÀ_id_t
 
èbÀ_id
, 
THD
 *
thd
,

982 
MDL_tickë
 **
mdl
, 
boﬁ
 
di˘_locked
,

983 
boﬁ
 
check_c‹ru±i⁄
);

990 
	`dd_èbÀ_˛o£
(
di˘_èbÀ_t
 *
èbÀ
, 
THD
 *
thd
, 
MDL_tickë
 **
mdl
,

991 
boﬁ
 
di˘_locked
);

993 #i‚de‡
UNIV_HOTBACKUP


1001 
boﬁ
 
	`dd_èbÀ_disˇrd_èbÀ•a˚
(
THD
 *
thd
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

1002 
dd
::
TabÀ
 *
èbÀ_def
, 
boﬁ
 
disˇrd
);

1013 
di˘_èbÀ_t
 *
	`dd_èbÀ_›í_⁄_«me
(
THD
 *
thd
, 
MDL_tickë
 **
mdl
,

1014 c⁄° *
«me
, 
boﬁ
 
di˘_locked
,

1015 
ulöt
 
ign‹e_îr
, *
îr‹
 = 
nuŒ±r
);

1021 
UNIV_INLINE


1022 
di˘_èbÀ_t
 *
	`dd_èbÀ_›í_⁄_id_ö_mem
(
èbÀ_id_t
 
èbÀ_id
, 
boﬁ
 
di˘_locked
);

1028 
UNIV_INLINE


1029 
di˘_èbÀ_t
 *
	`dd_èbÀ_›í_⁄_«me_ö_mem
(c⁄° *
«me
, 
iboﬁ
 
di˘_locked
);

1031 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

1032 
	$MY_COMPILER_CLANG_WORKAROUND_TPARAM_DOCBUG
()

1041 
ãm∂©e
 <
ty≥«me
 
TabÀ
>

1042 
di˘_èbÀ_t
 *
	`dd_›í_èbÀ
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
˛õ¡
,

1043 c⁄° 
TABLE
 *
èbÀ
, c⁄° *
n‹m_«me
,

1044 c⁄° 
TabÀ
 *
dd_èbÀ
, 
THD
 *
thd
);

1045 
	$MY_COMPILER_DIAGNOSTIC_POP
()

1051 
	`dd_›í_fk_èbÀs
(
di˘_«mes_t
 &
fk_li°
, 
boﬁ
 
di˘_locked
, 
THD
 *
thd
);

1062 
dbîr_t
 
	`dd_èbÀ•a˚_ª«me
(
dd
::
Obje˘_id
 
dd_•a˚_id
, 
boﬁ
 
is_sy°em_cs
,

1063 c⁄° *
√w_•a˚_«me
, c⁄° *
√w_∑th
);

1066 #i‚de‡
UNIV_HOTBACKUP


1078 
boﬁ
 
	`dd_¸óã_èbÀ•a˚
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
dd_˛õ¡
, 
THD
 *
thd
,

1079 c⁄° *
dd_•a˚_«me
, 
•a˚_id_t
 
•a˚_id
,

1080 
uöt32_t
 
Êags
, c⁄° *
fûíame
, 
boﬁ
 
disˇrded
,

1081 
dd
::
Obje˘_id
 &
dd_•a˚_id
);

1094 
boﬁ
 
	`dd_¸óã_im∂icô_èbÀ•a˚
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
dd_˛õ¡
,

1095 
THD
 *
thd
, 
•a˚_id_t
 
•a˚_id
,

1096 c⁄° *
•a˚_«me
, c⁄° *
fûíame
,

1097 
boﬁ
 
disˇrded
, 
dd
::
Obje˘_id
 &
dd_•a˚_id
);

1105 
boﬁ
 
	`dd_gë_èbÀ•a˚_size_›ti⁄
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
dd_˛õ¡
,

1106 c⁄° 
dd
::
Obje˘_id
 
dd_•a˚_id
,

1107 
uöt64_t
 *
aut€xãnd_size
);

1115 
boﬁ
 
	`dd_dr›_èbÀ•a˚
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
dd_˛õ¡
, 
THD
 *
thd
,

1116 
dd
::
Obje˘_id
 
dd_•a˚_id
);

1121 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
))

1122 
önodb_£ssi⁄_t
 *&
	`thd_to_önodb_£ssi⁄
(
THD
 *
thd
);

1129 
UNIV_INLINE


1130 c⁄° 
dd
::
Cﬁumn
 *
	`dd_föd_cﬁumn
(c⁄° dd::
TabÀ
 *
dd_èbÀ
, c⁄° *
«me
);

1138 
UNIV_INLINE


1139 
dd
::
Cﬁumn
 *
	`dd_add_hiddí_cﬁumn
(dd::
TabÀ
 *
dd_èbÀ
, c⁄° *
«me
,

1140 
uöt
 
Àngth
, 
dd
::
íum_cﬁumn_ty≥s
 
ty≥
);

1145 
UNIV_INLINE


1146 
	`dd_add_hiddí_ñemít
(
dd
::
Index
 *
ödex
, c⁄° dd::
Cﬁumn
 *
cﬁumn
);

1153 
UNIV_INLINE


1154 
dd
::
Index
 *
	`dd_£t_hiddí_unique_ödex
(dd::Index *
ödex
, c⁄° *
«me
,

1155 c⁄° 
dd
::
Cﬁumn
 *
cﬁumn
);

1167 
UNIV_INLINE


1168 
boﬁ
 
	`¸óã_èbÀ_check_doc_id_cﬁ
(
THD
 *
thd
, c⁄° 
TABLE
 *
f‹m
,

1169 
ulöt
 *
doc_id_cﬁ
);

1174 
UNIV_INLINE


1175 c⁄° *
	`gë_row_f‹m©_«me
(
row_ty≥
 
row_f‹m©
);

1180 
UNIV_INLINE


1181 c⁄° *
	$dd_èbÀ•a˚_gë_fûíame
(c⁄° 
dd
::
TabÀ•a˚
 *
dd_•a˚
) {

1182 
	`ut_ad
(
dd_•a˚
->
	`id
(Ë!
dd
::
INVALID_OBJECT_ID
);

1183 
	`ut_ad
(
dd_•a˚
->
	`fûes
().
	`size
() == 1);

1184  ((*
dd_•a˚
->
	`fûes
().
	`begö
())->
	`fûíame
().
	`c_°r
());

1185 
	}
}

1193 
	gãm∂©e
 <
ty≥«me
 
	gTabÀ
>

1194 
boﬁ
 
dd_èbÀ_m©ch
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, c⁄° 
TabÀ
 *
dd_èbÀ
);

1201 
boﬁ
 
dd_¸óã_·s_ödex_èbÀ
(c⁄° 
di˘_èbÀ_t
 *
∑ª¡_èbÀ
,

1202 
di˘_èbÀ_t
 *
èbÀ
,

1203 c⁄° 
CHARSET_INFO
 *
ch¨£t
);

1210 
boﬁ
 
dd_¸óã_·s_comm⁄_èbÀ
(c⁄° 
di˘_èbÀ_t
 *
∑ª¡_èbÀ
,

1211 
di˘_èbÀ_t
 *
èbÀ
, 
boﬁ
 
is_c⁄fig
);

1217 
boﬁ
 
dd_dr›_·s_èbÀ
(c⁄° *
«me
, boﬁ 
fûe_≥r_èbÀ
);

1223 
boﬁ
 
dd_ª«me_·s_èbÀ
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, c⁄° *
ﬁd_«me
);

1237 *
dd_gë_ª„ªn˚d_èbÀ
(c⁄° *
«me
, c⁄° *
d©aba£_«me
,

1238 
ulöt
 
d©aba£_«me_Àn
, c⁄° *
èbÀ_«me
,

1239 
ulöt
 
èbÀ_«me_Àn
, 
di˘_èbÀ_t
 **
èbÀ
,

1240 
MDL_tickë
 **
mdl
, 
mem_hóp_t
 *
hóp
);

1245 
dd_èbÀ•a˚_£t_°©e
(
dd
::
TabÀ•a˚
 *
dd_•a˚
, 
dd_•a˚_°©es
 
°©e
);

1253 
boﬁ
 
dd_èbÀ•a˚_£t_id_™d_°©e
(c⁄° *
•a˚_«me
, 
•a˚_id_t
 
•a˚_id
,

1254 
dd_•a˚_°©es
 
°©e
);

1260 
dd_èbÀ•a˚_gë_°©e
(c⁄° 
dd
::
TabÀ•a˚
 *
dd_•a˚
,

1261 
dd
::
Såög_ty≥
 *
°©e
,

1262 
•a˚_id_t
 
•a˚_id
 = 
SPACE_UNKNOWN
);

1268 
dd_èbÀ•a˚_gë_°©e
(c⁄° 
dd
::
Pr›îtõs
 *
p
, dd::
Såög_ty≥
 *
°©e
,

1269 
•a˚_id_t
 
•a˚_id
 = 
SPACE_UNKNOWN
);

1276 
dd_•a˚_°©es
 
dd_èbÀ•a˚_gë_°©e_íum
(

1277 c⁄° 
dd
::
TabÀ•a˚
 *
dd_•a˚
, 
•a˚_id_t
 
•a˚_id
 = 
SPACE_UNKNOWN
);

1284 
dd_•a˚_°©es
 
dd_èbÀ•a˚_gë_°©e_íum
(

1285 c⁄° 
dd
::
Pr›îtõs
 *
p
, 
•a˚_id_t
 
•a˚_id
 = 
SPACE_UNKNOWN
);

1289 
boﬁ
 
dd_èbÀ•a˚_is_disˇrded
(c⁄° 
dd
::
TabÀ•a˚
 *
dd_•a˚
);

1298 
boﬁ
 
dd_im∂icô_Æãr_èbÀ•a˚
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
dd_˛õ¡
,

1299 
THD
 *
thd
, 
dd
::
Obje˘_id
 
dd_•a˚_id
,

1300 
HA_CREATE_INFO
 *
¸óã_öfo
);

1312 
boﬁ
 
dd_èbÀ•a˚_gë_mdl
(c⁄° *
•a˚_«me
,

1313 
MDL_tickë
 **
mdl_tickë
 = 
nuŒ±r
,

1314 
boﬁ
 
f‹eground
 = 
åue
);

1318 
dd_èbÀ•a˚_£t_disˇrd
(
dd
::
TabÀ•a˚
 *
dd_•a˚
, 
boﬁ
 
disˇrd
);

1325 
boﬁ
 
dd_èbÀ•a˚_gë_disˇrd
(c⁄° 
dd
::
TabÀ•a˚
 *
dd_•a˚
);

1329 
dd_ªÀa£_mdl
(
MDL_tickë
 *
mdl_tickë
);

1336 
boﬁ
 
dd_£t_èbÀ•a˚_com¥essi⁄
(
dd
::
ˇche
::
Di˘i⁄¨y_˛õ¡
 *
˛õ¡
,

1337 c⁄° *
Æg‹ôhm
,

1338 
dd
::
Obje˘_id
 
dd_•a˚_id
);

1349 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
))

1350 
boﬁ
 
dd_èbÀ•a˚_upd©e_ˇche
(
THD
 *
thd
);

1354 
boﬁ
 
dd_is_èbÀ_ö_í¸y±ed_èbÀ•a˚
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

1356 
	~"di˘0dd.ic
"

	@dict0dd.ic

33 
	~"sql_èbÀ.h
"

34 #i‚de‡
UNIV_HOTBACKUP


35 
	~"di˘0¸ó.h
"

36 
	~"di˘0¥iv.h
"

37 
	~"fõld.h
"

38 
	~"sql/èbÀ.h
"

39 
	~"sql_ba£.h
"

45 
ölöe
 
	gdd
::
Obje˘_id
 
	$dd_gë_•a˚_id
(c⁄° 
dd
::
P¨tôi⁄
 &
∑πôi⁄
) {

46 
	`ut_ad
(
	`dd_∑π_is_°‹ed
(&
∑πôi⁄
));

47 
	`ut_ad
(
	`dd_èbÀ_is_∑πôi⁄ed
(
∑πôi⁄
.
	`èbÀ
()));

48 
	`ut_ad
((
∑πôi⁄
.
	`èbÀ
().
	`sub∑πôi⁄_ty≥
(Ë=
dd
::
TabÀ
::
ST_NONE
) ==

49 (
∑πôi⁄
.
	`∑ª¡
(Ë=
nuŒ±r
));

51 
dd
::
Obje˘_id
 
id
 = 
∑πôi⁄
.
	`èbÀ•a˚_id
();

52 i‡(
id
 =
dd
::
INVALID_OBJECT_ID
) {

53 i‡(c⁄° 
dd
::
P¨tôi⁄
 *
∑ª¡
 = 
∑πôi⁄
.
	`∑ª¡
()) {

57 
id
 = 
∑ª¡
->
	`èbÀ•a˚_id
();

60 i‡(
id
 =
dd
::
INVALID_OBJECT_ID
) {

63 
id
 = 
∑πôi⁄
.
	`èbÀ
().
	`èbÀ•a˚_id
();

65  (
id
);

66 
	}
}

73 
ölöe
 c⁄° 
	gdd
::
Cﬁumn
 *
	$dd_föd_cﬁumn
(c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
,

74 c⁄° *
«me
) {

75 c⁄° 
dd
::
Cﬁumn
 *
c
 : 
dd_èbÀ
->
	`cﬁumns
()) {

76 i‡(!
	`my_°rˇ£cmp
(
sy°em_ch¨£t_öfo
, 
c
->
	`«me
().
	`c_°r
(), 
«me
)) {

77  (
c
);

80  (
nuŒ±r
);

81 
	}
}

89 
ölöe
 
	gdd
::
Cﬁumn
 *
	$dd_add_hiddí_cﬁumn
(
dd
::
TabÀ
 *
dd_èbÀ
, c⁄° *
«me
,

90 
uöt
 
Àngth
,

91 
dd
::
íum_cﬁumn_ty≥s
 
ty≥
) {

92 i‡(c⁄° 
dd
::
Cﬁumn
 *
c
 = 
	`dd_föd_cﬁumn
(
dd_èbÀ
, 
«me
)) {

93 
	`my_îr‹
(
ER_WRONG_COLUMN_NAME
, 
	`MYF
(0), 
c
->
	`«me
().
	`c_°r
());

94  (
nuŒ±r
);

97 
dd
::
Cﬁumn
 *
cﬁ
 = 
dd_èbÀ
->
	`add_cﬁumn
();

98 
cﬁ
->
	`£t_hiddí
(
dd
::
Cﬁumn
::
íum_hiddí_ty≥
::
HT_HIDDEN_SE
);

99 
cﬁ
->
	`£t_«me
(
«me
);

100 
cﬁ
->
	`£t_ty≥
(
ty≥
);

101 
cﬁ
->
	`£t_nuŒabÀ
(
Ál£
);

102 
cﬁ
->
	`£t_ch¨_Àngth
(
Àngth
);

103 
cﬁ
->
	`£t_cﬁœti⁄_id
(
my_ch¨£t_bö
.
numbî
);

105  (
cﬁ
);

106 
	}
}

111 
ölöe
 
	$dd_add_hiddí_ñemít
(
dd
::
Index
 *
ödex
, c⁄° dd::
Cﬁumn
 *
cﬁumn
) {

112 
dd
::
Index_ñemít
 *
e
 = 
ödex
->
	`add_ñemít
(
c⁄°_ˇ°
<dd::
Cﬁumn
 *>(
cﬁumn
));

113 
e
->
	`£t_hiddí
(
åue
);

114 
e
->
	`£t_‹dî
(
dd
::
Index_ñemít
::
ORDER_ASC
);

115 
	}
}

122 
ölöe
 
	gdd
::
Index
 *
	$dd_£t_hiddí_unique_ödex
(
dd
::
Index
 *
ödex
, c⁄° *
«me
,

123 c⁄° 
dd
::
Cﬁumn
 *
cﬁumn
) {

124 
ödex
->
	`£t_«me
(
«me
);

125 
ödex
->
	`£t_hiddí
(
åue
);

126 
ödex
->
	`£t_Æg‹ôhm
(
dd
::
Index
::
IA_BTREE
);

127 
ödex
->
	`£t_ty≥
(
dd
::
Index
::
IT_UNIQUE
);

128 
ödex
->
	`£t_ígöe
(
önoba£_ht⁄_«me
);

129 
	`dd_add_hiddí_ñemít
(
ödex
, 
cﬁumn
);

130  (
ödex
);

131 
	}
}

137 
ölöe
 
di˘_èbÀ_t
 *
	$dd_èbÀ_›í_⁄_id_ö_mem
(
èbÀ_id_t
 
èbÀ_id
,

138 
boﬁ
 
di˘_locked
) {

139 
di˘_èbÀ_t
 *
èbÀ
;

141 i‡(!
di˘_locked
) {

142 
	`muãx_íãr
(&
di˘_sys
->
muãx
);

145 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

148 
ulöt
 
fﬁd
 = 
	`ut_fﬁd_uŒ
(
èbÀ_id
);

150 
	`HASH_SEARCH
(
id_hash
, 
di˘_sys
->
èbÀ_id_hash
, 
fﬁd
, 
di˘_èbÀ_t
 *, 
èbÀ
,

151 
	`ut_ad
(
èbÀ
->
ˇched
),ÅabÀ->
id
 =
èbÀ_id
);

153 
	`ut_ad
(
èbÀ
 =
nuŒ±r
 ||ÅabÀ->
ˇched
);

155 i‡(
èbÀ
 !
nuŒ±r
) {

156 i‡(
èbÀ
->
ˇn_be_evi˘ed
) {

157 
	`di˘_move_to_mru
(
èbÀ
);

160 
èbÀ
->
	`acquúe
();

163 i‡(!
di˘_locked
) {

164 
	`muãx_exô
(&
di˘_sys
->
muãx
);

167  (
èbÀ
);

168 
	}
}

174 
ölöe
 
di˘_èbÀ_t
 *
	$dd_èbÀ_›í_⁄_«me_ö_mem
(c⁄° *
«me
,

175 
iboﬁ
 
di˘_locked
) {

176 
di˘_èbÀ_t
 *
èbÀ
 = 
nuŒ±r
;

178 i‡(!
di˘_locked
) {

179 
	`muãx_íãr
(&
di˘_sys
->
muãx
);

182 
èbÀ
 = 
	`di˘_èbÀ_check_if_ö_ˇche_low
(
«me
);

184 
	`ut_ad
(!
èbÀ
 ||ÅabÀ->
ˇched
);

186 i‡(
èbÀ
 !
nuŒ±r
) {

187 i‡(
èbÀ
->
ˇn_be_evi˘ed
) {

188 
	`di˘_move_to_mru
(
èbÀ
);

191 
èbÀ
->
	`acquúe
();

194 i‡(!
di˘_locked
) {

195 
	`muãx_exô
(&
di˘_sys
->
muãx
);

198  (
èbÀ
);

199 
	}
}

211 
ölöe
 
boﬁ
 
	$¸óã_èbÀ_check_doc_id_cﬁ
(
THD
 *
thd
, c⁄° 
TABLE
 *
f‹m
,

212 
ulöt
 *
doc_id_cﬁ
) {

213 
ulöt
 
i
 = 0; i < 
f‹m
->
s
->
fõlds
; i++) {

214 c⁄° 
Fõld
 *
fõld
;

215 
ulöt
 
cﬁ_ty≥
;

216 
ulöt
 
cﬁ_Àn
;

217 
ulöt
 
unsig√d_ty≥
;

219 
fõld
 = 
f‹m
->fõld[
i
];

220 i‡(!
fõld
->
°‹ed_ö_db
) ;

222 
cﬁ_ty≥
 = 
	`gë_önoba£_ty≥_‰om_mysql_ty≥
(&
unsig√d_ty≥
, 
fõld
);

224 
cﬁ_Àn
 = 
fõld
->
	`∑ck_Àngth
();

226 i‡(
	`önoba£_°rˇ£cmp
(
fõld
->
fõld_«me
, 
FTS_DOC_ID_COL_NAME
) == 0) {

229 i‡(
cﬁ_ty≥
 =
DATA_INT
 && !
fõld
->
	`is_nuŒabÀ
() &&

230 
cﬁ_Àn
 =(
doc_id_t
) &&

231 (
	`°rcmp
(
fõld
->
fõld_«me
, 
FTS_DOC_ID_COL_NAME
) == 0)) {

232 *
doc_id_cﬁ
 = 
i
;

234 
	`push_w¨nög_¥ötf
(
thd
, 
Sql_c⁄dôi⁄
::
SL_WARNING
,

235 
ER_ILLEGAL_HA_CREATE_OPTION
,

239 
	`my_îr‹
(
ER_WRONG_COLUMN_NAME
, 
	`MYF
(0), 
fõld
->
fõld_«me
);

240 *
doc_id_cﬁ
 = 
ULINT_UNDEFINED
;

243  (
åue
);

247  (
Ál£
);

248 
	}
}

253 
ölöe
 c⁄° *
	$gë_row_f‹m©_«me
(
row_ty≥
 
row_f‹m©
) {

254 
row_f‹m©
) {

255 
ROW_TYPE_COMPACT
:

257 
ROW_TYPE_COMPRESSED
:

259 
ROW_TYPE_DYNAMIC
:

261 
ROW_TYPE_REDUNDANT
:

263 
ROW_TYPE_DEFAULT
:

265 
ROW_TYPE_FIXED
:

267 
ROW_TYPE_PAGED
:

269 
ROW_TYPE_NOT_USED
:

273 
	}
}

282 
UNIV_INLINE
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
boﬁ
 
	$dd_mdl_acquúe
(

283 
THD
 *
thd
, 
MDL_tickë
 **
mdl
, c⁄° *
db
, c⁄° *
èbÀ
) {

284 
boﬁ
 
ªt
 = 
Ál£
;

285 
èbÀ_«me
[
MAX_TABLE_NAME_LEN
 + 1];

286 c⁄° *
èbÀ_p
 = 
èbÀ
;

288 
db_«me
[
MAX_DATABASE_NAME_LEN
 + 1];

289 c⁄° *
db_p
 = 
db
;

291 i‡(
	`önoba£_gë_lowî_ˇ£_èbÀ_«mes
() == 2) {

292 
ulöt
 
Àn
 = 
	`°æí
(
èbÀ
);

293 
	`ut_mem˝y
(
èbÀ_«me
, 
èbÀ
, 
Àn
);

294 
èbÀ_«me
[
Àn
] = '\0';

295 
	`önoba£_ˇ£dn_°r
(
èbÀ_«me
);

296 
èbÀ_p
 = 
èbÀ_«me
;

298 
Àn
 = 
	`°æí
(
db
);

299 
	`ut_mem˝y
(
db_«me
, 
db
, 
Àn
);

300 
db_«me
[
Àn
] = '\0';

301 
	`önoba£_ˇ£dn_°r
(
db_«me
);

302 
db_p
 = 
db_«me
;

304 #i‚de‡
_WIN32


305 i‡(
	`önoba£_gë_lowî_ˇ£_èbÀ_«mes
() == 1) {

306 
ulöt
 
Àn
 = 
	`°æí
(
èbÀ
);

307 
	`ut_mem˝y
(
èbÀ_«me
, 
èbÀ
, 
Àn
);

308 
èbÀ_«me
[
Àn
] = '\0';

309 
	`önoba£_ˇ£dn_°r
(
èbÀ_«me
);

310 
èbÀ_p
 = 
èbÀ_«me
;

312 
Àn
 = 
	`°æí
(
db
);

313 
	`ut_mem˝y
(
db_«me
, 
db
, 
Àn
);

314 
db_«me
[
Àn
] = '\0';

315 
	`önoba£_ˇ£dn_°r
(
db_«me
);

316 
db_p
 = 
db_«me
;

321 
ªt
 = 
dd
::
	`acquúe_sh¨ed_èbÀ_mdl
(
thd
, 
db_p
, 
èbÀ_p
, 
Ál£
, 
mdl
);

323  (
ªt
);

324 
	}
}

329 
ölöe
 
uöt64_t
 
	$dd_gë_vîsi⁄
(c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
) {

330 
uöt64_t
 
vîsi⁄
 = 0;

331 c⁄° 
dd
::
Pr›îtõs
 &
p
 = 
dd_èbÀ
->
	`£_¥iv©e_d©a
();

333 i‡(!
p
.
	`exi°s
(
dd_èbÀ_key_°rögs
[
DD_TABLE_VERSION
]) ||

334 
p
.
	`gë
(
dd_èbÀ_key_°rögs
[
DD_TABLE_VERSION
],

335 
ªöãΩªt_ˇ°
<
uöt64
 *>(&
vîsi⁄
))) {

339  (
vîsi⁄
);

340 
	}
}

	@dict0dict.h

34 #i‚de‡
di˘0di˘_h


35 
	#di˘0di˘_h


	)

37 
	~<£t
>

39 
	~<deque
>

40 
	~"d©a0d©a.h
"

41 
	~"d©a0ty≥.h
"

42 
	~"di˘/di˘.h
"

43 
	~"di˘0mem.h
"

44 
	~"di˘0ty≥s.h
"

45 
	~"f•0f•.h
"

46 
	~"f•0sys•a˚.h
"

47 
	~"hash0hash.h
"

48 
	~"mem0mem.h
"

49 
	~"ªm0ty≥s.h
"

50 
	~"row0ty≥s.h
"

51 
	~"sql/dd/obje˘_id.h
"

52 
	~"sync0rw.h
"

53 
	~"åx0ty≥s.h
"

54 
	~"univ.i
"

55 
	~"ut0byã.h
"

56 
	~"ut0mem.h
"

57 
	~"ut0√w.h
"

58 
	~"ut0∫d.h
"

60 
	#DICT_HEAP_SIZE
 \

61 100

	)

65 c⁄° 
uöt32_t
 
	gSDI_VERSION
 = 1;

68 c⁄° 
•a˚_id_t
 
	gSYSTEM_TABLE_SPACE
 = 
TRX_SYS_SPACE
;

72 
ulöt
 
	$di˘_gë_db_«me_Àn
(c⁄° *
«me
)

74 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

75 #i‚de‡
UNIV_HOTBACKUP


77 
	`di˘_f‹eign_‰ì
(

78 
di˘_f‹eign_t
 *
f‹eign
);

83 
ulöt
 
	`di˘_èbÀ_gë_highe°_f‹eign_id
(

84 
di˘_èbÀ_t
 *
èbÀ
);

89 c⁄° *
	$di˘_ªmove_db_«me
(c⁄° *
«me
)

91 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

94 
	edi˘_èbÀ_›_t
 {

96 
DICT_TABLE_OP_NORMAL
 = 0,

98 
DICT_TABLE_OP_DROP_ORPHAN
,

101 
DICT_TABLE_OP_LOAD_TABLESPACE


109 
	`di˘_èbÀ_˛o£
(
di˘_èbÀ_t
 *
èbÀ
, 
iboﬁ
 
di˘_locked
, iboﬁ 
åy_dr›
);

116 
	`di˘_èbÀ_˛o£_™d_dr›
(

117 
åx_t
 *
åx
,

118 
di˘_èbÀ_t
 *
èbÀ
);

120 
	`di˘_öô
();

123 
	`di˘_˛o£
();

126 
	`di˘_≥rsi°_öô
();

129 
	`di˘_≥rsi°_˛o£
();

131 #i‚de‡
UNIV_HOTBACKUP


135 
	`di˘_èbÀ_≥rsi°_to_dd_èbÀ_buf„r
(
di˘_èbÀ_t
 *
èbÀ
);

141 
	`di˘_èbÀ_ªad_dy«mic_mëad©a
(c⁄° 
byã
 *
buf„r
, 
ulöt
 
size
,

142 
Pîsi°ítTabÀMëad©a
 *
mëad©a
);

148 
UNIV_INLINE


149 
ulöt
 
	$di˘_max_fõld_Àn_°‹e_undo
(

150 
di˘_èbÀ_t
 *
èbÀ
,

151 c⁄° 
di˘_cﬁ_t
 *
cﬁ
)

153 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

160 
UNIV_INLINE


161 
ulöt
 
	`di˘_max_v_fõld_Àn_°‹e_undo
(
di˘_èbÀ_t
 *
èbÀ
, ulöà
cﬁ_no
);

166 
UNIV_INLINE


167 
ulöt
 
	$di˘_cﬁ_gë_no
(c⁄° 
di˘_cﬁ_t
 *
cﬁ
)

168 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

170 
UNIV_INLINE


171 
ulöt
 
	$di˘_cﬁ_gë_˛u°_pos
(

172 c⁄° 
di˘_cﬁ_t
 *
cﬁ
,

173 c⁄° 
di˘_ödex_t
 *
˛u°_ödex
)

174 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

176 #i‚de‡
UNIV_HOTBACKUP


181 
UNIV_INLINE


182 
ulöt
 
	$di˘_cﬁ_gë_ödex_pos
(c⁄° 
di˘_cﬁ_t
 *
cﬁ
, c⁄° 
di˘_ödex_t
 *
ödex
)

183 
	`MY_ATTRIBUTE
((
n⁄nuŒ
, 
w¨n_unu£d_ªsu…
));

188 
iboﬁ
 
	$di˘_cﬁ_«me_is_ª£rved
(c⁄° *
«me
)

189 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

191 
	`di˘_èbÀ_autoöc_lock
(
di˘_èbÀ_t
 *
èbÀ
);

196 
	`di˘_èbÀ_autoöc_öôülize
(
di˘_èbÀ_t
 *
èbÀ
, 
ib_uöt64_t
 
vÆue
);

201 
ib_uöt64_t
 
	$di˘_èbÀ_autoöc_ªad
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

202 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

208 
	`di˘_èbÀ_autoöc_upd©e_if_gª©î
(
di˘_èbÀ_t
 *
èbÀ
,

209 
ib_uöt64_t
 
vÆue
);

212 
	`di˘_èbÀ_autoöc_u∆ock
(
di˘_èbÀ_t
 *
èbÀ
);

218 
UNIV_INLINE


219 
	`di˘_èbÀ_autoöc_≥rsi°ed_upd©e
(
di˘_èbÀ_t
 *
èbÀ
,

220 
ib_uöt64_t
 
autoöc
);

225 
UNIV_INLINE


226 
	`di˘_èbÀ_autoöc_£t_cﬁ_pos
(
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
pos
);

233 
	`di˘_èbÀ_autoöc_log
(
di˘_èbÀ_t
 *
èbÀ
, 
uöt64_t
 
vÆue
, 
må_t
 *
må
);

238 
UNIV_INLINE


239 
boﬁ
 
	`di˘_èbÀ_has_autoöc_cﬁ
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

246 
	`di˘_èbÀ_add_sy°em_cﬁumns
(
di˘_èbÀ_t
 *
èbÀ
, 
mem_hóp_t
 *
hóp
);

248 #i‚de‡
UNIV_HOTBACKUP


251 
	$di˘_èbÀ_£t_big_rows
(
di˘_èbÀ_t
 *
èbÀ
Ë
	`MY_ATTRIBUTE
((
n⁄nuŒ
));

258 
	`di˘_èbÀ_add_to_ˇche
(
di˘_èbÀ_t
 *
èbÀ
, 
iboﬁ
 
ˇn_be_evi˘ed
,

259 
mem_hóp_t
 *
hóp
);

262 
	`di˘_èbÀ_ªmove_‰om_ˇche
(
di˘_èbÀ_t
 *
èbÀ
);

267 
	`di˘_∑πôi⁄ed_èbÀ_ªmove_‰om_ˇche
(c⁄° *
«me
);

269 #ifde‡
UNIV_DEBUG


274 
	`di˘_èbÀ_ªmove_‰om_ˇche_debug
(
di˘_èbÀ_t
 *
èbÀ
, 
boﬁ
 
Ãu_evi˘
);

279 
dbîr_t
 
	$di˘_èbÀ_ª«me_ö_ˇche
(
di˘_èbÀ_t
 *
èbÀ
,

280 c⁄° *
√w_«me
,

281 
iboﬁ
 
ª«me_Æso_f‹eigns
)

285 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

291 
	`di˘_ödex_ªmove_‰om_ˇche
(
di˘_èbÀ_t
 *
èbÀ
, 
di˘_ödex_t
 *
ödex
);

295 
	`di˘_èbÀ_ch™ge_id_ö_ˇche
(

296 
di˘_èbÀ_t
 *
èbÀ
,

297 
èbÀ_id_t
 
√w_id
);

299 
	`di˘_f‹eign_ªmove_‰om_ˇche
(

300 
di˘_f‹eign_t
 *
f‹eign
);

306 
dbîr_t
 
	$di˘_f‹eign_add_to_ˇche
(
di˘_f‹eign_t
 *
f‹eign
,

308 c⁄° **
cﬁ_«mes
,

311 
boﬁ
 
check_ch¨£ts
,

314 
boﬁ
 
ˇn_‰ì_fk
,

316 
di˘_îr_ign‹e_t
 
ign‹e_îr
)

318 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

321 
iboﬁ
 
	$di˘_èbÀ_is_ª„ªn˚d_by_f‹eign_key
(

322 c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

323 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

327 
boﬁ
 
	$di˘_f‹eign_ª∂a˚_ödex
(

328 
di˘_èbÀ_t
 *
èbÀ
,

329 c⁄° **
cﬁ_«mes
,

332 c⁄° 
di˘_ödex_t
 *
ödex
)

333 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

345 
di˘_èbÀ_t
 *
	$di˘_èbÀ_›í_⁄_«me
(c⁄° *
èbÀ_«me
, 
iboﬁ
 
di˘_locked
,

346 
iboﬁ
 
åy_dr›
,

347 
di˘_îr_ign‹e_t
 
ign‹e_îr
)

348 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

354 
di˘_ödex_t
 *
	$di˘_f‹eign_föd_ödex
(

355 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

356 c⁄° **
cﬁ_«mes
,

359 c⁄° **
cﬁumns
,

360 
ulöt
 
n_cﬁs
,

361 c⁄° 
di˘_ödex_t
 *
ty≥s_idx
,

365 
boﬁ
 
check_ch¨£ts
,

369 
ulöt
 
check_nuŒ
)

373 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

379 c⁄° *
	`di˘_èbÀ_gë_v_cﬁ_«me
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
cﬁ_ƒ
);

387 
ulöt
 
	`di˘_èbÀ_has_cﬁumn
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, c⁄° *
cﬁ_«me
,

388 
ulöt
 
cﬁ_ƒ
 = 0);

396 
	`di˘_¥öt_öfo_⁄_f‹eign_key_ö_¸óã_f‹m©
(
FILE
 *
fûe
, 
åx_t
 *
åx
,

397 
di˘_f‹eign_t
 *
f‹eign
,

398 
iboﬁ
 
add_√wlöe
);

404 
boﬁ
 
	$di˘_f‹eign_quÆify_ödex
(

405 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

406 c⁄° **
cﬁ_«mes
,

409 c⁄° **
cﬁumns
,

410 
ulöt
 
n_cﬁs
,

411 c⁄° 
di˘_ödex_t
 *
ödex
,

412 c⁄° 
di˘_ödex_t
 *
ty≥s_idx
,

416 
boﬁ
 
check_ch¨£ts
,

420 
ulöt
 
check_nuŒ
)

424 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

427 
	#di˘_èbÀ_skù_c‹ru±_ödex
(
ödex
) \

428 
ödex
 && index->
	`is_c‹ru±ed
()) { \

429 
ödex
 = index->
	`√xt
(); \

430 
	}

	)
}

433 
	#di˘_èbÀ_√xt_unc‹ru±ed_ödex
(
ödex
) \

435 
ödex
 = index->
	`√xt
(); \

436 
	`di˘_èbÀ_skù_c‹ru±_ödex
(
ödex
); \

437 } 0)

	)

443 
UNIV_INLINE


444 
boﬁ
 
di˘_ödex_is_auto_gí_˛u°
(c⁄° 
di˘_ödex_t
 *
ödex
);

448 
UNIV_INLINE


449 
ulöt
 
	$di˘_ödex_is_unique
(c⁄° 
di˘_ödex_t
 *
ödex
)

450 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

453 
UNIV_INLINE


454 
ulöt
 
	$di˘_ödex_is_•©ül
(c⁄° 
di˘_ödex_t
 *
ödex
)

455 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

459 
UNIV_INLINE


460 
ulöt
 
	`di˘_ödex_has_vútuÆ
(c⁄° 
di˘_ödex_t
 *
ödex
);

463 
UNIV_INLINE


464 
ulöt
 
	$di˘_ödex_is_ibuf
(c⁄° 
di˘_ödex_t
 *
ödex
)

465 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

471 
UNIV_INLINE


472 
boﬁ
 
	$di˘_ödex_has_desc
(c⁄° 
di˘_ödex_t
 *
ödex
)

473 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

476 
UNIV_INLINE


477 
ulöt
 
	$di˘_ödex_is_£c_‹_ibuf
(c⁄° 
di˘_ödex_t
 *
ödex
)

478 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

484 
ulöt
 
	`di˘_èbÀ_gë_Æl_·s_ödexes
(
di˘_èbÀ_t
 *
èbÀ
, 
ib_ve˘‹_t
 *
ödexes
);

486 
UNIV_INLINE


487 
ulöt
 
	`di˘_èbÀ_gë_n_tŸ_u_cﬁs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

492 
UNIV_INLINE


493 
ulöt
 
	`di˘_èbÀ_gë_n_v_cﬁs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

498 
UNIV_INLINE


499 
boﬁ
 
	`di˘_èbÀ_has_ödexed_v_cﬁs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

503 
UNIV_INLINE


504 
ib_uöt64_t
 
	$di˘_èbÀ_gë_n_rows
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

505 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

509 
UNIV_INLINE


510 
	`di˘_èbÀ_n_rows_öc
(
di˘_èbÀ_t
 *
èbÀ
);

514 
UNIV_INLINE


515 
	`di˘_èbÀ_n_rows_dec
(
di˘_èbÀ_t
 *
èbÀ
);

521 
di˘_v_cﬁ_t
 *
	`di˘_èbÀ_gë_¡h_v_cﬁ_mysql
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

522 
ulöt
 
cﬁ_ƒ
);

524 #ifde‡
UNIV_DEBUG


529 
UNIV_INLINE


530 
di˘_v_cﬁ_t
 *
	`di˘_èbÀ_gë_¡h_v_cﬁ
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
pos
);

534 
	#di˘_èbÀ_gë_¡h_v_cﬁ
(
èbÀ
, 
pos
Ë(—abÀ)->
v_cﬁs
 + (pos))

	)

538 
UNIV_INLINE


539 
ulöt
 
	$di˘_èbÀ_gë_sys_cﬁ_no
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

540 
ulöt
 
sys
)

541 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

544 
UNIV_INLINE


545 
iboﬁ
 
	$di˘_èbÀ_is_comp
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

546 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

551 
UNIV_INLINE


552 
boﬁ
 
	$di˘_èbÀ_has_©omic_blobs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

553 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

555 #i‚de‡
UNIV_HOTBACKUP


562 
UNIV_INLINE


563 
	`di˘_tf_£t
(
uöt32_t
 *
Êags
, 
ªc_f‹m©_t
 
f‹m©
, uöt32_à
zù_ssize
,

564 
boﬁ
 
u£_d©a_dú
, boﬁ 
sh¨ed_•a˚
);

572 
UNIV_INLINE


573 
uöt32_t
 
	`di˘_tf_öô
(
boﬁ
 
com∑˘
, 
ulöt
 
zù_ssize
, boﬁ 
©omic_blobs
,

574 
boﬁ
 
d©a_dú
, boﬁ 
sh¨ed_•a˚
);

588 
uöt32_t
 
	`di˘_tf_to_f•_Êags
(uöt32_à
èbÀ_Êags
);

594 
UNIV_INLINE


595 c⁄° 
∑ge_size_t
 
	`di˘_tf_gë_∑ge_size
(
uöt32_t
 
Êags
);

603 
∑ge_no_t
 
	`di˘_èbÀ_exã¡_size
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

608 
UNIV_INLINE


609 c⁄° 
∑ge_size_t
 
	$di˘_èbÀ_∑ge_size
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

610 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

612 #i‚de‡
UNIV_HOTBACKUP


616 
UNIV_INLINE


617 
	`di˘_èbÀ_x_lock_ödexes
(
di˘_èbÀ_t
 *
èbÀ
);

619 
UNIV_INLINE


620 
	`di˘_èbÀ_x_u∆ock_ödexes
(
di˘_èbÀ_t
 *
èbÀ
);

625 
iboﬁ
 
	$di˘_èbÀ_cﬁ_ö_˛u°îed_key
(

626 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

627 
ulöt
 
n
)

628 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

631 
UNIV_INLINE


632 
iboﬁ
 
	$di˘_èbÀ_has_·s_ödex
(
di˘_èbÀ_t
 *
èbÀ
)

633 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

639 
	`di˘_èbÀ_c›y_v_ty≥s
(
dtu∂e_t
 *
tu∂e
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

643 
	`di˘_èbÀ_c›y_ty≥s
(
dtu∂e_t
 *
tu∂e
,

644 c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

645 #i‚de‡
UNIV_HOTBACKUP


650 
	`di˘_èbÀ_waô_f‹_bg_thªads_to_exô
(

651 
di˘_èbÀ_t
 *
èbÀ
,

652 
ulöt
 
dñay
);

657 c⁄° 
di˘_ödex_t
 *
	$di˘_ödex_föd
(c⁄° 
ödex_id_t
 &
id
)

658 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

663 
ulöt
 
	`di˘_make_room_ö_ˇche
(

664 
ulöt
 
max_èbÀs
,

665 
ulöt
 
p˘_check
);

667 
	#BIG_ROW_SIZE
 1024

	)

678 
dbîr_t
 
	$di˘_ödex_add_to_ˇche
(
di˘_èbÀ_t
 *
èbÀ
, 
di˘_ödex_t
 *
ödex
,

679 
∑ge_no_t
 
∑ge_no
, 
iboﬁ
 
°ri˘
)

680 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

684 
	`di˘_ödex_ªmove_‰om_v_cﬁ_li°
(
di˘_ödex_t
 *
ödex
);

698 
dbîr_t
 
	$di˘_ödex_add_to_ˇche_w_vcﬁ
(
di˘_èbÀ_t
 *
èbÀ
, 
di˘_ödex_t
 *
ödex
,

699 c⁄° 
di˘_add_v_cﬁ_t
 *
add_v
,

700 
∑ge_no_t
 
∑ge_no
, 
iboﬁ
 
°ri˘
)

701 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

706 
UNIV_INLINE


707 
ulöt
 
	$di˘_ödex_gë_n_fõlds
(

708 c⁄° 
di˘_ödex_t
 *
ödex
)

711 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

717 
UNIV_INLINE


718 
ulöt
 
	$di˘_ödex_gë_n_unique
(

719 c⁄° 
di˘_ödex_t
 *
ödex
)

721 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

726 
UNIV_INLINE


727 
ulöt
 
	$di˘_ödex_gë_n_unique_ö_åì
(

728 c⁄° 
di˘_ödex_t
 *
ödex
)

730 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

734 
	#DICT_INDEX_SPATIAL_NODEPTR_SIZE
 1

	)

742 
UNIV_INLINE


743 
uöt16_t
 
	$di˘_ödex_gë_n_unique_ö_åì_n⁄Àaf
(c⁄° 
di˘_ödex_t
 *
ödex
)

744 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

750 
UNIV_INLINE


751 
ulöt
 
	$di˘_ödex_gë_n_‹dîög_deföed_by_u£r
(

752 c⁄° 
di˘_ödex_t
 *
ödex
)

754 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

757 
iboﬁ
 
	$di˘_ödex_c⁄èös_cﬁ_‹_¥efix
(

758 c⁄° 
di˘_ödex_t
 *
ödex
,

759 
ulöt
 
n
,

760 
boﬁ
 
is_vútuÆ
)

762 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

769 
ulöt
 
	$di˘_ödex_gë_¡h_fõld_pos
(

770 c⁄° 
di˘_ödex_t
 *
ödex
,

771 c⁄° 
di˘_ödex_t
 *
ödex2
,

772 
ulöt
 
n
)

773 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

776 
ulöt
 
	$di˘_èbÀ_gë_¡h_cﬁ_pos
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

777 
ulöt
 
n
)

778 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

785 
ulöt
 
	`di˘_èbÀ_mysql_pos_to_önodb
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, ulöà
n
);

791 
	`di˘_ödex_c›y_ty≥s
(
dtu∂e_t
 *
tu∂e
, c⁄° 
di˘_ödex_t
 *
ödex
,

792 
ulöt
 
n_fõlds
);

794 #ifde‡
UNIV_DEBUG


798 
iboﬁ
 
	$di˘_ödex_check_£¨ch_tu∂e
(

799 c⁄° 
di˘_ödex_t
 *
ödex
,

800 c⁄° 
dtu∂e_t
 *
tu∂e
)

801 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

803 
	echeck_«me
 {

805 
CHECK_ALL_COMPLETE
,

807 
CHECK_ABORTED_OK
,

809 
CHECK_PARTIAL_OK


815 
	`di˘_èbÀ_check_f‹_dup_ödexes
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

816 
check_«me
 
check
);

822 
ölöe
 
boﬁ
 
	`di˘_èbÀ_is_com¥es£d_ãmp‹¨y
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

826 
dtu∂e_t
 *
	$di˘_ödex_buûd_node_±r
(c⁄° 
di˘_ödex_t
 *
ödex
,

827 c⁄° 
ªc_t
 *
ªc
,

829 
∑ge_no_t
 
∑ge_no
,

831 
mem_hóp_t
 *
hóp
,

833 
ulöt
 
Àvñ
)

835 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

839 
ªc_t
 *
	$di˘_ödex_c›y_ªc_‹dî_¥efix
(

840 c⁄° 
di˘_ödex_t
 *
ödex
,

841 c⁄° 
ªc_t
 *
ªc
,

843 
ulöt
 *
n_fõlds
,

844 
byã
 **
buf
,

846 
size_t
 *
buf_size
)

847 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

850 
dtu∂e_t
 *
	$di˘_ödex_buûd_d©a_tu∂e
(

851 
di˘_ödex_t
 *
ödex
,

852 
ªc_t
 *
ªc
,

853 
ulöt
 
n_fõlds
,

854 
mem_hóp_t
 *
hóp
)

855 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

858 
UNIV_INLINE


859 
•a˚_id_t
 
	$di˘_ödex_gë_•a˚
(c⁄° 
di˘_ödex_t
 *
ödex
)

860 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

865 
UNIV_INLINE


866 
	`di˘_ödex_£t_•a˚
(
di˘_ödex_t
 *
ödex
, 
•a˚_id_t
 
•a˚
);

870 
UNIV_INLINE


871 
∑ge_no_t
 
	$di˘_ödex_gë_∑ge
(c⁄° 
di˘_ödex_t
 *
åì
)

872 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

875 
UNIV_INLINE


876 
rw_lock_t
 *
	$di˘_ödex_gë_lock
(
di˘_ödex_t
 *
ödex
)

877 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

882 
UNIV_INLINE


883 
ulöt
 
	`di˘_ödex_gë_•a˚_ª£rve
();

888 
UNIV_INLINE


889 
⁄löe_ödex_°©us
 
	$di˘_ödex_gë_⁄löe_°©us
(

890 c⁄° 
di˘_ödex_t
 *
ödex
)

891 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

896 
UNIV_INLINE


897 
	`di˘_ödex_£t_⁄löe_°©us
(
di˘_ödex_t
 *
ödex
,

898 
⁄löe_ödex_°©us
 
°©us
);

907 
UNIV_INLINE


908 
boﬁ
 
	$di˘_ödex_is_⁄löe_ddl
(c⁄° 
di˘_ödex_t
 *
ödex
)

909 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

911 
ulöt
 
	$di˘_ödex_ˇlc_mö_ªc_Àn
(c⁄° 
di˘_ödex_t
 *
ödex
)

912 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

914 
	`di˘_muãx_íãr_f‹_mysql
();

916 
	`di˘_muãx_exô_f‹_mysql
();

918 #i‚de‡
UNIV_HOTBACKUP


925 
	`di˘_èbÀ_°©s_œtch_¸óã
(
di˘_èbÀ_t
 *
èbÀ
, 
boﬁ
 
íabÀd
);

931 
	`di˘_èbÀ_°©s_œtch_de°roy
(
di˘_èbÀ_t
 *
èbÀ
);

936 
	`di˘_èbÀ_°©s_lock
(
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
œtch_mode
);

941 
	`di˘_èbÀ_°©s_u∆ock
(
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
œtch_mode
);

945 
iboﬁ
 
	$di˘_èbÀs_have_ßme_db
(c⁄° *
«me1
,

947 c⁄° *
«me2
)

949 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

956 
di˘_ödex_t
 *
	$di˘_èbÀ_gë_ödex_⁄_«me
(
di˘_èbÀ_t
 *
èbÀ
,

957 c⁄° *
«me
,

958 
boﬁ
 
commôãd
 = 
åue
)

959 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

966 
ölöe
 c⁄° 
di˘_ödex_t
 *
	$di˘_èbÀ_gë_ödex_⁄_«me
(

967 c⁄° 
di˘_èbÀ_t
 *
èbÀ
, c⁄° *
«me
, 
boﬁ
 
commôãd
 = 
åue
) {

968  (
	`di˘_èbÀ_gë_ödex_⁄_«me
(
c⁄°_ˇ°
<
di˘_èbÀ_t
 *>(
èbÀ
), 
«me
,

969 
commôãd
));

970 
	}
}

974 
UNIV_INLINE


975 
ulöt
 
	$di˘_èbÀ_is_·s_cﬁumn
(

978 
ib_ve˘‹_t
 *
ödexes
,

979 
ulöt
 
cﬁ_no
,

980 
boﬁ
 
is_vútuÆ
)

981 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

984 
UNIV_INLINE


985 
	`di˘_èbÀ_¥evít_evi˘i⁄
(

986 
di˘_èbÀ_t
 *
èbÀ
);

991 
UNIV_INLINE


992 
	`di˘_èbÀ_Ælow_evi˘i⁄
(
di˘_èbÀ_t
 *
èbÀ
);

998 
UNIV_INLINE


999 
	`di˘_èbÀ_ddl_acquúe
(
di˘_èbÀ_t
 *
èbÀ
);

1004 
UNIV_INLINE


1005 
	`di˘_èbÀ_ddl_ªÀa£
(
di˘_èbÀ_t
 *
èbÀ
);

1008 
	`di˘_èbÀ_move_‰om_Ãu_to_n⁄_Ãu
(

1009 
di˘_èbÀ_t
 *
èbÀ
);

1013 
	`di˘_èbÀ_move_‰om_n⁄_Ãu_to_Ãu
(
di˘_èbÀ_t
 *
èbÀ
);

1016 
	`di˘_move_to_mru
(
di˘_èbÀ_t
 *
èbÀ
);

1021 
	#MAX_NUM_FK_COLUMNS
 500

	)

1025 
FILE
 *
di˘_f‹eign_îr_fûe
;

1026 
ib_muãx_t
 
di˘_f‹eign_îr_muãx
;

1031 
di˘_sys_t
 *
di˘_sys
;

1032 #i‚de‡
UNIV_HOTBACKUP


1034 
rw_lock_t
 *
di˘_›î©i⁄_lock
;

1037 
˛ass
 
DDTabÀBuf„r
;

1039 
di˘_≥rsi°_t
;

1042 
di˘_≥rsi°_t
 *
di˘_≥rsi°
;

1045 
	sdi˘_sys_t
 {

1046 #i‚de‡
UNIV_HOTBACKUP


1047 
Di˘SysMuãx
 
muãx
;

1055 
row_id_t
 
row_id
;

1061 
hash_èbÀ_t
 *
èbÀ_hash
;

1063 
hash_èbÀ_t
 *
èbÀ_id_hash
;

1065 
löt
 
size
;

1069 
di˘_èbÀ_t
 *
sys_èbÀs
;

1070 
di˘_èbÀ_t
 *
sys_cﬁumns
;

1071 
di˘_èbÀ_t
 *
sys_ödexes
;

1072 
di˘_èbÀ_t
 *
sys_fõlds
;

1073 
di˘_èbÀ_t
 *
sys_vútuÆ
;

1076 
di˘_èbÀ_t
 *
èbÀ_°©s
;

1078 
di˘_èbÀ_t
 *
ödex_°©s
;

1080 
di˘_èbÀ_t
 *
ddl_log
;

1082 
di˘_èbÀ_t
 *
dy«mic_mëad©a
;

1084 
	`UT_LIST_BASE_NODE_T
(
di˘_èbÀ_t
)

1085 
èbÀ_LRU
;

1087 
	`UT_LIST_BASE_NODE_T
(
di˘_èbÀ_t
)

1088 
èbÀ_n⁄_LRU
;

1094 
ãm∂©e
 <
ty≥«me
 
Fun˘‹
>

1095 
	`f‹_óch_èbÀ
(
Fun˘‹
 &
fun˘‹
) {

1096 
	`muãx_íãr
(&
muãx
);

1098 
hash_èbÀ_t
 *
hash
 = 
èbÀ_id_hash
;

1100 
ulöt
 
i
 = 0; i < 
hash
->
n_˚Œs
; i++) {

1101 
di˘_èbÀ_t
 *
èbÀ
 =

1102 
°©ic_ˇ°
<
di˘_èbÀ_t
 *>(
	`HASH_GET_FIRST
(
hash
, 
i
));

1103 
èbÀ
;

1104 
èbÀ
 = 
°©ic_ˇ°
<
di˘_èbÀ_t
 *>(
	`HASH_GET_NEXT
(
id_hash
,Åable))) {

1105 
	`fun˘‹
(
èbÀ
);

1109 
	`muãx_exô
(&
muãx
);

1115 
boﬁ
 
	`is_ª£rved
(
•a˚_id_t
 
•a˚
) {

1116  (
•a˚
 >
di˘_sys_t
::
s_ª£rved_•a˚_id
);

1120 
°d
::
£t
<
dd
::
Obje˘_id
> 
s_dd_èbÀ_ids
;

1128 
boﬁ
 
	`is_dd_èbÀ_id
(
èbÀ_id_t
 
id
) {

1129  (
s_dd_èbÀ_ids
.
	`föd
(
id
Ë!s_dd_èbÀ_ids.
	`íd
());

1133 
c⁄°ex¥
 
•a˚_id_t
 
s_log_•a˚_fú°_id
 = 0xFFFFFFF0UL;

1136 
c⁄°ex¥
 
•a˚_id_t
 
s_övÆid_•a˚_id
 = 0xFFFFFFFF;

1139 
c⁄°ex¥
 
•a˚_id_t
 
s_•a˚_id
 = 0xFFFFFFFE;

1142 
c⁄°ex¥
 
•a˚_id_t
 
s_ãmp_•a˚_id
 = 0xFFFFFFFD;

1145 
c⁄°ex¥
 
•a˚_id_t
 
s_undo_•a˚_id_ønge
 = 400000;

1148 
c⁄°ex¥
 
•a˚_id_t
 
s_mö_undo_•a˚_id
 =

1149 
s_log_•a˚_fú°_id
 - (
FSP_MAX_UNDO_TABLESPACES
 * 
s_undo_•a˚_id_ønge
);

1152 
c⁄°ex¥
 
•a˚_id_t
 
s_max_undo_•a˚_id
 = 
s_log_•a˚_fú°_id
 - 1;

1155 
c⁄°ex¥
 
•a˚_id_t
 
s_max_ãmp_•a˚_id
 = 
s_mö_undo_•a˚_id
 - 1;

1158 
c⁄°ex¥
 
•a˚_id_t
 
s_ãmp_•a˚_id_ønge
 = 400000;

1161 
c⁄°ex¥
 
•a˚_id_t
 
s_mö_ãmp_•a˚_id
 =

1162 
s_mö_undo_•a˚_id
 - 
s_ãmp_•a˚_id_ønge
;

1165 
c⁄°ex¥
 
•a˚_id_t
 
s_ª£rved_•a˚_id
 = 
s_mö_ãmp_•a˚_id
;

1168 
c⁄°ex¥
 
dd
::
Obje˘_id
 
s_dd_•a˚_id
 = 1;

1171 
c⁄°ex¥
 
dd
::
Obje˘_id
 
s_dd_sys_•a˚_id
 = 2;

1174 
c⁄°ex¥
 
dd
::
Obje˘_id
 
s_dd_ãmp_•a˚_id
 = 3;

1177 c⁄° *
s_dd_•a˚_«me
;

1180 c⁄° *
s_dd_•a˚_fûe_«me
;

1183 c⁄° *
s_sys_•a˚_«me
;

1186 c⁄° *
s_ãmp_•a˚_«me
;

1189 c⁄° *
s_ãmp_•a˚_fûe_«me
;

1192 c⁄° *
s_fûe_≥r_èbÀ_«me
;

1195 c⁄° *
s_deÁu…_undo_•a˚_«me_1
;

1196 c⁄° *
s_deÁu…_undo_•a˚_«me_2
;

1199 
c⁄°ex¥
 
èbÀ_id_t
 
s_dy«mic_mëa_èbÀ_id
 = 2;

1202 
c⁄°ex¥
 
•a˚_ödex_t
 
s_dy«mic_mëa_ödex_id
 = 2;

1206 
	sdi˘_≥rsi°_t
 {

1215 
ib_muãx_t
 
muãx
;

1219 
	`UT_LIST_BASE_NODE_T
(
di˘_èbÀ_t
)

1220 
dúty_di˘_èbÀs
;

1224 
°d
::
©omic
<
uöt32_t
> 
num_dúty_èbÀs
;

1226 #i‚de‡
UNIV_HOTBACKUP


1228 
DDTabÀBuf„r
 *
èbÀ_buf„r
;

1232 
Pîsi°îs
 *
≥rsi°îs
;

1235 #i‚de‡
UNIV_HOTBACKUP


1237 
di˘_ödex_t
 *
di˘_öd_ªdund™t
;

1240 
	`di˘_öd_öô
();

1252 
	`di˘_fs2utf8
(c⁄° *
db_™d_èbÀ
, *
db_utf8
, 
size_t
 
db_utf8_size
,

1253 *
èbÀ_utf8
, 
size_t
 
èbÀ_utf8_size
);

1256 
	`di˘_ªsize
();

1264 ˛as†
	cDDTabÀBuf„r
 {

1265 
public
:

1267 
	`DDTabÀBuf„r
();

1270 ~
	`DDTabÀBuf„r
();

1278 
dbîr_t
 
	`ª∂a˚
(
èbÀ_id_t
 
id
, 
uöt64_t
 
vîsi⁄
, c⁄° 
byã
 *
mëad©a
,

1279 
size_t
 
Àn
);

1284 
dbîr_t
 
	`ªmove
(
èbÀ_id_t
 
id
);

1288 
	`åunˇã
();

1296 
°d
::
°rög
 *
	`gë
(
èbÀ_id_t
 
id
, 
uöt64
 *
vîsi⁄
);

1298 
¥iv©e
:

1301 
	`öô
();

1304 
	`›í
();

1307 
	`¸óã_tu∂es
();

1312 
	`öô_tu∂e_wôh_id
(
dtu∂e_t
 *
tu∂e
, 
èbÀ_id_t
 
id
);

1315 
	`˛o£
();

1322 
upd_t
 *
	`upd©e_£t_mëad©a
(c⁄° 
dtu∂e_t
 *
íåy
, c⁄° 
ªc_t
 *
ªc
);

1324 
¥iv©e
:

1326 
di˘_ödex_t
 *
m_ödex
;

1330 
mem_hóp_t
 *
m_dy«mic_hóp
;

1334 
mem_hóp_t
 *
m_ª∂a˚_hóp
;

1337 
mem_hóp_t
 *
m_hóp
;

1341 
dtu∂e_t
 *
m_£¨ch_tu∂e
;

1345 
dtu∂e_t
 *
m_ª∂a˚_tu∂e
;

1347 
¥iv©e
:

1349 
c⁄°ex¥
 
TABLE_ID_COL_NO
 = 0;

1352 
c⁄°ex¥
 
VERSION_COL_NO
 = 1;

1355 
c⁄°ex¥
 
METADATA_COL_NO
 = 2;

1358 
c⁄°ex¥
 
N_USER_COLS
 = 
METADATA_COL_NO
 + 1;

1361 
c⁄°ex¥
 
N_COLS
 = 
N_USER_COLS
 + 
DATA_N_SYS_COLS
;

1365 
c⁄°ex¥
 
TABLE_ID_FIELD_NO
 = 
TABLE_ID_COL_NO
;

1369 
c⁄°ex¥
 
VERSION_FIELD_NO
 = 
VERSION_COL_NO
 + 2;

1374 
c⁄°ex¥
 
METADATA_FIELD_NO
 = 
METADATA_COL_NO
 + 2;

1377 
c⁄°ex¥
 
N_FIELDS
 = 
METADATA_FIELD_NO
 + 1;

1383 
	`di˘_èbÀ_m¨k_dúty
(
di˘_èbÀ_t
 *
èbÀ
);

1395 
	$di˘_£t_c‹ru±ed
(
di˘_ödex_t
 *
ödex
Ë
UNIV_COLD
;

1397 #i‚de‡
UNIV_HOTBACKUP


1403 
	`di˘_èbÀ_lﬂd_dy«mic_mëad©a
(
di˘_èbÀ_t
 *
èbÀ
);

1408 
	`di˘_≥rsi°_to_dd_èbÀ_buf„r
();

1417 
boﬁ
 
	`di˘_èbÀ_≠∂y_dy«mic_mëad©a
(
di˘_èbÀ_t
 *
èbÀ
,

1418 c⁄° 
Pîsi°ítTabÀMëad©a
 *
mëad©a
);

1420 #i‚de‡
UNIV_HOTBACKUP


1424 
	`di˘_ödex_£t_mîge_thªshﬁd
(
di˘_ödex_t
 *
ödex
, 
ulöt
 
mîge_thªshﬁd
);

1426 #ifde‡
UNIV_DEBUG


1429 
	`di˘_£t_mîge_thªshﬁd_Æl_debug
(
uöt
 
mîge_thªshﬁd_Æl
);

1435 
UNIV_INLINE


1436 
boﬁ
 
	`di˘_tf_is_vÆid
(
uöt32_t
 
Êags
);

1443 
UNIV_INLINE


1444 
boﬁ
 
	`di˘_tf2_is_vÆid
(
uöt32_t
 
Êags
, uöt32_à
Êags2
);

1448 
UNIV_INLINE


1449 
boﬁ
 
	$di˘_èbÀ_is_disˇrded
(

1450 c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

1451 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1456 
UNIV_INLINE


1457 
boﬁ
 
	`di˘_èbÀ_is_èbÀ_buf„r
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

1462 
UNIV_INLINE


1463 
boﬁ
 
	$di˘_èbÀ_ö_sh¨ed_èbÀ•a˚
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

1464 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1473 
UNIV_INLINE


1474 
boﬁ
 
	$di˘_èbÀ_is_lockög_dißbÀd
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

1475 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1480 
UNIV_INLINE


1481 
	`di˘_dißbÀ_ªdo_if_ãmp‹¨y
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, 
må_t
 *
må
);

1486 
UNIV_INLINE


1487 
row_id_t
 
	`di˘_èbÀ_gë_√xt_èbÀ_£ss_row_id
(
di˘_èbÀ_t
 *
èbÀ
);

1492 
UNIV_INLINE


1493 
åx_id_t
 
	`di˘_èbÀ_gë_√xt_èbÀ_£ss_åx_id
(
di˘_èbÀ_t
 *
èbÀ
);

1498 
UNIV_INLINE


1499 
åx_id_t
 
	`di˘_èbÀ_gë_cuº_èbÀ_£ss_åx_id
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

1503 
	`di˘_ödex_zù_suc˚ss
(

1504 
di˘_ödex_t
 *
ödex
);

1507 
	`di˘_ödex_zù_Áûuª
(

1508 
di˘_ödex_t
 *
ödex
);

1511 
ulöt
 
	$di˘_ödex_zù_∑d_›timÆ_∑ge_size
(

1512 
di˘_ödex_t
 *
ödex
)

1514 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1517 c⁄° *
	`di˘_tf_to_row_f‹m©_°rög
(

1518 
uöt32_t
 
èbÀ_Êag
);

1521 
ulöt
 
	$di˘_ödex_node_±r_max_size
(c⁄° 
di˘_ödex_t
 *
ödex
)

1522 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1529 
UNIV_INLINE


1530 
di˘_ödex_t
 *
	`di˘_èbÀ_gë_ödex_⁄_fú°_cﬁ
(
di˘_èbÀ_t
 *
èbÀ
,

1531 
ulöt
 
cﬁ_ödex
);

1540 
UNIV_INLINE


1541 
ulöt
 
	`di˘_èbÀ_ícode_n_cﬁ
(ulöà
n_cﬁ
, ulöà
n_v_cﬁ
);

1547 
UNIV_INLINE


1548 
	`di˘_èbÀ_decode_n_cﬁ
(
uöt32_t
 
ícoded
, uöt32_à*
n_cﬁ
,

1549 
uöt32_t
 *
n_v_cﬁ
);

1553 
UNIV_INLINE


1554 
	`di˘_‰ì_vc_ãm∂
(
di˘_vcﬁ_ãm∂_t
 *
vc_ãm∂
);

1561 c⁄° *
	`di˘_èbÀ_gë_v_cﬁ_«me_mysql
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

1562 
ulöt
 
cﬁ_ƒ
);

1567 
UNIV_INLINE


1568 
boﬁ
 
	`di˘_èbÀ_have_vútuÆ_ödex
(
di˘_èbÀ_t
 *
èbÀ
);

1573 
di˘_ödex_t
 *
	`di˘_sdi_gë_ödex
(
•a˚_id_t
 
èbÀ•a˚_id
);

1580 
di˘_èbÀ_t
 *
	`di˘_sdi_gë_èbÀ
(
•a˚_id_t
 
èbÀ•a˚_id
, 
boﬁ
 
di˘_locked
,

1581 
boﬁ
 
is_¸óã
);

1587 
	`di˘_sdi_ªmove_‰om_ˇche
(
•a˚_id_t
 
•a˚_id
, 
di˘_èbÀ_t
 *
sdi_èbÀ
,

1588 
boﬁ
 
di˘_locked
);

1593 
UNIV_INLINE


1594 
boﬁ
 
	`di˘_ödex_is_sdi
(c⁄° 
di˘_ödex_t
 *
ödex
);

1599 
UNIV_INLINE


1600 
boﬁ
 
	`di˘_èbÀ_is_sdi
(
uöt64_t
 
èbÀ_id
);

1604 
	`di˘_sdi_˛o£_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
);

1632 
dbîr_t
 
	`dd_sdi_acquúe_ex˛usive_mdl
(
THD
 *
thd
, 
•a˚_id_t
 
•a˚_id
,

1633 
MDL_tickë
 **
sdi_mdl
);

1657 
dbîr_t
 
	`dd_sdi_acquúe_sh¨ed_mdl
(
THD
 *
thd
, 
•a˚_id_t
 
•a˚_id
,

1658 
MDL_tickë
 **
sdi_mdl
);

1666 
UNIV_INLINE


1667 
boﬁ
 
	`di˘_èbÀ_is_∑πôi⁄
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

1671 
UNIV_INLINE


1672 
	`di˘_Æloˇã_mem_öåösic_ˇche
(
di˘_ödex_t
 *
ödex
);

1678 
	`di˘_upgøde_evi˘_èbÀs_ˇche
();

1682 
boﬁ
 
	`di˘_èbÀ_is_sy°em
(
èbÀ_id_t
 
èbÀ_id
);

1688 
boﬁ
 
	`di˘_sys_èbÀ_id_buûd
();

1693 
	`di˘_èbÀ_ch™ge_id_sys_èbÀs
();

1697 
°d
::
°rög
 
	$di˘_èbÀ_gë_d©adú
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

1698 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1705 
dbîr_t
 
	$di˘_£t_com¥essi⁄
(
di˘_èbÀ_t
 *
èbÀ
, c⁄° *
Æg‹ôhm
,

1706 
boﬁ
 
is_imp‹t_›
)

1707 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1709 
	~"di˘0di˘.ic
"

	@dict0dict.ic

33 
	~"d©a0ty≥.h
"

34 
	~"di˘0lﬂd.h
"

35 
	~"f•0f•.h
"

36 
	~"f•0sys•a˚.h
"

37 
	~"ªm0ty≥s.h
"

38 
	~"§v0§v.h
"

39 
	~"sync0rw.h
"

43 
UNIV_INLINE


44 
ulöt
 
	$di˘_cﬁ_gë_no
(c⁄° 
di˘_cﬁ_t
 *
cﬁ
)

46 
	`ut_ad
(
cﬁ
);

48  (
cﬁ
->
öd
);

49 
	}
}

52 
UNIV_INLINE


53 
ulöt
 
	$di˘_cﬁ_gë_˛u°_pos
(

54 c⁄° 
di˘_cﬁ_t
 *
cﬁ
,

55 c⁄° 
di˘_ödex_t
 *
˛u°_ödex
)

57 
ulöt
 
i
;

59 
	`ut_ad
(
cﬁ
);

60 
	`ut_ad
(
˛u°_ödex
);

61 
	`ut_ad
(
˛u°_ödex
->
	`is_˛u°îed
());

63 
i
 = 0; i < 
˛u°_ödex
->
n_def
; i++) {

64 c⁄° 
di˘_fõld_t
 *
fõld
 = &
˛u°_ödex
->
fõlds
[
i
];

66 i‡(!
fõld
->
¥efix_Àn
 && fõld->
cﬁ
 == col) {

67  (
i
);

71  (
ULINT_UNDEFINED
);

72 
	}
}

78 
UNIV_INLINE


79 
ulöt
 
	$di˘_cﬁ_gë_ödex_pos
(c⁄° 
di˘_cﬁ_t
 *
cﬁ
, c⁄° 
di˘_ödex_t
 *
ödex
) {

80 
ulöt
 
i
;

82 
i
 = 0; i < 
ödex
->
n_def
; i++) {

83 c⁄° 
di˘_fõld_t
 *
fõld
 = &
ödex
->
fõlds
[
i
];

85 i‡(!
fõld
->
¥efix_Àn
 && fõld->
cﬁ
 == col) {

86  (
i
);

90  (
ULINT_UNDEFINED
);

91 
	}
}

97 
UNIV_INLINE


98 
boﬁ
 
	$di˘_ödex_has_desc
(c⁄° 
di˘_ödex_t
 *
ödex
) {

99 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

101 
ulöt
 
i
 = 0; i < 
ödex
->
n_def
; i++) {

102 c⁄° 
di˘_fõld_t
 *
fõld
 = &
ödex
->
fõlds
[
i
];

104 i‡(!
fõld
->
is_as˚ndög
) {

105  (
åue
);

109  (
Ál£
);

110 
	}
}

116 
UNIV_INLINE


117 
boﬁ
 
	$di˘_ödex_is_auto_gí_˛u°
(c⁄° 
di˘_ödex_t
 *
ödex
) {

118  (
ödex
->
ty≥
 =
DICT_CLUSTERED
);

119 
	}
}

123 
UNIV_INLINE


124 
ulöt
 
	$di˘_ödex_is_unique
(c⁄° 
di˘_ödex_t
 *
ödex
)

126 
	`ut_ad
(
ödex
);

127 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

129  (
ödex
->
ty≥
 & 
DICT_UNIQUE
);

130 
	}
}

134 
UNIV_INLINE


135 
ulöt
 
	$di˘_ödex_is_•©ül
(c⁄° 
di˘_ödex_t
 *
ödex
)

137 
	`ut_ad
(
ödex
);

138 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

140  (
ödex
->
ty≥
 & 
DICT_SPATIAL
);

141 
	}
}

146 
UNIV_INLINE


147 
ulöt
 
	$di˘_ödex_has_vútuÆ
(c⁄° 
di˘_ödex_t
 *
ödex
) {

148 
	`ut_ad
(
ödex
);

149 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

151  (
ödex
->
ty≥
 & 
DICT_VIRTUAL
);

152 
	}
}

156 
UNIV_INLINE


157 
ulöt
 
	$di˘_ödex_is_ibuf
(c⁄° 
di˘_ödex_t
 *
ödex
)

159 
	`ut_ad
(
ödex
);

160 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

162  (
ödex
->
ty≥
 & 
DICT_IBUF
);

163 
	}
}

167 
UNIV_INLINE


168 
ulöt
 
	$di˘_ödex_is_£c_‹_ibuf
(c⁄° 
di˘_ödex_t
 *
ödex
)

170 
ulöt
 
ty≥
;

172 
	`ut_ad
(
ödex
);

173 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

175 
ty≥
 = 
ödex
->type;

177  (!(
ty≥
 & 
DICT_CLUSTERED
Ë|| (ty≥ & 
DICT_IBUF
));

178 
	}
}

184 
UNIV_INLINE


185 
ulöt
 
	$di˘_èbÀ_gë_n_tŸ_u_cﬁs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

186 
	`ut_ad
(
èbÀ
);

187 
	`ut_ad
(
èbÀ
->
magic_n
 =
DICT_TABLE_MAGIC_N
);

189  (
èbÀ
->
	`gë_n_u£r_cﬁs
(Ë+ 
	`di˘_èbÀ_gë_n_v_cﬁs
(table));

190 
	}
}

195 
UNIV_INLINE


196 
ulöt
 
	$di˘_èbÀ_gë_n_v_cﬁs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

197 
	`ut_ad
(
èbÀ
);

198 
	`ut_ad
(
èbÀ
->
magic_n
 =
DICT_TABLE_MAGIC_N
);

200  (
èbÀ
->
n_v_cﬁs
);

201 
	}
}

206 
UNIV_INLINE


207 
boﬁ
 
	$di˘_èbÀ_has_ödexed_v_cﬁs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

208 
ulöt
 
i
 = 0; i < 
èbÀ
->
n_v_cﬁs
; i++) {

209 c⁄° 
di˘_v_cﬁ_t
 *
cﬁ
 = 
	`di˘_èbÀ_gë_¡h_v_cﬁ
(
èbÀ
, 
i
);

210 i‡(
cﬁ
->
m_cﬁ
.
‹d_∑π
) {

211  (
åue
);

215  (
Ál£
);

216 
	}
}

218 #i‚de‡
UNIV_HOTBACKUP


221 
UNIV_INLINE


222 
ib_uöt64_t
 
	$di˘_èbÀ_gë_n_rows
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

224 
	`ut_ad
(
èbÀ
->
°©_öôülized
);

226  (
èbÀ
->
°©_n_rows
);

227 
	}
}

232 
UNIV_INLINE


233 
	$di˘_èbÀ_n_rows_öc
(
di˘_èbÀ_t
 *
èbÀ
)

235 i‡(
èbÀ
->
°©_öôülized
) {

236 
ib_uöt64_t
 
n_rows
 = 
èbÀ
->
°©_n_rows
;

237 i‡(
n_rows
 < 0xFFFFFFFFFFFFFFFFULL) {

238 
èbÀ
->
°©_n_rows
 = 
n_rows
 + 1;

241 
	}
}

246 
UNIV_INLINE


247 
	$di˘_èbÀ_n_rows_dec
(
di˘_èbÀ_t
 *
èbÀ
)

249 i‡(
èbÀ
->
°©_öôülized
) {

250 
ib_uöt64_t
 
n_rows
 = 
èbÀ
->
°©_n_rows
;

251 i‡(
n_rows
 > 0) {

252 
èbÀ
->
°©_n_rows
 = 
n_rows
 - 1;

255 
	}
}

258 #ifde‡
UNIV_DEBUG


263 
UNIV_INLINE


264 
di˘_v_cﬁ_t
 *
	$di˘_èbÀ_gë_¡h_v_cﬁ
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
pos
) {

265 
	`ut_ad
(
èbÀ
);

266 
	`ut_ad
(
pos
 < 
èbÀ
->
n_v_def
);

267 
	`ut_ad
(
èbÀ
->
magic_n
 =
DICT_TABLE_MAGIC_N
);

269  (
°©ic_ˇ°
<
di˘_v_cﬁ_t
 *>(
èbÀ
->
v_cﬁs
Ë+ 
pos
);

270 
	}
}

275 
UNIV_INLINE


276 
ulöt
 
	$di˘_èbÀ_gë_sys_cﬁ_no
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

277 
ulöt
 
sys
)

279 
	`ut_ad
(
èbÀ
);

280 
	`ut_ad
(
sys
 < 
èbÀ
->
	`gë_n_sys_cﬁs
());

281 
	`ut_ad
(
èbÀ
->
magic_n
 =
DICT_TABLE_MAGIC_N
);

283  (
èbÀ
->
n_cﬁs
 -ÅabÀ->
	`gë_n_sys_cﬁs
(Ë+ 
sys
);

284 
	}
}

288 
UNIV_INLINE


289 
iboﬁ
 
	$di˘_èbÀ_is_comp
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

291 
	`ut_ad
(
èbÀ
);

293 #i‡
DICT_TF_COMPACT
 != 1

297  (
èbÀ
->
Êags
 & 
DICT_TF_COMPACT
);

298 
	}
}

300 #i‚de‡
UNIV_HOTBACKUP


303 
UNIV_INLINE


304 
iboﬁ
 
	$di˘_èbÀ_has_·s_ödex
(

306 
di˘_èbÀ_t
 *
èbÀ
)

308 
	`ut_ad
(
èbÀ
);

310  (
	`DICT_TF2_FLAG_IS_SET
(
èbÀ
, 
DICT_TF2_FTS
));

311 
	}
}

316 
UNIV_INLINE


317 
boﬁ
 
	$di˘_tf_is_vÆid
(
uöt32_t
 
Êags
) {

318 
boﬁ
 
com∑˘
 = 
	`DICT_TF_GET_COMPACT
(
Êags
);

319 
uöt32_t
 
zù_ssize
 = 
	`DICT_TF_GET_ZIP_SSIZE
(
Êags
);

320 
boﬁ
 
©omic_blobs
 = 
	`DICT_TF_HAS_ATOMIC_BLOBS
(
Êags
);

321 
boﬁ
 
d©a_dú
 = 
	`DICT_TF_HAS_DATA_DIR
(
Êags
);

322 
boﬁ
 
sh¨ed_•a˚
 = 
	`DICT_TF_HAS_SHARED_SPACE
(
Êags
);

323 
uöt32_t
 
unu£d
 = 
	`DICT_TF_GET_UNUSED
(
Êags
);

326 i‡(
unu£d
 != 0) {

327  (
Ál£
);

330 i‡(
©omic_blobs
) {

337 i‡(!
com∑˘
) {

338  (
Ál£
);

341 } i‡(
zù_ssize
) {

343  (
Ál£
);

346 i‡(
zù_ssize
) {

350 i‡(!
com∑˘
 || !
©omic_blobs
 || 
zù_ssize
 > 
PAGE_ZIP_SSIZE_MAX
) {

351  (
Ál£
);

356 i‡(
d©a_dú
 && 
sh¨ed_•a˚
) {

357  (
Ál£
);

360  (
åue
);

361 
	}
}

368 
UNIV_INLINE


369 
boﬁ
 
	$di˘_tf2_is_vÆid
(
uöt32_t
 
Êags
, uöt32_à
Êags2
) {

370 i‡(!
	`di˘_tf_is_vÆid
(
Êags
)) {

371  (
Ál£
);

374 i‡((
Êags2
 & 
DICT_TF2_UNUSED_BIT_MASK
) != 0) {

375  (
Ál£
);

378 
boﬁ
 
fûe_≥r_èbÀ
 = ((
Êags2
 & 
DICT_TF2_USE_FILE_PER_TABLE
) != 0);

379 
boﬁ
 
sh¨ed_•a˚
 = 
	`DICT_TF_HAS_SHARED_SPACE
(
Êags
);

380 i‡(
fûe_≥r_èbÀ
 && 
sh¨ed_•a˚
) {

381  (
Ál£
);

384  (
åue
);

385 
	}
}

390 
UNIV_INLINE


391 
uöt32_t
 
	$di˘_sys_èbÀs_ty≥_vÆid©e
(

392 
uöt32_t
 
ty≥
,

393 
uöt32_t
 
n_cﬁs
)

395 
uöt32_t
 
low_‹dî_bô
 = 
	`DICT_TF_GET_COMPACT
(
ty≥
);

396 
uöt32_t
 
ªdund™t
 = !(
n_cﬁs
 & 
DICT_N_COLS_COMPACT
);

397 
uöt32_t
 
zù_ssize
 = 
	`DICT_TF_GET_ZIP_SSIZE
(
ty≥
);

398 
uöt32_t
 
©omic_blobs
 = 
	`DICT_TF_HAS_ATOMIC_BLOBS
(
ty≥
);

399 
uöt32_t
 
unu£d
 = 
	`DICT_TF_GET_UNUSED
(
ty≥
);

404 i‡(!
low_‹dî_bô
) {

405  (
UINT32_UNDEFINED
);

408 i‡(
ªdund™t
) {

409 i‡(
zù_ssize
 || 
©omic_blobs
) {

410  (
UINT32_UNDEFINED
);

415 i‡(
unu£d
) {

416  (
UINT32_UNDEFINED
);

419 i‡(
©omic_blobs
) {

428 } i‡(
zù_ssize
) {

430  (
UINT32_UNDEFINED
);

433 i‡(
zù_ssize
) {

438 i‡(!
©omic_blobs
) {

439  (
UINT32_UNDEFINED
);

443 i‡(
zù_ssize
 > 
PAGE_ZIP_SSIZE_MAX
) {

444  (
UINT32_UNDEFINED
);

454  (
ty≥
);

455 
	}
}

461 
UNIV_INLINE


462 
ªc_f‹m©_t
 
	$di˘_tf_gë_ªc_f‹m©
(

463 
uöt32_t
 
Êags
)

465 
	`ut_a
(
	`di˘_tf_is_vÆid
(
Êags
));

467 i‡(!
	`DICT_TF_GET_COMPACT
(
Êags
)) {

468  (
REC_FORMAT_REDUNDANT
);

471 i‡(!
	`DICT_TF_HAS_ATOMIC_BLOBS
(
Êags
)) {

472  (
REC_FORMAT_COMPACT
);

475 i‡(
	`DICT_TF_GET_ZIP_SSIZE
(
Êags
)) {

476  (
REC_FORMAT_COMPRESSED
);

479  (
REC_FORMAT_DYNAMIC
);

480 
	}
}

486 
UNIV_INLINE


487 
boﬁ
 
	$di˘_èbÀ_has_©omic_blobs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

488  (
	`DICT_TF_HAS_ATOMIC_BLOBS
(
èbÀ
->
Êags
));

489 
	}
}

491 #i‚de‡
UNIV_HOTBACKUP


498 
UNIV_INLINE


499 
	$di˘_tf_£t
(
uöt32_t
 *
Êags
, 
ªc_f‹m©_t
 
f‹m©
, uöt32_à
zù_ssize
,

500 
boﬁ
 
u£_d©a_dú
, boﬁ 
sh¨ed_•a˚
) {

501 
f‹m©
) {

502 
REC_FORMAT_REDUNDANT
:

503 *
Êags
 = 0;

504 
	`ut_ad
(
zù_ssize
 == 0);

506 
REC_FORMAT_COMPACT
:

507 *
Êags
 = 
DICT_TF_COMPACT
;

508 
	`ut_ad
(
zù_ssize
 == 0);

510 
REC_FORMAT_COMPRESSED
:

511 *
Êags
 = 
DICT_TF_COMPACT
 | (1 << 
DICT_TF_POS_ATOMIC_BLOBS
) |

512 (
zù_ssize
 << 
DICT_TF_POS_ZIP_SSIZE
);

514 
REC_FORMAT_DYNAMIC
:

515 *
Êags
 = 
DICT_TF_COMPACT
 | (1 << 
DICT_TF_POS_ATOMIC_BLOBS
);

516 
	`ut_ad
(
zù_ssize
 == 0);

520 i‡(
u£_d©a_dú
) {

521 *
Êags
 |(1 << 
DICT_TF_POS_DATA_DIR
);

524 i‡(
sh¨ed_•a˚
) {

525 *
Êags
 |(1 << 
DICT_TF_POS_SHARED_SPACE
);

527 
	}
}

535 
UNIV_INLINE


536 
uöt32_t
 
	$di˘_tf_öô
(
boﬁ
 
com∑˘
, 
ulöt
 
zù_ssize
, boﬁ 
©omic_blobs
,

537 
boﬁ
 
d©a_dú
, boﬁ 
sh¨ed_•a˚
) {

538 
uöt32_t
 
Êags
 = 0;

540 i‡(
com∑˘
) {

541 
Êags
 |
DICT_TF_COMPACT
;

544 i‡(
zù_ssize
) {

545 
Êags
 |(
zù_ssize
 << 
DICT_TF_POS_ZIP_SSIZE
);

548 i‡(
©omic_blobs
) {

549 
Êags
 |(1 << 
DICT_TF_POS_ATOMIC_BLOBS
);

552 i‡(
d©a_dú
) {

553 
Êags
 |(1 << 
DICT_TF_POS_DATA_DIR
);

556 i‡(
sh¨ed_•a˚
) {

557 
Êags
 |(1 << 
DICT_TF_POS_SHARED_SPACE
);

560 
	`ut_ad
(
	`di˘_tf_is_vÆid
(
Êags
));

562  (
Êags
);

563 
	}
}

574 
UNIV_INLINE


575 
uöt32_t
 
	$di˘_sys_èbÀs_ty≥_to_tf
(

576 
uöt32_t
 
ty≥
,

577 
uöt32_t
 
n_cﬁs
)

579 
uöt32_t
 
Êags
;

580 
uöt32_t
 
ªdund™t
 = !(
n_cﬁs
 & 
DICT_N_COLS_COMPACT
);

583 
Êags
 = 
ªdund™t
 ? 0 : 1;

586 
Êags
 |
ty≥
 & (
DICT_TF_MASK_ZIP_SSIZE
 | 
DICT_TF_MASK_ATOMIC_BLOBS
 |

587 
DICT_TF_MASK_DATA_DIR
 | 
DICT_TF_MASK_SHARED_SPACE
);

589 
	`ut_ad
(!
	`DICT_TF_GET_ZIP_SSIZE
(
Êags
Ë|| 
	`DICT_TF_HAS_ATOMIC_BLOBS
(flags));

591  (
Êags
);

592 
	}
}

603 
UNIV_INLINE


604 
ulöt
 
	$di˘_tf_to_sys_èbÀs_ty≥
(
uöt32_t
 
Êags
)

606 
ulöt
 
ty≥
;

608 
	`ut_a
(
	`di˘_tf_is_vÆid
(
Êags
));

611 
ty≥
 = 1;

614 
ty≥
 |
Êags
 & (
DICT_TF_MASK_ZIP_SSIZE
 | 
DICT_TF_MASK_ATOMIC_BLOBS
 |

615 
DICT_TF_MASK_DATA_DIR
 | 
DICT_TF_MASK_SHARED_SPACE
);

617  (
ty≥
);

618 
	}
}

625 
UNIV_INLINE


626 c⁄° 
∑ge_size_t
 
	$di˘_tf_gë_∑ge_size
(
uöt32_t
 
Êags
) {

627 c⁄° 
uöt32_t
 
zù_ssize
 = 
	`DICT_TF_GET_ZIP_SSIZE
(
Êags
);

629 i‡(
zù_ssize
 == 0) {

630  (
univ_∑ge_size
);

633 c⁄° 
uöt32_t
 
zù_size
 = (
UNIV_ZIP_SIZE_MIN
 >> 1Ë<< 
zù_ssize
;

635 
	`ut_ad
(
zù_size
 <
UNIV_ZIP_SIZE_MAX
);

637  (
	`∑ge_size_t
(
zù_size
, 
univ_∑ge_size
.
	`logiˇl
(), 
åue
));

638 
	}
}

644 
UNIV_INLINE


645 c⁄° 
∑ge_size_t
 
	$di˘_èbÀ_∑ge_size
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

646 
	`ut_ad
(
èbÀ
 !
nuŒ±r
);

648  (
	`di˘_tf_gë_∑ge_size
(
èbÀ
->
Êags
));

649 
	}
}

651 #i‚de‡
UNIV_HOTBACKUP


655 
UNIV_INLINE


656 
	$di˘_èbÀ_x_lock_ödexes
(
di˘_èbÀ_t
 *
èbÀ
)

658 
di˘_ödex_t
 *
ödex
;

660 
	`ut_a
(
èbÀ
);

661 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

664 
ödex
 = 
èbÀ
->
	`fú°_ödex
(); index !
nuŒ±r
; index = index->
	`√xt
()) {

665 
	`rw_lock_x_lock
(
	`di˘_ödex_gë_lock
(
ödex
));

667 
	}
}

670 
UNIV_INLINE


671 
	$di˘_èbÀ_x_u∆ock_ödexes
(
di˘_èbÀ_t
 *
èbÀ
)

673 
di˘_ödex_t
 *
ödex
;

675 
	`ut_a
(
èbÀ
);

676 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

678 
ödex
 = 
èbÀ
->
	`fú°_ödex
(); index !
nuŒ±r
; index = index->
	`√xt
()) {

679 
	`rw_lock_x_u∆ock
(
	`di˘_ödex_gë_lock
(
ödex
));

681 
	}
}

687 
UNIV_INLINE


688 
ulöt
 
	$di˘_ödex_gë_n_fõlds
(

689 c⁄° 
di˘_ödex_t
 *
ödex
)

693 
	`ut_ad
(
ödex
);

694 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

696  
ödex
->
n_fõlds
;

697 
	}
}

704 
UNIV_INLINE


705 
ulöt
 
	$di˘_ödex_gë_n_unique
(

706 c⁄° 
di˘_ödex_t
 *
ödex
)

709 
	`ut_ad
(
ödex
);

710 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

711 
	`ut_ad
(
ödex
->
ˇched
);

713  
°©ic_ˇ°
<
uöt16_t
>(
ödex
->
n_uniq
);

714 
	}
}

720 
UNIV_INLINE


721 
ulöt
 
	$di˘_ödex_gë_n_unique_ö_åì
(

722 c⁄° 
di˘_ödex_t
 *
ödex
)

725 
	`ut_ad
(
ödex
);

726 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

727 
	`ut_ad
(
ödex
->
ˇched
);

729 i‡(
ödex
->
	`is_˛u°îed
()) {

730  (
	`di˘_ödex_gë_n_unique
(
ödex
));

733  (
°©ic_ˇ°
<
uöt16_t
>(
	`di˘_ödex_gë_n_fõlds
(
ödex
)));

734 
	}
}

743 
UNIV_INLINE


744 
uöt16_t
 
	$di˘_ödex_gë_n_unique_ö_åì_n⁄Àaf
(c⁄° 
di˘_ödex_t
 *
ödex
) {

745 
	`ut_ad
(
ödex
 !
nuŒ±r
);

746 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

747 
	`ut_ad
(
ödex
->
ˇched
);

749 i‡(
	`di˘_ödex_is_•©ül
(
ödex
)) {

753  (
DICT_INDEX_SPATIAL_NODEPTR_SIZE
);

755  
°©ic_ˇ°
<
uöt16_t
>(
	`di˘_ödex_gë_n_unique_ö_åì
(
ödex
));

757 
	}
}

764 
UNIV_INLINE


765 
ulöt
 
	$di˘_ödex_gë_n_‹dîög_deföed_by_u£r
(

766 c⁄° 
di˘_ödex_t
 *
ödex
)

769  (
ödex
->
n_u£r_deföed_cﬁs
);

770 
	}
}

772 #ifde‡
UNIV_DEBUG


777 
ölöe
 
boﬁ
 
	$di˘_èbÀ_is_com¥es£d_ãmp‹¨y
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

778 i‡(
èbÀ
->
	`is_ãmp‹¨y
()) {

779 
	`ut_ad
(
	`f•_is_sy°em_ãmp‹¨y
(
èbÀ
->
•a˚
));

781  (
	`di˘_èbÀ_∑ge_size
(
èbÀ
).
	`is_com¥es£d
());

784  (
Ál£
);

785 
	}
}

790 
UNIV_INLINE


791 
•a˚_id_t
 
	$di˘_ödex_gë_•a˚
(c⁄° 
di˘_ödex_t
 *
ödex
)

793 
	`ut_ad
(
ödex
);

794 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

796  (
ödex
->
•a˚
);

797 
	}
}

800 
UNIV_INLINE


801 
	$di˘_ödex_£t_•a˚
(
di˘_ödex_t
 *
ödex
,

802 
•a˚_id_t
 
•a˚
)

804 
	`ut_ad
(
ödex
);

805 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

807 
ödex
->
•a˚
 = space;

808 
	}
}

812 
UNIV_INLINE


813 
∑ge_no_t
 
	$di˘_ödex_gë_∑ge
(c⁄° 
di˘_ödex_t
 *
ödex
)

815 
	`ut_ad
(
ödex
);

816 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

818  (
ödex
->
∑ge
);

819 
	}
}

823 
UNIV_INLINE


824 
rw_lock_t
 *
	$di˘_ödex_gë_lock
(
di˘_ödex_t
 *
ödex
)

826 
	`ut_ad
(
ödex
);

827 
	`ut_ad
(
ödex
->
magic_n
 =
DICT_INDEX_MAGIC_N
);

829  (&(
ödex
->
lock
));

830 
	}
}

836 
UNIV_INLINE


837 
ulöt
 
	$di˘_ödex_gë_•a˚_ª£rve
(Ë{  (
UNIV_PAGE_SIZE
 / 16); 
	}
}

841 
UNIV_INLINE


842 
⁄löe_ödex_°©us
 
	$di˘_ödex_gë_⁄löe_°©us
(

843 c⁄° 
di˘_ödex_t
 *
ödex
)

845 
⁄löe_ödex_°©us
 
°©us
;

847 
°©us
 = (
⁄löe_ödex_°©us
)
ödex
->
⁄löe_°©us
;

856 #ifde‡
UNIV_DEBUG


857 
°©us
) {

858 
ONLINE_INDEX_COMPLETE
:

859 
ONLINE_INDEX_CREATION
:

860 
ONLINE_INDEX_ABORTED
:

861 
ONLINE_INDEX_ABORTED_DROPPED
:

862  (
°©us
);

864 
ut_îr‹
;

866  (
°©us
);

867 
	}
}

870 
UNIV_INLINE


871 
	$di˘_ödex_£t_⁄löe_°©us
(

872 
di˘_ödex_t
 *
ödex
,

873 
⁄löe_ödex_°©us
 
°©us
)

875 
	`ut_ad
(!(
ödex
->
ty≥
 & 
DICT_FTS
));

876 
	`ut_ad
(
	`rw_lock_own
(
	`di˘_ödex_gë_lock
(
ödex
), 
RW_LOCK_X
));

878 #ifde‡
UNIV_DEBUG


879 
	`di˘_ödex_gë_⁄löe_°©us
(
ödex
)) {

880 
ONLINE_INDEX_COMPLETE
:

881 
ONLINE_INDEX_CREATION
:

883 
ONLINE_INDEX_ABORTED
:

884 
	`ut_ad
(
°©us
 =
ONLINE_INDEX_ABORTED_DROPPED
);

886 
ONLINE_INDEX_ABORTED_DROPPED
:

887 
ut_îr‹
;

891 
ödex
->
⁄löe_°©us
 = 
°©us
;

892 
	`ut_ad
(
	`di˘_ödex_gë_⁄löe_°©us
(
ödex
Ë=
°©us
);

893 
	}
}

902 
UNIV_INLINE


903 
boﬁ
 
	$di˘_ödex_is_⁄löe_ddl
(c⁄° 
di˘_ödex_t
 *
ödex
)

905 #ifde‡
UNIV_DEBUG


906 i‡(
ödex
->
	`is_˛u°îed
()) {

907 
	`di˘_ödex_gë_⁄löe_°©us
(
ödex
)) {

908 
ONLINE_INDEX_CREATION
:

909  (
åue
);

910 
ONLINE_INDEX_COMPLETE
:

911  (
Ál£
);

912 
ONLINE_INDEX_ABORTED
:

913 
ONLINE_INDEX_ABORTED_DROPPED
:

916 
	`ut_ad
(0);

917  (
Ál£
);

921  (
	`UNIV_UNLIKELY
(
	`di˘_ödex_gë_⁄löe_°©us
(
ödex
) !=

922 
ONLINE_INDEX_COMPLETE
));

923 
	}
}

927 
UNIV_INLINE


928 
ulöt
 
	$di˘_èbÀ_is_·s_cﬁumn
(

929 
ib_ve˘‹_t
 *
ödexes
,

930 
ulöt
 
cﬁ_no
,

931 
boﬁ
 
is_vútuÆ
)

934 
ulöt
 
i
;

936 
i
 = 0; i < 
	`ib_ve˘‹_size
(
ödexes
); ++i) {

937 
di˘_ödex_t
 *
ödex
;

939 
ödex
 = (
di˘_ödex_t
 *)
	`ib_ve˘‹_gëp
(
ödexes
, 
i
);

941 i‡(
	`di˘_ödex_c⁄èös_cﬁ_‹_¥efix
(
ödex
, 
cﬁ_no
, 
is_vútuÆ
)) {

942  (
i
);

946  (
ULINT_UNDEFINED
);

947 
	}
}

953 
UNIV_INLINE


954 
ulöt
 
	$di˘_max_fõld_Àn_°‹e_undo
(

955 
di˘_èbÀ_t
 *
èbÀ
,

956 c⁄° 
di˘_cﬁ_t
 *
cﬁ
)

959 i‡(!
	`di˘_èbÀ_has_©omic_blobs
(
èbÀ
)) {

963 i‡(
cﬁ
->
max_¥efix
 != 0) {

964  (
cﬁ
->
max_¥efix
);

967  (
REC_VERSION_56_MAX_INDEX_COL_LEN
);

968 
	}
}

975 
UNIV_INLINE


976 
ulöt
 
	$di˘_max_v_fõld_Àn_°‹e_undo
(
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
cﬁ_no
) {

977 c⁄° 
di˘_cﬁ_t
 *
cﬁ
 = &
	`di˘_èbÀ_gë_¡h_v_cﬁ
(
èbÀ
, 
cﬁ_no
)->
m_cﬁ
;

978 
ulöt
 
max_log_Àn
;

985 i‡(
	`di˘_èbÀ_has_©omic_blobs
(
èbÀ
)) {

986 i‡(
	`DATA_BIG_COL
(
cﬁ
Ë&& cﬁ->
max_¥efix
 > 0) {

987 
max_log_Àn
 = 
cﬁ
->
max_¥efix
;

989 
max_log_Àn
 = 
	`DICT_MAX_FIELD_LEN_BY_FORMAT
(
èbÀ
);

992 
max_log_Àn
 = 
REC_ANTELOPE_MAX_INDEX_COL_LEN
;

995  (
max_log_Àn
);

996 
	}
}

998 #i‚de‡
UNIV_HOTBACKUP


1001 
UNIV_INLINE


1002 
	$di˘_èbÀ_¥evít_evi˘i⁄
(

1003 
di˘_èbÀ_t
 *
èbÀ
)

1005 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

1006 i‡(
èbÀ
->
ˇn_be_evi˘ed
) {

1007 
	`di˘_èbÀ_move_‰om_Ãu_to_n⁄_Ãu
(
èbÀ
);

1009 
èbÀ
->
ex∂icôly_n⁄_Ãu
 = 
åue
;

1010 
	}
}

1015 
UNIV_INLINE


1016 
	$di˘_èbÀ_Ælow_evi˘i⁄
(
di˘_èbÀ_t
 *
èbÀ
) {

1017 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

1018 i‡(!
èbÀ
->
ˇn_be_evi˘ed
) {

1019 
	`di˘_èbÀ_move_‰om_n⁄_Ãu_to_Ãu
(
èbÀ
);

1021 
èbÀ
->
ex∂icôly_n⁄_Ãu
 = 
Ál£
;

1022 
	}
}

1028 
UNIV_INLINE


1029 
	$di˘_èbÀ_ddl_acquúe
(
di˘_èbÀ_t
 *
èbÀ
) {

1030 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

1031 i‡(
èbÀ
->
ˇn_be_evi˘ed
) {

1032 
	`ut_ad
(!
èbÀ
->
ddl_nŸ_evi˘abÀ
);

1033 
	`di˘_èbÀ_¥evít_evi˘i⁄
(
èbÀ
);

1034 
èbÀ
->
ddl_nŸ_evi˘abÀ
 = 
åue
;

1036 
	}
}

1041 
UNIV_INLINE


1042 
	$di˘_èbÀ_ddl_ªÀa£
(
di˘_èbÀ_t
 *
èbÀ
) {

1043 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

1044 i‡(
èbÀ
->
ddl_nŸ_evi˘abÀ
) {

1045 
	`ut_ad
(!
èbÀ
->
ˇn_be_evi˘ed
);

1046 
	`di˘_èbÀ_Ælow_evi˘i⁄
(
èbÀ
);

1047 
èbÀ
->
ddl_nŸ_evi˘abÀ
 = 
Ál£
;

1049 
	}
}

1054 
UNIV_INLINE


1055 
boﬁ
 
	$di˘_èbÀ_is_disˇrded
(

1056 c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

1058  (
	`DICT_TF2_FLAG_IS_SET
(
èbÀ
, 
DICT_TF2_DISCARDED
));

1059 
	}
}

1061 #i‚de‡
UNIV_HOTBACKUP


1065 
UNIV_INLINE


1066 
boﬁ
 
	$di˘_èbÀ_is_èbÀ_buf„r
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

1067  (
èbÀ
 =
di˘_sys
->
dy«mic_mëad©a
);

1068 
	}
}

1074 
UNIV_INLINE


1075 
boﬁ
 
	$di˘_èbÀ_ö_sh¨ed_èbÀ•a˚
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

1076  (
	`f•_is_sy°em_‹_ãmp_èbÀ•a˚
(
èbÀ
->
•a˚
) ||

1077 
	`DICT_TF_HAS_SHARED_SPACE
(
èbÀ
->
Êags
));

1078 
	}
}

1080 #i‚de‡
UNIV_HOTBACKUP


1088 
UNIV_INLINE


1089 
boﬁ
 
	$di˘_èbÀ_is_lockög_dißbÀd
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

1090  (
èbÀ
->
	`is_öåösic
(Ë|| 
	`di˘_èbÀ_is_èbÀ_buf„r
(table));

1091 
	}
}

1095 
UNIV_INLINE


1096 
	$di˘_dißbÀ_ªdo_if_ãmp‹¨y
(

1097 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

1098 
må_t
 *
må
)

1100 i‡(
èbÀ
->
	`is_ãmp‹¨y
()) {

1101 
	`må_£t_log_mode
(
må
, 
MTR_LOG_NO_REDO
);

1103 
	}
}

1121 
UNIV_INLINE


1122 
boﬁ
 
	$di˘_èbÀ_is_fûe_≥r_èbÀ
(

1123 c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

1125 
boﬁ
 
is_fûe_≥r_èbÀ
 = !
	`f•_is_sy°em_‹_ãmp_èbÀ•a˚
(
èbÀ
->
•a˚
) &&

1126 !
	`DICT_TF_HAS_SHARED_SPACE
(
èbÀ
->
Êags
);

1131 
	`ut_ad
(!
is_fûe_≥r_èbÀ
 || !
	`DICT_TF_GET_COMPACT
(
èbÀ
->
Êags
) ||

1132 (
èbÀ
->
Êags2
 == 0 ||

1133 
	`DICT_TF2_FLAG_IS_SET
(
èbÀ
, 
DICT_TF2_USE_FILE_PER_TABLE
)));

1135  (
is_fûe_≥r_èbÀ
);

1136 
	}
}

1141 
UNIV_INLINE


1142 
di˘_ödex_t
 *
	$di˘_èbÀ_gë_ödex_⁄_fú°_cﬁ
(

1143 
di˘_èbÀ_t
 *
èbÀ
,

1144 
ulöt
 
cﬁ_ödex
)

1147 
	`ut_ad
(
cﬁ_ödex
 < 
èbÀ
->
n_cﬁs
);

1149 
ulöt
 
n⁄_v_cﬁ_ödex
 = 
cﬁ_ödex
;

1150 
di˘_cﬁ_t
 *
cﬁumn
 = 
nuŒ±r
;

1154 
ulöt
 
i
 = 0; i < 
èbÀ
->
n_v_cﬁs
; i++) {

1155 
cﬁumn
 = 
ªöãΩªt_ˇ°
<
di˘_cﬁ_t
 *>(
	`di˘_èbÀ_gë_¡h_v_cﬁ
(
èbÀ
, 
i
));

1157 i‡(
cﬁumn
->
öd
 >
cﬁ_ödex
) {

1161 
n⁄_v_cﬁ_ödex
--;

1164 
cﬁumn
 = 
èbÀ
->
	`gë_cﬁ
(
n⁄_v_cﬁ_ödex
);

1166 
di˘_ödex_t
 *
ödex
 = 
èbÀ
->
	`fú°_ödex
(); index !
nuŒ±r
;

1167 
ödex
 = index->
	`√xt
()) {

1168 i‡(
ödex
->
fõlds
[0].
cﬁ
 =
cﬁumn
) {

1169  (
ödex
);

1172 
ut_îr‹
;

1173 
	}
}

1178 
UNIV_INLINE


1179 
row_id_t
 
	$di˘_èbÀ_gë_√xt_èbÀ_£ss_row_id
(
di˘_èbÀ_t
 *
èbÀ
) {

1180  (++
èbÀ
->
£ss_row_id
);

1181 
	}
}

1186 
UNIV_INLINE


1187 
åx_id_t
 
	$di˘_èbÀ_gë_√xt_èbÀ_£ss_åx_id
(
di˘_èbÀ_t
 *
èbÀ
) {

1188  (++
èbÀ
->
£ss_åx_id
);

1189 
	}
}

1194 
UNIV_INLINE


1195 
åx_id_t
 
	$di˘_èbÀ_gë_cuº_èbÀ_£ss_åx_id
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

1196  (
èbÀ
->
£ss_åx_id
);

1197 
	}
}

1201 
ölöe
 
uöt64_t
 
	gdi˘_èbÀ_t
::
	$gë_ªf_cou¡
(Ëc⁄° {  (
n_ªf_cou¡
); 
	}
}

1204 
ölöe
 
	gdi˘_èbÀ_t
::
	$acquúe
() {

1205 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
Ë|| 
	`is_öåösic
());

1206 
	`MONITOR_INC
(
MONITOR_TABLE_REFERENCE
);

1207 ++
n_ªf_cou¡
;

1208 
	}
}

1210 
ölöe
 
	gdi˘_èbÀ_t
::
	$acquúe_wôh_lock
() {

1211 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

1212 
	`ut_ad
(!
	`is_öåösic
());

1219 
	`lock
();

1220 
	`MONITOR_INC
(
MONITOR_TABLE_REFERENCE
);

1221 ++
n_ªf_cou¡
;

1222 
	`u∆ock
();

1223 
	}
}

1226 
ölöe
 
	gdi˘_èbÀ_t
::
	$ªÀa£
() {

1227 
	`ut_ad
(
n_ªf_cou¡
 > 0);

1228 
	`MONITOR_DEC
(
MONITOR_TABLE_REFERENCE
);

1229 --
n_ªf_cou¡
;

1230 
	}
}

1232 #i‚de‡
UNIV_HOTBACKUP


1236 
ölöe
 
	$di˘_èbÀ_muãx_Æloc
(*
èbÀ_void
) {

1237 
di˘_èbÀ_t
 *
èbÀ
 = 
°©ic_ˇ°
<di˘_èbÀ_à*>(
èbÀ_void
);

1239 
èbÀ
->
muãx
 = 
	`UT_NEW_NOKEY
(
	`ib_muãx_t
());

1240 
	`ut_ad
(
èbÀ
->
muãx
 !
nuŒ±r
);

1241 
	`muãx_¸óã
(
LATCH_ID_DICT_TABLE
, 
èbÀ
->
muãx
);

1242 
	}
}

1246 
ölöe
 
	gdi˘_èbÀ_t
::
	$lock
() {

1247 #i‚de‡
UNIV_HOTBACKUP


1248 
os_⁄˚
::
	`do_‹_waô_f‹_d⁄e
(&
muãx_¸óãd
, 
di˘_èbÀ_muãx_Æloc
, 
this
);

1250 
	`muãx_íãr
(
muãx
);

1252 
	}
}

1255 
ölöe
 
	gdi˘_èbÀ_t
::
	$u∆ock
() {

1256 #i‚de‡
UNIV_HOTBACKUP


1257 
	`muãx_exô
(
muãx
);

1259 
	}
}

1265 
ölöe
 
boﬁ
 
	$di˘_èbÀ_has_ãmp_gíîÆ_èbÀ•a˚_«me
(

1266 c⁄° *
èbÀ•a˚_«me
) {

1267  (
èbÀ•a˚_«me
 !
nuŒ±r
 &&

1268 
	`°∫cmp
(
èbÀ•a˚_«me
, 
gíîÆ_•a˚_«me
,

1269 
	`°æí
(
gíîÆ_•a˚_«me
)) == 0);

1270 
	}
}

1276 
UNIV_INLINE


1277 
	$di˘_èbÀ_autoöc_≥rsi°ed_upd©e
(
di˘_èbÀ_t
 *
èbÀ
,

1278 
ib_uöt64_t
 
autoöc
) {

1279 #i‚de‡
UNIV_HOTBACKUP


1280 
	`ut_ad
(
	`di˘_èbÀ_has_autoöc_cﬁ
(
èbÀ
));

1281 
	`ut_ad
(
	`muãx_own
(
èbÀ
->
autoöc_≥rsi°ed_muãx
));

1284 
èbÀ
->
autoöc_≥rsi°ed
 = 
autoöc
;

1285 
	}
}

1290 
UNIV_INLINE


1291 
boﬁ
 
	$di˘_èbÀ_has_autoöc_cﬁ
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

1292  (
èbÀ
->
autoöc_fõld_no
 !
ULINT_UNDEFINED
);

1293 
	}
}

1298 
UNIV_INLINE


1299 
	$di˘_èbÀ_autoöc_£t_cﬁ_pos
(
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
pos
) {

1300 
ulöt
 
önodb_pos
 = 
	`di˘_èbÀ_mysql_pos_to_önodb
(
èbÀ
, 
pos
);

1302 
ulöt
 
idx
 = 
	`di˘_èbÀ_gë_¡h_cﬁ_pos
(
èbÀ
, 
önodb_pos
);

1304 
èbÀ
->
autoöc_fõld_no
 = 
idx
;

1305 
	}
}

1313 
UNIV_INLINE


1314 
ulöt
 
	$di˘_èbÀ_ícode_n_cﬁ
(
ulöt
 
n_cﬁ
, ulöà
n_v_cﬁ
) {

1315  (
n_cﬁ
 + (
n_v_cﬁ
 << 16));

1316 
	}
}

1322 
UNIV_INLINE


1323 
	$di˘_èbÀ_decode_n_cﬁ
(
uöt32_t
 
ícoded
, uöt32_à*
n_cﬁ
,

1324 
uöt32_t
 *
n_v_cﬁ
) {

1325 
uöt32_t
 
num
 = 
ícoded
 & ~
DICT_N_COLS_COMPACT
;

1326 *
n_v_cﬁ
 = 
num
 >> 16;

1327 *
n_cﬁ
 = 
num
 & 0xFFFF;

1328 
	}
}

1332 
UNIV_INLINE


1333 
	$di˘_‰ì_vc_ãm∂
(
di˘_vcﬁ_ãm∂_t
 *
vc_ãm∂
) {

1334 i‡(
vc_ãm∂
->
vãm∂
 !
nuŒ±r
) {

1335 
	`ut_ad
(
vc_ãm∂
->
n_v_cﬁ
 > 0);

1336 
ulöt
 
i
 = 0; i < 
vc_ãm∂
->
n_cﬁ
 + vc_ãm∂->
n_v_cﬁ
; i++) {

1337 i‡(
vc_ãm∂
->
vãm∂
[
i
] !
nuŒ±r
) {

1338 
	`ut_‰ì
(
vc_ãm∂
->
vãm∂
[
i
]);

1341 
	`ut_‰ì
(
vc_ãm∂
->
deÁu…_ªc
);

1342 
	`ut_‰ì
(
vc_ãm∂
->
vãm∂
);

1343 
vc_ãm∂
->
vãm∂
 = 
nuŒ±r
;

1345 
	}
}

1350 
UNIV_INLINE


1351 
boﬁ
 
	$di˘_èbÀ_have_vútuÆ_ödex
(
di˘_èbÀ_t
 *
èbÀ
) {

1352 
ulöt
 
cﬁ_no
 = 0; cﬁ_nÿ< 
	`di˘_èbÀ_gë_n_v_cﬁs
(
èbÀ
); col_no++) {

1353 c⁄° 
di˘_v_cﬁ_t
 *
cﬁ
 = 
	`di˘_èbÀ_gë_¡h_v_cﬁ
(
èbÀ
, 
cﬁ_no
);

1355 i‡(
cﬁ
->
m_cﬁ
.
‹d_∑π
) {

1356  (
åue
);

1360  (
Ál£
);

1361 
	}
}

1364 
UNIV_INLINE


1365 
	$di˘_Æloˇã_mem_öåösic_ˇche
(
di˘_ödex_t
 *
ödex
) {

1366 
ödex
->
œ°_ös_cur
 = 
°©ic_ˇ°
<
œ°_›s_cur_t
 *>(

1367 
	`mem_hóp_Æloc
(
ödex
->
hóp
, (
œ°_›s_cur_t
)));

1369 
	`√w
 (
ödex
->
œ°_ös_cur
Ë
	`œ°_›s_cur_t
();

1371 
ödex
->
œ°_£l_cur
 = 
°©ic_ˇ°
<
œ°_›s_cur_t
 *>(

1372 
	`mem_hóp_Æloc
(
ödex
->
hóp
, (
œ°_›s_cur_t
)));

1374 
	`√w
 (
ödex
->
œ°_£l_cur
Ë
	`œ°_›s_cur_t
();

1375 
	}
}

1380 
UNIV_INLINE


1381 
uöt64_t
 
	$di˘_sdi_gë_èbÀ_id
(
•a˚_id_t
 
•a˚_id
) {

1382  ((~0ULL << 32Ë| 
•a˚_id
);

1383 
	}
}

1388 
UNIV_INLINE


1389 
•a˚_id_t
 
	$di˘_sdi_gë_•a˚_id
(
èbÀ_id_t
 
èbÀ_id
) {

1390  (
°©ic_ˇ°
<
•a˚_id_t
>(
èbÀ_id
));

1391 
	}
}

1396 
UNIV_INLINE


1397 
boﬁ
 
	$di˘_ödex_is_sdi
(c⁄° 
di˘_ödex_t
 *
ödex
) {

1398  (
ödex
->
ty≥
 & 
DICT_SDI
);

1399 
	}
}

1404 
UNIV_INLINE


1405 
boﬁ
 
	$di˘_èbÀ_is_sdi
(
èbÀ_id_t
 
èbÀ_id
) {

1409  (
èbÀ_id
 >
	`di˘_sdi_gë_èbÀ_id
(
SYSTEM_TABLE_SPACE
));

1410 
	}
}

1414 
UNIV_INLINE


1415 
•a˚_ödex_t
 
	$di˘_sdi_gë_ödex_id
(Ë{  (
IB_UINT64_MAX
); 
	}
}

1419 
ölöe
 
boﬁ
 
	gdi˘_èbÀ_t
::
	$skù_g≠_locks
() const {

1420  (
is_dd_èbÀ
 || 
	`di˘_èbÀ_is_sdi
(
id
));

1421 
	}
}

1424 
ölöe
 
boﬁ
 
	gdi˘_èbÀ_t
::
	$suµ‹t_ö°™t_add
() const {

1425  (!
	`DICT_TF_GET_ZIP_SSIZE
(
Êags
Ë&& 
•a˚
 !
di˘_sys_t
::
s_•a˚_id
 &&

1426 !
	`DICT_TF2_FLAG_IS_SET
(
this
, 
DICT_TF2_FTS_HAS_DOC_ID
) &&

1427 !
	`is_ãmp‹¨y
());

1428 
	}
}

1436 
UNIV_INLINE


1437 
boﬁ
 
	$di˘_èbÀ_is_∑πôi⁄
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

1438  (
di˘_«me
::
	`is_∑πôi⁄
(
èbÀ
->
«me
.
m_«me
));

1439 
	}
}

	@dict0load.h

34 #i‚de‡
di˘0lﬂd_h


35 
	#di˘0lﬂd_h


	)

37 
	~"bå0ty≥s.h
"

38 
	~"di˘0ty≥s.h
"

39 
	~"fû0fû.h
"

40 
	~"mem0mem.h
"

41 
	~"åx0ty≥s.h
"

42 
	~"univ.i
"

43 
	~"ut0byã.h
"

44 
	~"ut0√w.h
"

46 
	~<deque
>

49 
	g°d
::
	tdeque
<c⁄° *, 
	tut_Æloˇt‹
<c⁄° *>> 
	tdi˘_«mes_t
;

52 
	edi˘_sy°em_id_t
 {

53 
	mSYS_TABLES
 = 0,

54 
	mSYS_INDEXES
,

55 
	mSYS_COLUMNS
,

56 
	mSYS_FIELDS
,

57 
	mSYS_FOREIGN
,

58 
	mSYS_FOREIGN_COLS
,

59 
	mSYS_TABLESPACES
,

60 
	mSYS_DATAFILES
,

61 
	mSYS_VIRTUAL
,

64 
	mSYS_NUM_SYSTEM_TABLES


68 
	edi˘_èbÀ_öfo_t
 {

69 
	mDICT_TABLE_LOAD_FROM_RECORD
 = 0,

72 
	mDICT_TABLE_LOAD_FROM_CACHE
 = 1

76 c⁄° *
SYSTEM_TABLE_NAME
[];

81 *
di˘_gë_fú°_èbÀ_«me_ö_db
(

82 c⁄° *
«me
);

88 *
di˘_gë_fú°_∑th
(
ulöt
 
•a˚_id
);

94 
di˘_gë_™d_ßve_d©a_dú_∑th
(
di˘_èbÀ_t
 *
èbÀ
, 
boﬁ
 
di˘_muãx_own
);

101 
di˘_gë_™d_ßve_•a˚_«me
(
di˘_èbÀ_t
 *
èbÀ
, 
boﬁ
 
di˘_muãx_own
);

118 
di˘_èbÀ_t
 *
di˘_lﬂd_èbÀ
(c⁄° *
«me
, 
boﬁ
 
ˇched
,

119 
di˘_îr_ign‹e_t
 
ign‹e_îr
,

120 c⁄° 
°d
::
°rög
 *
¥ev_èbÀ
 = 
nuŒ±r
);

125 
di˘_lﬂd_sys_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
);

135 
dbîr_t
 
	$di˘_lﬂd_f‹eigns
(

136 c⁄° *
èbÀ_«me
,

137 c⁄° **
cﬁ_«mes
,

139 
boﬁ
 
check_ªcursive
,

142 
boﬁ
 
check_ch¨£ts
,

144 
di˘_îr_ign‹e_t
 
ign‹e_îr
,

145 
di˘_«mes_t
 &
fk_èbÀs
)

149 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

153 c⁄° 
ªc_t
 *
	`di˘_°¨tsˇn_sy°em
(

154 
bå_pcur_t
 *
pcur
,

156 
må_t
 *
må
,

157 
di˘_sy°em_id_t
 
sy°em_id
);

160 c⁄° 
ªc_t
 *
	`di˘_gë√xt_sy°em
(
bå_pcur_t
 *
pcur
,

162 
må_t
 *
må
);

167 c⁄° *
	`di˘_¥o˚ss_sys_èbÀ•a˚s
(

168 
mem_hóp_t
 *
hóp
,

169 c⁄° 
ªc_t
 *
ªc
,

170 
•a˚_id_t
 *
•a˚
,

171 c⁄° **
«me
,

172 
uöt32_t
 *
Êags
);

177 
	`di˘_lﬂd_èbÀ•a˚
(
di˘_èbÀ_t
 *
èbÀ
, 
mem_hóp_t
 *
hóp
,

178 
di˘_îr_ign‹e_t
 
ign‹e_îr
);

187 
	`di˘_ßve_d©a_dú_∑th
(
di˘_èbÀ_t
 *
èbÀ
, *
fûï©h
);

190 
	`di˘_lﬂd_èbÀ•a˚s_f‹_upgøde
();

193 
	s•a˚_com∑ª
 {

194 
boﬁ
 
	`›î©‹
()(c⁄° 
fû_•a˚_t
 *
lhs
, c⁄° fû_•a˚_à*
rhs
) const {

195  (
lhs
->
id
 < 
rhs
->id);

203 
usög
 
missög_sys_tbl•_t
 = 
°d
::
£t
<
fû_•a˚_t
 *, 
•a˚_com∑ª
>;

204 
missög_sys_tbl•_t
 
missög_•a˚s
;

210 
boﬁ
 
has_disˇrded_èbÀ•a˚s
;

	@dict0mem.h

34 #i‚de‡
di˘0mem_h


35 
	#di˘0mem_h


	)

37 
	~"sql/dd/obje˘_id.h
"

38 
	~"sql/dd/ty≥s/cﬁumn.h
"

39 
	~"univ.i
"

40 #ifde‡
UNIV_HOTBACKUP


41 
	~"sql/dd/ty≥s/•©ül_ª„ªn˚_sy°em.h
"

43 
	~"bå0ty≥s.h
"

44 
	~"d©a0ty≥.h
"

45 
	~"di˘0ty≥s.h
"

46 
	~"mem0mem.h
"

47 
	~"ªm0ty≥s.h
"

48 
	~"row0ty≥s.h
"

49 #i‚de‡
UNIV_HOTBACKUP


50 
	~"lock0ty≥s.h
"

51 
	~"que0ty≥s.h
"

53 
	~"hash0hash.h
"

54 
	~"sync0rw.h
"

55 
	~"åx0ty≥s.h
"

56 
	~"ut0byã.h
"

57 
	~"ut0mem.h
"

58 
	~"ut0∫d.h
"

59 #i‚de‡
UNIV_HOTBACKUP


60 
	~"·s0·s.h
"

62 
	~"buf0buf.h
"

63 
	~"gis0ty≥.h
"

64 #i‚de‡
UNIV_HOTBACKUP


65 
	~"os0⁄˚.h
"

67 
	~"di˘/mem.h
"

68 
	~"ut0√w.h
"

70 
	~"sql/sql_c⁄°.h
"

72 
	~<Æg‹ôhm
>

73 
	~<ôî©‹
>

74 
	~<mem‹y
>

75 
	~<£t
>

76 
	~<°rög
>

77 
	~<ve˘‹
>

80 
	gib_rbt_t
;

85 
	#DICT_CLUSTERED
 \

86 1

	)

89 
	#DICT_UNIQUE
 2

	)

90 
	#DICT_IBUF
 8

	)

91 
	#DICT_CORRUPT
 \

92 16

	)

94 
	#DICT_FTS
 \

95 32

	)

97 
	#DICT_SPATIAL
 \

98 64

	)

100 
	#DICT_VIRTUAL
 128

	)

102 
	#DICT_SDI
 \

103 256

	)

105 
	#DICT_MULTI_VALUE
 512

	)

107 
	#DICT_IT_BITS
 \

108 10

	)

114 
	#DICT_TABLE_ORDINARY
 1

	)

115 
	#DICT_TABLE_CLUSTER_MEMBER
 2

	)

116 
	#DICT_TABLE_CLUSTER
 \

117 3

	)

142 
	#DICT_TF_REDUNDANT
 0

	)

144 
	#DICT_TF_COMPACT
 1

	)

148 
	#DICT_N_COLS_COMPACT
 0x80000000UL

	)

151 
	#DICT_TF_WIDTH_COMPACT
 1

	)

154 
	#DICT_TF_WIDTH_ZIP_SSIZE
 4

	)

162 
	#DICT_TF_WIDTH_ATOMIC_BLOBS
 1

	)

168 
	#DICT_TF_WIDTH_DATA_DIR
 1

	)

176 
	#DICT_TF_WIDTH_SHARED_SPACE
 1

	)

179 
	#DICT_TF_BITS
 \

180 (
DICT_TF_WIDTH_COMPACT
 + 
DICT_TF_WIDTH_ZIP_SSIZE
 + \

181 
DICT_TF_WIDTH_ATOMIC_BLOBS
 + 
DICT_TF_WIDTH_DATA_DIR
 + \

182 
DICT_TF_WIDTH_SHARED_SPACE
)

	)

185 
	#DICT_TF_BIT_MASK
 (~(~0 << 
DICT_TF_BITS
))

	)

188 
	#DICT_TF_POS_COMPACT
 0

	)

190 
	#DICT_TF_POS_ZIP_SSIZE
 (
DICT_TF_POS_COMPACT
 + 
DICT_TF_WIDTH_COMPACT
)

	)

192 
	#DICT_TF_POS_ATOMIC_BLOBS
 \

193 (
DICT_TF_POS_ZIP_SSIZE
 + 
DICT_TF_WIDTH_ZIP_SSIZE
)

	)

195 
	#DICT_TF_POS_DATA_DIR
 \

196 (
DICT_TF_POS_ATOMIC_BLOBS
 + 
DICT_TF_WIDTH_ATOMIC_BLOBS
)

	)

198 
	#DICT_TF_POS_SHARED_SPACE
 (
DICT_TF_POS_DATA_DIR
 + 
DICT_TF_WIDTH_DATA_DIR
)

	)

200 
	#DICT_TF_POS_UNUSED
 \

201 (
DICT_TF_POS_SHARED_SPACE
 + 
DICT_TF_WIDTH_SHARED_SPACE
)

	)

204 
	#DICT_TF_MASK_COMPACT
 \

205 ((~(~0U << 
DICT_TF_WIDTH_COMPACT
)Ë<< 
DICT_TF_POS_COMPACT
)

	)

207 
	#DICT_TF_MASK_ZIP_SSIZE
 \

208 ((~(~0U << 
DICT_TF_WIDTH_ZIP_SSIZE
)Ë<< 
DICT_TF_POS_ZIP_SSIZE
)

	)

210 
	#DICT_TF_MASK_ATOMIC_BLOBS
 \

211 ((~(~0U << 
DICT_TF_WIDTH_ATOMIC_BLOBS
)Ë<< 
DICT_TF_POS_ATOMIC_BLOBS
)

	)

213 
	#DICT_TF_MASK_DATA_DIR
 \

214 ((~(~0U << 
DICT_TF_WIDTH_DATA_DIR
)Ë<< 
DICT_TF_POS_DATA_DIR
)

	)

216 
	#DICT_TF_MASK_SHARED_SPACE
 \

217 ((~(~0U << 
DICT_TF_WIDTH_SHARED_SPACE
)Ë<< 
DICT_TF_POS_SHARED_SPACE
)

	)

220 
	#DICT_TF_GET_COMPACT
(
Êags
) \

221 ((
Êags
 & 
DICT_TF_MASK_COMPACT
Ë>> 
DICT_TF_POS_COMPACT
)

	)

223 
	#DICT_TF_GET_ZIP_SSIZE
(
Êags
) \

224 ((
Êags
 & 
DICT_TF_MASK_ZIP_SSIZE
Ë>> 
DICT_TF_POS_ZIP_SSIZE
)

	)

226 
	#DICT_TF_HAS_ATOMIC_BLOBS
(
Êags
) \

227 ((
Êags
 & 
DICT_TF_MASK_ATOMIC_BLOBS
Ë>> 
DICT_TF_POS_ATOMIC_BLOBS
)

	)

229 
	#DICT_TF_HAS_DATA_DIR
(
Êags
) \

230 ((
Êags
 & 
DICT_TF_MASK_DATA_DIR
Ë>> 
DICT_TF_POS_DATA_DIR
)

	)

232 
	#DICT_TF_HAS_SHARED_SPACE
(
Êags
) \

233 ((
Êags
 & 
DICT_TF_MASK_SHARED_SPACE
Ë>> 
DICT_TF_POS_SHARED_SPACE
)

	)

235 
	#DICT_TF_GET_UNUSED
(
Êags
Ë(Êag†>> 
DICT_TF_POS_UNUSED
)

	)

247 
	#DICT_TF2_BITS
 11

	)

248 
	#DICT_TF2_UNUSED_BIT_MASK
 (~0U << 
DICT_TF2_BITS
)

	)

249 
	#DICT_TF2_BIT_MASK
 ~
DICT_TF2_UNUSED_BIT_MASK


	)

252 
	#DICT_TF2_TEMPORARY
 1

	)

255 
	#DICT_TF2_FTS_HAS_DOC_ID
 2

	)

258 
	#DICT_TF2_FTS
 4

	)

262 
	#DICT_TF2_FTS_ADD_DOC_ID
 8

	)

266 
	#DICT_TF2_USE_FILE_PER_TABLE
 16

	)

269 
	#DICT_TF2_DISCARDED
 32

	)

275 
	#DICT_TF2_INTRINSIC
 128

	)

278 
	#DICT_TF2_ENCRYPTION_FILE_PER_TABLE
 256

	)

281 
	#DICT_TF2_AUX
 512

	)

284 
	#DICT_TF2_RESURRECT_PREPARED
 1024

	)

287 
	#DICT_TF2_FLAG_SET
(
èbÀ
, 
Êag
Ë—abÀ->
Êags2
 |(Êag))

	)

289 
	#DICT_TF2_FLAG_IS_SET
(
èbÀ
, 
Êag
Ë—abÀ->
Êags2
 & (Êag))

	)

291 
	#DICT_TF2_FLAG_UNSET
(
èbÀ
, 
Êag
Ë—abÀ->
Êags2
 &~(Êag))

	)

299 
	#DICT_FK_MAX_RECURSIVE_LOAD
 20

	)

307 
	#FK_MAX_CASCADE_DEL
 15

	)

324 
di˘_v_cﬁ_t
 *
di˘_mem_èbÀ_add_v_cﬁ
(
di˘_èbÀ_t
 *
èbÀ
, 
mem_hóp_t
 *
hóp
,

325 c⁄° *
«me
, 
ulöt
 
mty≥
,

326 
ulöt
 
¥ty≥
, ulöà
Àn
, ulöà
pos
,

327 
ulöt
 
num_ba£
, 
boﬁ
 
is_visibÀ
);

332 
di˘_mem_èbÀ_add_s_cﬁ
(
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
num_ba£
);

340 
di˘_mem_èbÀ_cﬁ_ª«me
(
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
¡h_cﬁ
,

341 c⁄° *
‰om
, c⁄° *
to
,

342 
boﬁ
 
is_vútuÆ
);

355 
UNIV_INLINE
 
di˘_mem_fûl_ödex_°ru˘
(
di˘_ödex_t
 *
ödex
,

356 
mem_hóp_t
 *
hóp
,

357 c⁄° *
èbÀ_«me
,

358 c⁄° *
ödex_«me
, 
ulöt
 
•a˚
,

359 
ulöt
 
ty≥
, ulöà
n_fõlds
);

362 
di˘_mem_ödex_‰ì
(
di˘_ödex_t
 *
ödex
);

365 
di˘_f‹eign_t
 *
di˘_mem_f‹eign_¸óã
();

371 
di˘_mem_f‹eign_èbÀ_«me_lookup_£t
(

372 
di˘_f‹eign_t
 *
f‹eign
,

373 
iboﬁ
 
do_Æloc
);

379 
di˘_mem_ª„ªn˚d_èbÀ_«me_lookup_£t
(

380 
di˘_f‹eign_t
 *
f‹eign
,

381 
iboﬁ
 
do_Æloc
);

388 
di˘_mem_f‹eign_fûl_vcﬁ_£t
(
di˘_f‹eign_t
 *
f‹eign
);

392 
di˘_mem_èbÀ_fûl_f‹eign_vcﬁ_£t
(
di˘_èbÀ_t
 *
èbÀ
);

396 
di˘_mem_èbÀ_‰ì_f‹eign_vcﬁ_£t
(
di˘_èbÀ_t
 *
èbÀ
);

410 *
di˘_mem_¸óã_ãmp‹¨y_èbÀ«me
(
mem_hóp_t
 *
hóp
, c⁄° *
dbèb
,

411 
èbÀ_id_t
 
id
);

414 
di˘_mem_öô
();

417 ˛as†
	cid_«me_t
 {

418 
	mpublic
:

420 
	$id_«me_t
(Ë: 
	$m_«me
() {}

423 
ex∂icô
 
	$id_«me_t
(c⁄° *
«me
Ë: 
	$m_«me
(
«me
Ë{
	}
}

427 
id_«me_t
 &
›î©‹
=(c⁄° *
«me
) {

428 
m_«me
 = 
«me
;

429  (*
	gthis
);

434 
›î©‹
 c⁄° *(Ëc⁄° {  (
	gm_«me
); }

438 c⁄° *
	$›î©‹
()(Ëc⁄° {  (
m_«me
); 
	}
}

440 
	g¥iv©e
:

442 c⁄° *
m_«me
;

446 
	sèbÀ_«me_t
 {

448 *
	mm_«me
;

452 
	sdi˘_cﬁ_deÁu…_t
 {

454 
di˘_cﬁ_t
 *
	mcﬁ
;

456 
byã
 *
	mvÆue
;

458 
size_t
 
	mÀn
;

460 
boﬁ
 
	m›î©‹
==(c⁄° 
di˘_cﬁ_deÁu…_t
 &
Ÿhî
);

461 
boﬁ
 
	m›î©‹
!=(c⁄° 
di˘_cﬁ_deÁu…_t
 &
Ÿhî
);

465 
	sdi˘_cﬁ_t
 {

473 
di˘_cﬁ_deÁu…_t
 *
	mö°™t_deÁu…
;

475 
	m¥ty≥
 : 32;

482 
	mmty≥
 : 8;

486 
	mÀn
 : 16;

495 
	mmbmömaxÀn
 : 5;

504 
	möd
 : 10;

506 
	m‹d_∑π
 : 1;

509 
	mmax_¥efix
 : 12;

515 
boﬁ
 
	mis_visibÀ
;

519 
ulöt
 
gë_mö_size
() const {

520  (
dty≥_gë_mö_size_low
(
mty≥
, 
¥ty≥
, 
Àn
, 
mbmömaxÀn
));

525 
ulöt
 
gë_max_size
(Ëc⁄° {  (
dty≥_gë_max_size_low
(
mty≥
, 
Àn
)); }

529 
boﬁ
 
is_vútuÆ
(Ëc⁄° {  (
	m¥ty≥
 & 
	mDATA_VIRTUAL
); }

533 
boﬁ
 
is_mu…i_vÆue
(Ëc⁄° {  ((
	m¥ty≥
 & 
	mDATA_MULTI_VALUE
) != 0); }

537 
boﬁ
 
is_nuŒabÀ
(Ëc⁄° {  ((
	m¥ty≥
 & 
	mDATA_NOT_NULL
) == 0); }

541 
c›y_ty≥
(
dty≥_t
 *
ty≥
) const {

542 
ut_ad
(
ty≥
 !
nuŒ±r
);

544 
	mty≥
->
	mmty≥
 = 
mty≥
;

545 
	mty≥
->
	m¥ty≥
 = 
¥ty≥
;

546 
	mty≥
->
	mÀn
 = 
Àn
;

547 
	mty≥
->
	mmbmömaxÀn
 = 
mbmömaxÀn
;

552 
ulöt
 
gë_mbmöÀn
(Ëc⁄° {  (
DATA_MBMINLEN
(
mbmömaxÀn
)); }

556 
ulöt
 
gë_mbmaxÀn
(Ëc⁄° {  (
DATA_MBMAXLEN
(
mbmömaxÀn
)); }

561 
£t_mbmömaxÀn
(
ulöt
 
mbmöÀn
, ulöà
mbmaxÀn
) {

562 
ut_ad
(
mbmöÀn
 < 
DATA_MBMAX
);

563 
ut_ad
(
mbmaxÀn
 < 
DATA_MBMAX
);

564 
ut_ad
(
mbmöÀn
 <
mbmaxÀn
);

566 
	mmbmömaxÀn
 = 
DATA_MBMINMAXLEN
(
mbmöÀn
, 
mbmaxÀn
);

572 
ulöt
 
gë_fixed_size
(ulöà
comp
) const {

573  (
dty≥_gë_fixed_size_low
(
mty≥
, 
¥ty≥
, 
Àn
, 
mbmömaxÀn
, 
comp
));

580 
ulöt
 
gë_nuŒ_size
(ulöà
comp
Ëc⁄° {  (
gë_fixed_size
(comp)); }

584 
•©ül_°©us_t
 
gë_•©ül_°©us
() const {

585 
•©ül_°©us_t
 
	m•©ül_°©us
 = 
SPATIAL_NONE
;

588 i‡(!
	m‹d_∑π
) {

589  (
	m•©ül_°©us
);

592 i‡(
DATA_GEOMETRY_MTYPE
(
mty≥
)) {

593 i‡(
	mmax_¥efix
 == 0) {

594 
•©ül_°©us
 = 
SPATIAL_ONLY
;

598 
	m•©ül_°©us
 = 
SPATIAL_MIXED
;

602  (
	m•©ül_°©us
);

609 
£t_deÁu…
(c⁄° 
byã
 *
vÆue
, 
size_t
 
Àngth
, 
mem_hóp_t
 *
hóp
);

611 #ifde‡
UNIV_DEBUG


615 
boﬁ
 
as£π_equÆ
(c⁄° 
dty≥_t
 *
ty≥
) const {

616 
ut_ad
(
ty≥
);

618 
ut_ad
(
mty≥
 =
ty≥
->mtype);

619 
ut_ad
(
¥ty≥
 =
ty≥
->prtype);

621 #i‚de‡
UNIV_HOTBACKUP


622 
ut_ad
(
mbmömaxÀn
 =
ty≥
->mbminmaxlen);

625  
	måue
;

633 
	sdi˘_v_idx_t
 {

635 
di˘_ödex_t
 *
	mödex
;

638 
ulöt
 
	m¡h_fõld
;

642 
	g°d
::
	tli°
<
	tdi˘_v_idx_t
, 
	tut_Æloˇt‹
<di˘_v_idx_t>> 
	tdi˘_v_idx_li°
;

645 
	sdi˘_v_cﬁ_t
 {

647 
di˘_cﬁ_t
 
	mm_cﬁ
;

650 
di˘_cﬁ_t
 **
	mba£_cﬁ
;

653 
ulöt
 
	mnum_ba£
;

656 
ulöt
 
	mv_pos
;

661 
di˘_v_idx_li°
 *
	mv_ödexes
;

665 
	sdi˘_add_v_cﬁ_t
 {

667 
ulöt
 
	mn_v_cﬁ
;

670 c⁄° 
di˘_v_cﬁ_t
 *
	mv_cﬁ
;

673 c⁄° **
	mv_cﬁ_«me
;

677 
	sdi˘_s_cﬁ_t
 {

679 
di˘_cﬁ_t
 *
	mm_cﬁ
;

681 
di˘_cﬁ_t
 **
	mba£_cﬁ
;

683 
ulöt
 
	mnum_ba£
;

685 
ulöt
 
	ms_pos
;

689 
	g°d
::
	tli°
<
	tdi˘_s_cﬁ_t
, 
	tut_Æloˇt‹
<di˘_s_cﬁ_t>> 
	tdi˘_s_cﬁ_li°
;

702 
	#DICT_ANTELOPE_MAX_INDEX_COL_LEN
 
REC_ANTELOPE_MAX_INDEX_COL_LEN


	)

709 
	#DICT_MAX_FIELD_LEN_BY_FORMAT
(
èbÀ
) \

710 (
	`di˘_èbÀ_has_©omic_blobs
(
èbÀ
Ë? 
REC_VERSION_56_MAX_INDEX_COL_LEN
 \

711 : 
REC_ANTELOPE_MAX_INDEX_COL_LEN
 - 1)

	)

713 
	#DICT_MAX_FIELD_LEN_BY_FORMAT_FLAG
(
Êags
) \

714 (
	`DICT_TF_HAS_ATOMIC_BLOBS
(
Êags
Ë? 
REC_VERSION_56_MAX_INDEX_COL_LEN
 \

715 : 
REC_ANTELOPE_MAX_INDEX_COL_LEN
 - 1)

	)

718 
	#DICT_MAX_FIXED_COL_LEN
 
DICT_ANTELOPE_MAX_INDEX_COL_LEN


	)

721 
	sdi˘_fõld_t
 {

722 
di˘_fõld_t
(Ë: 
cﬁ
(
nuŒ±r
), 
¥efix_Àn
(0), 
fixed_Àn
(0), 
is_as˚ndög
(0) {}

724 
di˘_cﬁ_t
 *
	mcﬁ
;

725 
id_«me_t
 
	m«me
;

726 
	m¥efix_Àn
 : 12;

734 
	mfixed_Àn
 : 10;

737 
	mis_as˚ndög
 : 1;

761 
	#ZIP_PAD_ROUND_LEN
 (128)

	)

764 
	#ZIP_PAD_SUCCESSFUL_ROUND_LIMIT
 (5)

	)

767 
	#ZIP_PAD_INCR
 (128)

	)

771 
ul⁄g
 
zù_Áûuª_thªshﬁd_p˘
;

775 
ul⁄g
 
zù_∑d_max
;

780 
	szù_∑d_öfo_t
 {

781 
SysMuãx
 *
	mmuãx
;

782 
	m°d
::
©omic
<
ulöt
> 
∑d
;

783 
ulöt
 
	msuc˚ss
;

785 
ulöt
 
	mÁûuª
;

787 
ulöt
 
	mn_rounds
;

789 #i‚de‡
UNIV_HOTBACKUP


790 
	m°d
::
©omic
<
os_⁄˚
::
°©e_t
> 
muãx_¸óãd
;

798 ˛as†
	cªc_ˇche_t
 {

799 
	mpublic
:

801 
	$ªc_ˇche_t
()

802 : 
	`ªc_size
(),

803 
	`off£ts
(),

804 
	`sz_of_off£ts
(),

805 
	`fixed_Àn_key
(),

806 
	`off£ts_ˇched
(),

807 
	$key_has_nuŒ_cﬁs
() {

811 
public
:

813 
ulöt
 
ªc_size
;

816 
ulöt
 *
off£ts
;

819 
uöt32_t
 
sz_of_off£ts
;

822 
boﬁ
 
fixed_Àn_key
;

825 
boﬁ
 
off£ts_ˇched
;

829 
boﬁ
 
key_has_nuŒ_cﬁs
;

830 
	}
};

836 ˛as†
	cœ°_›s_cur_t
 {

837 
	mpublic
:

839 
	$œ°_›s_cur_t
(Ë: 
	`ªc
(), 
	`block
(), 
	`må
(), 
	`dißbÀ_ˇchög
(), 
	$övÆid
() {

844 
	$ªÀa£
() {

845 i‡(
må
.
	`is_a˘ive
()) {

846 
	`må_commô
(&
må
);

848 
ªc
 = 
nuŒ±r
;

849 
block
 = 
nuŒ±r
;

850 
övÆid
 = 
Ál£
;

851 
	}
}

853 
	gpublic
:

855 
ªc_t
 *
ªc
;

858 
buf_block_t
 *
	gblock
;

861 
må_t
 
	gmå
;

864 
boﬁ
 
	gdißbÀ_ˇchög
;

869 
boﬁ
 
	gövÆid
;

874 c⁄° 
	gönoba£_ödex_ª£rve_«me
[] = "GEN_CLUST_INDEX";

876 
«me•a˚
 
	gdd
 {

877 
˛ass
 
	gS∑tül_ª„ªn˚_sy°em
;

882 
	sdi˘_ödex_t
 {

883 
•a˚_ödex_t
 
	mid
;

884 
mem_hóp_t
 *
	mhóp
;

885 
id_«me_t
 
	m«me
;

886 c⁄° *
	mèbÀ_«me
;

887 
di˘_èbÀ_t
 *
	mèbÀ
;

888 
	m•a˚
 : 32;

890 
	m∑ge
 : 32;

891 
	mmîge_thªshﬁd
 : 6;

895 
	#DICT_INDEX_MERGE_THRESHOLD_DEFAULT
 50

	)

896 
	mty≥
 : 
DICT_IT_BITS
;

899 
	#MAX_KEY_LENGTH_BITS
 12

	)

900 
	måx_id_off£t
 : 
MAX_KEY_LENGTH_BITS
;

905 #i‡(1 << 
MAX_KEY_LENGTH_BITS
Ë< 
MAX_KEY_LENGTH


906 #îr‹(1<<
MAX_KEY_LENGTH_BITS
Ë< 
MAX_KEY_LENGTH


908 
	mn_u£r_deföed_cﬁs
 : 10;

912 
	mÆlow_du∂iˇãs
 : 1;

916 
	mnuŒs_equÆ
 : 1;

918 
	mdißbÀ_ahi
 : 1;

924 
	mn_uniq
 : 10;

927 
	mn_def
 : 10;

928 
	mn_fõlds
 : 10;

929 
	mn_nuŒabÀ
 : 10;

930 
	mn_ö°™t_nuŒabÀ
 : 10;

934 
	mˇched
 : 1;

936 
	mto_be_dr›≥d
 : 1;

939 
	m⁄löe_°©us
 : 2;

946 
	muncommôãd
 : 1;

950 
	mö°™t_cﬁs
 : 1;

953 
uöt32_t
 
	m§id
;

954 
boﬁ
 
	m§id_is_vÆid
;

957 
	m°d
::
unique_±r
<
dd
::
S∑tül_ª„ªn˚_sy°em
> 
πr_§s
;

961 #ifde‡
UNIV_DEBUG


962 
uöt32_t
 
	mmagic_n
;

964 
	#DICT_INDEX_MAGIC_N
 76789786

	)

966 
di˘_fõld_t
 *
	mfõlds
;

967 #i‚de‡
UNIV_HOTBACKUP


968 
°_mysql_·∑r£r
 *
	m∑r£r
;

969 
boﬁ
 
	mis_ngøm
;

971 
boﬁ
 
	mhas_√w_v_cﬁ
;

974 
boﬁ
 
	mhiddí
;

976 
UT_LIST_NODE_T
(
di˘_ödex_t
)

977 
	mödexes
;

978 
bå_£¨ch_t
 *
	m£¨ch_öfo
;

980 #i‚de‡
UNIV_HOTBACKUP


981 
row_log_t
 *
	m⁄löe_log
;

989 
ib_uöt64_t
 *
	m°©_n_diff_key_vÆs
;

997 
ib_uöt64_t
 *
	m°©_n_ßm∂e_sizes
;

1002 
ib_uöt64_t
 *
	m°©_n_n⁄_nuŒ_key_vÆs
;

1009 
ulöt
 
	m°©_ödex_size
;

1013 
ulöt
 
	m°©_n_Àaf_∑ges
;

1017 
œ°_›s_cur_t
 *
	mœ°_ös_cur
;

1021 
œ°_›s_cur_t
 *
	mœ°_£l_cur
;

1024 
ªc_ˇche_t
 
	mªc_ˇche
;

1030 
πr_s¢_t
 
	mπr_s¢
;

1031 
πr_öfo_åack_t
 *
	mπr_åack
;

1032 
åx_id_t
 
	måx_id
;

1035 
zù_∑d_öfo_t
 
	mzù_∑d
;

1037 
rw_lock_t
 
	mlock
;

1039 
boﬁ
 
	mfûl_dd
;

1045 
boﬁ
 
is_commôãd
() const {

1046 
ut_ad
(!
uncommôãd
 || !(
ty≥
 & 
DICT_CLUSTERED
));

1047  (
UNIV_LIKELY
(!
uncommôãd
));

1052 
£t_commôãd
(
boﬁ
 
commôãd
) {

1053 
ut_ad
(!
to_be_dr›≥d
);

1054 
ut_ad
(
commôãd
 || !(
ty≥
 & 
DICT_CLUSTERED
));

1055 
	muncommôãd
 = !
commôãd
;

1061 c⁄° 
di˘_ödex_t
 *
√xt
() const {

1062 c⁄° 
di˘_ödex_t
 *
	m√xt
 = 
UT_LIST_GET_NEXT
(
ödexes
, 
this
);

1063 
ut_ad
(
magic_n
 =
DICT_INDEX_MAGIC_N
);

1064  (
	m√xt
);

1069 
di˘_ödex_t
 *
√xt
() {

1070  (
	mc⁄°_ˇ°
<
	mdi˘_ödex_t
 *>(

1071 
	mc⁄°_ˇ°
<c⁄° 
	mdi˘_ödex_t
 *>(
	mthis
)->
√xt
()));

1076 
boﬁ
 
is_c‹ru±ed
() const {

1077 
ut_ad
(
magic_n
 =
DICT_INDEX_MAGIC_N
);

1079  (
	mty≥
 & 
	mDICT_CORRUPT
);

1085 
boﬁ
 
is_˛u°îed
() const {

1086 
ut_ad
(
magic_n
 =
DICT_INDEX_MAGIC_N
);

1088  (
	mty≥
 & 
	mDICT_CLUSTERED
);

1093 
boﬁ
 
is_mu…i_vÆue
() const {

1094 
ut_ad
(
magic_n
 =
DICT_INDEX_MAGIC_N
);

1096  (
	mty≥
 & 
	mDICT_MULTI_VALUE
);

1101 
ulöt
 
gë_mö_size
() const {

1102 
ulöt
 
	msize
 = 0;

1104 
	mi
 = 0; i < 
	mn_fõlds
; i++) {

1105 
	msize
 +
gë_cﬁ
(
i
)->
gë_mö_size
();

1108  (
	msize
);

1113 
boﬁ
 
is_ußbÀ
(c⁄° 
åx_t
 *
åx
) const;

1117 
boﬁ
 
has_ö°™t_cﬁs
(Ëc⁄° {  (
	mö°™t_cﬁs
); }

1122 
boﬁ
 
is_tu∂e_ö°™t_f‹m©
(c⁄° 
uöt16_t
 
n_fõlds_ö_tu∂e
) const;

1127 
uöt32_t
 
gë_n_nuŒabÀ_bef‹e
(uöt32_à
¡h
) const {

1128 
uöt32_t
 
	mnuŒabÀ
 = 
n_nuŒabÀ
;

1130 
ut_ad
(
¡h
 <
n_fõlds
);

1132 
uöt32_t
 
	mi
 = 
¡h
; i < 
	mn_fõlds
; ++i) {

1133 i‡(
gë_fõld
(
i
)->
	mcﬁ
->
is_nuŒabÀ
()) {

1134 --
	mnuŒabÀ
;

1138  (
	mnuŒabÀ
);

1142 
uöt32_t
 
gë_ö°™t_fõlds
() const;

1151 
add_fõld
(c⁄° *
«me_¨g
, 
ulöt
 
¥efix_Àn
, 
boﬁ
 
is_as˚ndög
) {

1152 
di˘_fõld_t
 *
	mfõld
;

1154 
ut_ad
(
magic_n
 =
DICT_INDEX_MAGIC_N
);

1156 
	mn_def
++;

1158 
	mfõld
 = 
gë_fõld
(
n_def
 - 1);

1160 
	mfõld
->
	m«me
 = 
«me_¨g
;

1161 
	mfõld
->
	m¥efix_Àn
 = ()
¥efix_Àn
;

1162 
	mfõld
->
	mis_as˚ndög
 = 
is_as˚ndög
;

1168 
di˘_fõld_t
 *
gë_fõld
(
ulöt
 
pos
) const {

1169 
ut_ad
(
pos
 < 
n_def
);

1170 
ut_ad
(
magic_n
 =
DICT_INDEX_MAGIC_N
);

1172  (
	mfõlds
 + 
	mpos
);

1178 c⁄° 
di˘_cﬁ_t
 *
gë_cﬁ
(
ulöt
 
pos
Ëc⁄° {  (
gë_fõld
’os)->
	mcﬁ
); }

1183 
ulöt
 
gë_cﬁ_no
(ulöà
pos
) const;

1188 
ulöt
 
gë_sys_cﬁ_pos
(ulöà
ty≥
) const;

1196 
ulöt
 
gë_cﬁ_pos
(ulöà
n
, 
boﬁ
 
öc_¥efix
 = 
Ál£
,

1197 
boﬁ
 
is_vútuÆ
 = 
Ál£
) const;

1204 c⁄° 
byã
 *
gë_¡h_deÁu…
(
ulöt
 
¡h
, ulöà*
Àngth
) const {

1205 
ut_ad
(
¡h
 < 
n_fõlds
);

1206 
ut_ad
(
gë_ö°™t_fõlds
(Ë<
¡h
);

1207 c⁄° 
di˘_cﬁ_t
 *
	mcﬁ
 = 
gë_cﬁ
(
¡h
);

1208 i‡(
	mcﬁ
->
	mö°™t_deÁu…
 =
nuŒ±r
) {

1209 *
Àngth
 = 0;

1210  (
	mnuŒ±r
);

1213 *
	mÀngth
 = 
cﬁ
->
ö°™t_deÁu…
->
Àn
;

1214 
ut_ad
(*
Àngth
 =0 || *Àngth =
UNIV_SQL_NULL
 ||

1215 
cﬁ
->
ö°™t_deÁu…
->
vÆue
 !
nuŒ±r
);

1216  (
	mcﬁ
->
	mö°™t_deÁu…
->
	mvÆue
);

1223 
fûl_§id_vÆue
(
uöt32_t
 
§id_vÆue
, 
boﬁ
 
§id_is_vÆid_vÆue
) {

1224 
	m§id_is_vÆid
 = 
§id_is_vÆid_vÆue
;

1225 
	m§id
 = 
§id_vÆue
;

1230 
boﬁ
 
is_com¥es£d
() const;

1239 
uöt32_t
 
has_mu…i_vÆue_cﬁ
(c⁄° 
di˘_v_cﬁ_t
 *
mv_cﬁ
) const {

1240 
ut_ad
(
is_mu…i_vÆue
());

1241 
uöt32_t
 
	mi
 = 0; i < 
	mn_fõlds
; ++i) {

1242 c⁄° 
di˘_cﬁ_t
 *
	mcﬁ
 = 
gë_cﬁ
(
i
);

1243 i‡(
	mmv_cﬁ
->
	mm_cﬁ
.
	möd
 =
cﬁ
->
öd
) {

1244  (
i
 + 1);

1248 i‡(
	mcﬁ
->
is_mu…i_vÆue
()) {

1256 
	mpublic
:

1259 
∑ge_size_t
 
gë_∑ge_size
() const;

1263 
•a˚_id_t
 
•a˚_id
(Ëc⁄° {  
	m•a˚
; }

1267 
	e⁄löe_ödex_°©us
 {

1269 
	mONLINE_INDEX_COMPLETE
 = 0,

1272 
	mONLINE_INDEX_CREATION
,

1278 
	mONLINE_INDEX_ABORTED
,

1283 
	mONLINE_INDEX_ABORTED_DROPPED


1288 
	g°d
::
	t£t
<
	tdi˘_v_cﬁ_t
 *, 
	t°d
::
	tÀss
<dict_v_col_t *>,

1289 
	tut_Æloˇt‹
<
	tdi˘_v_cﬁ_t
 *>>

1290 
	tdi˘_vcﬁ_£t
;

1295 
	sdi˘_f‹eign_t
 {

1296 
mem_hóp_t
 *
	mhóp
;

1298 *
	mid
;

1300 
	mn_fõlds
 : 10;

1306 
	mty≥
 : 6;

1308 *
	mf‹eign_èbÀ_«me
;

1309 *
	mf‹eign_èbÀ_«me_lookup
;

1311 
di˘_èbÀ_t
 *
	mf‹eign_èbÀ
;

1312 c⁄° **
	mf‹eign_cﬁ_«mes
;

1314 *
	mª„ªn˚d_èbÀ_«me
;

1315 *
	mª„ªn˚d_èbÀ_«me_lookup
;

1317 
di˘_èbÀ_t
 *
	mª„ªn˚d_èbÀ
;

1319 c⁄° **
	mª„ªn˚d_cﬁ_«mes
;

1321 
di˘_ödex_t
 *
	mf‹eign_ödex
;

1326 
di˘_ödex_t
 *
	mª„ªn˚d_ödex
;

1328 
di˘_vcﬁ_£t
 *
	mv_cﬁs
;

1332 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gdi˘_f‹eign_t
 &
	gf‹eign
);

1334 
	sdi˘_f‹eign_¥öt
 {

1335 
di˘_f‹eign_¥öt
(
°d
::
o°ªam
 &
out
Ë: 
m_out
(out) {}

1337 
›î©‹
()(c⁄° 
di˘_f‹eign_t
 *
f‹eign
Ë{ 
m_out
 << *foreign; }

1339 
	m¥iv©e
:

1340 
°d
::
o°ªam
 &
m_out
;

1347 
	sdi˘_f‹eign_com∑ª
 {

1348 
boﬁ
 
›î©‹
()(c⁄° 
di˘_f‹eign_t
 *
	mlhs
, c⁄° di˘_f‹eign_à*
	mrhs
) const {

1349  (
ut_°rcmp
(
lhs
->
id
, 
rhs
->id) < 0);

1355 
	sdi˘_f‹eign_wôh_ödex
 {

1356 
di˘_f‹eign_wôh_ödex
(c⁄° 
di˘_ödex_t
 *
ödex
Ë: 
m_ödex
(index) {}

1358 
boﬁ
 
›î©‹
()(c⁄° 
di˘_f‹eign_t
 *
f‹eign
) const {

1359  (
f‹eign
->
ª„ªn˚d_ödex
 =
m_ödex
);

1362 c⁄° 
di˘_ödex_t
 *
	mm_ödex
;

1368 
	sdi˘_f‹eign_dif„ª¡_èbÀs
 {

1369 
boﬁ
 
›î©‹
()(c⁄° 
di˘_f‹eign_t
 *
	mf‹eign
) const {

1370  (
	mf‹eign
->
	mf‹eign_èbÀ
 !
f‹eign
->
ª„ªn˚d_èbÀ
);

1374 
	g°d
::
	t£t
<
	tdi˘_f‹eign_t
 *, 
	tdi˘_f‹eign_com∑ª
,

1375 
	tut_Æloˇt‹
<
	tdi˘_f‹eign_t
 *>>

1376 
	tdi˘_f‹eign_£t
;

1378 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gdi˘_f‹eign_£t
 &
	gfk_£t
);

1383 
	sdi˘_f‹eign_nŸ_exi°s
 {

1384 
di˘_f‹eign_nŸ_exi°s
(c⁄° 
di˘_f‹eign_£t
 &
obj_
Ë: 
m_f‹eigns
(obj_) {}

1387 
boﬁ
 
›î©‹
()(
di˘_f‹eign_t
 *c⁄° &
f‹eign
) const {

1388  (
m_f‹eigns
.
föd
(
f‹eign
Ë=m_f‹eigns.
íd
());

1391 
	m¥iv©e
:

1392 c⁄° 
di˘_f‹eign_£t
 &
m_f‹eigns
;

1398 
boﬁ
 
di˘_f‹eign_£t_vÆid©e
(c⁄° 
di˘_f‹eign_£t
 &
fk_£t
);

1404 
boﬁ
 
di˘_f‹eign_£t_vÆid©e
(c⁄° 
di˘_èbÀ_t
 &
èbÀ
);

1407 
ölöe
 
	$di˘_f‹eign_‰ì
(

1408 
di˘_f‹eign_t
 *
f‹eign
)

1410 i‡(
f‹eign
->
v_cﬁs
 !
nuŒ±r
) {

1411 
	`UT_DELETE
(
f‹eign
->
v_cﬁs
);

1414 
	`mem_hóp_‰ì
(
f‹eign
->
hóp
);

1415 
	}
}

1421 
	sdi˘_f‹eign_£t_‰ì
 {

1422 
di˘_f‹eign_£t_‰ì
(c⁄° 
di˘_f‹eign_£t
 &
f‹eign_£t
)

1423 : 
m_f‹eign_£t
(
f‹eign_£t
) {}

1425 ~
di˘_f‹eign_£t_‰ì
() {

1426 
°d
::
f‹_óch
(
m_f‹eign_£t
.
begö
(), m_f‹eign_£t.
íd
(),

1427 
di˘_f‹eign_‰ì
);

1430 c⁄° 
	mdi˘_f‹eign_£t
 &
	mm_f‹eign_£t
;

1436 
	#DICT_FOREIGN_ON_DELETE_CASCADE
 1

	)

1437 
	#DICT_FOREIGN_ON_DELETE_SET_NULL
 2

	)

1438 
	#DICT_FOREIGN_ON_UPDATE_CASCADE
 4

	)

1439 
	#DICT_FOREIGN_ON_UPDATE_SET_NULL
 8

	)

1440 
	#DICT_FOREIGN_ON_DELETE_NO_ACTION
 16

	)

1441 
	#DICT_FOREIGN_ON_UPDATE_NO_ACTION
 32

	)

1448 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
s
, c⁄° 
	gid_«me_t
 &
	gid_«me
);

1454 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
s
, c⁄° 
	gèbÀ_«me_t
 &
	gèbÀ_«me
);

1456 #i‚de‡
UNIV_HOTBACKUP


1461 
	gut_li°_ba£
<
	tlock_t
, 
	tut_li°_node
<lock_t> 
	tlock_èbÀ_t
::*>

1462 
	tèbÀ_lock_li°_t
;

1466 
	gmysql_row_ãm∂_t
;

1470 
	sdi˘_vcﬁ_ãm∂_t
 {

1472 
ulöt
 
	mn_cﬁ
;

1475 
ulöt
 
	mn_v_cﬁ
;

1478 
mysql_row_ãm∂_t
 **
	mvãm∂
;

1481 
	m°d
::
°rög
 
db_«me
;

1484 
	m°d
::
°rög
 
tb_«me
;

1487 
	m°d
::
°rög
 
sh¨e_«me
;

1490 
ulöt
 
	mªc_Àn
;

1493 
byã
 *
	mdeÁu…_ªc
;

1498 
	eèbÀ_dúty_°©us
 {

1510 
	mMETADATA_DIRTY
 = 0,

1514 
	mMETADATA_BUFFERED
,

1517 
	mMETADATA_CLEAN


1520 #i‚de‡
UNIV_HOTBACKUP


1523 
	g°d
::
	tve˘‹
<
	trow_¥ebuût_t
 *> 
	tãmp_¥ebuût_vec
;

1528 
	sdi˘_èbÀ_t
 {

1531 
boﬁ
 
is_com¥es£d
(Ëc⁄° {  (
DICT_TF_GET_ZIP_SSIZE
(
Êags
) != 0); }

1535 
ölöe
 
uöt64_t
 
gë_ªf_cou¡
() const;

1538 
ölöe
 
acquúe
();

1543 
ölöe
 
acquúe_wôh_lock
();

1546 
ölöe
 
ªÀa£
();

1549 
ölöe
 
lock
();

1552 
ölöe
 
u∆ock
();

1554 #i‚de‡
UNIV_HOTBACKUP


1558 
gë_èbÀ_«me
(
°d
::
°rög
 &
schema
, std::°rög &
èbÀ
);

1561 
ib_muãx_t
 *
	mmuãx
;

1564 
	m°d
::
©omic
<
os_⁄˚
::
°©e_t
> 
muãx_¸óãd
;

1568 
èbÀ_id_t
 
	mid
;

1579 
mem_hóp_t
 *
	mhóp
;

1582 
èbÀ_«me_t
 
	m«me
;

1585 
èbÀ_«me_t
 
	måunc_«me
;

1588 *
	md©a_dú_∑th
;

1592 
id_«me_t
 
	mèbÀ•a˚
;

1595 
•a˚_id_t
 
	m•a˚
;

1598 
	mdd
::
Obje˘_id
 
dd_•a˚_id
;

1608 
	mÊags
 : 
DICT_TF_BITS
;

1621 
	mÊags2
 : 
DICT_TF2_BITS
;

1628 
	mskù_Æãr_undo
 : 1;

1633 
	mibd_fûe_missög
 : 1;

1636 
	mˇched
 : 1;

1643 
	mto_be_dr›≥d
 : 1;

1646 
	mn_def
 : 10;

1649 
	mn_cﬁs
 : 10;

1653 
	mn_ö°™t_cﬁs
 : 10;

1656 
	mn_t_cﬁs
 : 10;

1659 
	mn_t_def
 : 10;

1662 
	mn_v_def
 : 10;

1665 
	mn_v_cﬁs
 : 10;

1668 
	mn_m_v_cﬁs
 : 10;

1672 
	mˇn_be_evi˘ed
 : 1;

1676 
	mddl_nŸ_evi˘abÀ
 : 1;

1680 
	mdr›_ab‹ãd
 : 1;

1683 
di˘_cﬁ_t
 *
	mcﬁs
;

1686 
di˘_v_cﬁ_t
 *
	mv_cﬁs
;

1693 
di˘_s_cﬁ_li°
 *
	ms_cﬁs
;

1699 c⁄° *
	mcﬁ_«mes
;

1702 c⁄° *
	mv_cﬁ_«mes
;

1706 
boﬁ
 
	mis_sy°em_èbÀ
;

1709 
hash_node_t
 
	m«me_hash
;

1712 
hash_node_t
 
	mid_hash
;

1715 
di˘_ödex_t
 *
	m·s_doc_id_ödex
;

1718 
UT_LIST_BASE_NODE_T
(
di˘_ödex_t
Ë
	mödexes
;

1722 
UT_LIST_BASE_NODE_T
(
di˘_f‹eign_t
Ë
	mf‹eign_li°
;

1725 
UT_LIST_BASE_NODE_T
(
di˘_f‹eign_t
Ë
	mª„ªn˚d_li°
;

1728 
UT_LIST_NODE_T
(
di˘_èbÀ_t
Ë
	mèbÀ_LRU
;

1731 
uöt64_t
 
	mvîsi⁄
;

1734 
	m°d
::
©omic
<
èbÀ_dúty_°©us
> 
dúty_°©us
;

1736 #i‚de‡
UNIV_HOTBACKUP


1739 
UT_LIST_NODE_T
(
di˘_èbÀ_t
Ë
	mdúty_di˘_èbÀs
;

1742 #ifde‡
UNIV_DEBUG


1747 
boﬁ
 
	mö_dúty_di˘_èbÀs_li°
;

1753 
	mfk_max_ªcusive_Àvñ
 : 8;

1758 
	m°d
::
©omic
<
ulöt
> 
n_f‹eign_key_checks_ru¬ög
;

1763 
åx_id_t
 
	mdef_åx_id
;

1767 
di˘_f‹eign_£t
 
	mf‹eign_£t
;

1770 
di˘_f‹eign_£t
 
	mª„ªn˚d_£t
;

1772 #ifde‡
UNIV_DEBUG


1778 
iboﬁ
 
	md€s_nŸ_fô_ö_mem‹y
;

1783 
	mbig_rows
 : 1;

1785 #i‚de‡
UNIV_HOTBACKUP


1789 
	m°d
::
©omic
<
os_⁄˚
::
°©e_t
> 
°©s_œtch_¸óãd
;

1802 
rw_lock_t
 *
	m°©s_œtch
;

1806 
	m°©_öôülized
 : 1;

1809 
ib_time_m⁄Ÿ⁄ic_t
 
	m°©s_œ°_ªˇlc
;

1821 
	#DICT_STATS_PERSISTENT_ON
 (1 << 1)

	)

1822 
	#DICT_STATS_PERSISTENT_OFF
 (1 << 2)

	)

1826 
ib_uöt32_t
 
	m°©_≥rsi°ít
;

1838 
	#DICT_STATS_AUTO_RECALC_ON
 (1 << 1)

	)

1839 
	#DICT_STATS_AUTO_RECALC_OFF
 (1 << 2)

	)

1844 
ib_uöt32_t
 
	m°©s_auto_ªˇlc
;

1849 
ulöt
 
	m°©s_ßm∂e_∑ges
;

1853 
ib_uöt64_t
 
	m°©_n_rows
;

1856 
ulöt
 
	m°©_˛u°îed_ödex_size
;

1859 
ulöt
 
	m°©_sum_of_Ÿhî_ödex_sizes
;

1862 
èbÀ_id_t
 
	m∑ª¡_id
;

1870 
ib_uöt64_t
 
	m°©_modifõd_cou¡î
;

1873 
	#BG_STAT_NONE
 0

	)

1878 
	#BG_STAT_IN_PROGRESS
 (1 << 0)

	)

1883 
	#BG_STAT_SHOULD_QUIT
 (1 << 1)

	)

1888 
byã
 
	m°©s_bg_Êag
;

1909 #i‚de‡
UNIV_HOTBACKUP


1910 
lock_t
 *
	mautoöc_lock
;

1913 
	m°d
::
©omic
<
os_⁄˚
::
°©e_t
> 
autoöc_muãx_¸óãd
;

1917 
ib_muãx_t
 *
	mautoöc_muãx
;

1920 
ib_uöt64_t
 
	mautoöc
;

1923 
ib_muãx_t
 *
	mautoöc_≥rsi°ed_muãx
;

1940 
ib_uöt64_t
 
	mautoöc_≥rsi°ed
;

1946 
ulöt
 
	mautoöc_fõld_no
;

1954 
	m°d
::
©omic
<c⁄° 
åx_t
 *> 
autoöc_åx
;

1958 #i‚de‡
UNIV_HOTBACKUP


1960 
·s_t
 *
	m·s
;

1966 
ib_quõs˚_t
 
	mquõs˚
;

1976 
	m°d
::
©omic
<
size_t
> 
n_ªc_locks
;

1978 #i‚de‡
UNIV_DEBUG


1979 
	m¥iv©e
:

1984 
°d
::
©omic
<
uöt64_t
> 
n_ªf_cou¡
;

1986 
	mpublic
:

1987 #i‚de‡
UNIV_HOTBACKUP


1989 
èbÀ_lock_li°_t
 
locks
;

2002 
ul⁄g
 
	mcou¡_by_mode
[
LOCK_NUM
];

2006 
time_t
 
	mupd©e_time
;

2012 
ib_uöt64_t
 
	m£ss_row_id
;

2018 
ib_uöt64_t
 
	m£ss_åx_id
;

2020 #ifde‡
UNIV_DEBUG


2022 
	#DICT_TABLE_MAGIC_N
 76333786

	)

2025 
ulöt
 
	mmagic_n
;

2029 
di˘_vcﬁ_ãm∂_t
 *
	mvc_ãm∂
;

2032 
byã
 *
	mí¸y±i⁄_key
;

2035 
byã
 *
	mí¸y±i⁄_iv
;

2038 
boﬁ
 
	mdisˇrd_a·î_ddl
;

2041 
boﬁ
 
	mª‰esh_fk
;

2043 #i‚de‡
UNIV_HOTBACKUP


2045 
ãmp_¥ebuût_vec
 *
	mãmp_¥ebuût
;

2051 
boﬁ
 
	mis_dd_èbÀ
;

2055 
boﬁ
 
	mex∂icôly_n⁄_Ãu
;

2058 c⁄° 
di˘_ödex_t
 *
fú°_ödex
() const {

2059 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2060 c⁄° 
di˘_ödex_t
 *
	mfú°
 = 
UT_LIST_GET_FIRST
(
ödexes
);

2061  (
	mfú°
);

2064 
di˘_ödex_t
 *
fú°_ödex
() {

2065  (
	mc⁄°_ˇ°
<
	mdi˘_ödex_t
 *>(

2066 
	mc⁄°_ˇ°
<c⁄° 
	mdi˘_èbÀ_t
 *>(
	mthis
)->
fú°_ödex
()));

2075 
boﬁ
 
has_ö°™t_cﬁs
() const {

2076 
ut_ad
(
n_ö°™t_cﬁs
 <
n_cﬁs
);

2078  (
	mn_ö°™t_cﬁs
 < 
	mn_cﬁs
);

2085 
£t_ö°™t_cﬁs
(
uöt16_t
 
ö°™t_cﬁs
) {

2086 
	mn_ö°™t_cﬁs
 = 
°©ic_ˇ°
<>(
ö°™t_cﬁs
Ë+ 
gë_n_sys_cﬁs
();

2092 
uöt16_t
 
gë_ö°™t_cﬁs
() const {

2093  
	m°©ic_ˇ°
<
	muöt16_t
>(
	mn_ö°™t_cﬁs
 - 
gë_n_sys_cﬁs
());

2098 
boﬁ
 
is_c‹ru±ed
() const {

2099 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2101 c⁄° 
di˘_ödex_t
 *
	mödex
 = 
fú°_ödex
();

2107 
ut_ad
(
ödex
 =
nuŒ±r
 || index->
is_˛u°îed
());

2109  (
	mödex
 !
nuŒ±r
 && 
ödex
->
ty≥
 & 
DICT_CORRUPT
);

2116 c⁄° *
gë_cﬁ_«me
(
ulöt
 
cﬁ_ƒ
) const {

2117 
ut_ad
(
cﬁ_ƒ
 < 
n_def
);

2118 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2120 c⁄° *
	ms
 = 
cﬁ_«mes
;

2121 i‡(
	ms
) {

2122 
ulöt
 
	mi
 = 0; i < 
	mcﬁ_ƒ
; i++) {

2123 
	ms
 +
°æí
(
s
) + 1;

2127  (
	ms
);

2133 
di˘_cﬁ_t
 *
gë_cﬁ
(
ulöt
 
pos
) const {

2134 
ut_ad
(
pos
 < 
n_def
);

2135 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2137  (
	mcﬁs
 + 
	mpos
);

2144 
uöt16_t
 
gë_n_u£r_cﬁs
() const {

2145 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2147  (
	m°©ic_ˇ°
<
	muöt16_t
>(
	mn_cﬁs
Ë- 
gë_n_sys_cﬁs
());

2154 
uöt16_t
 
gë_n_sys_cﬁs
() const {

2155 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2157  (
is_öåösic
(Ë? 
	mDATA_ITT_N_SYS_COLS
 : 
DATA_N_SYS_COLS
);

2163 
ulöt
 
gë_n_cﬁs
() const {

2164 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2166  (
	mn_cﬁs
);

2172 
di˘_cﬁ_t
 *
gë_sys_cﬁ
(
ulöt
 
sys
) const {

2173 
di˘_cﬁ_t
 *
	mcﬁ
;

2175 
ut_ad
(
sys
 < 
gë_n_sys_cﬁs
());

2176 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2178 
	mcﬁ
 = 
gë_cﬁ
(
n_cﬁs
 - 
gë_n_sys_cﬁs
(Ë+ 
sys
);

2179 
ut_ad
(
cﬁ
->
mty≥
 =
DATA_SYS
);

2180 
ut_ad
(
cﬁ
->
¥ty≥
 =(
sys
 | 
DATA_NOT_NULL
));

2182  (
	mcﬁ
);

2186 
boﬁ
 
is_ãmp‹¨y
() const {

2187 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2188  (
	mÊags2
 & 
	mDICT_TF2_TEMPORARY
);

2192 
boﬁ
 
is_·s_aux
() const {

2193 
ut_ad
(
magic_n
 =
DICT_TABLE_MAGIC_N
);

2194  (
	mÊags2
 & 
	mDICT_TF2_AUX
);

2207 
boﬁ
 
is_öåösic
() const {

2208 i‡(
	mÊags2
 & 
	mDICT_TF2_INTRINSIC
) {

2209 
ut_ad
(
is_ãmp‹¨y
());

2210  (
	måue
);

2213  (
	mÁl£
);

2218 
ölöe
 
boﬁ
 
skù_g≠_locks
() const;

2221 
ölöe
 
boﬁ
 
suµ‹t_ö°™t_add
() const;

2224 
ölöe
 
boﬁ
 
	gdi˘_ödex_t
::
	$is_com¥es£d
() const {

2225  (
èbÀ
->
	`is_com¥es£d
());

2226 
	}
}

2231 
	e≥rsi°ít_ty≥_t
 {

2234 
	mPM_SMALLEST_TYPE
 = 0,

2237 
	mPM_INDEX_CORRUPTED
 = 1,

2240 
	mPM_TABLE_AUTO_INC
 = 2,

2250 
	mPM_BIGGEST_TYPE
 = 3

2253 
	g°d
::
	tve˘‹
<
	tödex_id_t
, 
	tut_Æloˇt‹
<ödex_id_t>> 
	tc‹ru±ed_ids_t
;

2256 ˛as†
	cPîsi°ítTabÀMëad©a
 {

2257 
	mpublic
:

2261 
	$Pîsi°ítTabÀMëad©a
(
èbÀ_id_t
 
id
, 
uöt64
 
vîsi⁄
)

2262 : 
	`m_id
(
id
), 
	`m_vîsi⁄
(
vîsi⁄
), 
	`m_c‹ru±ed_ids
(), 
	$m_autoöc
(0) {}

2266 c⁄° 
c‹ru±ed_ids_t
 &
	$gë_c‹ru±ed_ödexes
() const {

2267  (
m_c‹ru±ed_ids
);

2268 
	}
}

2272 
	$add_c‹ru±ed_ödex
(c⁄° 
ödex_id_t
 
id
) {

2273 
m_c‹ru±ed_ids
.
	`push_back
(
id
);

2274 
	}
}

2278 
	$£t_vîsi⁄
(
uöt64_t
 
vîsi⁄
Ë{ 
m_vîsi⁄
 = vîsi⁄; 
	}
}

2281 
uöt64_t
 
	$gë_vîsi⁄
(Ëc⁄° {  (
m_vîsi⁄
); 
	}
}

2285 
èbÀ_id_t
 
	$gë_èbÀ_id
(Ëc⁄° {  (
m_id
); 
	}
}

2289 
	$£t_autoöc_if_biggî
(
uöt64_t
 
autoöc
) {

2292 i‡(
autoöc
 > 
m_autoöc
) {

2293 
m_autoöc
 = 
autoöc
;

2295 
	}
}

2299 
	$£t_autoöc
(
uöt64_t
 
autoöc
Ë{ 
m_autoöc
 =áutoöc; 
	}
}

2303 
uöt64_t
 
	$gë_autoöc
(Ëc⁄° {  (
m_autoöc
); 
	}
}

2305 
	g¥iv©e
:

2307 
èbÀ_id_t
 
m_id
;

2310 
uöt64_t
 
	gm_vîsi⁄
;

2313 
c‹ru±ed_ids_t
 
	gm_c‹ru±ed_ids
;

2316 
uöt64_t
 
	gm_autoöc
;

2322 ˛as†
	cPîsi°î
 {

2323 
	mpublic
:

2325 
vútuÆ
 ~
	$Pîsi°î
() {}

2334 
vútuÆ
 
ulöt
 
	$wrôe
(c⁄° 
Pîsi°ítTabÀMëad©a
 &
mëad©a
, 
byã
 *
buf„r
,

2335 
ulöt
 
size
) const = 0;

2340 
vútuÆ
 
ulöt
 
	$gë_wrôe_size
(

2341 c⁄° 
Pîsi°ítTabÀMëad©a
 &
mëad©a
) const = 0;

2353 
vútuÆ
 
ulöt
 
	$ªad
(
Pîsi°ítTabÀMëad©a
 &
mëad©a
, c⁄° 
byã
 *
buf„r
,

2354 
ulöt
 
size
, 
boﬁ
 *
c‹ru±
) const = 0;

2361 
	$wrôe_log
(
èbÀ_id_t
 
id
, c⁄° 
Pîsi°ítTabÀMëad©a
 &
mëad©a
,

2362 
må_t
 *
må
) const;

2363 
	}
};

2366 ˛as†
	cC‹ru±edIndexPîsi°î
 : 
public
 
Pîsi°î
 {

2367 
public
:

2375 
ulöt
 
	$wrôe
(c⁄° 
Pîsi°ítTabÀMëad©a
 &
mëad©a
, 
byã
 *
buf„r
,

2376 
ulöt
 
size
Ëc⁄° 
ovîride
;

2381 
ulöt
 
	$gë_wrôe_size
(c⁄° 
Pîsi°ítTabÀMëad©a
 &
mëad©a
Ëc⁄° 
ovîride
;

2393 
ulöt
 
	$ªad
(
Pîsi°ítTabÀMëad©a
 &
mëad©a
, c⁄° 
byã
 *
buf„r
, 
ulöt
 
size
,

2394 
boﬁ
 *
c‹ru±
Ëc⁄° 
ovîride
;

2396 
¥iv©e
:

2398 c⁄° 
size_t
 
INDEX_ID_LENGTH
 = 12;

2402 ˛as†
	cAutoIncPîsi°î
 : 
public
 
Pîsi°î
 {

2403 
public
:

2411 
ulöt
 
	$wrôe
(c⁄° 
Pîsi°ítTabÀMëad©a
 &
mëad©a
, 
byã
 *
buf„r
,

2412 
ulöt
 
size
Ëc⁄° 
ovîride
;

2417 
ölöe
 
ulöt
 
	$gë_wrôe_size
(

2418 c⁄° 
Pîsi°ítTabÀMëad©a
 &
mëad©a
Ëc⁄° 
ovîride
 {

2436 
ulöt
 
	$ªad
(
Pîsi°ítTabÀMëad©a
 &
mëad©a
, c⁄° 
byã
 *
buf„r
, 
ulöt
 
size
,

2437 
boﬁ
 *
c‹ru±
Ëc⁄° 
ovîride
;

2438 
	}
};

2443 ˛as†
	cPîsi°îs
 {

2444 
	m°d
::
	tm≠
<

2445 
	t≥rsi°ít_ty≥_t
, 
	tPîsi°î
 *, 
	t°d
::
	tÀss
<persistent_type_t>,

2446 
	tut_Æloˇt‹
<
	t°d
::
	t∑ú
<c⁄° 
	t≥rsi°ít_ty≥_t
, 
	tPîsi°î
 *>>>

2447 
	t≥rsi°îs_t
;

2449 
	mpublic
:

2451 
	$Pîsi°îs
(Ë: 
	$m_≥rsi°îs
() {}

2454 ~
	`Pîsi°îs
();

2459 
Pîsi°î
 *
	$gë
(
≥rsi°ít_ty≥_t
 
ty≥
) const;

2466 
Pîsi°î
 *
	`add
(
≥rsi°ít_ty≥_t
 
ty≥
);

2470 
	`ªmove
(
≥rsi°ít_ty≥_t
 
ty≥
);

2476 
size_t
 
	`wrôe
(
Pîsi°ítTabÀMëad©a
 &
mëad©a
, 
byã
 *
buf„r
);

2478 
¥iv©e
:

2480 
≥rsi°îs_t
 
m_≥rsi°îs
;

2481 
	}
};

2483 #i‚de‡
UNIV_HOTBACKUP


2487 
lock_èbÀ_lock_li°_öô
(
èbÀ_lock_li°_t
 *
lock_li°
);

2491 
	sdi˘_f‹eign_add_to_ª„ªn˚d_èbÀ
 {

2492 
›î©‹
()(
di˘_f‹eign_t
 *
	mf‹eign
) const {

2493 i‡(
di˘_èbÀ_t
 *
	mèbÀ
 = 
f‹eign
->
ª„ªn˚d_èbÀ
) {

2494 
°d
::
∑ú
<
di˘_f‹eign_£t
::
ôî©‹
, 
boﬁ
> 
ªt
 =

2495 
èbÀ
->
ª„ªn˚d_£t
.
ö£π
(
f‹eign
);

2496 
ut_a
(
ªt
.
£c⁄d
);

2505 
ölöe
 
	$di˘_èbÀ_muãx_¸óã_œzy
(
di˘_èbÀ_t
 *
èbÀ
) {

2506 
èbÀ
->
muãx
 = 
nuŒ±r
;

2507 
èbÀ
->
muãx_¸óãd
 = 
os_⁄˚
::
NEVER_DONE
;

2508 
	}
}

2514 
ölöe
 
	$di˘_èbÀ_muãx_de°roy
(
di˘_èbÀ_t
 *
èbÀ
) {

2515 i‡(
èbÀ
->
muãx_¸óãd
 =
os_⁄˚
::
DONE
) {

2516 i‡(
èbÀ
->
muãx
 !
nuŒ±r
) {

2517 
	`muãx_‰ì
(
èbÀ
->
muãx
);

2518 
	`UT_DELETE
(
èbÀ
->
muãx
);

2521 
	}
}

2527 
ölöe
 
	$di˘_èbÀ_autoöc_de°roy
(
di˘_èbÀ_t
 *
èbÀ
) {

2528 i‡(
èbÀ
->
autoöc_muãx_¸óãd
 =
os_⁄˚
::
DONE
) {

2529 i‡(
èbÀ
->
autoöc_muãx
 !
nuŒ±r
) {

2530 
	`muãx_‰ì
(
èbÀ
->
autoöc_muãx
);

2531 
	`UT_DELETE
(
èbÀ
->
autoöc_muãx
);

2534 i‡(
èbÀ
->
autoöc_≥rsi°ed_muãx
 !
nuŒ±r
) {

2535 
	`muãx_‰ì
(
èbÀ
->
autoöc_≥rsi°ed_muãx
);

2536 
	`UT_DELETE
(
èbÀ
->
autoöc_≥rsi°ed_muãx
);

2539 
	}
}

2545 
ölöe
 
	$di˘_èbÀ_autoöc_¸óã_œzy
(
di˘_èbÀ_t
 *
èbÀ
) {

2546 
èbÀ
->
autoöc_muãx
 = 
nuŒ±r
;

2547 
èbÀ
->
autoöc_≥rsi°ed_muãx
 = 
nuŒ±r
;

2548 
èbÀ
->
autoöc_muãx_¸óãd
 = 
os_⁄˚
::
NEVER_DONE
;

2549 
	}
}

2555 
ölöe
 
	$di˘_ödex_zù_∑d_muãx_¸óã_œzy
(
di˘_ödex_t
 *
ödex
) {

2556 
ödex
->
zù_∑d
.
muãx
 = 
nuŒ±r
;

2557 
ödex
->
zù_∑d
.
muãx_¸óãd
 = 
os_⁄˚
::
NEVER_DONE
;

2558 
	}
}

2564 
ölöe
 
	$di˘_ödex_zù_∑d_muãx_de°roy
(
di˘_ödex_t
 *
ödex
) {

2565 i‡(
ödex
->
zù_∑d
.
muãx_¸óãd
 =
os_⁄˚
::
DONE
 &&

2566 
ödex
->
zù_∑d
.
muãx
 !
nuŒ±r
) {

2567 
	`muãx_‰ì
(
ödex
->
zù_∑d
.
muãx
);

2568 
	`UT_DELETE
(
ödex
->
zù_∑d
.
muãx
);

2570 
	}
}

2575 
ölöe
 
	$di˘_ödex_zù_∑d_u∆ock
(
di˘_ödex_t
 *
ödex
) {

2576 #i‚de‡
UNIV_HOTBACKUP


2577 
	`muãx_exô
(
ödex
->
zù_∑d
.
muãx
);

2579 
	}
}

2581 #ifde‡
UNIV_DEBUG


2585 
ölöe
 
boﬁ
 
	$di˘_èbÀ_autoöc_own
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
) {

2586  (
	`muãx_own
(
èbÀ
->
autoöc_muãx
));

2587 
	}
}

2590 
	~"di˘0mem.ic
"

	@dict0mem.ic

33 
	~"d©a0ty≥.h
"

34 
	~"di˘0mem.h
"

35 
	~"fû0fû.h
"

39 
UNIV_INLINE


40 
	$di˘_mem_fûl_ödex_°ru˘
(

41 
di˘_ödex_t
 *
ödex
,

42 
mem_hóp_t
 *
hóp
,

43 c⁄° *
èbÀ_«me
,

44 c⁄° *
ödex_«me
,

45 
ulöt
 
•a˚
,

48 
ulöt
 
ty≥
,

50 
ulöt
 
n_fõlds
)

52 i‡(
hóp
) {

53 
ödex
->
hóp
 = heap;

54 
ödex
->
«me
 = 
	`mem_hóp_°rdup
(
hóp
, 
ödex_«me
);

55 
ödex
->
fõlds
 = (
di˘_fõld_t
 *)
	`mem_hóp_Æloc
(

56 
hóp
, 1 + 
n_fõlds
 * (
di˘_fõld_t
));

58 
ödex
->
«me
 = 
ödex_«me
;

59 
ödex
->
hóp
 = 
nuŒ±r
;

60 
ödex
->
fõlds
 = 
nuŒ±r
;

65 
ödex
->
ty≥
 =Åype;

66 #i‚de‡
UNIV_HOTBACKUP


67 
ödex
->
•a˚
 = ()space;

68 
ödex
->
∑ge
 = 
FIL_NULL
;

69 
ödex
->
mîge_thªshﬁd
 = 
DICT_INDEX_MERGE_THRESHOLD_DEFAULT
;

71 
ödex
->
èbÀ_«me
 =Åable_name;

72 
ödex
->
n_fõlds
 = ()n_fields;

75 
ödex
->
Ælow_du∂iˇãs
 = 
Ál£
;

76 
ödex
->
nuŒs_equÆ
 = 
Ál£
;

77 
ödex
->
dißbÀ_ahi
 = 
Ál£
;

78 
ödex
->
œ°_ös_cur
 = 
nuŒ±r
;

79 
ödex
->
œ°_£l_cur
 = 
nuŒ±r
;

80 #i‚de‡
UNIV_HOTBACKUP


81 
	`√w
 (&
ödex
->
ªc_ˇche
Ë
	`ªc_ˇche_t
();

84 #ifde‡
UNIV_DEBUG


85 
ödex
->
magic_n
 = 
DICT_INDEX_MAGIC_N
;

87 
	}
}

90 
ölöe
 
uöt32_t
 
	gdi˘_ödex_t
::
	$gë_ö°™t_fõlds
() const {

91 
	`ut_ad
(
	`has_ö°™t_cﬁs
());

92  (
n_fõlds
 - (
èbÀ
->
n_cﬁs
 -ÅabÀ->
n_ö°™t_cﬁs
));

93 
	}
}

	@dict0priv.h

33 #i‚de‡
di˘0¥iv_h


34 
	#di˘0¥iv_h


	)

36 
	~"univ.i
"

46 
ölöe
 
di˘_èbÀ_t
 *
di˘_èbÀ_gë_low
(

47 c⁄° *
èbÀ_«me
,

48 c⁄° 
°d
::
°rög
 *
¥ev_èbÀ
 = 
nuŒ±r
);

52 
UNIV_INLINE


53 
di˘_èbÀ_t
 *
di˘_èbÀ_check_if_ö_ˇche_low
(

54 c⁄° *
èbÀ_«me
);

56 
	~"di˘0¥iv.ic
"

	@dict0priv.ic

33 
	~"di˘0di˘.h
"

34 
	~"di˘0lﬂd.h
"

35 
	~"di˘0¥iv.h
"

37 
ölöe
 
di˘_èbÀ_t
 *
	$di˘_èbÀ_gë_low
(c⁄° *
èbÀ_«me
,

38 c⁄° 
°d
::
°rög
 *
¥ev_èbÀ
) {

39 
di˘_èbÀ_t
 *
èbÀ
;

41 
	`ut_ad
(
èbÀ_«me
);

42 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

44 
èbÀ
 = 
	`di˘_èbÀ_check_if_ö_ˇche_low
(
èbÀ_«me
);

46 i‡(
èbÀ
 &&ÅabÀ->
	`is_c‹ru±ed
()) {

47 
ib
::
îr‹
 
	`îr‹
(
ER_IB_MSG_1229
);

48 
îr‹
 << "TabÀ " << 
èbÀ
->
«me
 << "is corrupted";

49 i‡(
§v_lﬂd_c‹ru±ed
) {

50 
îr‹
 << ", but innodb_force_load_corrupted is set";

52  (
nuŒ±r
);

56 i‡(
èbÀ
 =
nuŒ±r
) {

57 
èbÀ
 = 
	`di˘_lﬂd_èbÀ
(
èbÀ_«me
, 
åue
, 
DICT_ERR_IGNORE_NONE
, 
¥ev_èbÀ
);

60 
	`ut_ad
(!
èbÀ
 ||ÅabÀ->
ˇched
);

62  (
èbÀ
);

63 
	}
}

67 
UNIV_INLINE


68 
di˘_èbÀ_t
 *
	$di˘_èbÀ_check_if_ö_ˇche_low
(

69 c⁄° *
èbÀ_«me
)

71 
di˘_èbÀ_t
 *
èbÀ
;

72 
ulöt
 
èbÀ_fﬁd
;

74 
DBUG_TRACE
;

75 
	`DBUG_PRINT
("di˘_èbÀ_check_if_ö_ˇche_low", ("èbÀ: '%s'", 
èbÀ_«me
));

77 
	`ut_ad
(
èbÀ_«me
);

78 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

81 
èbÀ_fﬁd
 = 
	`ut_fﬁd_°rög
(
èbÀ_«me
);

83 
	`HASH_SEARCH
(
«me_hash
, 
di˘_sys
->
èbÀ_hash
, 
èbÀ_fﬁd
, 
di˘_èbÀ_t
 *,

84 
èbÀ
, 
	`ut_ad
—abÀ->
ˇched
),

85 !
	`°rcmp
(
èbÀ
->
«me
.
m_«me
, 
èbÀ_«me
));

86  
èbÀ
;

87 
	}
}

	@dict0sdi-decompress.h

27 #i‚de‡
DICT_SDI_DECOMPRESS_H


28 
	#DICT_SDI_DECOMPRESS_H


	)

30 
	~<zlib.h
>

33 ˛as†
	cSdi_Decom¥ess‹
 {

34 
	mpublic
:

35 
	$Sdi_Decom¥ess‹
(
byã
 *
uncomp_sdi
, 
uöt32_t
 
uncomp_Àn
, byã *
comp_sdi
,

36 
uöt32_t
 
comp_Àn
)

37 : 
	`m_uncomp_sdi
(
uncomp_sdi
),

38 
	`m_uncomp_Àn
(
uncomp_Àn
),

39 
	`m_comp_sdi
(
comp_sdi
),

40 
	$m_comp_Àn
(
comp_Àn
) {

41 
	`ut_ad
(
m_uncomp_sdi
 !
nuŒ±r
);

42 
	`ut_ad
(
m_comp_sdi
 !
nuŒ±r
);

45 ~
	$Sdi_Decom¥ess‹
(Ë{
	}
}

48 
ölöe
 
	$decom¥ess
() {

49 
ªt
;

50 
uL⁄gf
 
de°_Àn
 = 
m_uncomp_Àn
;

51 
ªt
 = 
	`uncom¥ess
(
m_uncomp_sdi
, &
de°_Àn
, 
m_comp_sdi
, 
m_comp_Àn
);

53 i‡(
ªt
 !
Z_OK
) {

54 #ifde‡
UNIV_NO_ERR_MSGS


55 
ib
::
	`îr‹
()

57 
ib
::
	`îr‹
(
ER_IB_ERR_ZLIB_UNCOMPRESS_FAILED
)

60 << " com¥es£dÜí: " << 
m_comp_Àn


61 << ", origöÆ_Àn: " << 
m_uncomp_Àn
;

63 
ªt
) {

64 
Z_BUF_ERROR
:

65 #ifde‡
UNIV_NO_ERR_MSGS


66 
ib
::
	`Áèl
()

68 
ib
::
	`Áèl
(
ER_IB_ERR_ZLIB_BUF_ERROR
)

74 
Z_MEM_ERROR
:

75 #ifde‡
UNIV_NO_ERR_MSGS


76 
ib
::
	`Áèl
()

78 
ib
::
	`Áèl
(
ER_IB_ERR_ZLIB_MEM_ERROR
)

83 
Z_DATA_ERROR
:

84 #ifde‡
UNIV_NO_ERR_MSGS


85 
ib
::
	`Áèl
()

87 
ib
::
	`Áèl
(
ER_IB_ERR_ZLIB_DATA_ERROR
)

93 #ifde‡
UNIV_NO_ERR_MSGS


94 
ib
::
	`Áèl
()

96 
ib
::
	`Áèl
(
ER_IB_ERR_ZLIB_UNKNOWN_ERROR
)

102 
	}
}

105 
byã
 *
	$gë_d©a
(Ëc⁄° {  (
m_uncomp_sdi
); 
	}
}

107 
	g¥iv©e
:

109 
byã
 *
m_uncomp_sdi
;

111 
uöt32_t
 
	gm_uncomp_Àn
;

113 
byã
 *
	gm_comp_sdi
;

115 
uöt32_t
 
	gm_comp_Àn
;

	@dict0sdi.h

27 #i‚de‡
DICT_SDI_H


28 
	#DICT_SDI_H


	)

30 
	~<zc⁄f.h
>

31 
	~<zlib.h
>

34 
c⁄°ex¥
 c⁄° 
uöt32_t
 
	gSDI_TYPE_LEN
 = 4;

37 
c⁄°ex¥
 c⁄° 
uöt32_t
 
	gSDI_KEY_LEN
 = 8;

40 ˛as†
	cSdi_Com¥ess‹
 {

41 
	mpublic
:

42 
	$Sdi_Com¥ess‹
(
uöt32_t
 
§c_Àn
, c⁄° *
sdi
)

43 : 
	`m_§c_Àn
(
§c_Àn
), 
	`m_comp_Àn
(), 
	`m_sdi
(
sdi
), 
	$m_comp_sdi
() {}

45 ~
	$Sdi_Com¥ess‹
(Ë{ 
	`ut_‰ì
(
m_comp_sdi
); 
	}
}

48 
ölöe
 
	$com¥ess
() {

49 
uL⁄gf
 
zÀn
 = 
	`com¥essBound
(
°©ic_ˇ°
<
uL⁄g
>(
m_§c_Àn
));

50 autÿ
§c
 = 
ªöãΩªt_ˇ°
<c⁄° 
Byãf
 *>(
m_sdi
);

52 
m_comp_sdi
 = 
°©ic_ˇ°
<
byã
 *>(
	`ut_mÆloc_nokey
(
zÀn
));

53 
	`ut_ad
(
m_comp_sdi
 !
nuŒ±r
);

56 
	`com¥ess2
(
m_comp_sdi
, &
zÀn
, 
§c
, 
°©ic_ˇ°
<
uL⁄g
>(
m_§c_Àn
), 6)) {

57 
Z_BUF_ERROR
:

58 
ib
::
	`Áèl
(
ER_IB_MSG_FAILED_SDI_Z_BUF_ERROR
);

61 
Z_MEM_ERROR
:

62 
ib
::
	`Áèl
(
ER_IB_MSG_FAILED_SDI_Z_MEM_ERROR
);

65 
Z_STREAM_ERROR
:

66 
ib
::
	`Áèl
(
ER_IB_MSG_SDI_Z_STREAM_ERROR
);

69 
Z_OK
:

70 
m_comp_Àn
 = 
zÀn
;

74 
ib
::
	`Áèl
(
ER_IB_MSG_SDI_Z_UNKNOWN_ERROR
);

77 
	}
}

80 c⁄° 
byã
 *
	$gë_d©a
(Ëc⁄° {  (
m_comp_sdi
); 
	}
}

83 
uöt32_t
 
	$gë_§c_Àn
(Ëc⁄° {  (
m_§c_Àn
); 
	}
}

86 
uöt32_t
 
	$gë_comp_Àn
(Ëc⁄° {  (
m_comp_Àn
); 
	}
}

88 
	g¥iv©e
:

90 
uöt32_t
 
m_§c_Àn
;

92 
uöt32_t
 
	gm_comp_Àn
;

94 c⁄° *
	gm_sdi
;

96 
byã
 *
	gm_comp_sdi
;

104 
boﬁ
 
di˘_sdi_¸óã
(
dd
::
TabÀ•a˚
 *
èbÀ•a˚
);

111 
boﬁ
 
di˘_sdi_dr›
(
dd
::
TabÀ•a˚
 *
èbÀ•a˚
);

118 
boﬁ
 
di˘_sdi_gë_keys
(c⁄° 
dd
::
TabÀ•a˚
 &
èbÀ•a˚
, 
sdi_ve˘‹_t
 &
ve˘‹
);

130 
boﬁ
 
di˘_sdi_gë
(c⁄° 
dd
::
TabÀ•a˚
 &
èbÀ•a˚
, c⁄° 
sdi_key_t
 *
sdi_key
,

131 *
sdi
, 
uöt64
 *
sdi_Àn
);

143 
boﬁ
 
di˘_sdi_£t
(
h™dÀπ⁄
 *
ht⁄
, c⁄° 
dd
::
TabÀ•a˚
 &
èbÀ•a˚
,

144 c⁄° 
dd
::
TabÀ
 *
èbÀ
, c⁄° 
sdi_key_t
 *
sdi_key
,

145 c⁄° *
sdi
, 
uöt64
 
sdi_Àn
);

154 
boﬁ
 
di˘_sdi_dñëe
(c⁄° 
dd
::
TabÀ•a˚
 &
èbÀ•a˚
, c⁄° dd::
TabÀ
 *
èbÀ
,

155 c⁄° 
sdi_key_t
 *
sdi_key
);

	@dict0stats.h

33 #i‚de‡
di˘0°©s_h


34 
	#di˘0°©s_h


	)

36 
	~"univ.i
"

38 
	~"di˘0ty≥s.h
"

39 
	~"mem0mem.h
"

40 
	~"åx0ty≥s.h
"

42 
	edi˘_°©s_upd_›ti⁄_t
 {

43 
	mDICT_STATS_RECALC_PERSISTENT
,

49 
	mDICT_STATS_RECALC_TRANSIENT
,

53 
	mDICT_STATS_EMPTY_TABLE
,

58 
	mDICT_STATS_FETCH_ONLY_IF_NOT_IN_MEMORY


70 
UNIV_INLINE


71 
di˘_°©s_£t_≥rsi°ít
(
di˘_èbÀ_t
 *
èbÀ
, 
iboﬁ
 
ps_⁄
, iboﬁ 
ps_off
);

75 
UNIV_INLINE


76 
iboﬁ
 
	$di˘_°©s_is_≥rsi°ít_íabÀd
(

77 c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

78 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

87 
UNIV_INLINE


88 
	`di˘_°©s_auto_ªˇlc_£t
(
di˘_èbÀ_t
 *
èbÀ
, 
iboﬁ
 
auto_ªˇlc_⁄
,

89 
iboﬁ
 
auto_ªˇlc_off
);

93 
UNIV_INLINE


94 
iboﬁ
 
	`di˘_°©s_auto_ªˇlc_is_íabÀd
(

95 c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

98 
UNIV_INLINE


99 
	`di˘_°©s_öô
(
di˘_èbÀ_t
 *
èbÀ
);

103 
UNIV_INLINE


104 
	`di˘_°©s_deöô
(
di˘_èbÀ_t
 *
èbÀ
);

109 
dbîr_t
 
	`di˘_°©s_upd©e
(
di˘_èbÀ_t
 *
èbÀ
,

110 
di˘_°©s_upd_›ti⁄_t
 
°©s_upd_›ti⁄
);

119 
dbîr_t
 
	`di˘_°©s_dr›_ödex
(

120 c⁄° *
äame
,

121 c⁄° *
öame
,

122 *
îr°r
,

124 
ulöt
 
îr°r_sz
);

130 
dbîr_t
 
	`di˘_°©s_dr›_èbÀ
(

131 c⁄° *
èbÀ_«me
,

132 *
îr°r
,

134 
ulöt
 
îr°r_sz
);

137 
	`di˘_°©s_upd©e_f‹_ödex
(
di˘_ödex_t
 *
ödex
);

142 
dbîr_t
 
	`di˘_°©s_ª«me_èbÀ
(c⁄° *
ﬁd_«me
,

143 c⁄° *
√w_«me
,

144 *
îr°r
,

146 
size_t
 
îr°r_sz
);

152 
dbîr_t
 
	$di˘_°©s_ª«me_ödex
(

153 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

155 c⁄° *
ﬁd_ödex_«me
,

156 c⁄° *
√w_ödex_«me
)

157 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

163 
	`di˘_°©s_evi˘_èbÀ•a˚s
();

166 ˛as†
	cTabÀSètsRec‹d
 {

167 
public
:

169 
	`TabÀSètsRec‹d
();

172 ~
	`TabÀSètsRec‹d
();

178 
	`£t_d©a
(c⁄° 
byã
 *
d©a
, 
ulöt
 
cﬁ_off£t
, ulöà
Àn
);

182 *
	$gë_tbl_«me
() const;

187 
	`£t_tbl_«me
(c⁄° 
byã
 *
d©a
, 
ulöt
 
Àn
);

191 *
	$gë_db_«me
() const;

196 
	`£t_db_«me
(c⁄° 
byã
 *
d©a
, 
ulöt
 
Àn
);

200 
ib_uöt64_t
 
	$gë_n_rows
() const;

204 
	`£t_n_rows
(
ib_uöt64_t
 
no_of_rows
);

209 
ulöt
 
	$gë_˛u°îed_ödex_size
() const;

214 
	`£t_˛u°îed_ödex_size
(
ulöt
 
˛u°_size
);

218 
ulöt
 
	$gë_sum_of_Ÿhî_ödex_size
() const;

222 
	`£t_sum_of_Ÿhî_ödex_size
(
ulöt
 
sum_of_Ÿhî_ödex_size
);

225 
c⁄°ex¥
 
DB_NAME_COL_NO
 = 0;

227 
c⁄°ex¥
 
TABLE_NAME_COL_NO
 = 1;

229 
c⁄°ex¥
 
N_ROWS_COL_NO
 = 3;

231 
c⁄°ex¥
 
CLUST_INDEX_SIZE_COL_NO
 = 4;

233 
c⁄°ex¥
 
SUM_OF_OTHER_INDEX_SIZE_COL_NO
 = 5;

235 
¥iv©e
:

237 *
m_db_«me
;

239 *
m_tbl_«me
;

241 
ib_uöt64_t
 
m_n_rows
;

243 
ulöt
 
m_˛u°îed_ödex_size
;

245 
ulöt
 
m_sum_of_Ÿhî_ödex_sizes
;

247 
mem_hóp_t
 *
m_hóp
;

250 
	~"di˘0°©s.ic
"

252 #ifde‡
UNIV_ENABLE_UNIT_TEST_DICT_STATS


253 
	`ã°_di˘_°©s_Æl
();

	@dict0stats.ic

33 
	~"di˘0di˘.h
"

34 
	~"di˘0ty≥s.h
"

35 
	~"§v0§v.h
"

40 
UNIV_INLINE


41 
	$di˘_°©s_£t_≥rsi°ít
(

42 
di˘_èbÀ_t
 *
èbÀ
,

43 
iboﬁ
 
ps_⁄
,

44 
iboﬁ
 
ps_off
)

49 i‡(
ps_⁄
 && 
ps_off
) {

50 
ps_off
 = 
FALSE
;

53 
ib_uöt32_t
 
°©_≥rsi°ít
 = 0;

55 i‡(
ps_⁄
) {

56 
°©_≥rsi°ít
 |
DICT_STATS_PERSISTENT_ON
;

59 i‡(
ps_off
) {

60 
°©_≥rsi°ít
 |
DICT_STATS_PERSISTENT_OFF
;

64 
èbÀ
->
°©_≥rsi°ít
 = stat_persistent;

65 
	}
}

69 
UNIV_INLINE


70 
iboﬁ
 
	$di˘_°©s_is_≥rsi°ít_íabÀd
(

71 c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

89 
ib_uöt32_t
 
°©_≥rsi°ít
 = 
èbÀ
->stat_persistent;

91 i‡(
°©_≥rsi°ít
 & 
DICT_STATS_PERSISTENT_ON
) {

92 
	`ut_ad
(!(
°©_≥rsi°ít
 & 
DICT_STATS_PERSISTENT_OFF
));

93  (
TRUE
);

94 } i‡(
°©_≥rsi°ít
 & 
DICT_STATS_PERSISTENT_OFF
) {

95  (
FALSE
);

97  (
§v_°©s_≥rsi°ít
);

99 
	}
}

105 
UNIV_INLINE


106 
	$di˘_°©s_auto_ªˇlc_£t
(

107 
di˘_èbÀ_t
 *
èbÀ
,

108 
iboﬁ
 
auto_ªˇlc_⁄
,

109 
iboﬁ
 
auto_ªˇlc_off
)

111 
	`ut_ad
(!
auto_ªˇlc_⁄
 || !
auto_ªˇlc_off
);

113 
ib_uöt32_t
 
°©s_auto_ªˇlc
 = 0;

115 i‡(
auto_ªˇlc_⁄
) {

116 
°©s_auto_ªˇlc
 |
DICT_STATS_AUTO_RECALC_ON
;

119 i‡(
auto_ªˇlc_off
) {

120 
°©s_auto_ªˇlc
 |
DICT_STATS_AUTO_RECALC_OFF
;

124 
èbÀ
->
°©s_auto_ªˇlc
 = stats_auto_recalc;

125 
	}
}

129 
UNIV_INLINE


130 
iboﬁ
 
	$di˘_°©s_auto_ªˇlc_is_íabÀd
(

131 c⁄° 
di˘_èbÀ_t
 *
èbÀ
)

134 
ib_uöt32_t
 
°©s_auto_ªˇlc
 = 
èbÀ
->stats_auto_recalc;

136 i‡(
°©s_auto_ªˇlc
 & 
DICT_STATS_AUTO_RECALC_ON
) {

137 
	`ut_ad
(!(
°©s_auto_ªˇlc
 & 
DICT_STATS_AUTO_RECALC_OFF
));

138  (
TRUE
);

139 } i‡(
°©s_auto_ªˇlc
 & 
DICT_STATS_AUTO_RECALC_OFF
) {

140  (
FALSE
);

142  (
§v_°©s_auto_ªˇlc
);

144 
	}
}

147 
UNIV_INLINE


148 
	$di˘_°©s_öô
(
di˘_èbÀ_t
 *
èbÀ
)

150 
	`ut_ad
(!
	`muãx_own
(&
di˘_sys
->
muãx
));

152 i‡(
èbÀ
->
°©_öôülized
) {

156 
di˘_°©s_upd_›ti⁄_t
 
›t
;

158 i‡(
	`di˘_°©s_is_≥rsi°ít_íabÀd
(
èbÀ
)) {

159 
›t
 = 
DICT_STATS_FETCH_ONLY_IF_NOT_IN_MEMORY
;

161 
›t
 = 
DICT_STATS_RECALC_TRANSIENT
;

164 
	`di˘_°©s_upd©e
(
èbÀ
, 
›t
);

165 
	}
}

169 
UNIV_INLINE


170 
	$di˘_°©s_deöô
(
di˘_èbÀ_t
 *
èbÀ
)

177 
	`di˘_èbÀ_°©s_lock
(
èbÀ
, 
RW_X_LATCH
);

179 i‡(!
èbÀ
->
°©_öôülized
) {

180 
	`di˘_èbÀ_°©s_u∆ock
(
èbÀ
, 
RW_X_LATCH
);

184 
èbÀ
->
°©_öôülized
 = 
FALSE
;

186 #ifde‡
UNIV_DEBUG_VALGRIND


187 
	`UNIV_MEM_INVALID
(&
èbÀ
->
°©_n_rows
, (table->stat_n_rows));

188 
	`UNIV_MEM_INVALID
(&
èbÀ
->
°©_˛u°îed_ödex_size
,

189 (
èbÀ
->
°©_˛u°îed_ödex_size
));

190 
	`UNIV_MEM_INVALID
(&
èbÀ
->
°©_sum_of_Ÿhî_ödex_sizes
,

191 (
èbÀ
->
°©_sum_of_Ÿhî_ödex_sizes
));

192 
	`UNIV_MEM_INVALID
(&
èbÀ
->
°©_modifõd_cou¡î
,

193 (
èbÀ
->
°©_modifõd_cou¡î
));

195 
di˘_ödex_t
 *
ödex
;

197 
ödex
 = 
èbÀ
->
	`fú°_ödex
(); index !
NULL
; index = index->
	`√xt
()) {

198 
ulöt
 
n_uniq
 = 
	`di˘_ödex_gë_n_unique
(
ödex
);

200 
	`UNIV_MEM_INVALID
(
ödex
->
°©_n_diff_key_vÆs
,

201 
n_uniq
 * (
ödex
->
°©_n_diff_key_vÆs
[0]));

202 
	`UNIV_MEM_INVALID
(
ödex
->
°©_n_ßm∂e_sizes
,

203 
n_uniq
 * (
ödex
->
°©_n_ßm∂e_sizes
[0]));

204 
	`UNIV_MEM_INVALID
(
ödex
->
°©_n_n⁄_nuŒ_key_vÆs
,

205 
n_uniq
 * (
ödex
->
°©_n_n⁄_nuŒ_key_vÆs
[0]));

206 
	`UNIV_MEM_INVALID
(&
ödex
->
°©_ödex_size
, (index->stat_index_size));

207 
	`UNIV_MEM_INVALID
(&
ödex
->
°©_n_Àaf_∑ges
,

208 (
ödex
->
°©_n_Àaf_∑ges
));

212 
	`di˘_èbÀ_°©s_u∆ock
(
èbÀ
, 
RW_X_LATCH
);

213 
	}
}

	@dict0stats_bg.h

33 #i‚de‡
di˘0°©s_bg_h


34 
	#di˘0°©s_bg_h


	)

36 
	~"univ.i
"

38 
	~"di˘0ty≥s.h
"

39 
	~"os0evít.h
"

40 
	~"os0thªad.h
"

43 
os_evít_t
 
di˘_°©s_evít
;

45 #ifde‡
HAVE_PSI_INTERFACE


46 
mysql_pfs_key_t
 
di˘_°©s_ªˇlc_poﬁ_muãx_key
;

49 #ifde‡
UNIV_DEBUG


51 
boﬁ
 
önodb_di˘_°©s_dißbÀd_debug
;

59 
di˘_°©s_ªˇlc_poﬁ_add
(

60 c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

64 
di˘_°©s_ªˇlc_poﬁ_dñ
(

65 c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

70 
	#DICT_STATS_BG_YIELD
(
åx
) \

72 
	`row_mysql_u∆ock_d©a_di˘i⁄¨y
(
åx
); \

73 
	`os_thªad_¶ìp
(250000); \

74 
	`row_mysql_lock_d©a_di˘i⁄¨y
(
åx
); \

75 } 0)

	)

80 
UNIV_INLINE


81 
boﬁ
 
	$di˘_°©s_°›_bg
(
di˘_èbÀ_t
 *
èbÀ
)

82 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

92 
	`di˘_°©s_waô_bg_to_°›_usög_èbÀ
(

93 
di˘_èbÀ_t
 *
èbÀ
,

94 
åx_t
 *
åx
);

98 
	`di˘_°©s_thªad_öô
();

102 
	`di˘_°©s_thªad_deöô
();

104 #ifde‡
UNIV_DEBUG


111 
	`di˘_°©s_dißbÀd_debug_upd©e
(
THD
 *
thd
, 
SYS_VAR
 *
v¨
, *
v¨_±r
,

112 c⁄° *
ßve
);

118 
	`di˘_°©s_thªad
();

121 
	`di˘_°©s_shutdown
();

123 
	~"di˘0°©s_bg.ic
"

	@dict0stats_bg.ic

33 
	~"di˘0di˘.h
"

34 
	~"di˘0mem.h
"

39 
UNIV_INLINE


40 
boﬁ
 
	$di˘_°©s_°›_bg
(
di˘_èbÀ_t
 *
èbÀ
)

42 
	`ut_ad
(!
§v_ªad_⁄ly_mode
);

43 
	`ut_ad
(
	`muãx_own
(&
di˘_sys
->
muãx
));

45 i‡(!(
èbÀ
->
°©s_bg_Êag
 & 
BG_STAT_IN_PROGRESS
)) {

46  (
åue
);

49 
èbÀ
->
°©s_bg_Êag
 |
BG_STAT_SHOULD_QUIT
;

50  (
Ál£
);

51 
	}
}

	@dict0types.h

33 #i‚de‡
di˘0ty≥s_h


34 
	#di˘0ty≥s_h


	)

36 
	~"ibuf0ty≥s.h
"

37 
	~"mysql_com.h
"

38 
	~"ªm0ty≥s.h
"

39 
	~"ut0muãx.h
"

41 
	gdi˘_sys_t
;

42 
	gdi˘_cﬁ_t
;

43 
	gdi˘_fõld_t
;

44 
	gdi˘_ödex_t
;

45 
	gdi˘_èbÀ_t
;

46 
	gdi˘_f‹eign_t
;

47 
	gdi˘_v_cﬁ_t
;

49 
	göd_node_t
;

50 
	gèb_node_t
;

51 
	gdi˘_add_v_cﬁ_t
;

53 
«me•a˚
 
	gdd
 {

54 
˛ass
 
	gP¨tôi⁄
;

61 
«me•a˚
 
	gdi˘_«me
 {

63 
c⁄°ex¥
 
	gPART_SEPARATOR
[] = "#p#";

66 
c⁄°ex¥
 
size_t
 
	gPART_SEPARATOR_LEN
 = (
PART_SEPARATOR
) - 1;

69 
c⁄°ex¥
 
	gSUB_PART_SEPARATOR
[] = "#sp#";

72 
c⁄°ex¥
 
size_t
 
	gSUB_PART_SEPARATOR_LEN
 = (
SUB_PART_SEPARATOR
) - 1;

75 
c⁄°ex¥
 
	gALT_PART_SEPARATOR
[] = "#P#";

78 
c⁄°ex¥
 
	gALT_SUB_PART_SEPARATOR
[] = "#SP#";

81 
c⁄°ex¥
 
	gSCHEMA_SEPARATOR
[] = "/";

82 
c⁄°ex¥
 
size_t
 
	gSCHEMA_SEPARATOR_LEN
 = (
SCHEMA_SEPARATOR
) - 1;

86 
c⁄°ex¥
 
size_t
 
	gMAX_DB_UTF8_LEN
 = 
NAME_LEN
 + 1;

89 
c⁄°ex¥
 
size_t
 
	gMAX_DB_CHAR_LEN
 = 
NAME_CHAR_LEN
;

97 
c⁄°ex¥
 
size_t
 
	gMAX_TABLE_UTF8_LEN
 = 
NAME_LEN
 + 
PART_SEPARATOR_LEN
 + NAME_LEN +

98 
SUB_PART_SEPARATOR_LEN
 + 
NAME_LEN
 + 1;

101 
c⁄°ex¥
 
size_t
 
	gMAX_TABLE_CHAR_LEN
 = 
NAME_CHAR_LEN
 + 
PART_SEPARATOR_LEN
 +

102 
NAME_CHAR_LEN
 + 
SUB_PART_SEPARATOR_LEN
 +

103 
NAME_CHAR_LEN
;

109 
c⁄°ex¥
 
	gTMP_POSTFIX
[] = "#tmp";

110 
c⁄°ex¥
 
size_t
 
	gTMP_POSTFIX_LEN
 = (
TMP_POSTFIX
) - 1;

114 
c⁄°ex¥
 
size_t
 
	gMAX_SPACE_NAME_LEN
 =

115 
NAME_LEN
 + 
SCHEMA_SEPARATOR_LEN
 + NAME_LEN + 
PART_SEPARATOR_LEN
 + NAME_LEN +

116 
SUB_PART_SEPARATOR_LEN
 + 
NAME_LEN
 + 
TMP_POSTFIX_LEN
;

119 
usög
 
	gC⁄vît_Func
 = 
°d
::
fun˘i⁄
<(°d::
°rög
 &)>;

124 
fûe_to_èbÀ
(
°d
::
°rög
 &
«me
, 
boﬁ
 
quõt
);

128 
èbÀ_to_fûe
(
°d
::
°rög
 &
«me
);

133 
boﬁ
 
is_∑πôi⁄
(c⁄° 
°d
::
°rög
 &
di˘_«me
);

143 
gë_èbÀ
(c⁄° 
°d
::
°rög
 &
di˘_«me
, 
boﬁ
 
c⁄vît
, std::°rög &
schema
,

144 
°d
::
°rög
 &
èbÀ
, std::°rög &
∑πôi⁄
, 
boﬁ
 &
is_tmp
);

150 
gë_èbÀ
(c⁄° 
°d
::
°rög
 &
di˘_«me
, std::°rög &
schema
,

151 
°d
::
°rög
 &
èbÀ
);

158 
gë_∑πôi⁄
(c⁄° 
°d
::
°rög
 &
∑πôi⁄
, 
boﬁ
 
c⁄vît
,

159 
°d
::
°rög
 &
∑π
, std::°rög &
sub_∑π
);

169 
buûd_èbÀ
(c⁄° 
°d
::
°rög
 &
schema
, c⁄° std::°rög &
èbÀ
,

170 c⁄° 
°d
::
°rög
 &
∑πôi⁄
, 
boﬁ
 
is_tmp
, boﬁ 
c⁄vît
,

171 
°d
::
°rög
 &
di˘_«me
);

176 
buûd_∑πôi⁄
(c⁄° 
dd
::
P¨tôi⁄
 *
dd_∑π
, 
°d
::
°rög
 &
∑πôi⁄
);

181 
buûd_57_∑πôi⁄
(c⁄° 
dd
::
P¨tôi⁄
 *
dd_∑π
, 
°d
::
°rög
 &
∑πôi⁄
);

187 
boﬁ
 
m©ch_∑πôi⁄
(c⁄° 
°d
::
°rög
 &
di˘_«me
,

188 c⁄° 
dd
::
P¨tôi⁄
 *
dd_∑π
);

193 
c⁄vît_to_•a˚
(
°d
::
°rög
 &
di˘_«me
);

198 
ªbuûd_•a˚
(c⁄° 
°d
::
°rög
 &
di˘_«me
, std::°rög &
•a˚_«me
);

202 
ªbuûd
(
°d
::
°rög
 &
di˘_«me
);

207 
	#DICT_HDR_SPACE
 0

	)

208 
	#DICT_HDR_PAGE_NO
 
FSP_DICT_HDR_PAGE_NO


	)

212 
	#DICT_IBUF_ID_MIN
 0xFFFFFFFF00000000ULL

	)

215 
ib_id_t
 
	tèbÀ_id_t
;

217 
ib_id_t
 
	t•a˚_ödex_t
;

220 ˛as†
	cödex_id_t
 {

221 
	mpublic
:

225 
	$ödex_id_t
(
•a˚_id_t
 
•a˚_id
, 
•a˚_ödex_t
 
ödex_id
)

226 : 
	`m_•a˚_id
(
•a˚_id
), 
	$m_ödex_id
(
ödex_id
) {}

231 
boﬁ
 
›î©‹
<(c⁄° 
ödex_id_t
 &
Ÿhî
) const {

232  (
m_•a˚_id
 < 
Ÿhî
.m_space_id ||

233 (
m_•a˚_id
 =
Ÿhî
.m_•a˚_id && 
m_ödex_id
 < other.m_index_id));

234 
	}
}

238 
boﬁ
 
	g›î©‹
==(c⁄° 
ödex_id_t
 &
Ÿhî
) const {

239  (
m_•a˚_id
 =
Ÿhî
.m_•a˚_id && 
m_ödex_id
 == other.m_index_id);

244 
uöt64_t
 
	$c⁄v_to_öt
() const {

245 
	`ut_ad
((
m_ödex_id
 & 0xFFFFFFFF00000000ULL) == 0);

247  (
°©ic_ˇ°
<
uöt64_t
>(
m_•a˚_id
Ë<< 32 | 
m_ödex_id
);

248 
	}
}

252 
boﬁ
 
	$is_ibuf
() const {

253  (
m_•a˚_id
 =
IBUF_SPACE_ID
 &&

254 
m_ödex_id
 =
DICT_IBUF_ID_MIN
 + 
IBUF_SPACE_ID
);

255 
	}
}

258 
•a˚_id_t
 
	gm_•a˚_id
;

260 
•a˚_ödex_t
 
	gm_ödex_id
;

267 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gödex_id_t
 &
	gid
) {

268  (
	gout
 << "[•a˚=" << 
	gid
.
	gm_•a˚_id
 << ",ödex=" << id.
	gm_ödex_id


277 
	edi˘_îr_ign‹e_t
 {

278 
	mDICT_ERR_IGNORE_NONE
 = 0,

279 
	mDICT_ERR_IGNORE_INDEX_ROOT
 = 1,

281 
	mDICT_ERR_IGNORE_CORRUPT
 = 2,

282 
	mDICT_ERR_IGNORE_FK_NOKEY
 = 4,

284 
	mDICT_ERR_IGNORE_RECOVER_LOCK
 = 8,

290 
	mDICT_ERR_IGNORE_ALL
 = 0xFFFF

294 
	eib_quõs˚_t
 {

295 
	mQUIESCE_NONE
,

296 
	mQUIESCE_START
,

297 
	mQUIESCE_COMPLETE


300 #i‚de‡
UNIV_HOTBACKUP


301 
ib_muãx_t
 
	tDi˘SysMuãx
;

305 
	#TEMP_FILE_PREFIX
 "#sql"

	)

306 
	#TEMP_FILE_PREFIX_LENGTH
 4

	)

307 
	#TEMP_FILE_PREFIX_INNODB
 "#sql-ib"

	)

309 
	#TEMP_TABLE_PREFIX
 "#sql"

	)

310 
	#TEMP_TABLE_PATH_PREFIX
 "/" 
TEMP_TABLE_PREFIX


	)

312 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_IBUF_DEBUG


314 
uöt
 
ibuf_debug
;

318 
	#SPATIAL_STATUS_SHIFT
 12

	)

321 
	#SPATIAL_STATUS_MASK
 (3 << 
SPATIAL_STATUS_SHIFT
)

	)

323 #i‡
SPATIAL_STATUS_MASK
 < 
REC_VERSION_56_MAX_INDEX_COL_LEN


324 #îr‹ 
SPATIAL_STATUS_MASK
 < 
REC_VERSION_56_MAX_INDEX_COL_LEN


330 
	e•©ül_°©us_t
 {

332 
	mSPATIAL_UNKNOWN
 = 0,

335 
	mSPATIAL_NONE
 = 1,

338 
	mSPATIAL_MIXED
 = 2,

341 
	mSPATIAL_ONLY
 = 3

	@dict0upgrade.h

27 
	~"my_öây≥s.h
"

29 
˛ass
 
	gTHD
;

30 
	gTABLE
;

37 
uöt32_t
 
dd_upgøde_ödexes_num
;

39 
«me•a˚
 
	gdd
 {

40 
˛ass
 
	gTabÀ
;

41 
˛ass
 
	gTabÀ•a˚
;

54 
boﬁ
 
dd_upgøde_èbÀ
(
THD
 *
thd
, c⁄° *
db_«me
, c⁄° *
èbÀ_«me
,

55 
dd
::
TabÀ
 *
dd_èbÀ
, 
TABLE
 *
§v_èbÀ
);

63 
dd_upgøde_èbÀ•a˚
(
THD
 *
thd
);

69 
boﬁ
 
upgøde_•a˚_vîsi⁄
(c⁄° 
uöt32
 
•a˚_id
, boﬁ 
£rvî_vîsi⁄_⁄ly
);

74 
boﬁ
 
upgøde_•a˚_vîsi⁄
(
dd
::
TabÀ•a˚
 *
èbÀ•a˚
);

81 
dd_upgøde_logs
(
THD
 *
thd
);

89 
dd_upgøde_föish
(
THD
 *
thd
, 
boﬁ
 
Áûed_upgøde
);

	@dyn0buf.h

33 #i‚de‡
dyn0buf_h


34 
	#dyn0buf_h


	)

36 
	~"dyn0ty≥s.h
"

37 
	~"mem0mem.h
"

38 
	~"univ.i
"

39 
	~"ut0l°.h
"

48 
	gãm∂©e
 <
size_t
 
	gSIZE
 = 
DYN_ARRAY_DATA_SIZE
>

49 ˛as†
	cdyn_buf_t
 {

50 
public
:

51 
˛ass
 
block_t
;

53 
	$UT_LIST_NODE_T
(
	tblock_t
Ë
	tblock_node_t
;

54 
	$UT_LIST_BASE_NODE_T
(
	tblock_t
Ë
	tblock_li°_t
;

56 ˛as†
	cblock_t
 {

57 
public
:

58 
	`block_t
() {

59 
	`ut_ad
(
MAX_DATA_SIZE
 <= (2 << 15));

60 
	`öô
();

63 ~
	`block_t
() {}

68 
ulöt
 
	`u£d
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

69  (
°©ic_ˇ°
<
ulöt
>(
m_u£d
 & ~
DYN_BLOCK_FULL_FLAG
));

75 
byã
 *
	`°¨t
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë{  (
m_d©a
); }

79 
byã
 *
	`begö
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë{  (
m_d©a
); }

83 
byã
 *
	`íd
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

84  (
	`begö
(Ë+ 
m_u£d
);

89 c⁄° 
byã
 *
	`begö
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

90  (
m_d©a
);

95 c⁄° 
byã
 *
	`íd
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

96  (
	`begö
(Ë+ 
m_u£d
);

99 
¥iv©e
:

102 
ãm∂©e
 <
ty≥«me
 
Ty≥
>

103 
Ty≥
 
	`push
(
ib_uöt32_t
 
size
) {

104 
Ty≥
 
±r
 = 
ªöãΩªt_ˇ°
<Ty≥>(
	`íd
());

106 
m_u£d
 +
size
;

107 
	`ut_ad
(
m_u£d
 <
°©ic_ˇ°
<
ib_uöt32_t
>(
MAX_DATA_SIZE
));

109  (
±r
);

114 
	`˛o£
(c⁄° 
byã
 *
±r
) {

116 
	`ut_ad
(
±r
 >
	`begö
());

117 
	`ut_ad
(
±r
 <
	`begö
(Ë+ 
m_buf_íd
);

120 
m_u£d
 = 
°©ic_ˇ°
<
ib_uöt32_t
>(
±r
 - 
	`begö
());

122 
	`ut_ad
(
m_u£d
 <
MAX_DATA_SIZE
);

123 
	`ut_d
(
m_buf_íd
 = 0);

128 
	`öô
() {

129 
m_u£d
 = 0;

130 
	`ut_d
(
m_buf_íd
 = 0);

131 
	`ut_d
(
m_magic_n
 = 
DYN_BLOCK_MAGIC_N
);

134 
¥iv©e
:

135 #ifde‡
UNIV_DEBUG


137 
ulöt
 
m_buf_íd
;

140 
ulöt
 
m_magic_n
;

144 
c⁄°ex¥
áutÿ
MAX_DATA_SIZE
 = 
SIZE
;

147 
byã
 
m_d©a
[
MAX_DATA_SIZE
];

150 
block_node_t
 
m_node
;

154 
ib_uöt32_t
 
m_u£d
;

156 
‰õnd
 
˛ass
 
dyn_buf_t
;

159 
c⁄°ex¥
áutÿ
MAX_DATA_SIZE
 = 
block_t
::MAX_DATA_SIZE;

162 
	$dyn_buf_t
(Ë: 
	`m_hóp
(), 
	$m_size
() {

163 
	`UT_LIST_INIT
(
m_li°
, &
block_t
::
m_node
);

164 
	`push_back
(&
m_fú°_block
);

165 
	}
}

168 ~
	$dyn_buf_t
(Ë{ 
	`îa£
(); 
	}
}

171 
	$îa£
() {

172 i‡(
m_hóp
 !
nuŒ±r
) {

173 
	`mem_hóp_‰ì
(
m_hóp
);

174 
m_hóp
 = 
nuŒ±r
;

177 
	`UT_LIST_INIT
(
m_li°
, &
block_t
::
m_node
);

178 
	`push_back
(&
m_fú°_block
);

180 
m_fú°_block
.
	`öô
();

181 
	`ut_ad
(
	`UT_LIST_GET_LEN
(
m_li°
) == 1);

184 
m_size
 = 0;

185 
	}
}

192 
byã
 *
	$›í
(
ulöt
 
size
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

193 
	`ut_ad
(
size
 > 0);

194 
	`ut_ad
(
size
 <
MAX_DATA_SIZE
);

196 
block_t
 *
block
;

198 
block
 = 
	`has_•a˚
(
size
Ë? 
	`back
(Ë: 
	`add_block
();

200 
	`ut_ad
(
block
->
m_u£d
 <
MAX_DATA_SIZE
);

201 
	`ut_d
(
block
->
m_buf_íd
 = block->
m_u£d
 + 
size
);

203  (
block
->
	`íd
());

204 
	}
}

209 
	$˛o£
(c⁄° 
byã
 *
±r
) {

210 
	`ut_ad
(
	`UT_LIST_GET_LEN
(
m_li°
) > 0);

211 
block_t
 *
block
 = 
	`back
();

213 
m_size
 -
block
->
	`u£d
();

215 
block
->
	`˛o£
(
±r
);

217 
m_size
 +
block
->
	`u£d
();

218 
	}
}

225 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

226 
Ty≥
 
	$push
(
ib_uöt32_t
 
size
) {

227 
	`ut_ad
(
size
 > 0);

228 
	`ut_ad
(
size
 <
MAX_DATA_SIZE
);

230 
block_t
 *
block
;

232 
block
 = 
	`has_•a˚
(
size
Ë? 
	`back
(Ë: 
	`add_block
();

234 
m_size
 +
size
;

238  (
block
->
ãm∂©e
 
push
<
Ty≥
>(
size
));

239 
	}
}

245 
	$push
(c⁄° 
byã
 *
±r
, 
ib_uöt32_t
 
Àn
) {

246 
Àn
 > 0) {

247 
ib_uöt32_t
 
n_c›õd
;

249 i‡(
Àn
 >
MAX_DATA_SIZE
) {

250 
n_c›õd
 = 
MAX_DATA_SIZE
;

252 
n_c›õd
 = 
Àn
;

255 ::
	`memmove
(
push
<
byã
 *>(
n_c›õd
), 
±r
,Ç_copied);

257 
±r
 +
n_c›õd
;

258 
Àn
 -
n_c›õd
;

260 
	}
}

266 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

267 c⁄° 
Ty≥
 
	$©
(
ulöt
 
pos
) const {

268 
block_t
 *
block
 =

269 
c⁄°_ˇ°
<
block_t
 *>(c⁄°_ˇ°<
dyn_buf_t
 *>(
this
)->
	`föd
(
pos
));

271  (
ªöãΩªt_ˇ°
<
Ty≥
>(
block
->
	`begö
(Ë+ 
pos
));

272 
	}
}

278 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

279 
Ty≥
 
	$©
(
ulöt
 
pos
) {

280 
block_t
 *
block
 = 
c⁄°_ˇ°
<block_à*>(
	`föd
(
pos
));

282  (
ªöãΩªt_ˇ°
<
Ty≥
>(
block
->
	`begö
(Ë+ 
pos
));

283 
	}
}

288 
ulöt
 
	$size
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

289 #ifde‡
UNIV_DEBUG


290 
ulöt
 
tŸÆ_size
 = 0;

292 c⁄° 
block_t
 *
block
 = 
	`UT_LIST_GET_FIRST
(
m_li°
); block !
nuŒ±r
;

293 
block
 = 
	`UT_LIST_GET_NEXT
(
m_node
, block)) {

294 
tŸÆ_size
 +
block
->
	`u£d
();

297 
	`ut_ad
(
tŸÆ_size
 =
m_size
);

299  (
m_size
);

300 
	}
}

305 
	gãm∂©e
 <
ty≥«me
 
	gFun˘‹
>

306 
boﬁ
 
	$f‹_óch_block
(
Fun˘‹
 &
fun˘‹
) const {

307 c⁄° 
block_t
 *
block
 = 
	`UT_LIST_GET_FIRST
(
m_li°
); block !
nuŒ±r
;

308 
block
 = 
	`UT_LIST_GET_NEXT
(
m_node
, block)) {

309 i‡(!
	`fun˘‹
(
block
)) {

310  (
Ál£
);

314  (
åue
);

315 
	}
}

320 
	gãm∂©e
 <
ty≥«me
 
	gFun˘‹
>

321 
boﬁ
 
	$f‹_óch_block_ö_ªvî£
(
Fun˘‹
 &
fun˘‹
) const {

322 
block_t
 *
block
 = 
	`UT_LIST_GET_LAST
(
m_li°
); block !
nuŒ±r
;

323 
block
 = 
	`UT_LIST_GET_PREV
(
m_node
, block)) {

324 i‡(!
	`fun˘‹
(
block
)) {

325  (
Ál£
);

329  (
åue
);

330 
	}
}

334 
block_t
 *
	$‰⁄t
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

335 
	`ut_ad
(
	`UT_LIST_GET_LEN
(
m_li°
) > 0);

336  (
	`UT_LIST_GET_FIRST
(
m_li°
));

337 
	}
}

341 
boﬁ
 
	$is_smÆl
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

342  (
m_hóp
 =
NULL
);

343 
	}
}

345 
	g¥iv©e
:

347 
dyn_buf_t
(dyn_buf_à&&Ë
dñëe
;

348 
dyn_buf_t
(c⁄° dyn_buf_à&Ë
dñëe
;

349 
	gdyn_buf_t
 &
	g›î©‹
=(
dyn_buf_t
 &&Ë
dñëe
;

350 
	gdyn_buf_t
 &
	g›î©‹
=(c⁄° 
dyn_buf_t
 &Ë
dñëe
;

354 
	$push_back
(
block_t
 *
block
) {

355 
block
->
	`öô
();

357 
	`UT_LIST_ADD_LAST
(
m_li°
, 
block
);

358 
	}
}

361 
block_t
 *
	$back
(Ë{  (
	`UT_LIST_GET_LAST
(
m_li°
)); 
	}
}

365 
boﬁ
 
	$has_•a˚
(
ulöt
 
size
) const {

366  (
	`back
()->
m_u£d
 + 
size
 <
MAX_DATA_SIZE
);

367 
	}
}

371 
boﬁ
 
	$has_•a˚
(
ulöt
 
size
) {

372  (
	`back
()->
m_u£d
 + 
size
 <
MAX_DATA_SIZE
);

373 
	}
}

379 
block_t
 *
	$föd
(
ulöt
 &
pos
) {

380 
block_t
 *
block
;

382 
	`ut_ad
(
	`UT_LIST_GET_LEN
(
m_li°
) > 0);

384 
block
 = 
	`UT_LIST_GET_FIRST
(
m_li°
); block !
nuŒ±r
;

385 
block
 = 
	`UT_LIST_GET_NEXT
(
m_node
, block)) {

386 i‡(
pos
 < 
block
->
	`u£d
()) {

390 
pos
 -
block
->
	`u£d
();

393 
	`ut_ad
(
block
 !
nuŒ±r
);

394 
	`ut_ad
(
block
->
	`u£d
(Ë>
pos
);

396  (
block
);

397 
	}
}

401 
block_t
 *
	$add_block
() {

402 
block_t
 *
block
;

404 i‡(
m_hóp
 =
nuŒ±r
) {

405 
m_hóp
 = 
	`mem_hóp_¸óã
((*
block
));

408 
block
 = 
ªöãΩªt_ˇ°
<
block_t
 *>(
	`mem_hóp_Æloc
(
m_hóp
, (*block)));

410 
	`push_back
(
block
);

412  (
block
);

413 
	}
}

415 
	g¥iv©e
:

417 
mem_hóp_t
 *
m_hóp
;

420 
block_li°_t
 
	gm_li°
;

423 
ulöt
 
	gm_size
;

428 
block_t
 
	gm_fú°_block
;

431 
	gdyn_buf_t
<
	tDYN_ARRAY_DATA_SIZE
> 
	tmå_buf_t
;

434 
	små_buf_c›y_t
 {

436 
må_buf_t
 
	mm_buf
;

440 
boﬁ
 
›î©‹
()(c⁄° 
	mmå_buf_t
::
block_t
 *
block
) {

441 
byã
 *
buf
 = 
m_buf
.
›í
(
block
->
u£d
());

442 
mem˝y
(
buf
, 
block
->
begö
(), block->
u£d
());

443 
	mm_buf
.
˛o£
(
buf
 + 
block
->
u£d
());

444  (
	måue
);

	@dyn0types.h

33 #i‚de‡
dyn0ty≥s_h


34 
	#dyn0ty≥s_h


	)

37 
	#DYN_BLOCK_MAGIC_N
 375767

	)

41 
	#DYN_ARRAY_DATA_SIZE
 512

	)

44 
	#DYN_BLOCK_FULL_FLAG
 0x1000000UL

	)

	@eval0eval.h

34 #i‚de‡
evÆ0evÆ_h


35 
	#evÆ0evÆ_h


	)

37 
	~"∑rs0∑rs.h
"

38 
	~"∑rs0sym.h
"

39 
	~"que0ty≥s.h
"

40 
	~"univ.i
"

45 
evÆ_node_‰ì_vÆ_buf
(
que_node_t
 *
node
);

47 
UNIV_INLINE


48 
evÆ_sym
(
sym_node_t
 *
sym_node
);

50 
UNIV_INLINE


51 
evÆ_exp
(
que_node_t
 *
exp_node
);

56 
UNIV_INLINE


57 
evÆ_node_£t_öt_vÆ
(
que_node_t
 *
node
, 
löt
 
vÆ
);

61 
UNIV_INLINE


62 
löt
 
evÆ_node_gë_öt_vÆ
(
que_node_t
 *
node
);

69 
UNIV_INLINE


70 
evÆ_node_c›y_™d_Æloc_vÆ
(
que_node_t
 *
node
, c⁄° 
byã
 *
°r
, 
ulöt
 
Àn
);

75 
UNIV_INLINE


76 
evÆ_node_c›y_vÆ
(
que_node_t
 *
node1
, que_node_à*
node2
);

80 
UNIV_INLINE


81 
iboﬁ
 
evÆ_node_gë_iboﬁ_vÆ
(
que_node_t
 *
node
);

84 
iboﬁ
 
evÆ_cmp
(
func_node_t
 *
cmp_node
);

86 
	~"evÆ0evÆ.ic
"

	@eval0eval.ic

34 
	~"∑rs0grm.h
"

35 
	~"que0que.h
"

36 
	~"ªm0cmp.h
"

39 
evÆ_func
(
func_node_t
 *
func_node
);

46 
byã
 *
evÆ_node_Æloc_vÆ_buf
(

47 
que_node_t
 *
node
,

50 
ulöt
 
size
);

54 
UNIV_INLINE


55 
byã
 *
	$evÆ_node_ísuª_vÆ_buf
(

56 
que_node_t
 *
node
,

59 
ulöt
 
size
)

61 
dfõld_t
 *
dfõld
;

62 
byã
 *
d©a
;

64 
dfõld
 = 
	`que_node_gë_vÆ
(
node
);

65 
	`dfõld_£t_Àn
(
dfõld
, 
size
);

67 
d©a
 = 
°©ic_ˇ°
<
byã
 *>(
	`dfõld_gë_d©a
(
dfõld
));

69 i‡(!
d©a
 || 
	`que_node_gë_vÆ_buf_size
(
node
Ë< 
size
) {

70 
d©a
 = 
	`evÆ_node_Æloc_vÆ_buf
(
node
, 
size
);

73  (
d©a
);

74 
	}
}

77 
UNIV_INLINE


78 
	$evÆ_sym
(
sym_node_t
 *
sym_node
)

80 
	`ut_ad
(
	`que_node_gë_ty≥
(
sym_node
Ë=
QUE_NODE_SYMBOL
);

82 i‡(
sym_node
->
ödúe˘i⁄
) {

86 
	`dfõld_c›y_d©a
(
	`que_node_gë_vÆ
(
sym_node
),

87 
	`que_node_gë_vÆ
(
sym_node
->
ödúe˘i⁄
));

89 
	}
}

92 
UNIV_INLINE


93 
	$evÆ_exp
(
que_node_t
 *
exp_node
)

95 i‡(
	`que_node_gë_ty≥
(
exp_node
Ë=
QUE_NODE_SYMBOL
) {

96 
	`evÆ_sym
((
sym_node_t
 *)
exp_node
);

101 
	`evÆ_func
(
°©ic_ˇ°
<
func_node_t
 *>(
exp_node
));

102 
	}
}

105 
UNIV_INLINE


106 
	$evÆ_node_£t_öt_vÆ
(
que_node_t
 *
node
,

107 
löt
 
vÆ
)

109 
dfõld_t
 *
dfõld
;

110 
byã
 *
d©a
;

112 
dfõld
 = 
	`que_node_gë_vÆ
(
node
);

114 
d©a
 = 
°©ic_ˇ°
<
byã
 *>(
	`dfõld_gë_d©a
(
dfõld
));

116 i‡(
d©a
 =
nuŒ±r
) {

117 
d©a
 = 
	`evÆ_node_Æloc_vÆ_buf
(
node
, 4);

120 
	`ut_ad
(
	`dfõld_gë_Àn
(
dfõld
) == 4);

122 
	`mach_wrôe_to_4
(
d©a
, (
ulöt
)
vÆ
);

123 
	}
}

127 
UNIV_INLINE


128 
löt
 
	$evÆ_node_gë_öt_vÆ
(
que_node_t
 *
node
)

130 c⁄° 
byã
 *
±r
;

131 
dfõld_t
 *
dfõld
;

133 
dfõld
 = 
	`que_node_gë_vÆ
(
node
);

134 
±r
 = 
°©ic_ˇ°
<
byã
 *>(
	`dfõld_gë_d©a
(
dfõld
));

136 
	`ut_ad
(
	`dfõld_gë_Àn
(
dfõld
) == 4);

138  (
	`mach_ªad_‰om_4
(
±r
));

139 
	}
}

143 
UNIV_INLINE


144 
iboﬁ
 
	$evÆ_node_gë_iboﬁ_vÆ
(
que_node_t
 *
node
)

146 
dfõld_t
 *
dfõld
;

147 
byã
 *
d©a
;

149 
dfõld
 = 
	`que_node_gë_vÆ
(
node
);

151 
d©a
 = 
°©ic_ˇ°
<
byã
 *>(
	`dfõld_gë_d©a
(
dfõld
));

153 
	`ut_ad
(
d©a
 !
nuŒ±r
);

155  (
	`mach_ªad_‰om_1
(
d©a
));

156 
	}
}

159 
UNIV_INLINE


160 
	$evÆ_node_£t_iboﬁ_vÆ
(
func_node_t
 *
func_node
,

161 
iboﬁ
 
vÆ
)

163 
dfõld_t
 *
dfõld
;

164 
byã
 *
d©a
;

166 
dfõld
 = 
	`que_node_gë_vÆ
(
func_node
);

168 
d©a
 = 
°©ic_ˇ°
<
byã
 *>(
	`dfõld_gë_d©a
(
dfõld
));

170 i‡(
d©a
 =
nuŒ±r
) {

173 
d©a
 = 
	`evÆ_node_Æloc_vÆ_buf
(
func_node
, 1);

176 
	`ut_ad
(
	`dfõld_gë_Àn
(
dfõld
) == 1);

178 
	`mach_wrôe_to_1
(
d©a
, 
vÆ
);

179 
	}
}

183 
UNIV_INLINE


184 
	$evÆ_node_c›y_™d_Æloc_vÆ
(

185 
que_node_t
 *
node
,

186 c⁄° 
byã
 *
°r
,

187 
ulöt
 
Àn
)

189 
byã
 *
d©a
;

191 i‡(
Àn
 =
UNIV_SQL_NULL
) {

192 
	`dfõld_£t_Àn
(
	`que_node_gë_vÆ
(
node
), 
Àn
);

197 
d©a
 = 
	`evÆ_node_ísuª_vÆ_buf
(
node
, 
Àn
);

199 
	`ut_mem˝y
(
d©a
, 
°r
, 
Àn
);

200 
	}
}

203 
UNIV_INLINE


204 
	$evÆ_node_c›y_vÆ
(
que_node_t
 *
node1
,

205 
que_node_t
 *
node2
)

207 
dfõld_t
 *
dfõld2
;

209 
dfõld2
 = 
	`que_node_gë_vÆ
(
node2
);

211 
	`evÆ_node_c›y_™d_Æloc_vÆ
(
node1
,

212 
°©ic_ˇ°
<
byã
 *>(
	`dfõld_gë_d©a
(
dfõld2
)),

213 
	`dfõld_gë_Àn
(
dfõld2
));

214 
	}
}

	@eval0proc.h

33 #i‚de‡
evÆ0¥oc_h


34 
	#evÆ0¥oc_h


	)

36 
	~"∑rs0∑rs.h
"

37 
	~"∑rs0sym.h
"

38 
	~"que0ty≥s.h
"

39 
	~"univ.i
"

43 
UNIV_INLINE


44 
que_thr_t
 *
¥oc_°ï
(que_thr_à*
thr
);

47 
que_thr_t
 *
if_°ï
(que_thr_à*
thr
);

50 
que_thr_t
 *
whûe_°ï
(que_thr_à*
thr
);

53 
que_thr_t
 *
f‹_°ï
(que_thr_à*
thr
);

56 
que_thr_t
 *
assign_°ï
(que_thr_à*
thr
);

59 
UNIV_INLINE


60 
que_thr_t
 *
¥oc_evÆ_°ï
(que_thr_à*
thr
);

63 
que_thr_t
 *
exô_°ï
(que_thr_à*
thr
);

66 
que_thr_t
 *
ªtu∫_°ï
(que_thr_à*
thr
);

68 
	~"evÆ0¥oc.ic
"

	@eval0proc.ic

33 
	~"evÆ0evÆ.h
"

34 
	~"∑rs0∑rs.h
"

35 
	~"que0que.h
"

39 
UNIV_INLINE


40 
que_thr_t
 *
	$¥oc_°ï
(
que_thr_t
 *
thr
)

42 
¥oc_node_t
 *
node
;

44 
	`ut_ad
(
thr
);

46 
node
 = 
°©ic_ˇ°
<
¥oc_node_t
 *>(
thr
->
run_node
);

47 
	`ut_ad
(
	`que_node_gë_ty≥
(
node
Ë=
QUE_NODE_PROC
);

49 i‡(
thr
->
¥ev_node
 =
	`que_node_gë_∑ª¡
(
node
)) {

53 
thr
->
run_node
 = 
node
->
°©_li°
;

56 
	`ut_ad
(
	`que_node_gë_√xt
(
thr
->
¥ev_node
Ë=
nuŒ±r
);

58 
thr
->
run_node
 = 
nuŒ±r
;

61 i‡(
thr
->
run_node
 =
nuŒ±r
) {

62 
thr
->
run_node
 = 
	`que_node_gë_∑ª¡
(
node
);

65  (
thr
);

66 
	}
}

70 
UNIV_INLINE


71 
que_thr_t
 *
	$¥oc_evÆ_°ï
(
que_thr_t
 *
thr
)

73 
func_node_t
 *
node
;

75 
	`ut_ad
(
thr
);

77 
node
 = 
°©ic_ˇ°
<
func_node_t
 *>(
thr
->
run_node
);

78 
	`ut_ad
(
	`que_node_gë_ty≥
(
node
Ë=
QUE_NODE_FUNC
);

82 
	`evÆ_exp
(
node
);

84 
thr
->
run_node
 = 
	`que_node_gë_∑ª¡
(
node
);

86  (
thr
);

87 
	}
}

	@fil0fil.h

33 #i‚de‡
fû0fû_h


34 
	#fû0fû_h


	)

36 
	~"univ.i
"

38 
	~"di˘0ty≥s.h
"

39 
	~"fû0ty≥s.h
"

40 
	~"log0ªcv.h
"

41 
	~"∑ge0size.h
"

42 #i‚de‡
UNIV_HOTBACKUP


43 
	~"ibuf0ty≥s.h
"

45 
	~"ut0√w.h
"

47 
	~"m_˘y≥.h
"

48 
	~"sql/dd/obje˘_id.h
"

50 
	~<©omic
>

51 
	~<li°
>

52 
	~<ve˘‹
>

60 
c⁄°ex¥
 
size_t
 
	gFIL_SCAN_MAX_TABLESPACES_PER_THREAD
 = 8000;

65 
c⁄°ex¥
 
size_t
 
	gFIL_SCAN_MAX_THREADS
 = 16;

68 
c⁄°ex¥
 
size_t
 
	gFIL_SCAN_THREADS_PER_CORE
 = 2;

75 
size_t
 
fû_gë_sˇn_thªads
(size_à
num_fûes
);

79 
c⁄°ex¥
 
	ggíîÆ_•a˚_«me
[] = "innodb_general";

84 
c⁄°ex¥
 
	gundo_•a˚_«me
[] = "innodb_undo";

86 vﬁ©ûê
boﬁ
 
ªcv_ªcovîy_⁄
;

88 #ifde‡
UNIV_HOTBACKUP


89 
	~<un‹dîed_£t
>

90 
usög
 
	gDú_£t
 = 
°d
::
un‹dîed_£t
<°d::
°rög
>;

91 
Dú_£t
 
ªm_gí_ts_dús
;

92 
boﬁ
 
ª∂ay_ö_d©adú
;

96 
	gåx_t
;

97 
˛ass
 
	g∑ge_id_t
;

99 
usög
 
	gFûíames
 = 
°d
::
ve˘‹
<°d::
°rög
, 
	gut_Æloˇt‹
<
	g°d
::string>>;

100 
usög
 
	gS∑˚_ids
 = 
°d
::
ve˘‹
<
•a˚_id_t
, 
	gut_Æloˇt‹
<
	g•a˚_id_t
>>;

103 
	gfû_ty≥_t
 : 
uöt8_t
 {

105 
FIL_TYPE_TEMPORARY
 = 1,

107 
	gFIL_TYPE_IMPORT
 = 2,

109 
	gFIL_TYPE_TABLESPACE
 = 4,

111 
	gFIL_TYPE_LOG
 = 8

115 ˛as†
	cFû_°©e
 {

117 
	mMATCHES
,

120 
	mMISSING
,

123 
	mDELETED
,

126 
	mMOVED
,

130 
	mRENAMED


138 
ölöe
 
boﬁ
 
	$fû_ty≥_is_d©a
(
fû_ty≥_t
 
ty≥
) {

139  (
ty≥
 =
FIL_TYPE_TEMPORARY
 ||Åy≥ =
FIL_TYPE_IMPORT
 ||

140 
ty≥
 =
FIL_TYPE_TABLESPACE
);

141 
	}
}

143 
	gfû_•a˚_t
;

146 
	sfû_node_t
 {

147 
usög
 
	mLi°_node
 = 
UT_LIST_NODE_T
(
fû_node_t
);

150 
fû_•a˚_t
 *
	m•a˚
;

153 *
	m«me
;

158 
boﬁ
 
	mis_›í
;

161 
pfs_os_fûe_t
 
	mh™dÀ
;

164 
os_evít_t
 
	msync_evít
;

167 
boﬁ
 
	mis_øw_disk
;

172 
∑ge_no_t
 
	msize
;

176 
∑ge_no_t
 
	mÊush_size
;

180 
∑ge_no_t
 
	möô_size
;

183 
∑ge_no_t
 
	mmax_size
;

186 
size_t
 
	mn_≥ndög
;

189 
size_t
 
	mn_≥ndög_Êushes
;

192 
size_t
 
	mö_u£
;

195 
öt64_t
 
	mmodifiˇti⁄_cou¡î
;

198 
öt64_t
 
	mÊush_cou¡î
;

201 
Li°_node
 
	mLRU
;

204 
boﬁ
 
	mpunch_hﬁe
;

207 
size_t
 
	mblock_size
;

210 
boﬁ
 
	m©omic_wrôe
;

213 
size_t
 
	mmagic_n
;

217 
	eí¸y±i⁄_›_ty≥
 { 
	mENCRYPTION
 = 1, 
	mDECRYPTION
 = 2, 
	mNONE
 };

220 
	sfû_•a˚_t
 {

221 
usög
 
	mLi°_node
 = 
UT_LIST_NODE_T
(
fû_•a˚_t
);

222 
usög
 
	mFûes
 = 
°d
::
ve˘‹
<
fû_node_t
, 
	mut_Æloˇt‹
<
	mfû_node_t
>>;

226 
ªÀa£_‰ì_exã¡s
(
ulöt
 
n_ª£rved
);

230 
boﬁ
 
is_dñëed
() const;

234 
boﬁ
 
was_nŸ_dñëed
() const;

239 
£t_dñëed
();

241 #i‚de‡
UNIV_HOTBACKUP


245 
uöt32_t
 
gë_cuºít_vîsi⁄
() const;

250 
uöt32_t
 
gë_ª˚¡_vîsi⁄
() const;

255 
bump_vîsi⁄
();

259 
boﬁ
 
has_no_ª„ªn˚s
() const;

264 
size_t
 
gë_ª„ªn˚_cou¡
() const;

267 
öc_ªf
(Ë
	mn€x˚±
 {

268 c⁄°áutÿ
	mo
 = 
m_n_ªf_cou¡
.
„tch_add
(1);

269 
ut_a
(
o
 !
°d
::
numîic_limôs
<
size_t
>::
max
());

273 
dec_ªf
(Ë
	mn€x˚±
 {

274 c⁄°áutÿ
	mo
 = 
m_n_ªf_cou¡
.
„tch_sub
(1);

275 
ut_a
(
o
 >= 1);

279 #ifde‡
UNIV_DEBUG


284 
	m°d
::
o°ªam
 &
¥öt_xdes_∑ges
(
°d
::o°ªam &
out
) const;

289 
¥öt_xdes_∑ges
(c⁄° *
fûíame
) const;

292 
	mpublic
:

293 
usög
 
Ob£rvî
 = 
FlushOb£rvî
;

294 
usög
 
	mFlushOb£rvîs
 = 
°d
::
ve˘‹
<
Ob£rvî
 *, 
	mut_Æloˇt‹
<
	mOb£rvî
 *>>;

297 
	mib
::
Timî
 
m_œ°_exãnded
{};

300 
∑ge_no_t
 
	mm_undo_exãnd
{};

303 *
	m«me
{};

306 
•a˚_id_t
 
	mid
;

310 
öôülize
(Ë
	mn€x˚±
 {

311 
√w
 (&
m_œ°_exãnded
Ë
	mib
::
Timî
;

312 
√w
 (&
fûes
Ë
	mfû_•a˚_t
::
Fûes
();

314 #i‚de‡
UNIV_HOTBACKUP


315 
√w
 (&
m_vîsi⁄
Ë
	m°d
::
©omic
<
uöt32_t
>;

316 
√w
 (&
m_n_ªf_cou¡
Ë
	m°d
::
©omic_size_t
;

317 
√w
 (&
m_dñëed
Ë
	m°d
::
©omic
<
boﬁ
>;

323 
	mm_undo_exãnd
 = (16 * 1024 * 1024Ë/ 
UNIV_PAGE_SIZE
;

326 
	m¥iv©e
:

327 #i‚de‡
UNIV_HOTBACKUP


359 
°d
::
©omic
<
uöt32_t
> 
m_vîsi⁄
{};

399 
	m°d
::
©omic_size_t
 
m_n_ªf_cou¡
{};

403 
	m°d
::
©omic_boﬁ
 
m_dñëed
{};

405 
	mpublic
:

408 
boﬁ
 
°›_ios
{};

417 
boﬁ
 
	m°›_√w_›s
{};

419 #ifde‡
UNIV_DEBUG


422 
ulöt
 
	mªdo_skù≥d_cou¡
{};

426 
fû_ty≥_t
 
	mpuΩo£
;

430 
Fûes
 
	mfûes
{};

433 
∑ge_no_t
 
	msize
{};

436 
∑ge_no_t
 
	msize_ö_hódî
{};

439 
uöt64_t
 
	maut€xãnd_size_ö_byãs
{};

442 
uöt32_t
 
	m‰ì_Àn
{};

445 
∑ge_no_t
 
	m‰ì_limô
{};

450 
uöt32_t
 
	mÊags
{};

454 
uöt32_t
 
	mn_ª£rved_exã¡s
{};

458 
uöt32_t
 
	mn_≥ndög_Êushes
{};

464 
uöt32_t
 
	mn_≥ndög_›s
{};

466 #i‚de‡
UNIV_HOTBACKUP


468 
rw_lock_t
 
	mœtch
;

473 
Li°_node
 
	munÊushed_•a˚s
;

476 
boﬁ
 
	mis_ö_unÊushed_•a˚s
{};

479 
	mCom¥essi⁄
::
Ty≥
 
com¥essi⁄_ty≥
;

482 
	mEn¸y±i⁄
::
Ty≥
 
í¸y±i⁄_ty≥
;

485 
byã
 
	mí¸y±i⁄_key
[
En¸y±i⁄
::
KEY_LEN
];

488 
ulöt
 
	mí¸y±i⁄_kÀn
{};

491 
byã
 
	mí¸y±i⁄_iv
[
En¸y±i⁄
::
KEY_LEN
];

494 
í¸y±i⁄_›_ty≥
 
	mí¸y±i⁄_›_ö_¥ogªss
;

497 
l¢_t
 
	mm_hódî_∑ge_Êush_l¢
;

500 
ulöt
 
	mmagic_n
;

503 
fû_•a˚_t
 *
	ms_sys_•a˚
;

506 
fû_•a˚_t
 *
	ms_ªdo_•a˚
;

510 
boﬁ
 
is_com¥es£d
(Ëc⁄° 
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

511  
	mcom¥essi⁄_ty≥
 !
Com¥essi⁄
::
NONE
;

516 
boﬁ
 
is_í¸y±ed
(Ëc⁄° 
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

517  
FSP_FLAGS_GET_ENCRYPTION
(
Êags
);

523 
boﬁ
 
ˇn_í¸y±
(Ëc⁄° 
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

524  
	mí¸y±i⁄_ty≥
 !
En¸y±i⁄
::
Ty≥
::
NONE
;

530 
gë_í¸y±i⁄_öfo
(
En¸y±i⁄
 &
í
Ë
	mn€x˚±
 {

531 
	mí
.
£t_ty≥
(
í¸y±i⁄_ty≥
);

532 
	mí
.
£t_key
(
í¸y±i⁄_key
);

533 
	mí
.
£t_key_Àngth
(
í¸y±i⁄_kÀn
);

534 
	mí
.
£t_öôül_ve˘‹
(
í¸y±i⁄_iv
);

537 
	mpublic
:

545 
fû_node_t
 *
gë_fûe_node
(
∑ge_no_t
 *
∑ge_no
Ë
n€x˚±


546 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

550 
c⁄°ex¥
 
size_t
 
	gFIL_SPACE_MAGIC_N
 = 89472;

553 
c⁄°ex¥
 
size_t
 
	gFIL_NODE_MAGIC_N
 = 89389;

556 
	eib_fûe_suffix
 {

557 
	mNO_EXT
 = 0,

558 
	mIBD
 = 1,

559 
	mCFG
 = 2,

560 
	mCFP
 = 3,

561 
	mIBT
 = 4,

562 
	mIBU
 = 5,

563 
	mDWR
 = 6

566 c⁄° *
dŸ_ext
[];

568 
	#DOT_IBD
 
dŸ_ext
[
IBD
]

	)

569 
	#DOT_CFG
 
dŸ_ext
[
CFG
]

	)

570 
	#DOT_CFP
 
dŸ_ext
[
CFP
]

	)

571 
	#DOT_IBT
 
dŸ_ext
[
IBT
]

	)

572 
	#DOT_IBU
 
dŸ_ext
[
IBU
]

	)

573 
	#DOT_DWR
 
dŸ_ext
[
DWR
]

	)

575 #ifde‡
_WIN32


579 #¥agm®
w¨nög
(
dißbÀ
 : 4351)

583 ˛as†
	cFû_∑th
 {

584 
	mpublic
:

586 
c⁄°ex¥
áutÿ
DB_SEPARATOR
 = '/';

589 
c⁄°ex¥
áutÿ
	mOS_SEPARATOR
 = 
OS_PATH_SEPARATOR
;

592 
c⁄°ex¥
áutÿ
	mSEPARATOR
 = "\\/";

593 #ifde‡
_WIN32


594 
c⁄°ex¥
áutÿ
	mDOT_SLASH
 = ".\\";

595 
c⁄°ex¥
áutÿ
	mDOT_DOT_SLASH
 = "..\\";

596 
c⁄°ex¥
áutÿ
	mSLASH_DOT_DOT_SLASH
 = "\\..\\";

598 
c⁄°ex¥
áutÿ
	mDOT_SLASH
 = "./";

599 
c⁄°ex¥
áutÿ
	mDOT_DOT_SLASH
 = "../";

600 
c⁄°ex¥
áutÿ
	mSLASH_DOT_DOT_SLASH
 = "/../";

604 
	e∑th_ty≥
 { 
	mabsﬁuã
, 
	mªœtive
, 
	mfûe_«me_⁄ly
, 
	mövÆid
 };

607 
Fû_∑th
();

614 
ex∂icô
 
Fû_∑th
(c⁄° *
∑th
, 
size_t
 
Àn
, 
boﬁ
 
n‹mÆize_∑th
 = 
Ál£
);

620 
ex∂icô
 
Fû_∑th
(c⁄° *
∑th
, 
boﬁ
 
n‹mÆize_∑th
 = 
Ál£
);

626 
ex∂icô
 
Fû_∑th
(c⁄° 
°d
::
°rög
 &
∑th
, 
boﬁ
 
n‹mÆize_∑th
 = 
Ál£
);

630 
›î©‹
 c⁄° *(Ëc⁄° 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

631  
	gm_∑th
.
c_°r
();

636 c⁄° *
	$›î©‹
()(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

637  
m_∑th
.
	`c_°r
();

638 
	}
}

641 c⁄° 
	g°d
::
°rög
 &
	$∑th
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

642  (
m_∑th
);

643 
	}
}

646 
size_t
 
	$Àn
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

647  (
m_∑th
.
	`Àngth
());

648 
	}
}

655 c⁄° 
	g°d
::
°rög
 
	$abs_∑th
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

656 i‡(
m_abs_∑th
.
	`em±y
()) {

657  (
	`gë_ªÆ_∑th
(
m_∑th
));

660  (
m_abs_∑th
);

661 
	}
}

664 
size_t
 
	$abs_Àn
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

665  (
m_abs_∑th
.
	`Àngth
());

666 
	}
}

671 
boﬁ
 
	g›î©‹
==(c⁄° 
Fû_∑th
 &
Ÿhî
Ëc⁄° {  (
is_ßme_as
(other)); }

676 
boﬁ
 
	$is_ßme_as
(c⁄° 
Fû_∑th
 &
Ÿhî
) const

677 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

682 
boﬁ
 
	$is_ßme_as
(c⁄° 
°d
::
°rög
 &
Ÿhî
) const

683 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

690 
boﬁ
 
	$is_ßme_as
(c⁄° 
°d
::
°rög
 &
fú°
, c⁄° std::°rög &
£c⁄d
)

691 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

692 i‡(
fú°
.
	`em±y
(Ë|| 
£c⁄d
.empty()) {

693  (
Ál£
);

696 
Fû_∑th
 
	`fú°_∑th
(
fú°
);

697 
°d
::
°rög
 
fú°_abs
 = 
fú°_∑th
.
	`abs_∑th
();

698 
	`åim_£∑øt‹
(
fú°_abs
);

700 
Fû_∑th
 
	`£c⁄d_∑th
(
£c⁄d
);

701 
°d
::
°rög
 
£c⁄d_abs
 = 
£c⁄d_∑th
.
	`abs_∑th
();

702 
	`åim_£∑øt‹
(
£c⁄d_abs
);

704  (
fú°_abs
 =
£c⁄d_abs
);

705 
	}
}

710 
boﬁ
 
	$is_™˚°‹
(c⁄° 
Fû_∑th
 &
Ÿhî
) const

711 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

716 
boﬁ
 
	$is_™˚°‹
(c⁄° 
°d
::
°rög
 &
Ÿhî
) const

717 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

726 
boﬁ
 
	$is_™˚°‹
(c⁄° 
°d
::
°rög
 &
fú°
, c⁄° std::°rög &
£c⁄d
)

727 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

728 i‡(
fú°
.
	`em±y
(Ë|| 
£c⁄d
.empty()) {

729  (
Ál£
);

732 
Fû_∑th
 
	`™˚°‹
(
fú°
);

733 
Fû_∑th
 
	`des˚nd™t
(
£c⁄d
);

735  (
™˚°‹
.
	`is_™˚°‹
(
des˚nd™t
));

736 
	}
}

739 
boﬁ
 
	$is_fûe_™d_exi°s
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

742 
boﬁ
 
	$is_dúe˘‹y_™d_exi°s
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

746 
boﬁ
 
	$is_vÆid
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

751 
boﬁ
 
	$is_cúcuœr
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

761 
boﬁ
 
	`is_hiddí
(
°d
::
°rög
 
∑th
);

763 #ifde‡
_WIN32


770 
boﬁ
 
	`is_hiddí
(
WIN32_FIND_DATA
 &
dúít
);

778 
°d
::
°rög
 
	$ªmove_quŸes
(c⁄° *
∑th•ec
) {

779 
°d
::
°rög
 
	`∑th
(
∑th•ec
);

781 
	`ut_ad
(!
∑th
.
	`em±y
());

783 i‡(
∑th
.
	`size
(Ë>2 && (’©h.
	`‰⁄t
(Ë='\'' &&Ö©h.
	`back
() == '\'') ||

784 (
∑th
.
	`‰⁄t
(Ë='"' &&Ö©h.
	`back
() == '"'))) {

785 
∑th
.
	`îa£
(0, 1);

786 
∑th
.
	`îa£
’©h.
	`size
() - 1);

789  (
∑th
);

790 
	}
}

796 
boﬁ
 
	$is_ªœtive_∑th
(c⁄° 
°d
::
°rög
 &
∑th
)

797 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

798  (
	`ty≥_of_∑th
(
∑th
Ë=
ªœtive
);

799 
	}
}

802 
boﬁ
 
	$is_absﬁuã_∑th
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

803  (
	`ty≥_of_∑th
(
m_∑th
Ë=
absﬁuã
);

804 
	}
}

810 
boﬁ
 
	$is_absﬁuã_∑th
(c⁄° 
°d
::
°rög
 &
∑th
)

811 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

812  (
	`ty≥_of_∑th
(
∑th
Ë=
absﬁuã
);

813 
	}
}

819 
∑th_ty≥
 
	$ty≥_of_∑th
(c⁄° 
°d
::
°rög
 &
∑th
)

820 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

821 i‡(
∑th
.
	`em±y
()) {

822  (
övÆid
);

826 autÿ
fú°_£∑øt‹
 = 
∑th
.
	`föd_fú°_of
(
SEPARATOR
);

827 i‡(
fú°_£∑øt‹
 =
°d
::
°rög
::
≈os
) {

828  (
fûe_«me_⁄ly
);

834 i‡(
fú°_£∑øt‹
 == 0) {

835  (
absﬁuã
);

838 #ifde‡
_WIN32


840 i‡(
∑th
.
	`Àngth
(Ë>3 && 
	`ißÕha
’©h.
	`©
(0)) &&Öath.at(1) == ':' &&

841 (
∑th
.
	`©
(2) == '\\' ||Öath.at(2) == '/')) {

842  (
absﬁuã
);

848  (
ªœtive
);

849 
	}
}

853 
boﬁ
 
	$has_¥efix
(c⁄° 
°d
::
°rög
 &
∑th
, c⁄° std::°rög 
¥efix
)

854 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

855  (
∑th
.
	`size
(Ë>
¥efix
.size() &&

856 
°d
::
	`equÆ
(
¥efix
.
	`begö
(),Öªfix.
	`íd
(), 
∑th
.begin()));

857 
	}
}

862 
	$n‹mÆize
(
°d
::
°rög
 &
∑th
) {

863 autÿ&
c
 : 
∑th
) {

864 i‡(
c
 =
OS_PATH_SEPARATOR_ALT
) {

865 
c
 = 
OS_SEPARATOR
;

868 
	}
}

873 
	$n‹mÆize
(*
∑th
) {

874 autÿ
±r
 = 
∑th
; *ptr; ++ptr) {

875 i‡(*
±r
 =
OS_PATH_SEPARATOR_ALT
) {

876 *
±r
 = 
OS_SEPARATOR
;

879 
	}
}

883 
	$to_lowî
(
°d
::
°rög
 &
∑th
) {

884 autÿ&
c
 : 
∑th
) {

885 
c
 = 
	`my_tﬁowî
(&
my_ch¨£t_fûíame
, c);

887 
	}
}

890 
os_fûe_ty≥_t
 
	$gë_fûe_ty≥
(c⁄° 
°d
::
°rög
 &
∑th
)

891 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

896 c⁄° *
	`gë_fûe_ty≥_°rög
(c⁄° 
°d
::
°rög
 &
∑th
);

901 c⁄° *
	`gë_fûe_ty≥_°rög
(
os_fûe_ty≥_t
 
ty≥
);

914 
°d
::
°rög
 
	$gë_ªÆ_∑th
(c⁄° 
°d
::
°rög
 &
∑th
, 
boﬁ
 
f‹˚
 = 
åue
)

915 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

920 
°d
::
°rög
 
	$gë_ba£«me
(c⁄° 
°d
::
°rög
 &
fûï©h
)

921 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

928 
°d
::
°rög
 
	$gë_exi°ög_∑th
(c⁄° 
°d
::
°rög
 &
∑th
,

929 
°d
::
°rög
 &
gho°
)

930 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

935 
boﬁ
 
	$is_undo_èbÀ•a˚_«me
(c⁄° 
°d
::
°rög
 &
«me
)

936 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

942 
boﬁ
 
	$has_suffix
(
ib_fûe_suffix
 
sfx
, c⁄° 
°d
::
°rög
 &
∑th
) {

943 c⁄°áutÿ
suffix
 = 
dŸ_ext
[
sfx
];

944 
size_t
 
Àn
 = 
	`°æí
(
suffix
);

946  (
∑th
.
	`size
(Ë>
Àn
 &&

947 
∑th
.
	`com∑ª
’©h.
	`size
(Ë- 
Àn
,Üí, 
suffix
) == 0);

948 
	}
}

954 
boﬁ
 
	$åunˇã_suffix
(
ib_fûe_suffix
 
sfx
, 
°d
::
°rög
 &
∑th
) {

955 c⁄°áutÿ
suffix
 = 
dŸ_ext
[
sfx
];

956 
size_t
 
Àn
 = 
	`°æí
(
suffix
);

958 i‡(
∑th
.
	`size
(Ë< 
Àn
 ||

959 
∑th
.
	`com∑ª
’©h.
	`size
(Ë- 
Àn
,Üí, 
suffix
) != 0) {

960  (
Ál£
);

963 
∑th
.
	`ªsize
’©h.
	`size
(Ë- 
Àn
);

964  (
åue
);

965 
	}
}

970 
boﬁ
 
	$is_£∑øt‹
(
c
Ë{  (¯='\\' || c ='/'); 
	}
}

975 
	$åim_£∑øt‹
(
°d
::
°rög
 &
∑th
) {

976 i‡(!
∑th
.
	`em±y
(Ë&& 
	`is_£∑øt‹
’©h.
	`back
())) {

977 
∑th
.
	`ªsize
’©h.
	`size
() - 1);

979 
	}
}

987 
	$≠≥nd_£∑øt‹
(
°d
::
°rög
 &
∑th
) {

988 i‡(!
∑th
.
	`em±y
(Ë&& !
	`is_£∑øt‹
’©h.
	`back
())) {

989 
∑th
.
	`push_back
(
OS_SEPARATOR
);

991 
	}
}

1003 *
	$make
(c⁄° 
°d
::
°rög
 &
∑th_ö
, c⁄° std::°rög &
«me_ö
,

1004 
ib_fûe_suffix
 
ext
, 
boﬁ
 
åim
 = 
Ál£
)

1005 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1010 *
	$make_cfg
(c⁄° 
°d
::
°rög
 &
∑th_ö
)

1011 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

1012  (
	`make
(
∑th_ö
, "", 
CFG
));

1013 
	}
}

1018 *
	$make_cÂ
(c⁄° 
°d
::
°rög
 &
∑th_ö
)

1019 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

1020  (
	`make
(
∑th_ö
, "", 
CFP
));

1021 
	}
}

1030 *
	$make_ibd
(c⁄° 
°d
::
°rög
 &
∑th_ö
, c⁄° std::°rög &
«me_ö
)

1031 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

1032  (
	`make
(
∑th_ö
, 
«me_ö
, 
IBD
));

1033 
	}
}

1039 *
	$make_ibd_‰om_èbÀ_«me
(c⁄° 
°d
::
°rög
 &
«me_ö
)

1040 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

1041  (
	`make
("", 
«me_ö
, 
IBD
));

1042 
	}
}

1051 
	g°d
::
°rög
 
	$make_√w_∑th
(c⁄° 
°d
::
°rög
 &
∑th_ö
,

1052 c⁄° 
°d
::
°rög
 &
«me_ö
,

1053 
ib_fûe_suffix
 
exä
)

1054 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1061 
boﬁ
 
	`∑r£_fûe_∑th
(c⁄° 
°d
::
°rög
 &
fûe_∑th
, 
ib_fûe_suffix
 
exä
,

1062 
°d
::
°rög
 &
di˘_«me
);

1076 
	`make_d©a_dú_∑th
(*
d©a_dú_∑th
);

1078 #i‚de‡
UNIV_HOTBACKUP


1089 
boﬁ
 
	`is_vÆid_loˇti⁄
(c⁄° *
•a˚_«me
, 
•a˚_id_t
 
•a˚_id
,

1090 
uöt32_t
 
f•_Êags
, c⁄° 
°d
::
°rög
 &
∑th
);

1097 
boﬁ
 
	`is_vÆid_loˇti⁄_wôhö_db
(c⁄° *
•a˚_«me
,

1098 c⁄° 
°d
::
°rög
 &
∑th
);

1102 
	`c⁄vît_to_fûíame_ch¨£t
(
°d
::
°rög
 &
«me
);

1106 
	`c⁄vît_to_lowî_ˇ£
(
°d
::
°rög
 &
∑th
);

1110 
¥Ÿe˘ed
:

1112 
°d
::
°rög
 
m_∑th
;

1115 
°d
::
°rög
 
m_abs_∑th
;

1116 
	}
};

1119 
Fû_∑th
 
MySQL_d©adú_∑th
;

1122 
Fû_∑th
 
MySQL_undo_∑th
;

1125 
boﬁ
 
MySQL_undo_∑th_is_unique
;

1128 
c⁄°ex¥
 
size_t
 
	gFIL_IBD_FILE_INITIAL_SIZE
 = 7;

1129 
c⁄°ex¥
 
size_t
 
	gFIL_IBT_FILE_INITIAL_SIZE
 = 5;

1134 
c⁄°ex¥
 
size_t
 
	gFIL_IBD_FILE_INITIAL_SIZE_5_7
 = 4;

1137 
c⁄°ex¥
 
∑ge_no_t
 
	gFIL_NULL
 = 
°d
::
numîic_limôs
<∑ge_no_t>::
max
();

1140 
c⁄°ex¥
 
∑ge_no_t
 
	gPAGE_NO_MAX
 = 
°d
::
numîic_limôs
<∑ge_no_t>::
max
() - 1;

1143 
c⁄°ex¥
 
•a˚_id_t
 
	gSPACE_UNKNOWN
 = 
°d
::
numîic_limôs
<•a˚_id_t>::
max
();

1151 
usög
 
	gfû_Áddr_t
 = 
byã
;

1154 
	sfû_addr_t
 {

1156 
fû_addr_t
(Ë: 
∑ge
(
FIL_NULL
), 
boff£t
(0) {}

1161 
fû_addr_t
(
∑ge_no_t
 
p
, 
uöt32_t
 
boff
Ë: 
∑ge
’), 
boff£t
(boff) {}

1166 
boﬁ
 
is_equÆ
(c⁄° 
fû_addr_t
 &
rhs
) const {

1167  (
	m∑ge
 =
rhs
.
∑ge
 && 
boff£t
 ==Ñhs.boffset);

1172 
boﬁ
 
is_nuŒ
(Ëc⁄° {  (
	m∑ge
 =
FIL_NULL
 && 
boff£t
 == 0); }

1176 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

1177 
out
 << "[fû_addr_t:Öage=" << 
∑ge
 << ", boff£t=" << 
boff£t
 << "]";

1179  (
	mout
);

1183 
∑ge_no_t
 
	m∑ge
;

1186 
uöt32_t
 
	mboff£t
;

1192 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gfû_addr_t
 &
	gobj
) {

1193  (
	gobj
.
¥öt
(
out
));

1197 
fû_addr_t
 
fû_addr_nuŒ
;

1199 
usög
 
	g∑ge_ty≥_t
 = 
uöt16_t
;

1203 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_INDEX
 = 17855;

1206 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_RTREE
 = 17854;

1209 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_SDI
 = 17853;

1212 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_UNDO_LOG
 = 2;

1215 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_INODE
 = 3;

1218 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_IBUF_FREE_LIST
 = 4;

1222 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_ALLOCATED
 = 0;

1225 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_IBUF_BITMAP
 = 5;

1228 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_SYS
 = 6;

1231 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_TRX_SYS
 = 7;

1234 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_FSP_HDR
 = 8;

1237 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_XDES
 = 9;

1240 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_BLOB
 = 10;

1243 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_ZBLOB
 = 11;

1246 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_ZBLOB2
 = 12;

1250 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_UNKNOWN
 = 13;

1253 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_COMPRESSED
 = 14;

1256 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_ENCRYPTED
 = 15;

1259 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_COMPRESSED_AND_ENCRYPTED
 = 16;

1262 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_ENCRYPTED_RTREE
 = 17;

1265 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_SDI_BLOB
 = 18;

1268 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_SDI_ZBLOB
 = 19;

1271 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_LEGACY_DBLWR
 = 20;

1274 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_RSEG_ARRAY
 = 21;

1277 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_LOB_INDEX
 = 22;

1280 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_LOB_DATA
 = 23;

1283 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_LOB_FIRST
 = 24;

1286 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_ZLOB_FIRST
 = 25;

1289 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_ZLOB_DATA
 = 26;

1293 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_ZLOB_INDEX
 = 27;

1296 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_ZLOB_FRAG
 = 28;

1299 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_ZLOB_FRAG_ENTRY
 = 29;

1302 
c⁄°ex¥
 
∑ge_ty≥_t
 
	gFIL_PAGE_TYPE_LAST
 = 
FIL_PAGE_TYPE_ZLOB_FRAG_ENTRY
;

1305 
	#fû_∑ge_ty≥_is_ödex
(
∑ge_ty≥
) \

1306 (
∑ge_ty≥
 =
FIL_PAGE_INDEX
 ||Öage_ty≥ =
FIL_PAGE_SDI
 || \

1307 
∑ge_ty≥
 =
FIL_PAGE_RTREE
)

	)

1311 
	#fû_∑ge_ödex_∑ge_check
(
∑ge
) \

1312 
	`fû_∑ge_ty≥_is_ödex
(
	`fû_∑ge_gë_ty≥
(
∑ge
))

	)

1317 
ulöt
 
fû_n_log_Êushes
;

1320 
ulöt
 
fû_n_≥ndög_log_Êushes
;

1322 
ulöt
 
fû_n_≥ndög_èbÀ•a˚_Êushes
;

1325 
ulöt
 
fû_n_fûe_›íed
;

1336 
fû_•a˚_t
 *
	$fû_•a˚_gë
(
•a˚_id_t
 
•a˚_id
)

1337 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1339 #i‚de‡
UNIV_HOTBACKUP


1343 
rw_lock_t
 *
	$fû_•a˚_gë_œtch
(
•a˚_id_t
 
•a˚_id
)

1344 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1346 #ifde‡
UNIV_DEBUG


1350 
fû_ty≥_t
 
	$fû_•a˚_gë_ty≥
(
•a˚_id_t
 
•a˚_id
)

1351 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1360 
	`fû_•a˚_£t_imp‹ãd
(
•a˚_id_t
 
•a˚_id
);

1373 *
	$fû_node_¸óã
(c⁄° *
«me
, 
∑ge_no_t
 
size
, 
fû_•a˚_t
 *
•a˚
,

1374 
boﬁ
 
is_øw
, boﬁ 
©omic_wrôe
,

1375 
∑ge_no_t
 
max_∑ges
 = 
PAGE_NO_MAX
)

1376 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1387 
fû_•a˚_t
 *
	$fû_•a˚_¸óã
(c⁄° *
«me
, 
•a˚_id_t
 
•a˚_id
,

1388 
uöt32_t
 
Êags
, 
fû_ty≥_t
 
puΩo£
)

1389 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1396 
boﬁ
 
	$fû_assign_√w_•a˚_id
(
•a˚_id_t
 *
•a˚_id
)

1397 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1405 *
	$fû_•a˚_gë_fú°_∑th
(
•a˚_id_t
 
•a˚_id
)

1406 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1412 
∑ge_no_t
 
	$fû_•a˚_gë_size
(
•a˚_id_t
 
•a˚_id
)

1413 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1419 
uöt32_t
 
	$fû_•a˚_gë_Êags
(
•a˚_id_t
 
•a˚_id
)

1420 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1426 
	`fû_•a˚_£t_Êags
(
fû_•a˚_t
 *
•a˚
, 
uöt32_t
 
Êags
);

1432 
boﬁ
 
	$fû_•a˚_›í
(
•a˚_id_t
 
•a˚_id
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1436 
	`fû_•a˚_˛o£
(
•a˚_id_t
 
•a˚_id
);

1443 c⁄° 
∑ge_size_t
 
	$fû_•a˚_gë_∑ge_size
(
•a˚_id_t
 
•a˚_id
, 
boﬁ
 *
found
)

1444 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1448 
	`fû_öô
(
ulöt
 
max_n_›í
);

1451 
	`fû_˛o£
();

1459 
	`fû_›í_log_™d_sy°em_èbÀ•a˚_fûes
();

1463 
	`fû_˛o£_Æl_fûes
();

1468 
	`fû_˛o£_log_fûes
(
boﬁ
 
‰ì_Æl
);

1471 ˛as†
	cFû_ôî©‹
 {

1472 
public
:

1473 
usög
 
Fun˘i⁄
 = 
°d
::
fun˘i⁄
<
	`dbîr_t
(
fû_node_t
 *)>;

1478 
ãm∂©e
 <
ty≥«me
 
F
>

1479 
dbîr_t
 
	$f‹_óch_fûe
(
boﬁ
 
ö˛ude_log
, 
F
 &&
f
) {

1480  (
	`ôî©e
(
ö˛ude_log
, [=](
fû_node_t
 *
fûe
Ë{  (
	`f
(file)); }));

1488 
dbîr_t
 
	`ôî©e
(
boﬁ
 
ö˛ude_log
, 
Fun˘i⁄
 &&
f
);

1489 
	}
};

1494 
fû_£t_max_•a˚_id_if_biggî
(
•a˚_id_t
 
max_id
);

1496 #i‚de‡
UNIV_HOTBACKUP


1502 
dbîr_t
 
	$fû_wrôe_Êushed_l¢
(
l¢_t
 
l¢
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1510 
boﬁ
 
	`meb_fû_•a˚_‰ì
(
•a˚_id_t
 
•a˚_id
);

1516 
	`meb_exãnd_èbÀ•a˚s_to_°‹ed_Àn
();

1521 
	`meb_fû_«me_¥o˚ss
(c⁄° *
«me
, 
•a˚_id_t
 
•a˚_id
);

1530 
fû_•a˚_t
 *
	$fû_•a˚_acquúe
(
•a˚_id_t
 
•a˚_id
)

1531 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1538 
fû_•a˚_t
 *
	$fû_•a˚_acquúe_sûít
(
•a˚_id_t
 
•a˚_id
)

1539 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1543 
	`fû_•a˚_ªÀa£
(
fû_•a˚_t
 *
•a˚
);

1550 
boﬁ
 
	`fû_sy°em_gë_fûe_by_•a˚_id
(
•a˚_id_t
 
•a˚_id
, 
°d
::
°rög
 &
«me
);

1558 
boﬁ
 
	`fû_sy°em_gë_fûe_by_•a˚_num
(
•a˚_id_t
 
•a˚_num
,

1559 
•a˚_id_t
 &
•a˚_id
, 
°d
::
°rög
 &
«me
);

1565 
boﬁ
 
	$fû_åunˇã_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
, 
∑ge_no_t
 
size_ö_∑ges
)

1566 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1573 
boﬁ
 
	$fû_ª∂a˚_èbÀ•a˚
(
•a˚_id_t
 
ﬁd_•a˚_id
, s∑˚_id_à
√w_•a˚_id
,

1574 
∑ge_no_t
 
size_ö_∑ges
)

1575 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1582 
dbîr_t
 
	$fû_˛o£_èbÀ•a˚
(
åx_t
 *
åx
, 
•a˚_id_t
 
•a˚_id
)

1583 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1599 
dbîr_t
 
	$fû_disˇrd_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
)

1600 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1609 
dbîr_t
 
	$fû_ª«me_èbÀ•a˚_check
(
•a˚_id_t
 
•a˚_id
, c⁄° *
ﬁd_∑th
,

1610 c⁄° *
√w_∑th
, 
boﬁ
 
is_disˇrded
)

1611 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1621 
dbîr_t
 
	$fû_ª«me_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
, c⁄° *
ﬁd_∑th
,

1622 c⁄° *
√w_«me
, c⁄° *
√w_∑th_ö
)

1623 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1635 
dbîr_t
 
	$fû_ibd_¸óã
(
•a˚_id_t
 
•a˚_id
, c⁄° *
«me
, c⁄° *
∑th
,

1636 
uöt32_t
 
Êags
, 
∑ge_no_t
 
size
)

1637 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1647 
dbîr_t
 
	$fû_ibt_¸óã
(
•a˚_id_t
 
•a˚_id
, c⁄° *
«me
, c⁄° *
∑th
,

1648 
uöt32_t
 
Êags
, 
∑ge_no_t
 
size
)

1649 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1658 
dbîr_t
 
	$fû_dñëe_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
, 
buf_ªmove_t
 
buf_ªmove
)

1659 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1687 
dbîr_t
 
	$fû_ibd_›í
(
boﬁ
 
vÆid©e
, 
fû_ty≥_t
 
puΩo£
, 
•a˚_id_t
 
•a˚_id
,

1688 
uöt32_t
 
Êags
, c⁄° *
•a˚_«me
,

1689 c⁄° *
èbÀ_«me
, c⁄° *
∑th_ö
, 
boﬁ
 
°ri˘
,

1690 
boﬁ
 
ﬁd_•a˚
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1703 
boﬁ
 
	$fû_•a˚_exi°s_ö_mem
(
•a˚_id_t
 
•a˚_id
, c⁄° *
«me
,

1704 
boﬁ
 
¥öt_îr
, boﬁ 
adju°_•a˚
,

1705 
mem_hóp_t
 *
hóp
, 
èbÀ_id_t
 
èbÀ_id
)

1706 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1712 
	`fû_exãnd_èbÀ•a˚s_to_°‹ed_Àn
();

1718 
boﬁ
 
	$fû_•a˚_exãnd
(
fû_•a˚_t
 *
•a˚
, 
∑ge_no_t
 
size
)

1719 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1726 
boﬁ
 
	$fû_•a˚_ª£rve_‰ì_exã¡s
(
•a˚_id_t
 
•a˚_id
, 
ulöt
 
n_‰ì_now
,

1727 
ulöt
 
n_to_ª£rve
)

1728 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1733 
	`fû_•a˚_ªÀa£_‰ì_exã¡s
(
•a˚_id_t
 
•a˚_id
, 
ulöt
 
n_ª£rved
);

1739 
ulöt
 
	$fû_•a˚_gë_n_ª£rved_exã¡s
(
•a˚_id_t
 
•a˚_id
)

1740 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1751 
dbîr_t
 
	$fû_ªdo_io
(c⁄° 
IOReque°
 &
ty≥
, c⁄° 
∑ge_id_t
 &
∑ge_id
,

1752 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
ulöt
 
byã_off£t
, ulöà
Àn
,

1753 *
buf
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1772 
dbîr_t
 
	$fû_io
(c⁄° 
IOReque°
 &
ty≥
, 
boﬁ
 
sync
, c⁄° 
∑ge_id_t
 &
∑ge_id
,

1773 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
ulöt
 
byã_off£t
, ulöà
Àn
,

1774 *
buf
, *
mesßge
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1782 
	`fû_aio_waô
(
ulöt
 
£gmít
);

1788 
	`fû_Êush
(
•a˚_id_t
 
•a˚_id
);

1792 
	`fû_Êush_fûe_ªdo
();

1798 
	`fû_Êush_fûe_•a˚s
(
uöt8_t
 
puΩo£
);

1800 #ifde‡
UNIV_DEBUG


1803 
boﬁ
 
	`fû_vÆid©e
();

1809 
boﬁ
 
	$fû_addr_is_nuŒ
(c⁄° 
fû_addr_t
 &
addr
)

1810 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1815 
∑ge_no_t
 
	$fû_∑ge_gë_¥ev
(c⁄° 
byã
 *
∑ge
)

1816 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1821 
∑ge_no_t
 
	$fû_∑ge_gë_√xt
(c⁄° 
byã
 *
∑ge
)

1822 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1827 
	`fû_∑ge_£t_ty≥
(
byã
 *
∑ge
, 
ulöt
 
ty≥
);

1837 
	`fû_∑ge_ª£t_ty≥
(c⁄° 
∑ge_id_t
 &
∑ge_id
, 
byã
 *
∑ge
, 
ulöt
 
ty≥
,

1838 
må_t
 *
må
);

1843 
ölöe
 
∑ge_ty≥_t
 
	$fû_∑ge_gë_ty≥
(c⁄° 
byã
 *
∑ge
) {

1844  (
°©ic_ˇ°
<
∑ge_ty≥_t
>(
	`mach_ªad_‰om_2
(
∑ge
 + 
FIL_PAGE_TYPE
)));

1845 
	}
}

1855 
ölöe
 
	$fû_∑ge_check_ty≥
(c⁄° 
∑ge_id_t
 &
∑ge_id
, 
byã
 *
∑ge
,

1856 
ulöt
 
ty≥
, 
må_t
 *
må
) {

1857 
ulöt
 
∑ge_ty≥
 = 
	`fû_∑ge_gë_ty≥
(
∑ge
);

1859 i‡(
∑ge_ty≥
 !
ty≥
) {

1860 
	`fû_∑ge_ª£t_ty≥
(
∑ge_id
, 
∑ge
, 
ty≥
, 
må
);

1862 
	}
}

1872 
	#fû_block_check_ty≥
(
block
, 
ty≥
, 
må
) \

1873 
	`fû_∑ge_check_ty≥
(
block
->
∑ge
.
id
, block->
‰ame
, 
ty≥
, 
må
)

	)

1875 #ifde‡
UNIV_DEBUG


1878 
fû_•a˚_öc_ªdo_skù≥d_cou¡
(
•a˚_id_t
 
•a˚_id
);

1882 
fû_•a˚_dec_ªdo_skù≥d_cou¡
(
•a˚_id_t
 
•a˚_id
);

1887 
boﬁ
 
	$fû_•a˚_is_ªdo_skù≥d
(
•a˚_id_t
 
•a˚_id
)

1888 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1895 
boﬁ
 
	$fû_dñëe_fûe
(c⁄° *
∑th
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1898 
	sPageCÆlback
 {

1900 
	`PageCÆlback
(Ë: 
	`m_∑ge_size
(0, 0, 
Ál£
), 
	`m_fûï©h
(Ë
UNIV_NOTHROW
 {}

1902 
vútuÆ
 ~
	`PageCÆlback
(Ë
UNIV_NOTHROW
 {}

1908 
vútuÆ
 
dbîr_t
 
	`öô
(
os_off£t_t
 
fûe_size
, c⁄° 
buf_block_t
 *
block
)

1909 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
UNIV_NOTHROW
 = 0;

1918 
vútuÆ
 
dbîr_t
 
	`›î©‹
()(
os_off£t_t
 
off£t
, 
buf_block_t
 *
block
)

1919 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
UNIV_NOTHROW
 = 0;

1925 
	`£t_fûe
(c⁄° *
fûíame
, 
pfs_os_fûe_t
 
fûe
Ë
UNIV_NOTHROW
 {

1926 
m_fûe
 = 
fûe
;

1927 
m_fûï©h
 = 
fûíame
;

1931 
vútuÆ
 
•a˚_id_t
 
	`gë_•a˚_id
() const

1932 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
UNIV_NOTHROW
 = 0;

1936 
vútuÆ
 
ulöt
 
	`gë_•a˚_Êags
() const

1937 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
UNIV_NOTHROW
 = 0;

1941 
	`£t_∑ge_size
(c⁄° 
buf_‰ame_t
 *
∑ge
Ë
UNIV_NOTHROW
;

1945 c⁄° 
∑ge_size_t
 &
	`gë_∑ge_size
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

1946  (
m_∑ge_size
);

1950 
∑ge_size_t
 
m_∑ge_size
;

1953 
pfs_os_fûe_t
 
m_fûe
;

1956 c⁄° *
m_fûï©h
;

1959 
	`PageCÆlback
(
PageCÆlback
 &&Ë
dñëe
;

1960 
	`PageCÆlback
(c⁄° 
PageCÆlback
 &Ë
dñëe
;

1961 
PageCÆlback
 &
›î©‹
=(c⁄° PageCÆlback &Ë
dñëe
;

1971 
dbîr_t
 
	$fû_èbÀ•a˚_ôî©e
(
di˘_èbÀ_t
 *
èbÀ
, 
ulöt
 
n_io_buf„rs
,

1972 
Com¥essi⁄
::
Ty≥
 
com¥essi⁄_ty≥
,

1973 
PageCÆlback
 &
ˇŒback
)

1974 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1984 
boﬁ
 
	$fû_•a˚_ªad_«me_™d_fûï©h
(
•a˚_id_t
 
•a˚_id
, **
«me
,

1985 **
fûï©h
)

1986 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1992 *
	$fû_∑th_to_•a˚_«me
(c⁄° *
fûíame
)

1993 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2000 
•a˚_id_t
 
	$fû_•a˚_gë_id_by_«me
(c⁄° *
«me
)

2001 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2008 
dbîr_t
 
	$fû_ª«me_¥echeck
(c⁄° 
di˘_èbÀ_t
 *
ﬁd_èbÀ
,

2009 c⁄° 
di˘_èbÀ_t
 *
√w_èbÀ
, c⁄° *
tmp_«me
)

2010 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2016 
dbîr_t
 
	$fû_£t_com¥essi⁄
(
•a˚_id_t
 
•a˚_id
, c⁄° *
Æg‹ôhm
)

2017 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2022 
Com¥essi⁄
::
Ty≥
 
	$fû_gë_com¥essi⁄
(
•a˚_id_t
 
•a˚_id
)

2023 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2029 
	`fû_io_£t_í¸y±i⁄
(
IOReque°
 &
ªq_ty≥
, c⁄° 
∑ge_id_t
 &
∑ge_id
,

2030 
fû_•a˚_t
 *
•a˚
);

2038 
dbîr_t
 
	$fû_£t_í¸y±i⁄
(
•a˚_id_t
 
•a˚_id
, 
En¸y±i⁄
::
Ty≥
 
Æg‹ôhm
,

2039 
byã
 *
key
, byã *
iv
)

2040 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2046 
dbîr_t
 
	`fû_£t_aut€xãnd_size
(
•a˚_id_t
 
•a˚_id
, 
uöt64_t
 
aut€xãnd_size
);

2051 
dbîr_t
 
	$fû_ª£t_í¸y±i⁄
(
•a˚_id_t
 
•a˚_id
)

2052 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2056 
size_t
 
	$fû_í¸y±i⁄_rŸ©e
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2061 
ölöe
 
	$fû_•a˚_›í_if_√eded
(
fû_•a˚_t
 *
•a˚
) {

2062 i‡(
•a˚
->
size
 == 0) {

2067 
∑ge_no_t
 
size
 = 
	`fû_•a˚_gë_size
(
•a˚
->
id
);

2069 
	`ut_a
(
size
 =
•a˚
->size);

2071 
	}
}

2073 #i‡!
deföed
(
NO_FALLOCATE
Ë&& deföed(
UNIV_LINUX
)

2078 
boﬁ
 
	$fû_fusi⁄io_íabÀ_©omic_wrôe
(
pfs_os_fûe_t
 
fûe
)

2079 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2085 
	`fû_no_punch_hﬁe
(
fû_node_t
 *
fûe
);

2087 #ifde‡
UNIV_ENABLE_UNIT_TEST_MAKE_FILEPATH


2088 
	`ã°_make_fûï©h
();

2092 
	#fû_•a˚_gë_sys_•a˚
(Ë(
fû_•a˚_t
::
s_sys_•a˚
)

	)

2102 
byã
 *
	$fû_èbÀ•a˚_ªdo_¸óã
(
byã
 *
±r
, c⁄° byã *
íd
,

2103 c⁄° 
∑ge_id_t
 &
∑ge_id
, 
ulöt
 
∑r£d_byãs
,

2104 
boﬁ
 
∑r£_⁄ly
)

2105 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2115 
byã
 *
	$fû_èbÀ•a˚_ªdo_dñëe
(
byã
 *
±r
, c⁄° byã *
íd
,

2116 c⁄° 
∑ge_id_t
 &
∑ge_id
, 
ulöt
 
∑r£d_byãs
,

2117 
boﬁ
 
∑r£_⁄ly
)

2118 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2129 
byã
 *
	$fû_èbÀ•a˚_ªdo_ª«me
(
byã
 *
±r
, c⁄° byã *
íd
,

2130 c⁄° 
∑ge_id_t
 &
∑ge_id
, 
ulöt
 
∑r£d_byãs
,

2131 
boﬁ
 
∑r£_⁄ly
)

2132 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2142 
byã
 *
	$fû_èbÀ•a˚_ªdo_exãnd
(
byã
 *
±r
, c⁄° byã *
íd
,

2143 c⁄° 
∑ge_id_t
 &
∑ge_id
, 
ulöt
 
∑r£d_byãs
,

2144 
boﬁ
 
∑r£_⁄ly
)

2145 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2153 
byã
 *
	$fû_èbÀ•a˚_ªdo_í¸y±i⁄
(
byã
 *
±r
, c⁄° byã *
íd
,

2154 
•a˚_id_t
 
•a˚_id
, 
l¢_t
 
l¢
)

2155 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2159 
	`fû_èbÀ•a˚_›í_öô_f‹_ªcovîy
(
boﬁ
 
ªcovîy
);

2164 
boﬁ
 
	$fû_èbÀ•a˚_lookup_f‹_ªcovîy
(
•a˚_id_t
 
•a˚_id
)

2165 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2175 
boﬁ
 
	`fû_upd©e_∑πôi⁄_«me
(
•a˚_id_t
 
•a˚_id
, 
uöt32_t
 
f•_Êags
,

2176 
boﬁ
 
upd©e_•a˚
, 
°d
::
°rög
 &
•a˚_«me
,

2177 
°d
::
°rög
 &
dd_∑th
);

2185 
	`fû_add_moved_•a˚
(
dd
::
Obje˘_id
 
dd_obje˘_id
, 
•a˚_id_t
 
•a˚_id
,

2186 c⁄° *
•a˚_«me
, c⁄° 
°d
::
°rög
 &
ﬁd_∑th
,

2187 c⁄° 
°d
::
°rög
 &
√w_∑th
);

2199 
Fû_°©e
 
	$fû_èbÀ•a˚_∑th_equÆs
(
dd
::
Obje˘_id
 
dd_obje˘_id
,

2200 
•a˚_id_t
 
•a˚_id
,

2201 c⁄° *
•a˚_«me
, 
ulöt
 
f•_Êags
,

2202 
°d
::
°rög
 
ﬁd_∑th
,

2203 
°d
::
°rög
 *
√w_∑th
)

2204 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2211 
boﬁ
 
	$fû_check_missög_èbÀ•a˚s
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2216 
	`fû_£t_sˇn_dú
(c⁄° 
°d
::
°rög
 &
dúe˘‹y
, 
boﬁ
 
is_undo_dú
 = 
Ál£
);

2221 
	`fû_£t_sˇn_dús
(c⁄° 
°d
::
°rög
 &
dúe˘‹õs
);

2225 
dbîr_t
 
	`fû_sˇn_f‹_èbÀ•a˚s
();

2231 
boﬁ
 
	$fû_èbÀ•a˚_›í_f‹_ªcovîy
(
•a˚_id_t
 
•a˚_id
)

2232 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2241 
boﬁ
 
	`fû_›_ª∂ay_ª«me_f‹_ddl
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

2242 c⁄° *
ﬁd_«me
, c⁄° *
√w_«me
);

2247 
dbîr_t
 
	$fû_›í_f‹_busöess
(
boﬁ
 
ªad_⁄ly_mode
)

2248 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2254 
boﬁ
 
	$fû_∑th_is_known
(c⁄° 
°d
::
°rög
 &
∑th
)

2255 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2259 
°d
::
°rög
 
	$fû_gë_dús
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2266 
dbîr_t
 
	$fû_ª«me_èbÀ•a˚_by_id
(
•a˚_id_t
 
•a˚_id
, c⁄° *
ﬁd_«me
,

2267 c⁄° *
√w_«me
)

2268 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2271 
	`fû_‰ì_sˇ¬ed_fûes
();

2278 
	`fû_•a˚_upd©e_«me
(
fû_•a˚_t
 *
•a˚
, c⁄° *
«me
);

2284 
	`fû_adju°_«me_imp‹t
(
di˘_èbÀ_t
 *
èbÀ
, c⁄° *
∑th
,

2285 
ib_fûe_suffix
 
exä
);

2287 #i‚de‡
UNIV_HOTBACKUP


2290 
	`fû_purge
();

2296 
size_t
 
	`fû_cou¡_undo_dñëed
(
•a˚_id_t
 
undo_num
);

2303 c⁄° *
	$fû_gë_∑ge_ty≥_°r
(
∑ge_ty≥_t
 
ty≥
Ë
n€x˚±


2304 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

2309 
boﬁ
 
	$fû_is_∑ge_ty≥_vÆid
(
∑ge_ty≥_t
 
ty≥
Ë
n€x˚±


2310 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

	@fil0types.h

33 #i‚de‡
fû0ty≥s_h


34 
	#fû0ty≥s_h


	)

36 
	~"univ.i
"

42 
	#FIL_PAGE_SPACE_OR_CHKSUM
 0

	)

45 
	#FIL_PAGE_OFFSET
 4

	)

50 
	#FIL_PAGE_PREV
 8

	)

53 
	#FIL_PAGE_SRV_VERSION
 8

	)

60 
	#FIL_PAGE_NEXT
 12

	)

63 
	#FIL_PAGE_SPACE_VERSION
 12

	)

66 
	#FIL_PAGE_LSN
 16

	)

75 
	#FIL_PAGE_TYPE
 24

	)

80 
	#FIL_PAGE_FILE_FLUSH_LSN
 26

	)

86 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_VERSION
 = 
FIL_PAGE_FILE_FLUSH_LSN
;

89 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_ALGORITHM_V1
 = 
FIL_PAGE_VERSION
 + 1;

92 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_ORIGINAL_TYPE_V1
 = 
FIL_PAGE_ALGORITHM_V1
 + 1;

95 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_ORIGINAL_SIZE_V1
 = 
FIL_PAGE_ORIGINAL_TYPE_V1
 + 2;

98 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_COMPRESS_SIZE_V1
 = 
FIL_PAGE_ORIGINAL_SIZE_V1
 + 2;

101 
c⁄°ex¥
 
ulöt
 
	gFIL_RTREE_SPLIT_SEQ_NUM
 = 
FIL_PAGE_FILE_FLUSH_LSN
;

104 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID
 = 34;

107 
	#FIL_PAGE_SPACE_ID
 
FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID


	)

110 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_DATA
 = 38;

115 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_END_LSN_OLD_CHKSUM
 = 8;

118 
c⁄°ex¥
 
ulöt
 
	gFIL_PAGE_DATA_END
 = 8;

121 
c⁄°ex¥
 
size_t
 
	gFIL_ADDR_PAGE
 = 0;

124 
c⁄°ex¥
 
size_t
 
	gFIL_ADDR_BYTE
 = 4;

127 
c⁄°ex¥
 
size_t
 
	gFIL_ADDR_SIZE
 = 6;

130 
c⁄°ex¥
 
	gFIL_PATH_SEPARATOR
 = ';';

133 
	sFû_∑ge_hódî
 {

136 
ex∂icô
 
Fû_∑ge_hódî
(c⁄° 
byã
 *
‰ame
Ë: 
m_‰ame
(frame) {}

140 
•a˚_id_t
 
gë_•a˚_id
(Ëc⁄° 
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

144 
∑ge_no_t
 
gë_∑ge_no
(Ëc⁄° 
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

148 
uöt16_t
 
gë_∑ge_ty≥
(Ëc⁄° 
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

153 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
Ëc⁄° 
n€x˚±
;

155 
	m¥iv©e
:

157 c⁄° 
byã
 *
m_‰ame
{};

165 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
,

166 c⁄° 
	gFû_∑ge_hódî
 &
	ghódî
Ë
	gn€x˚±
 {

167  (
	ghódî
.
¥öt
(
out
));

	@fsp0file.h

33 #i‚de‡
f•0fûe_h


34 
	#f•0fûe_h


	)

36 
	~<ve˘‹
>

37 
	~"fû0fû.h
"

38 
	~"ha_¥ŸŸy≥s.h
"

39 
	~"log0log.h
"

40 
	~"mem0mem.h
"

41 
	~"os0fûe.h
"

43 #ifde‡
UNIV_HOTBACKUP


44 
	~"fû0fû.h
"

45 
	~"f•0ty≥s.h
"

54 
meb_key_„tch
(c⁄° *
key_id
, **
key_ty≥
,

55 c⁄° *
u£r_id
, **
key
, 
size_t
 *
key_Àngth
);

59 
	edevi˚_t
 {

62 
	mSRV_NOT_RAW
 = 0,

65 
	mSRV_NEW_RAW
,

68 
	mSRV_OLD_RAW


72 ˛as†
	cD©afûe
 {

73 
‰õnd
 
˛ass
 
	mTabÀ•a˚
;

74 
‰õnd
 
˛ass
 
	mSysTabÀ•a˚
;

76 
	mpublic
:

77 
	$D©afûe
()

78 : 
	`m_«me
(),

79 
	`m_fûíame
(),

80 
	`m_›í_Êags
(
OS_FILE_OPEN
),

81 
	`m_size
(),

82 
	`m_‹dî
(),

83 
	`m_ty≥
(
SRV_NOT_RAW
),

84 
	`m_•a˚_id
(
SPACE_UNKNOWN
),

85 
	`m_Êags
(),

86 
	`m_exi°s
(),

87 
	`m_is_vÆid
(),

88 
	`m_fú°_∑ge_buf
(),

89 
	`m_fú°_∑ge
(),

90 
	`m_©omic_wrôe
(),

91 
	`m_fûï©h
(),

92 
	`m_œ°_os_îr‹
(),

93 
	`m_fûe_öfo
(),

94 
	`m_í¸y±i⁄_key
(),

95 
	`m_í¸y±i⁄_iv
(),

96 
	$m_í¸y±i⁄_›_ö_¥ogªss
(
NONE
) {

97 
m_h™dÀ
.
m_fûe
 = 
OS_FILE_CLOSED
;

100 
	$D©afûe
(c⁄° *
«me
, 
uöt32_t
 
Êags
, 
∑ge_no_t
 
size
, 
ulöt
 
‹dî
)

101 : 
	`m_«me
(
	`mem_°rdup
(
«me
)),

102 
	`m_fûíame
(),

103 
	`m_›í_Êags
(
OS_FILE_OPEN
),

104 
	`m_size
(
size
),

105 
	`m_‹dî
(
‹dî
),

106 
	`m_ty≥
(
SRV_NOT_RAW
),

107 
	`m_•a˚_id
(
SPACE_UNKNOWN
),

108 
	`m_Êags
(
Êags
),

109 
	`m_exi°s
(),

110 
	`m_is_vÆid
(),

111 
	`m_fú°_∑ge_buf
(),

112 
	`m_fú°_∑ge
(),

113 
	`m_©omic_wrôe
(),

114 
	`m_fûï©h
(),

115 
	`m_œ°_os_îr‹
(),

116 
	`m_fûe_öfo
(),

117 
	`m_í¸y±i⁄_key
(),

118 
	`m_í¸y±i⁄_iv
(),

119 
	$m_í¸y±i⁄_›_ö_¥ogªss
(
NONE
) {

120 
	`ut_ad
(
m_«me
 !
nuŒ±r
);

121 
m_h™dÀ
.
m_fûe
 = 
OS_FILE_CLOSED
;

123 
	}
}

125 
	$D©afûe
(c⁄° 
D©afûe
 &
fûe
)

126 : 
	`m_h™dÀ
(
fûe
.
m_h™dÀ
),

127 
	`m_›í_Êags
(
fûe
.
m_›í_Êags
),

128 
	`m_size
(
fûe
.
m_size
),

129 
	`m_‹dî
(
fûe
.
m_‹dî
),

130 
	`m_ty≥
(
fûe
.
m_ty≥
),

131 
	`m_•a˚_id
(
fûe
.
m_•a˚_id
),

132 
	`m_Êags
(
fûe
.
m_Êags
),

133 
	`m_exi°s
(
fûe
.
m_exi°s
),

134 
	`m_is_vÆid
(
fûe
.
m_is_vÆid
),

135 
	`m_fú°_∑ge_buf
(),

136 
	`m_fú°_∑ge
(),

137 
	`m_©omic_wrôe
(
fûe
.
m_©omic_wrôe
),

138 
	`m_œ°_os_îr‹
(),

139 
	`m_fûe_öfo
(),

140 
	`m_í¸y±i⁄_key
(),

141 
	`m_í¸y±i⁄_iv
(),

142 
	$m_í¸y±i⁄_›_ö_¥ogªss
(
NONE
) {

143 
m_«me
 = 
	`mem_°rdup
(
fûe
.m_name);

144 
	`ut_ad
(
m_«me
 !
nuŒ±r
);

146 i‡(
fûe
.
m_fûï©h
 !
nuŒ±r
) {

147 
m_fûï©h
 = 
	`mem_°rdup
(
fûe
.m_filepath);

148 
	`ut_a
(
m_fûï©h
 !
nuŒ±r
);

149 
	`£t_fûíame
();

151 
m_fûï©h
 = 
nuŒ±r
;

152 
m_fûíame
 = 
nuŒ±r
;

154 
	}
}

156 ~
	$D©afûe
(Ë{ 
	`shutdown
(); 
	}
}

158 
	gD©afûe
 &
	g›î©‹
=(c⁄° 
D©afûe
 &
fûe
) {

159 
ut_a
(
this
 !&
fûe
);

161 
ut_ad
(
m_«me
 =
nuŒ±r
);

162 
	gm_«me
 = 
mem_°rdup
(
fûe
.
m_«me
);

163 
ut_a
(
m_«me
 !
nuŒ±r
);

165 
	gm_size
 = 
fûe
.
m_size
;

166 
	gm_‹dî
 = 
fûe
.
m_‹dî
;

167 
	gm_ty≥
 = 
fûe
.
m_ty≥
;

169 
ut_a
(
m_h™dÀ
.
m_fûe
 =
OS_FILE_CLOSED
);

170 
	gm_h™dÀ
 = 
fûe
.
m_h™dÀ
;

172 
	gm_exi°s
 = 
fûe
.
m_exi°s
;

173 
	gm_is_vÆid
 = 
fûe
.
m_is_vÆid
;

174 
	gm_›í_Êags
 = 
fûe
.
m_›í_Êags
;

175 
	gm_•a˚_id
 = 
fûe
.
m_•a˚_id
;

176 
	gm_Êags
 = 
fûe
.
m_Êags
;

177 
	gm_œ°_os_îr‹
 = 0;

179 i‡(
	gm_fûï©h
 !
nuŒ±r
) {

180 
ut_‰ì
(
m_fûï©h
);

181 
	gm_fûï©h
 = 
nuŒ±r
;

182 
	gm_fûíame
 = 
nuŒ±r
;

185 i‡(
	gfûe
.
	gm_fûï©h
 !
nuŒ±r
) {

186 
m_fûï©h
 = 
mem_°rdup
(
fûe
.m_filepath);

187 
ut_a
(
m_fûï©h
 !
nuŒ±r
);

188 
£t_fûíame
();

193 
	gm_fú°_∑ge_buf
 = 
nuŒ±r
;

194 
	gm_fú°_∑ge
 = 
nuŒ±r
;

195 
	gm_í¸y±i⁄_key
 = 
nuŒ±r
;

196 
	gm_í¸y±i⁄_iv
 = 
nuŒ±r
;

197 
	gm_í¸y±i⁄_›_ö_¥ogªss
 = 
NONE
;

199 
	gm_©omic_wrôe
 = 
fûe
.
m_©omic_wrôe
;

201  (*
	gthis
);

207 
öô
(c⁄° *
«me
, 
uöt32_t
 
Êags
);

210 
shutdown
();

216 
dbîr_t
 
	$›í_ªad_⁄ly
(
boﬁ
 
°ri˘
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

223 
dbîr_t
 
	$›í_ªad_wrôe
(
boﬁ
 
ªad_⁄ly_mode
)

224 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

227 
	`öô_fûe_öfo
();

231 
dbîr_t
 
	`˛o£
();

235 
boﬁ
 
	$is_øw_ty≥
() {

236  (
m_ty≥
 =
SRV_NEW_RAW
 || m_ty≥ =
SRV_OLD_RAW
);

237 
	}
}

246 
make_fûï©h
(c⁄° *
dú∑th
, c⁄° *
fûíame
,

247 
ib_fûe_suffix
 
ext
);

250 
£t_fûï©h
(c⁄° *
fûï©h
);

258 
£t_«me
(c⁄° *
«me
);

268 
dbîr_t
 
	$vÆid©e_to_dd
(
•a˚_id_t
 
•a˚_id
, 
uöt32_t
 
Êags
, 
boﬁ
 
f‹_imp‹t
)

269 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

280 
dbîr_t
 
	$vÆid©e_f‹_ªcovîy
(
•a˚_id_t
 
•a˚_id
)

281 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

298 
dbîr_t
 
	$vÆid©e_fú°_∑ge
(
•a˚_id_t
 
•a˚_id
, 
l¢_t
 *
Êush_l¢
,

299 
boﬁ
 
f‹_imp‹t
)

300 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

303 
l¢_t
 
	$gë_Êush_l¢
() {

304 
	`ut_ad
(
m_fú°_∑ge
 !
nuŒ±r
);

305  
	`mach_ªad_‰om_8
(
m_fú°_∑ge
 + 
FIL_PAGE_LSN
);

306 
	}
}

310 c⁄° *
	$«me
(Ëc⁄° {  (
m_«me
); 
	}
}

314 c⁄° *
	$fûï©h
(Ëc⁄° {  (
m_fûï©h
); 
	}
}

318 
pfs_os_fûe_t
 
	$h™dÀ
(Ëc⁄° {  (
m_h™dÀ
); 
	}
}

322 
ulöt
 
	$‹dî
(Ëc⁄° {  (
m_‹dî
); 
	}
}

326 
ulöt
 
	$£rvî_vîsi⁄
(Ëc⁄° {  (
m_£rvî_vîsi⁄
); 
	}
}

330 
ulöt
 
	$•a˚_vîsi⁄
(Ëc⁄° {  (
m_•a˚_vîsi⁄
); 
	}
}

334 
•a˚_id_t
 
	$•a˚_id
(Ëc⁄° {  (
m_•a˚_id
); 
	}
}

338 
uöt32_t
 
	$Êags
(Ëc⁄° {  (
m_Êags
); 
	}
}

342 
boﬁ
 
	$is_›í
(Ëc⁄° {  (
m_h™dÀ
.
m_fûe
 !
OS_FILE_CLOSED
); 
	}
}

346 
boﬁ
 
	$is_vÆid
(Ëc⁄° {  (
m_is_vÆid
); 
	}
}

350 
ulöt
 
	$œ°_os_îr‹
(Ëc⁄° {  (
m_œ°_os_îr‹
); 
	}
}

358 
boﬁ
 
	$ßme_fûï©h_as
(c⁄° *
Ÿhî
) const;

363 
boﬁ
 
	$ßme_as
(c⁄° 
D©afûe
 &
Ÿhî
) const;

369 
dbîr_t
 
	`föd_•a˚_id
();

372 
∑ge_no_t
 
	$size
(Ëc⁄° {  (
m_size
); 
	}
}

374 #ifde‡
UNIV_HOTBACKUP


377 
	$£t_•a˚_id
(
•a˚_id_t
 
•a˚_id
) {

378 
	`ut_ad
(
•a˚_id
 <= 0xFFFFFFFFU);

379 
m_•a˚_id
 = 
•a˚_id
;

380 
	}
}

384 
	$£t_Êags
(
uöt32_t
 
Êags
Ë{ 
m_Êags
 = fœgs; 
	}
}

387 
	g¥iv©e
:

389 
‰ì_fûï©h
();

393 
	$£t_fûíame
() {

394 i‡(
m_fûï©h
 =
nuŒ±r
) {

398 *
œ°_¶ash
 = 
	`°ºchr
(
m_fûï©h
, 
OS_PATH_SEPARATOR
);

400 
m_fûíame
 = 
œ°_¶ash
 ?Üa°_¶ash + 1 : 
m_fûï©h
;

401 
	}
}

407 
dbîr_t
 
	$›í_‹_¸óã
(
boﬁ
 
ªad_⁄ly_mode
)

408 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

415 
dbîr_t
 
	$ªad_fú°_∑ge
(
boﬁ
 
ªad_⁄ly_mode
)

416 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

419 
	`‰ì_fú°_∑ge
();

423 
	$£t_›í_Êags
(
os_fûe_¸óã_t
 
›í_Êags
) {

424 
m_›í_Êags
 = 
›í_Êags
;

425 
	}
}

431 
dbîr_t
 
ª°‹e_‰om_doubÀwrôe
(
∑ge_no_t
 
ª°‹e_∑ge_no
);

433 
	g¥iv©e
:

438 *
m_«me
;

441 *
	gm_fûíame
;

444 
pfs_os_fûe_t
 
	gm_h™dÀ
;

447 
os_fûe_¸óã_t
 
	gm_›í_Êags
;

450 
∑ge_no_t
 
	gm_size
;

453 
ulöt
 
	gm_‹dî
;

456 
devi˚_t
 
	gm_ty≥
;

461 
•a˚_id_t
 
	gm_•a˚_id
;

464 
uöt32
 
	gm_£rvî_vîsi⁄
;

467 
uöt32
 
	gm_•a˚_vîsi⁄
;

472 
uöt32_t
 
	gm_Êags
;

475 
boﬁ
 
	gm_exi°s
;

478 
boﬁ
 
	gm_is_vÆid
;

481 
byã
 *
	gm_fú°_∑ge_buf
;

484 
byã
 *
	gm_fú°_∑ge
;

487 
boﬁ
 
	gm_©omic_wrôe
;

489 
	g¥Ÿe˘ed
:

491 *
m_fûï©h
;

494 
ulöt
 
	gm_œ°_os_îr‹
;

496 
	gpublic
:

498 #ifde‡
_WIN32


499 
usög
 
WIN32_FILE_INFO
 = 
BY_HANDLE_FILE_INFORMATION
;

502 
WIN32_FILE_INFO
 
	gm_fûe_öfo
;

505 
°©
 
	gm_fûe_öfo
;

509 
byã
 *
	gm_í¸y±i⁄_key
;

512 
byã
 *
	gm_í¸y±i⁄_iv
;

515 
í¸y±i⁄_›_ty≥
 
	gm_í¸y±i⁄_›_ö_¥ogªss
;

	@fsp0fsp.h

33 #i‚de‡
f•0f•_h


34 
	#f•0f•_h


	)

36 
	~"univ.i
"

38 
	~"f•0•a˚.h
"

39 
	~"fut0l°.h
"

40 
	~"må0må.h
"

41 
	~"mysql/comp⁄íts/£rvi˚s/mysql_c⁄d_bôs.h
"

42 
	~"mysql/comp⁄íts/£rvi˚s/mysql_muãx_bôs.h
"

43 
	~"∑ge0ty≥s.h
"

44 
	~"ªm0ty≥s.h
"

45 
	~"ut0byã.h
"

47 
	~<øndom
>

48 
	~"f•0ty≥s.h
"

50 #ifde‡
UNIV_HOTBACKUP


51 
	~"buf0buf.h
"

54 
˛ass
 
	gDDL_Rec‹d
;

55 
°d
::
ve˘‹
<
DDL_Rec‹d
 *> 
ts_í¸y±_ddl_ªc‹ds
;

56 
mysql_c⁄d_t
 
ªsume_í¸y±i⁄_c⁄d
;

57 
mysql_muãx_t
 
ªsume_í¸y±i⁄_c⁄d_m
;

61 #ifde‡
UNIV_DEBUG


62 
°d
::
ve˘‹
<
•a˚_id_t
> 
Êag_mism©ch_•a˚s
;

66 
	#FSP_HEADER_OFFSET
 
FIL_PAGE_DATA


	)

70 
	#FSP_SDI_HEADER_LEN
 8

	)

73 
byã
 
	tf•_hódî_t
;

74 
byã
 
	txdes_t
;

76 #ifde‡
UNIV_DEBUG


80 
boﬁ
 
xdes_°©e_is_vÆid
(
ulöt
 
°©e
);

83 #ifde‡
UNIV_DEBUG


84 
	sxdes_mem_t
 {

85 
xdes_mem_t
(c⁄° 
xdes_t
 *
xdes
Ë: 
m_xdes
(xdes) {}

87 c⁄° *
°©e_«me
() const;

89 
boﬁ
 
is_vÆid
() const;

90 c⁄° 
xdes_t
 *
	mm_xdes
;

92 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

95 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gxdes_mem_t
 &
	gobj
) {

96  (
	gobj
.
¥öt
(
out
));

100 
	sf•_hódî_mem_t
 {

101 
f•_hódî_mem_t
(c⁄° 
f•_hódî_t
 *
hódî
, 
må_t
 *
må
);

103 
ulöt
 
	mm_•a˚_id
;

104 
ulöt
 
	mm_nŸu£d
;

105 
ulöt
 
	mm_f•_size
;

106 
ulöt
 
	mm_‰ì_limô
;

107 
ulöt
 
	mm_Êags
;

108 
ulöt
 
	mm_f•_‰ag_n_u£d
;

109 
Ê°_bnode_t
 
	mm_f•_‰ì
;

110 
Ê°_bnode_t
 
	mm_‰ì_‰ag
;

111 
Ê°_bnode_t
 
	mm_fuŒ_‰ag
;

112 
ib_id_t
 
	mm_£gid
;

113 
Ê°_bnode_t
 
	mm_öodes_fuŒ
;

114 
Ê°_bnode_t
 
	mm_öodes_‰ì
;

116 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

119 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
,

120 c⁄° 
	gf•_hódî_mem_t
 &
	gobj
) {

121  (
	gobj
.
¥öt
(
out
));

133 
	#FSP_SPACE_ID
 0

	)

134 
	#FSP_NOT_USED
 \

135 4

	)

139 
	#FSP_SIZE
 \

140 8

	)

142 
	#FSP_FREE_LIMIT
 \

143 12

	)

153 
	#FSP_SPACE_FLAGS
 \

154 16

	)

156 
	#FSP_FRAG_N_USED
 \

157 20

	)

159 
	#FSP_FREE
 24

	)

160 
	#FSP_FREE_FRAG
 (24 + 
FLST_BASE_NODE_SIZE
)

	)

163 
	#FSP_FULL_FRAG
 (24 + 2 * 
FLST_BASE_NODE_SIZE
)

	)

166 
	#FSP_SEG_ID
 (24 + 3 * 
FLST_BASE_NODE_SIZE
)

	)

169 
	#FSP_SEG_INODES_FULL
 (32 + 3 * 
FLST_BASE_NODE_SIZE
)

	)

173 
	#FSP_SEG_INODES_FREE
 (32 + 4 * 
FLST_BASE_NODE_SIZE
)

	)

179 
	#FSP_HEADER_SIZE
 (32 + 5 * 
FLST_BASE_NODE_SIZE
)

	)

181 
	#FSP_FREE_ADD
 \

182 4

	)

188 
	#FSP_MAX_AUTOEXTEND_SIZE
 (64 * 1024 * 1024)

	)

201 
byã
 
	tf£g_öode_t
;

203 
	#FSEG_INODE_PAGE_NODE
 
FSEG_PAGE_DATA


	)

207 
	#FSEG_ARR_OFFSET
 (
FSEG_PAGE_DATA
 + 
FLST_NODE_SIZE
)

	)

209 
	#FSEG_ID
 \

210 0

	)

212 
	#FSEG_NOT_FULL_N_USED
 8

	)

215 
	#FSEG_FREE
 12

	)

218 
	#FSEG_NOT_FULL
 (12 + 
FLST_BASE_NODE_SIZE
)

	)

220 
	#FSEG_FULL
 (12 + 2 * 
FLST_BASE_NODE_SIZE
)

	)

222 
	#FSEG_MAGIC_N
 (12 + 3 * 
FLST_BASE_NODE_SIZE
)

	)

224 
	#FSEG_FRAG_ARR
 (16 + 3 * 
FLST_BASE_NODE_SIZE
)

	)

228 
	#FSEG_FRAG_ARR_N_SLOTS
 (
FSP_EXTENT_SIZE
 / 2)

	)

231 
	#FSEG_FRAG_SLOT_SIZE
 \

232 4

	)

236 
	#FSEG_INODE_SIZE
 \

237 (16 + 3 * 
FLST_BASE_NODE_SIZE
 + 
FSEG_FRAG_ARR_N_SLOTS
 * 
FSEG_FRAG_SLOT_SIZE
)

	)

239 
	#FSP_SEG_INODES_PER_PAGE
(
∑ge_size
) \

240 ((
∑ge_size
.
	`physiˇl
(Ë- 
FSEG_ARR_OFFSET
 - 10Ë/ 
FSEG_INODE_SIZE
)

	)

244 
	#FSEG_MAGIC_N_VALUE
 97937874

	)

246 
	#FSEG_FILLFACTOR
 \

247 8

	)

257 
	#FSEG_FRAG_LIMIT
 
FSEG_FRAG_ARR_N_SLOTS


	)

264 
	#FSEG_FREE_LIST_LIMIT
 \

265 40

	)

270 
	#FSEG_FREE_LIST_MAX_LEN
 4

	)

283 
	#XDES_ID
 \

284 0

	)

286 
	#XDES_FLST_NODE
 \

287 8

	)

289 
	#XDES_STATE
 (
FLST_NODE_SIZE
 + 8)

	)

292 
	#XDES_BITMAP
 (
FLST_NODE_SIZE
 + 12)

	)

297 
	#XDES_BITS_PER_PAGE
 2

	)

298 
	#XDES_FREE_BIT
 \

299 0

	)

301 
	#XDES_CLEAN_BIT
 \

302 1

	)

307 
	exdes_°©e_t
 {

310 
	mXDES_NOT_INITED
 = 0,

313 
	mXDES_FREE
 = 1,

316 
	mXDES_FREE_FRAG
 = 2,

319 
	mXDES_FULL_FRAG
 = 3,

322 
	mXDES_FSEG
 = 4,

325 
	mXDES_FSEG_FRAG
 = 5

329 
	#XDES_SIZE
 \

330 (
XDES_BITMAP
 + 
	`UT_BITS_IN_BYTES
(
FSP_EXTENT_SIZE
 * 
XDES_BITS_PER_PAGE
))

	)

333 
	#XDES_SIZE_MAX
 \

334 (
XDES_BITMAP
 + 
	`UT_BITS_IN_BYTES
(
FSP_EXTENT_SIZE_MAX
 * 
XDES_BITS_PER_PAGE
))

	)

337 
	#XDES_SIZE_MIN
 \

338 (
XDES_BITMAP
 + 
	`UT_BITS_IN_BYTES
(
FSP_EXTENT_SIZE_MIN
 * 
XDES_BITS_PER_PAGE
))

	)

341 
	#XDES_ARR_OFFSET
 (
FSP_HEADER_OFFSET
 + 
FSP_HEADER_SIZE
)

	)

344 c⁄° 
ulöt
 
	gXDES_FRAG_N_USED
 = 2;

349 
f•_öô
();

356 
∑ge_no_t
 
f•_hódî_gë_èbÀ•a˚_size
();

370 
∑ge_no_t
 
f•_gë_∑ges_to_exãnd_ibd
(c⁄° 
∑ge_size_t
 &
∑ge_size
,

371 
∑ge_no_t
 
size
);

376 
UNIV_INLINE


377 
∑ge_no_t
 
	$f•_gë_exã¡_size_ö_∑ges
(c⁄° 
∑ge_size_t
 &
∑ge_size
) {

378  (
°©ic_ˇ°
<
∑ge_no_t
>(
FSP_EXTENT_SIZE
 * 
UNIV_PAGE_SIZE
 /

379 
∑ge_size
.
	`physiˇl
()));

380 
	}
}

384 
•a˚_id_t
 
f•_hódî_gë_•a˚_id
(

385 c⁄° 
∑ge_t
 *
∑ge
);

390 
boﬁ
 
f•_hódî_di˘_gë_£rvî_vîsi⁄
(
uöt
 *
vîsi⁄
);

396 
ölöe
 
uöt32_t
 
	$f•_hódî_gë_fõld
(c⁄° 
∑ge_t
 *
∑ge
, 
uöt32_t
 
fõld
) {

397  (
	`mach_ªad_‰om_4
(
FSP_HEADER_OFFSET
 + 
fõld
 + 
∑ge
));

398 
	}
}

404 
ölöe
 
	$f•_hódî_£t_fõld
(
∑ge_t
 *
∑ge
, 
uöt32_t
 
fõld
, uöt32_à
vÆ
) {

405 
	`mach_wrôe_to_4
(
∑ge
 + 
FSP_HEADER_OFFSET
 + 
fõld
, 
vÆ
);

406 
	}
}

411 
ölöe
 
uöt32_t
 
	$f•_hódî_gë_Êags
(c⁄° 
∑ge_t
 *
∑ge
) {

412  (
	`f•_hódî_gë_fõld
(
∑ge
, 
FSP_SPACE_FLAGS
));

413 
	}
}

418 
∑ge_size_t
 
f•_hódî_gë_∑ge_size
(c⁄° 
∑ge_t
 *
∑ge
);

426 
boﬁ
 
f•_hódî_gë_í¸y±i⁄_key
(
uöt32_t
 
f•_Êags
, 
byã
 *
key
, byã *
iv
,

427 
∑ge_t
 *
∑ge
);

435 
í¸y±i⁄_›_ty≥
 
f•_hódî_í¸y±i⁄_›_ty≥_ö_¥ogªss
(

436 c⁄° 
∑ge_t
 *
∑ge
, 
∑ge_size_t
 
∑ge_size
);

441 
boﬁ
 
f•_check_èbÀ•a˚_size
(
•a˚_id_t
 
•a˚_id
);

446 
f•_hódî_öô_fõlds
(

447 
∑ge_t
 *
∑ge
,

448 
•a˚_id_t
 
•a˚_id
,

449 
uöt32_t
 
Êags
);

456 
ulöt
 
f•_hódî_gë_í¸y±i⁄_off£t
(c⁄° 
∑ge_size_t
 &
∑ge_size
);

466 
boﬁ
 
f•_hódî_wrôe_í¸y±i⁄
(
•a˚_id_t
 
•a˚_id
, 
uöt32_t
 
•a˚_Êags
,

467 
byã
 *
í¸y±_öfo
, 
boﬁ
 
upd©e_f•_Êags
,

468 
boﬁ
 
rŸ©e_í¸y±i⁄
, 
må_t
 *
må
);

478 
boﬁ
 
f•_hódî_wrôe_í¸y±i⁄_¥ogªss
(

479 
•a˚_id_t
 
•a˚_id
, 
ulöt
 
•a˚_Êags
, ulöà
¥ogªss_öfo
,

480 
byã
 
›î©i⁄_ty≥
, 
boﬁ
 
upd©e_›î©i⁄_ty≥
, 
må_t
 *
må
);

487 
boﬁ
 
f•_hódî_rŸ©e_í¸y±i⁄
(
fû_•a˚_t
 *
•a˚
, 
byã
 *
í¸y±_öfo
,

488 
må_t
 *
må
);

497 
boﬁ
 
f•_hódî_öô
(
•a˚_id_t
 
•a˚_id
, 
∑ge_no_t
 
size
, 
må_t
 *
må
,

498 
boﬁ
 
is_boŸ
);

504 
f•_hódî_öc_size
(
•a˚_id_t
 
•a˚_id
, 
∑ge_no_t
 
size_öc
, 
må_t
 *
må
);

509 
buf_block_t
 *
f£g_¸óã
(

510 
•a˚_id_t
 
•a˚
,

511 
∑ge_no_t
 
∑ge
,

516 
ulöt
 
byã_off£t
,

518 
må_t
 *
må
);

533 
buf_block_t
 *
f£g_¸óã_gíîÆ
(
•a˚_id_t
 
•a˚_id
, 
∑ge_no_t
 
∑ge
,

534 
ulöt
 
byã_off£t
, 
iboﬁ
 
has_d⁄e_ª£rv©i⁄
,

535 
må_t
 *
må
);

540 
ulöt
 
f£g_n_ª£rved_∑ges
(

541 
f£g_hódî_t
 *
hódî
,

542 
ulöt
 *
u£d
,

543 
må_t
 *
må
);

557 
	#f£g_Æloc_‰ì_∑ge
(
£g_hódî
, 
höt
, 
dúe˘i⁄
, 
må
) \

558 
	`f£g_Æloc_‰ì_∑ge_gíîÆ
(
£g_hódî
, 
höt
, 
dúe˘i⁄
, 
FALSE
, 
må
, må)

	)

579 
buf_block_t
 *
	$f£g_Æloc_‰ì_∑ge_gíîÆ
(
f£g_hódî_t
 *
£g_hódî
,

580 
∑ge_no_t
 
höt
, 
byã
 
dúe˘i⁄
,

581 
iboﬁ
 
has_d⁄e_ª£rv©i⁄
,

582 
må_t
 *
må
, må_à*
öô_må
)

583 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

623 
boﬁ
 
	`f•_ª£rve_‰ì_exã¡s
(
ulöt
 *
n_ª£rved
, 
•a˚_id_t
 
•a˚_id
,

624 
ulöt
 
n_ext
, 
f•_ª£rve_t
 
Æloc_ty≥
, 
må_t
 *
må
,

625 
∑ge_no_t
 
n_∑ges
 = 2);

632 
uötmax_t
 
	`f•_gë_avaûabÀ_•a˚_ö_‰ì_exã¡s
(
•a˚_id_t
 
•a˚_id
);

639 
uötmax_t
 
	`f•_gë_avaûabÀ_•a˚_ö_‰ì_exã¡s
(c⁄° 
fû_•a˚_t
 *
•a˚
);

647 
	`f£g_‰ì_∑ge
(
f£g_hódî_t
 *
£g_hódî
, 
•a˚_id_t
 
•a˚_id
,

648 
∑ge_no_t
 
∑ge
, 
boﬁ
 
ahi
, 
må_t
 *
må
);

652 
boﬁ
 
	$f£g_∑ge_is_‰ì
(
f£g_hódî_t
 *
£g_hódî
,

653 
•a˚_id_t
 
•a˚_id
,

654 
∑ge_no_t
 
∑ge
)

655 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

661 
iboﬁ
 
	$f£g_‰ì_°ï
(

662 
f£g_hódî_t
 *
hódî
,

666 
boﬁ
 
ahi
,

668 
må_t
 *
må
)

669 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

673 
iboﬁ
 
	$f£g_‰ì_°ï_nŸ_hódî
(

674 
f£g_hódî_t
 *
hódî
,

676 
boﬁ
 
ahi
,

678 
må_t
 *
må
)

679 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

685 
UNIV_INLINE


686 
iboﬁ
 
	`f•_des¸_∑ge
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
);

690 
byã
 *
	`f•_∑r£_öô_fûe_∑ge
(byã *
±r
,

691 
byã
 *
íd_±r
,

692 
buf_block_t
 *
block
);

693 #ifde‡
UNIV_BTR_PRINT


695 
	`f£g_¥öt
(
f£g_hódî_t
 *
hódî
,

696 
må_t
 *
må
);

707 
boﬁ
 
	`f•_is_undo_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
);

709 
UNIV_INLINE


710 
boﬁ
 
	$f•_is_sy°em_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
) {

711  (
•a˚_id
 =
TRX_SYS_SPACE
);

712 
	}
}

717 
UNIV_INLINE


718 
boﬁ
 
	$f•_is_sy°em_‹_ãmp_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
) {

719  (
	`f•_is_sy°em_èbÀ•a˚
(
•a˚_id
) ||

720 
	`f•_is_sy°em_ãmp‹¨y
(
•a˚_id
));

721 
	}
}

727 
UNIV_INLINE


728 
boﬁ
 
	$f•_is_ibd_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
) {

729  (
•a˚_id
 !
TRX_SYS_SPACE
 && !
	`f•_is_undo_èbÀ•a˚
(space_id) &&

730 !
	`f•_is_sy°em_ãmp‹¨y
(
•a˚_id
));

731 
	}
}

737 
UNIV_INLINE


738 
boﬁ
 
	$f•_is_fûe_≥r_èbÀ
(
•a˚_id_t
 
•a˚_id
, 
uöt32_t
 
f•_Êags
) {

739  (!
	`f•_is_sh¨ed_èbÀ•a˚
(
f•_Êags
) &&

740 
	`f•_is_ibd_èbÀ•a˚
(
•a˚_id
));

741 
	}
}

746 
boﬁ
 
f•_is_dd_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
);

751 
UNIV_INLINE


752 
boﬁ
 
f•_Êags_is_com¥es£d
(
uöt32_t
 
Êags
);

758 
UNIV_INLINE


759 
boﬁ
 
f•_Êags_¨e_equÆ
(
uöt32_t
 
Êags1
, uöt32_à
Êags2
);

769 
UNIV_INLINE


770 
uöt32_t
 
f•_Êags_öô
(c⁄° 
∑ge_size_t
 &
∑ge_size
, 
boﬁ
 
©omic_blobs
,

771 
boﬁ
 
has_d©a_dú
, boﬁ 
is_sh¨ed
, boﬁ 
is_ãmp‹¨y
,

772 
boﬁ
 
is_í¸y±ed
 = 
Ál£
);

785 
uöt32_t
 
f•_Êags_to_di˘_tf
(uöt32_à
f•_Êags
, 
boﬁ
 
com∑˘
);

791 
UNIV_INLINE


792 
ulöt
 
xdes_ˇlc_des¸ùt‹_ödex
(c⁄° 
∑ge_size_t
 &
∑ge_size
, ulöà
off£t
);

799 
UNIV_INLINE


800 
iboﬁ
 
xdes_gë_bô
(c⁄° 
xdes_t
 *
des¸
, 
ulöt
 
bô
, 
∑ge_no_t
 
off£t
);

806 
UNIV_INLINE


807 
∑ge_no_t
 
xdes_ˇlc_des¸ùt‹_∑ge
(c⁄° 
∑ge_size_t
 &
∑ge_size
,

808 
∑ge_no_t
 
off£t
);

817 
f•_hódî_t
 *
f•_gë_•a˚_hódî_block
(
•a˚_id_t
 
id
,

818 c⁄° 
∑ge_size_t
 &
∑ge_size
,

819 
må_t
 *
må
, 
buf_block_t
 **
block
);

827 
f•_hódî_t
 *
f•_gë_•a˚_hódî
(
•a˚_id_t
 
id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

828 
må_t
 *
må
);

836 
∑ge_no_t
 
f•_sdi_gë_roŸ_∑ge_num
(
•a˚_id_t
 
•a˚
,

837 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
);

844 
f•_sdi_wrôe_roŸ_to_∑ge
(
∑ge_t
 *
∑ge
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

845 
∑ge_no_t
 
roŸ_∑ge_num
, 
må_t
 *
må
);

847 
	~"f•0f•.ic
"

852 
ölöe
 
uöt32
 
f•_hódî_gë_£rvî_vîsi⁄
(c⁄° 
∑ge_t
 *
∑ge
);

857 
ölöe
 
uöt32
 
f•_hódî_gë_•a˚_vîsi⁄
(c⁄° 
∑ge_t
 *
∑ge
);

863 
ölöe
 
xdes_°©e_t
 
	$xdes_gë_°©e
(c⁄° 
xdes_t
 *
des¸
, 
må_t
 *
må
) {

864 
	`ut_ad
(
des¸
 && 
må
);

865 
	`ut_ad
(
	`må_memo_c⁄èös_∑ge
(
må
, 
des¸
, 
MTR_MEMO_PAGE_SX_FIX
));

867 c⁄° 
ulöt
 
°©e
 = 
	`mach_ªad_‰om_4
(
des¸
 + 
XDES_STATE
);

869 
	`ut_ad
(
	`xdes_°©e_is_vÆid
(
°©e
));

870  (
°©ic_ˇ°
<
xdes_°©e_t
>(
°©e
));

871 
	}
}

873 #ifde‡
UNIV_DEBUG


880 
	g°d
::
o°ªam
 &
xdes_∑ge_¥öt
(
°d
::o°ªam &
out
, c⁄° 
∑ge_t
 *
xdes
,

881 
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
);

883 
ölöe
 
boﬁ
 
	gxdes_mem_t
::
	$is_vÆid
() const {

884 c⁄° 
ulöt
 
°©e
 = 
	`mach_ªad_‰om_4
(
m_xdes
 + 
XDES_STATE
);

885  (
	`xdes_°©e_is_vÆid
(
°©e
));

886 
	}
}

888 
ölöe
 c⁄° *
	gxdes_mem_t
::
	$°©e_«me
() const {

889 c⁄° 
ulöt
 
vÆ
 = 
	`mach_ªad_‰om_4
(
m_xdes
 + 
XDES_STATE
);

891 
	`ut_ad
(
	`xdes_°©e_is_vÆid
(
vÆ
));

893 
xdes_°©e_t
 
°©e
 = 
°©ic_ˇ°
<xdes_°©e_t>(
vÆ
);

895 
°©e
) {

896 
XDES_NOT_INITED
:

898 
XDES_FREE
:

900 
XDES_FREE_FRAG
:

902 
XDES_FULL_FRAG
:

904 
XDES_FSEG
:

906 
XDES_FSEG_FRAG
:

910 
	}
}

918 
ölöe
 
	$f•_hódî_size_upd©e
(
f•_hódî_t
 *
hódî
, 
ulöt
 
size
,

919 
må_t
 *
må
) {

920 
DBUG_TRACE
;

922 
	`DBUG_LOG
("ib_log", "ﬁd_size=" << 
	`mach_ªad_‰om_4
(
hódî
 + 
FSP_SIZE
)

923 << ",Çew_size=" << 
size
);

925 
	`mlog_wrôe_ulöt
(
hódî
 + 
FSP_SIZE
, 
size
, 
MLOG_4BYTES
, 
må
);

926 
	}
}

934 
ölöe
 
boﬁ
 
f•_is_öode_∑ge
(
∑ge_no_t
 
∑ge
);

939 
ölöe
 
ulöt
 
f•_hódî_gë_sdi_off£t
(c⁄° 
∑ge_size_t
 &
∑ge_size
);

944 
ölöe
 
ulöt
 
f•_hódî_gë_í¸y±i⁄_¥ogªss_off£t
(

945 c⁄° 
∑ge_size_t
 &
∑ge_size
);

951 
dbîr_t
 
f•_has_sdi
(
•a˚_id_t
 
•a˚_id
);

959 
dbîr_t
 
f•_Æãr_í¸y±_èbÀ•a˚
(
THD
 *
thd
, 
•a˚_id_t
 
•a˚_id
,

960 
boﬁ
 
to_í¸y±
, *
dd_•a˚_ö
);

963 
f•_öô_ªsume_Æãr_í¸y±_èbÀ•a˚
();

967 ˛as†
	cFûe_£gmít_öode
 {

968 
	mpublic
:

974 
	$Fûe_£gmít_öode
(
•a˚_id_t
 
•a˚_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

975 
f£g_öode_t
 *
öode
, 
må_t
 *
må
)

976 : 
	`m_•a˚_id
(
•a˚_id
),

977 
	`m_∑ge_size
(
∑ge_size
),

978 
	`m_f£g_öode
(
öode
),

979 
	$m_må
(
må
)

980 #ifde‡
UNIV_DEBUG


982 
	`m_øndom_ígöe
(
	`m_rd
()),

983 
	$m_di°
(1, 100)

990 
	`wrôe_nŸ_fuŒ_n_u£d
(
uöt32_t
 
n_u£d
);

994 
uöt32_t
 
	$ªad_nŸ_fuŒ_n_u£d
() const;

998 
uöt64_t
 
	$gë_£g_id
() const {

999  (
	`mach_ªad_‰om_8
(
m_f£g_öode
 + 
FSEG_ID
));

1000 
	}
}

1004 
	g°d
::
o°ªam
 &
	$¥öt
(
°d
::
o°ªam
 &
out
) const;

1006 
¥iv©e
:

1008 
•a˚_id_t
 
m_•a˚_id
;

1011 c⁄° 
∑ge_size_t
 &
m_∑ge_size
;

1014 
f£g_öode_t
 *
m_f£g_öode
;

1017 
må_t
 *
m_må
;

1019 #ifde‡
UNIV_DEBUG


1020 
¥iv©e
:

1023 
boﬁ
 
	`vîify_nŸ_fuŒ_n_u£d
();

1028 
∑ge_no_t
 
	`ˇlcuœã_nŸ_fuŒ_n_u£d
();

1030 
°d
::
øndom_devi˚
 
m_rd
;

1031 
°d
::
deÁu…_øndom_ígöe
 
m_øndom_ígöe
;

1032 
°d
::
unif‹m_öt_di°ributi⁄
<> 
m_di°
;

1037 
boﬁ
 
	$do_vîify
(Ë{  (
	`m_di°
(
m_øndom_ígöe
Ë> 90); 
	}
}

1046 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
,

1047 c⁄° 
	gFûe_£gmít_öode
 &
	gobj
) {

1048  (
	gobj
.
¥öt
(
out
));

	@fsp0fsp.ic

37 
UNIV_INLINE


38 
iboﬁ
 
	$f•_des¸_∑ge
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
) {

39  ((
∑ge_id
.
	`∑ge_no
(Ë& (
∑ge_size
.
	`physiˇl
(Ë- 1)Ë=
FSP_XDES_OFFSET
);

40 
	}
}

45 
UNIV_INLINE


46 
boﬁ
 
	$f•_Êags_is_com¥es£d
(
uöt32_t
 
Êags
) {

47  (
	`FSP_FLAGS_GET_ZIP_SSIZE
(
Êags
) != 0);

48 
	}
}

50 
	#ACTUAL_SSIZE
(
ssize
Ë(0 =ssizê? 
UNIV_PAGE_SSIZE_ORIG
 : ssize)

	)

56 
UNIV_INLINE


57 
boﬁ
 
	$f•_Êags_¨e_equÆ
(
uöt32_t
 
Êags1
, uöt32_à
Êags2
) {

60 i‡(
Êags1
 =
UINT32_UNDEFINED
 || 
Êags2
 == UINT32_UNDEFINED) {

61  (
Ál£
);

64 i‡(!
	`f•_is_sh¨ed_èbÀ•a˚
(
Êags1
Ë|| !f•_is_sh¨ed_èbÀ•a˚(
Êags2
)) {

67  (
Êags1
 =
Êags2
);

74 
ulöt
 
zù_ssize1
 = 
	`ACTUAL_SSIZE
(
	`FSP_FLAGS_GET_ZIP_SSIZE
(
Êags1
));

75 
ulöt
 
zù_ssize2
 = 
	`ACTUAL_SSIZE
(
	`FSP_FLAGS_GET_ZIP_SSIZE
(
Êags2
));

76 
ulöt
 
∑ge_ssize1
 = 
	`ACTUAL_SSIZE
(
	`FSP_FLAGS_GET_PAGE_SSIZE
(
Êags1
));

77 
ulöt
 
∑ge_ssize2
 = 
	`ACTUAL_SSIZE
(
	`FSP_FLAGS_GET_PAGE_SSIZE
(
Êags2
));

79  (
zù_ssize1
 =
zù_ssize2
 && 
∑ge_ssize1
 =
∑ge_ssize2
);

80 
	}
}

86 
UNIV_INLINE


87 
uöt32_t
 
	$∑ge_size_to_ssize
(
ulöt
 
∑ge_size
) {

88 
uöt32_t
 
ssize
;

90 
ssize
 = 
UNIV_ZIP_SIZE_SHIFT_MIN
;

91 
°©ic_ˇ°
<
uöt32_t
>(1 << 
ssize
Ë< 
∑ge_size
; ssize++) {

94  (
ssize
 - 
UNIV_ZIP_SIZE_SHIFT_MIN
 + 1);

95 
	}
}

101 
UNIV_INLINE


102 
uöt32_t
 
	$f•_Êags_£t_zù_size
(
uöt32_t
 
Êags
, c⁄° 
∑ge_size_t
 &
∑ge_size
) {

103 i‡(!
∑ge_size
.
	`is_com¥es£d
()) {

104  (
Êags
);

109 
	`ut_ad
(
∑ge_size
.
	`physiˇl
(Ë>
UNIV_ZIP_SIZE_MIN
);

110 
	`ut_ad
(
∑ge_size
.
	`physiˇl
(Ë<
UNIV_ZIP_SIZE_MAX
);

111 
	`ut_ad
(
	`ut_is_2pow
(
∑ge_size
.
	`physiˇl
()));

113 
uöt32_t
 
ssize
 = 
	`∑ge_size_to_ssize
(
∑ge_size
.
	`physiˇl
());

115 
	`ut_ad
(
ssize
 > 0);

116 
	`ut_ad
(
ssize
 <
UNIV_PAGE_SSIZE_MAX
);

118 
Êags
 |(
ssize
 << 
FSP_FLAGS_POS_ZIP_SSIZE
);

120 
	`ut_ad
(
	`f•_Êags_is_vÆid
(
Êags
));

122  (
Êags
);

123 
	}
}

129 
UNIV_INLINE


130 
uöt32_t
 
	$f•_Êags_£t_∑ge_size
(
uöt32_t
 
Êags
, c⁄° 
∑ge_size_t
 &
∑ge_size
) {

133 
	`ut_ad
(
∑ge_size
.
	`logiˇl
(Ë>
UNIV_PAGE_SIZE_MIN
);

134 
	`ut_ad
(
∑ge_size
.
	`logiˇl
(Ë<
UNIV_PAGE_SIZE_MAX
);

135 
	`ut_ad
(
	`ut_is_2pow
(
∑ge_size
.
	`logiˇl
()));

140 
	`ut_ad
(
∑ge_size
.
	`logiˇl
(Ë=
UNIV_PAGE_SIZE
);

142 i‡(
∑ge_size
.
	`logiˇl
(Ë=
UNIV_PAGE_SIZE_ORIG
) {

143 
	`ut_ad
(0 =
	`FSP_FLAGS_GET_PAGE_SSIZE
(
Êags
));

146 
uöt32_t
 
ssize
 = 
	`∑ge_size_to_ssize
(
∑ge_size
.
	`logiˇl
());

148 
	`ut_ad
(
ssize
);

149 
	`ut_ad
(
ssize
 <
UNIV_PAGE_SSIZE_MAX
);

151 
Êags
 |(
ssize
 << 
FSP_FLAGS_POS_PAGE_SSIZE
);

154 
	`ut_ad
(
	`f•_Êags_is_vÆid
(
Êags
));

156  (
Êags
);

157 
	}
}

167 
UNIV_INLINE


168 
uöt32_t
 
	$f•_Êags_öô
(c⁄° 
∑ge_size_t
 &
∑ge_size
, 
boﬁ
 
©omic_blobs
,

169 
boﬁ
 
has_d©a_dú
, boﬁ 
is_sh¨ed
, boﬁ 
is_ãmp‹¨y
,

170 
boﬁ
 
is_í¸y±ed
) {

171 
	`ut_ad
(
∑ge_size
.
	`physiˇl
(Ë<∑ge_size.
	`logiˇl
());

172 
	`ut_ad
(!
∑ge_size
.
	`is_com¥es£d
(Ë|| 
©omic_blobs
);

176 
uöt32_t
 
Êags
 = 
	`f•_Êags_£t_∑ge_size
(0, 
∑ge_size
);

178 i‡(
©omic_blobs
) {

179 
Êags
 |
FSP_FLAGS_MASK_POST_ANTELOPE
 | 
FSP_FLAGS_MASK_ATOMIC_BLOBS
;

184 
Êags
 = 
	`f•_Êags_£t_zù_size
(Êags, 
∑ge_size
);

186 i‡(
has_d©a_dú
) {

187 
Êags
 |
FSP_FLAGS_MASK_DATA_DIR
;

192 i‡(
is_sh¨ed
) {

193 
	`ut_ad
(!
has_d©a_dú
);

194 
Êags
 |
FSP_FLAGS_MASK_SHARED
;

197 i‡(
is_ãmp‹¨y
) {

198 
	`ut_ad
(!
has_d©a_dú
);

199 
Êags
 |
FSP_FLAGS_MASK_TEMPORARY
;

202 i‡(
is_í¸y±ed
) {

203 
Êags
 |
FSP_FLAGS_MASK_ENCRYPTION
;

206  (
Êags
);

207 
	}
}

213 
UNIV_INLINE


214 
ulöt
 
	$xdes_ˇlc_des¸ùt‹_ödex
(c⁄° 
∑ge_size_t
 &
∑ge_size
, 
ulöt
 
off£t
) {

215  (
	`ut_2pow_ªmaödî
(
off£t
, 
∑ge_size
.
	`physiˇl
()Ë/ 
FSP_EXTENT_SIZE
);

216 
	}
}

220 
UNIV_INLINE


221 
iboﬁ
 
	$xdes_gë_bô
(c⁄° 
xdes_t
 *
des¸
,

222 
ulöt
 
bô
,

223 
∑ge_no_t
 
off£t
)

226 
	`ut_ad
(
off£t
 < 
FSP_EXTENT_SIZE
);

227 
	`ut_ad
(
bô
 =
XDES_FREE_BIT
 || bô =
XDES_CLEAN_BIT
);

229 
ulöt
 
ödex
 = 
bô
 + 
XDES_BITS_PER_PAGE
 * 
off£t
;

231 
ulöt
 
bô_ödex
 = 
ödex
 % 8;

232 
ulöt
 
byã_ödex
 = 
ödex
 / 8;

234  (
	`ut_bô_gë_¡h
(

235 
	`mach_ªad_ulöt
(
des¸
 + 
XDES_BITMAP
 + 
byã_ödex
, 
MLOG_1BYTE
),

236 
bô_ödex
));

237 
	}
}

243 
UNIV_INLINE


244 
∑ge_no_t
 
	$xdes_ˇlc_des¸ùt‹_∑ge
(c⁄° 
∑ge_size_t
 &
∑ge_size
,

245 
∑ge_no_t
 
off£t
) {

246 
	`°©ic_as£π
(
UNIV_PAGE_SIZE_MAX
 > 
XDES_ARR_OFFSET
 + (UNIV_PAGE_SIZE_MAX /

247 
FSP_EXTENT_SIZE_MAX
) *

248 
XDES_SIZE_MAX
,

251 
	`°©ic_as£π
(
UNIV_ZIP_SIZE_MIN
 > 
XDES_ARR_OFFSET
 + (UNIV_ZIP_SIZE_MIN /

252 
FSP_EXTENT_SIZE_MIN
) *

253 
XDES_SIZE_MIN
,

256 
	`ut_ad
(
UNIV_PAGE_SIZE
 >

257 
XDES_ARR_OFFSET
 + (
UNIV_PAGE_SIZE
 / 
FSP_EXTENT_SIZE
Ë* 
XDES_SIZE
);

258 
	`ut_ad
(
UNIV_ZIP_SIZE_MIN
 >

259 
XDES_ARR_OFFSET
 + (
UNIV_ZIP_SIZE_MIN
 / 
FSP_EXTENT_SIZE
Ë* 
XDES_SIZE
);

261 #ifde‡
UNIV_DEBUG


262 i‡(
∑ge_size
.
	`is_com¥es£d
()) {

263 
	`ut_a
(
∑ge_size
.
	`physiˇl
() >

264 
XDES_ARR_OFFSET
 +

265 (
∑ge_size
.
	`physiˇl
(Ë/ 
FSP_EXTENT_SIZE
Ë* 
XDES_SIZE
);

269  (
	`ut_2pow_round
(
off£t
, 
∑ge_size
.
	`physiˇl
()));

270 
	}
}

275 
UNIV_INLINE


276 
ulöt
 
	$xdes_¨r_size
(c⁄° 
∑ge_size_t
 &
∑ge_size
) {

277  (
∑ge_size
.
	`physiˇl
(Ë/ 
FSP_EXTENT_SIZE
);

278 
	}
}

286 
ölöe
 
boﬁ
 
	$f•_is_öode_∑ge
(
∑ge_no_t
 
∑ge
) {

287 c⁄° 
uöt
 
öode_≥r_∑ge
 = 
	`FSP_SEG_INODES_PER_PAGE
(
univ_∑ge_size
);

294 c⁄° 
uöt
 
cy˛e
 = 
öode_≥r_∑ge
 + 2;

298 c⁄° 
uöt
 
ödexes
 = 102;

301 c⁄° 
uöt
 
max_∑ge_no
 =

302 
FSP_FIRST_INODE_PAGE_NO
 + 1

303 + (
ödexes
 / 
öode_≥r_∑ge
Ë* 
cy˛e
 + (indexes % inode_per_page) +

304 ((
ödexes
 % 
öode_≥r_∑ge
) / ((inode_per_page + 1) / 2));

307 
	`ut_a
(
∑ge
 >
FSP_FIRST_INODE_PAGE_NO
);

308 
	`ut_a
(
∑ge
 <
max_∑ge_no
);

310 
uöt
 
°ï
 = (
∑ge
 - 
FSP_FIRST_INODE_PAGE_NO
Ë% 
cy˛e
;

312  (
°ï
 =0 || sã∞=(
cy˛e
 + 1) / 2);

313 
	}
}

322 
ölöe
 
boﬁ
 
	$f•_Êags_is_vÆid
(
uöt32_t
 
Êags
) {

323 
boﬁ
 
po°_™ãl›e
 = 
	`FSP_FLAGS_GET_POST_ANTELOPE
(
Êags
);

324 
ulöt
 
zù_ssize
 = 
	`FSP_FLAGS_GET_ZIP_SSIZE
(
Êags
);

325 
boﬁ
 
©omic_blobs
 = 
	`FSP_FLAGS_HAS_ATOMIC_BLOBS
(
Êags
);

326 
ulöt
 
∑ge_ssize
 = 
	`FSP_FLAGS_GET_PAGE_SSIZE
(
Êags
);

327 
boﬁ
 
has_d©a_dú
 = 
	`FSP_FLAGS_HAS_DATA_DIR
(
Êags
);

328 
boﬁ
 
is_sh¨ed
 = 
	`FSP_FLAGS_GET_SHARED
(
Êags
);

329 
boﬁ
 
is_ãmp
 = 
	`FSP_FLAGS_GET_TEMPORARY
(
Êags
);

330 
boﬁ
 
is_í¸y±i⁄
 = 
	`FSP_FLAGS_GET_ENCRYPTION
(
Êags
);

332 
ulöt
 
unu£d
 = 
	`FSP_FLAGS_GET_UNUSED
(
Êags
);

334 
	`DBUG_EXECUTE_IF
("f•_Êags_is_vÆid_Áûuª",  (
Ál£
););

339 i‡(
Êags
 == 0) {

340  (
åue
);

348 i‡(
po°_™ãl›e
 !
©omic_blobs
) {

349  (
Ál£
);

353 i‡(
unu£d
 != 0) {

354  (
Ál£
);

359 i‡(
zù_ssize
 > 
PAGE_ZIP_SSIZE_MAX
) {

360  (
Ál£
);

364 i‡(
∑ge_ssize
 != 0 &&

365 (
∑ge_ssize
 < 
UNIV_PAGE_SSIZE_MIN
 ||Öage_ssizê> 
UNIV_PAGE_SSIZE_MAX
)) {

366  (
Ál£
);

372 i‡(
has_d©a_dú
 && (
is_sh¨ed
 || 
is_ãmp
)) {

373  (
Ál£
);

378 i‡(
is_í¸y±i⁄
 && (
is_ãmp
)) {

379  (
Ál£
);

382 #i‡
FSP_FLAGS_POS_UNUSED
 != 15

383 #îr‹ 
You
 
have
 
added
 
a
 
√w
 
FSP_FLAG
 
wôhout
 
addög
á 
vÆid©i⁄
 
check
.

386  (
åue
);

387 
	}
}

392 
ölöe
 
ulöt
 
	$f•_hódî_gë_sdi_off£t
(c⁄° 
∑ge_size_t
 &
∑ge_size
) {

393 
ulöt
 
off£t
;

394 #ifde‡
UNIV_DEBUG


395 
ulöt
 
À·_size
;

398 
off£t
 = 
XDES_ARR_OFFSET
 + 
XDES_SIZE
 * 
	`xdes_¨r_size
(
∑ge_size
) +

399 
En¸y±i⁄
::
INFO_MAX_SIZE
;

400 #ifde‡
UNIV_DEBUG


401 
À·_size
 =

402 
∑ge_size
.
	`physiˇl
(Ë- 
FSP_HEADER_OFFSET
 - 
off£t
 - 
FIL_PAGE_DATA_END
;

404 
	`ut_ad
(
À·_size
 >
FSP_SDI_HEADER_LEN
);

406  (
off£t
);

407 
	}
}

412 
ölöe
 
ulöt
 
	$f•_hódî_gë_í¸y±i⁄_¥ogªss_off£t
(

413 c⁄° 
∑ge_size_t
 &
∑ge_size
) {

414 
ulöt
 
off£t
;

415 #ifde‡
UNIV_DEBUG


416 
ulöt
 
À·_size
;

419 
off£t
 = 
	`f•_hódî_gë_sdi_off£t
(
∑ge_size
Ë+ 
FSP_SDI_HEADER_LEN
;

420 #ifde‡
UNIV_DEBUG


421 
À·_size
 =

422 
∑ge_size
.
	`physiˇl
(Ë- 
FSP_HEADER_OFFSET
 - 
off£t
 - 
FIL_PAGE_DATA_END
;

424 
	`ut_ad
(
À·_size
 >=

425 
En¸y±i⁄
::
OPERATION_INFO_SIZE
 + En¸y±i⁄::
PROGRESS_INFO_SIZE
);

428  (
off£t
);

429 
	}
}

434 
UNIV_INLINE


435 
uöt32
 
	$f•_hódî_gë_£rvî_vîsi⁄
(c⁄° 
∑ge_t
 *
∑ge
) {

436 
uöt32
 
vîsi⁄
;

438 
vîsi⁄
 = 
	`mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_SRV_VERSION
);

440  (
vîsi⁄
);

441 
	}
}

446 
UNIV_INLINE


447 
uöt32
 
	$f•_hódî_gë_•a˚_vîsi⁄
(c⁄° 
∑ge_t
 *
∑ge
) {

448 
uöt32
 
vîsi⁄
;

450 
vîsi⁄
 = 
	`mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_SPACE_VERSION
);

452  (
vîsi⁄
);

453 
	}
}

	@fsp0space.h

33 #i‚de‡
f•0•a˚_h


34 
	#f•0•a˚_h


	)

36 
	~"f•0fûe.h
"

37 
	~"f•0f•.h
"

38 
	~"f•0ty≥s.h
"

39 
	~"univ.i
"

40 
	~"ut0√w.h
"

42 
	~<ve˘‹
>

46 ˛as†
	cTabÀ•a˚
 {

47 
	mpublic
:

48 
°d
::
	tve˘‹
<
	tD©afûe
, 
	tut_Æloˇt‹
<D©afûe>> 
	tfûes_t
;

51 
fûes_t
 
	mm_fûes
;

53 
	$TabÀ•a˚
()

54 : 
	`m_fûes
(),

55 
	`m_«me
(),

56 
	`m_•a˚_id
(
SPACE_UNKNOWN
),

57 
	`m_∑th
(),

58 
	`m_Êags
(),

59 
	`m_aut€xãnd_size
(),

60 
	$m_ign‹e_ªad_⁄ly
(
Ál£
) {

64 
vútuÆ
 ~
	$TabÀ•a˚
() {

65 
	`shutdown
();

66 
	`ut_ad
(
m_fûes
.
	`em±y
());

67 
	`ut_ad
(
m_•a˚_id
 =
SPACE_UNKNOWN
);

68 i‡(
m_«me
 !
nuŒ±r
) {

69 
	`ut_‰ì
(
m_«me
);

70 
m_«me
 = 
nuŒ±r
;

72 i‡(
m_∑th
 !
nuŒ±r
) {

73 
	`ut_‰ì
(
m_∑th
);

74 
m_∑th
 = 
nuŒ±r
;

76 
	}
}

79 
TabÀ•a˚
(const Tablespace &);

80 
	gTabÀ•a˚
 &
	g›î©‹
=(c⁄° 
TabÀ•a˚
 &);

84 
	$£t_«me
(c⁄° *
«me
) {

85 
	`ut_ad
(
m_«me
 =
nuŒ±r
);

86 
m_«me
 = 
	`mem_°rdup
(
«me
);

87 
	`ut_ad
(
m_«me
 !
nuŒ±r
);

88 
	}
}

92 c⁄° *
	$«me
(Ëc⁄° {  (
m_«me
); 
	}
}

97 
	$£t_∑th
(c⁄° *
∑th
, 
size_t
 
Àn
) {

98 
	`ut_ad
(
m_∑th
 =
nuŒ±r
);

99 
m_∑th
 = 
	`mem_°rdu∂
(
∑th
, 
Àn
);

100 
	`ut_ad
(
m_∑th
 !
nuŒ±r
);

102 
Fû_∑th
::
	`n‹mÆize
(
m_∑th
);

103 
	}
}

107 
	$£t_∑th
(c⁄° *
∑th
Ë{ 
	`£t_∑th
’©h, 
	`°æí
’©h)); 
	}
}

111 c⁄° *
	$∑th
(Ëc⁄° {  (
m_∑th
); 
	}
}

115 
	$£t_•a˚_id
(
•a˚_id_t
 
•a˚_id
) {

116 
	`ut_ad
(
m_•a˚_id
 =
SPACE_UNKNOWN
);

117 
m_•a˚_id
 = 
•a˚_id
;

118 
	}
}

122 
•a˚_id_t
 
	$•a˚_id
(Ëc⁄° {  (
m_•a˚_id
); 
	}
}

126 
	$£t_Êags
(
uöt32_t
 
f•_Êags
) {

127 
	`ut_ad
(
	`f•_Êags_is_vÆid
(
f•_Êags
));

128 
m_Êags
 = 
f•_Êags
;

129 
	}
}

133 
uöt32_t
 
	$Êags
(Ëc⁄° {  (
m_Êags
); 
	}
}

137 
	$£t_ign‹e_ªad_⁄ly
(
boﬁ
 
ªad_⁄ly_°©us
) {

138 
m_ign‹e_ªad_⁄ly
 = 
ªad_⁄ly_°©us
;

139 
	}
}

142 
shutdown
();

145 
∑ge_no_t
 
	$gë_sum_of_sizes
() const {

146 
∑ge_no_t
 
sum
 = 0;

148 
fûes_t
::
c⁄°_ôî©‹
 
ô
 = 
m_fûes
.
	`begö
(); ià!m_fûes.
	`íd
();

149 ++
ô
) {

150 
sum
 +
ô
->
m_size
;

153  (
sum
);

154 
	}
}

159 
dbîr_t
 
	$›í_‹_¸óã
(
boﬁ
 
is_ãmp
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

162 
	`dñëe_fûes
();

167 
boﬁ
 
	`öãr£˘i⁄
(c⁄° 
TabÀ•a˚
 *
Ÿhî_•a˚
);

177 
dbîr_t
 
	`add_d©afûe
(c⁄° *
d©afûe_added
);

181 
D©afûe
 *
	$fú°_d©afûe
() {

182 
	`ut_a
(!
m_fûes
.
	`em±y
());

183  (&
m_fûes
.
	`‰⁄t
());

184 
	}
}

187 
	$£t_aut€xãnd_size
(
uöt64_t
 
size
Ë{ 
m_aut€xãnd_size
 = size; 
	}
}

190 
uöt64_t
 
	$gë_aut€xãnd_size
(Ëc⁄° {  
m_aut€xãnd_size
; 
	}
}

192 
	g¥iv©e
:

196 
boﬁ
 
föd
(c⁄° *
fûíame
);

200 
fûe_found
(
D©afûe
 &
fûe
);

205 *
	gm_«me
;

208 
•a˚_id_t
 
	gm_•a˚_id
;

211 *
	gm_∑th
;

214 
uöt32_t
 
	gm_Êags
;

217 
uöt64_t
 
	gm_aut€xãnd_size
;

219 
	g¥Ÿe˘ed
:

221 
boﬁ
 
m_ign‹e_ªad_⁄ly
;

	@fsp0sysspace.h

33 #i‚de‡
f•0sys•a˚_h


34 
	#f•0sys•a˚_h


	)

36 
	~"f•0•a˚.h
"

37 
	~"univ.i
"

39 #ifde‡
UNIV_HOTBACKUP


40 
	~"§v0§v.h
"

45 
ul⁄g
 
sys_èbÀ•a˚_auto_exãnd_ö¸emít
;

47 #ifde‡
UNIV_DEBUG


52 
boﬁ
 
§v_skù_ãmp_èbÀ_checks_debug
;

57 ˛as†
	cSysTabÀ•a˚
 : 
public
 
TabÀ•a˚
 {

58 
public
:

59 
	$SysTabÀ•a˚
()

60 : 
	`m_auto_exãnd_œ°_fûe
(),

61 
	`m_œ°_fûe_size_max
(),

62 
	`m_¸óãd_√w_øw
(),

63 
	`m_is_èbÀ•a˚_fuŒ
(
Ál£
),

64 
	$m_ßnôy_checks_d⁄e
(
Ál£
) {

68 ~
	$SysTabÀ•a˚
(Ë
ovîride
 { 
	`shutdown
(); 
	}
}

72 
	$£t_èbÀ•a˚_fuŒ_°©us
(
boﬁ
 
is_fuŒ
) {

73 
m_is_èbÀ•a˚_fuŒ
 = 
is_fuŒ
;

74 
	}
}

78 
boﬁ
 
	$gë_èbÀ•a˚_fuŒ_°©us
(Ë{  (
m_is_èbÀ•a˚_fuŒ
); 
	}
}

82 
	$£t_ßnôy_check_°©us
(
boﬁ
 
°©us
Ë{ 
m_ßnôy_checks_d⁄e
 = sètus; 
	}
}

86 
boﬁ
 
	$gë_ßnôy_check_°©us
(Ë{  (
m_ßnôy_checks_d⁄e
); 
	}
}

92 
boﬁ
 
∑r£_∑øms
(c⁄° *
fûï©h_•ec
, boﬁ 
suµ‹ts_øw
);

98 
dbîr_t
 
check_fûe_•ec
(
boﬁ
 
¸óã_√w_db
, 
ulöt
 
mö_ex≥˘ed_size
);

101 
shutdown
();

105 
boﬁ
 
	$¸óãd_√w_øw
(Ëc⁄° {  (
m_¸óãd_√w_øw
); 
	}
}

109 
ulöt
 
	$ˇn_auto_exãnd_œ°_fûe
(Ëc⁄° {  (
m_auto_exãnd_œ°_fûe
); 
	}
}

113 
	$£t_œ°_fûe_size
(
∑ge_no_t
 
size
) {

114 
	`ut_ad
(!
m_fûes
.
	`em±y
());

115 
m_fûes
.
	`back
().
m_size
 = 
size
;

116 
	}
}

120 
∑ge_no_t
 
	$œ°_fûe_size
() const {

121 
	`ut_ad
(!
m_fûes
.
	`em±y
());

122  (
m_fûes
.
	`back
().
m_size
);

123 
	}
}

127 
∑ge_no_t
 
	$gë_aut€xãnd_ö¸emít
() const {

128  (
sys_èbÀ•a˚_auto_exãnd_ö¸emít
 *

129 ((1024 * 1024Ë/ 
UNIV_PAGE_SIZE
));

130 
	}
}

137 
∑ge_no_t
 
	$gë_∑ges_‰om_size
(
os_off£t_t
 
size
) {

138  
°©ic_ˇ°
<
∑ge_no_t
>(

139 ((
size
 / (1024 * 1024)Ë* ((1024 * 1024Ë/ 
UNIV_PAGE_SIZE
)));

140 
	}
}

144 
∑ge_no_t
 
	$gë_ö¸emít
() const;

152 
dbîr_t
 
	$›í_‹_¸óã
(
boﬁ
 
is_ãmp
, boﬁ 
¸óã_√w_db
,

153 
∑ge_no_t
 *
sum_√w_sizes
, 
l¢_t
 *
Êush_l¢
)

154 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

156 
¥iv©e
:

160 
dbîr_t
 
	`ªad_l¢_™d_check_Êags
(
l¢_t
 *
Êushed_l¢
);

166 
dbîr_t
 
	`fûe_nŸ_found
(
D©afûe
 &
fûe
, 
boﬁ
 
¸óã_√w_db
);

170 
	`fûe_found
(
D©afûe
 &
fûe
);

175 
dbîr_t
 
	`¸óã
(
D©afûe
 &
fûe
);

180 
dbîr_t
 
	`¸óã_fûe
(
D©afûe
 &
fûe
);

185 
dbîr_t
 
	`›í_fûe
(
D©afûe
 &
fûe
);

190 
dbîr_t
 
	`£t_size
(
D©afûe
 &
fûe
);

192 
¥iv©e
:

200 *
	`∑r£_fûe_«me
(*
±r
);

207 
∑ge_no_t
 
	`∑r£_unôs
(*&
±r
);

209 
	efûe_°©us_t
 {

210 
FILE_STATUS_VOID
 = 0,

211 
FILE_STATUS_RW_PERMISSION_ERROR
,

212 
FILE_STATUS_READ_WRITE_ERROR
,

213 
FILE_STATUS_NOT_REGULAR_FILE_ERROR


214 
	}
};

219 
dbîr_t
 
check_size
(
D©afûe
 &
fûe
);

225 
dbîr_t
 
check_fûe_°©us
(c⁄° 
D©afûe
 &
fûe
, 
fûe_°©us_t
 &
ªas⁄
);

230 
boﬁ
 
	gm_auto_exãnd_œ°_fûe
;

234 
∑ge_no_t
 
	gm_œ°_fûe_size_max
;

239 
boﬁ
 
	gm_¸óãd_√w_øw
;

242 
boﬁ
 
	gm_is_èbÀ•a˚_fuŒ
;

245 
boﬁ
 
	gm_ßnôy_checks_d⁄e
;

251 
SysTabÀ•a˚
 
§v_sys_•a˚
;

254 
SysTabÀ•a˚
 
§v_tmp_•a˚
;

	@fsp0types.h

34 #i‚de‡
f•0ty≥s_h


35 
	#f•0ty≥s_h


	)

37 
	~"univ.i
"

45 
	#FSP_UP
 ((
byã
)111Ë

	)

46 
	#FSP_DOWN
 ((
byã
)112Ë

	)

47 
	#FSP_NO_DIR
 ((
byã
)113Ë

	)

59 
	#FSP_EXTENT_SIZE
 \

60 
°©ic_ˇ°
<
∑ge_no_t
>( \

61 ((
UNIV_PAGE_SIZE
 <= (16384) \

62 ? (1048576 / 
UNIV_PAGE_SIZE
) \

63 : ((
UNIV_PAGE_SIZE
 <= (32768)) ? (2097152 / UNIV_PAGE_SIZE) \

64 : (4194304 / 
UNIV_PAGE_SIZE
)))))

	)

67 
	#FSP_EXTENT_SIZE_MAX
 (4194304 / 
UNIV_PAGE_SIZE_MAX
)

	)

70 
	#FSP_EXTENT_SIZE_MIN
 (1048576 / 
UNIV_PAGE_SIZE_MIN
)

	)

74 
	#FSEG_PAGE_DATA
 
FIL_PAGE_DATA


	)

80 
byã
 
	tf£g_hódî_t
;

82 
	#FSEG_HDR_SPACE
 0

	)

83 
	#FSEG_HDR_PAGE_NO
 4

	)

84 
	#FSEG_HDR_OFFSET
 8

	)

86 
	#FSEG_HEADER_SIZE
 \

87 10

	)

91 #ifde‡
UNIV_DEBUG


93 
	gmå_t
;

96 ˛as†
	cf£g_hódî
 {

97 
	mpublic
:

103 
	$f£g_hódî
(c⁄° 
f£g_hódî_t
 *
hódî
, 
må_t
 *
må
)

104 : 
	`m_hódî
(
hódî
), 
	$m_må
(
må
) {}

109 
°d
::
o°ªam
 &
	$to_°ªam
(
°d
::
o°ªam
 &
out
) const;

111 
¥iv©e
:

113 c⁄° 
f£g_hódî_t
 *
m_hódî
;

117 
må_t
 *
m_må
;

118 
	}
};

124 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gf£g_hódî
 &
	ghódî
) {

125  (
	ghódî
.
to_°ªam
(
out
));

130 
	ef•_ª£rve_t
 {

131 
	mFSP_NORMAL
,

132 
	mFSP_UNDO
,

133 
	mFSP_CLEANING
,

134 
	mFSP_BLOB


148 
	#FSP_XDES_OFFSET
 0

	)

149 
	#FSP_IBUF_BITMAP_OFFSET
 1

	)

154 
	#FSP_FIRST_INODE_PAGE_NO
 2

	)

158 
	#FSP_IBUF_HEADER_PAGE_NO
 \

159 3

	)

162 
	#FSP_IBUF_TREE_ROOT_PAGE_NO
 \

163 4

	)

169 
	#FSP_TRX_SYS_PAGE_NO
 \

170 5

	)

173 
	#FSP_FIRST_RSEG_PAGE_NO
 \

174 6

	)

176 
	#FSP_DICT_HDR_PAGE_NO
 \

177 7

	)

184 
	#FSP_RSEG_ARRAY_PAGE_NO
 \

185 3

	)

197 
boﬁ
 
	$f•_Êags_is_vÆid
(
uöt32_t
 
Êags
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

202 
boﬁ
 
	`f•_is_sy°em_ãmp‹¨y
(
•a˚_id_t
 
•a˚_id
);

207 
boﬁ
 
	`f•_is_£ssi⁄_ãmp‹¨y
(
•a˚_id_t
 
•a˚_id
);

212 
boﬁ
 
	`f•_is_globÆ_ãmp‹¨y
(
•a˚_id_t
 
•a˚_id
);

217 
boﬁ
 
	`f•_is_checksum_dißbÀd
(
•a˚_id_t
 
•a˚_id
);

219 #ifde‡
UNIV_DEBUG


224 
boﬁ
 
	`f•_skù_ßnôy_check
(
•a˚_id_t
 
•a˚_id
);

231 
	#FSP_FLAGS_WIDTH_POST_ANTELOPE
 1

	)

233 
	#FSP_FLAGS_WIDTH_ZIP_SSIZE
 4

	)

237 
	#FSP_FLAGS_WIDTH_ATOMIC_BLOBS
 1

	)

239 
	#FSP_FLAGS_WIDTH_PAGE_SSIZE
 4

	)

242 
	#FSP_FLAGS_WIDTH_DATA_DIR
 1

	)

245 
	#FSP_FLAGS_WIDTH_SHARED
 1

	)

249 
	#FSP_FLAGS_WIDTH_TEMPORARY
 1

	)

252 
	#FSP_FLAGS_WIDTH_ENCRYPTION
 1

	)

255 
	#FSP_FLAGS_WIDTH_SDI
 1

	)

258 
	#FSP_FLAGS_WIDTH
 \

259 (
FSP_FLAGS_WIDTH_POST_ANTELOPE
 + 
FSP_FLAGS_WIDTH_ZIP_SSIZE
 + \

260 
FSP_FLAGS_WIDTH_ATOMIC_BLOBS
 + 
FSP_FLAGS_WIDTH_PAGE_SSIZE
 + \

261 
FSP_FLAGS_WIDTH_DATA_DIR
 + 
FSP_FLAGS_WIDTH_SHARED
 + \

262 
FSP_FLAGS_WIDTH_TEMPORARY
 + 
FSP_FLAGS_WIDTH_ENCRYPTION
 + \

263 
FSP_FLAGS_WIDTH_SDI
)

	)

266 
	#FSP_FLAGS_MASK
 (~(~0U << 
FSP_FLAGS_WIDTH
))

	)

269 
	#FSP_FLAGS_POS_POST_ANTELOPE
 0

	)

271 
	#FSP_FLAGS_POS_ZIP_SSIZE
 \

272 (
FSP_FLAGS_POS_POST_ANTELOPE
 + 
FSP_FLAGS_WIDTH_POST_ANTELOPE
)

	)

274 
	#FSP_FLAGS_POS_ATOMIC_BLOBS
 \

275 (
FSP_FLAGS_POS_ZIP_SSIZE
 + 
FSP_FLAGS_WIDTH_ZIP_SSIZE
)

	)

277 
	#FSP_FLAGS_POS_PAGE_SSIZE
 \

278 (
FSP_FLAGS_POS_ATOMIC_BLOBS
 + 
FSP_FLAGS_WIDTH_ATOMIC_BLOBS
)

	)

280 
	#FSP_FLAGS_POS_DATA_DIR
 \

281 (
FSP_FLAGS_POS_PAGE_SSIZE
 + 
FSP_FLAGS_WIDTH_PAGE_SSIZE
)

	)

283 
	#FSP_FLAGS_POS_SHARED
 (
FSP_FLAGS_POS_DATA_DIR
 + 
FSP_FLAGS_WIDTH_DATA_DIR
)

	)

285 
	#FSP_FLAGS_POS_TEMPORARY
 (
FSP_FLAGS_POS_SHARED
 + 
FSP_FLAGS_WIDTH_SHARED
)

	)

287 
	#FSP_FLAGS_POS_ENCRYPTION
 \

288 (
FSP_FLAGS_POS_TEMPORARY
 + 
FSP_FLAGS_WIDTH_TEMPORARY
)

	)

290 
	#FSP_FLAGS_POS_SDI
 \

291 (
FSP_FLAGS_POS_ENCRYPTION
 + 
FSP_FLAGS_WIDTH_ENCRYPTION
)

	)

294 
	#FSP_FLAGS_POS_UNUSED
 (
FSP_FLAGS_POS_SDI
 + 
FSP_FLAGS_WIDTH_SDI
)

	)

297 
	#FSP_FLAGS_MASK_POST_ANTELOPE
 \

298 ((~(~0U << 
FSP_FLAGS_WIDTH_POST_ANTELOPE
)Ë<< 
FSP_FLAGS_POS_POST_ANTELOPE
)

	)

300 
	#FSP_FLAGS_MASK_ZIP_SSIZE
 \

301 ((~(~0U << 
FSP_FLAGS_WIDTH_ZIP_SSIZE
)Ë<< 
FSP_FLAGS_POS_ZIP_SSIZE
)

	)

303 
	#FSP_FLAGS_MASK_ATOMIC_BLOBS
 \

304 ((~(~0U << 
FSP_FLAGS_WIDTH_ATOMIC_BLOBS
)Ë<< 
FSP_FLAGS_POS_ATOMIC_BLOBS
)

	)

306 
	#FSP_FLAGS_MASK_PAGE_SSIZE
 \

307 ((~(~0U << 
FSP_FLAGS_WIDTH_PAGE_SSIZE
)Ë<< 
FSP_FLAGS_POS_PAGE_SSIZE
)

	)

309 
	#FSP_FLAGS_MASK_DATA_DIR
 \

310 ((~(~0U << 
FSP_FLAGS_WIDTH_DATA_DIR
)Ë<< 
FSP_FLAGS_POS_DATA_DIR
)

	)

312 
	#FSP_FLAGS_MASK_SHARED
 \

313 ((~(~0U << 
FSP_FLAGS_WIDTH_SHARED
)Ë<< 
FSP_FLAGS_POS_SHARED
)

	)

315 
	#FSP_FLAGS_MASK_TEMPORARY
 \

316 ((~(~0U << 
FSP_FLAGS_WIDTH_TEMPORARY
)Ë<< 
FSP_FLAGS_POS_TEMPORARY
)

	)

318 
	#FSP_FLAGS_MASK_ENCRYPTION
 \

319 ((~(~0U << 
FSP_FLAGS_WIDTH_ENCRYPTION
)Ë<< 
FSP_FLAGS_POS_ENCRYPTION
)

	)

321 
	#FSP_FLAGS_MASK_SDI
 \

322 ((~(~0U << 
FSP_FLAGS_WIDTH_SDI
)Ë<< 
FSP_FLAGS_POS_SDI
)

	)

325 
	#FSP_FLAGS_GET_POST_ANTELOPE
(
Êags
) \

326 ((
Êags
 & 
FSP_FLAGS_MASK_POST_ANTELOPE
Ë>> 
FSP_FLAGS_POS_POST_ANTELOPE
)

	)

328 
	#FSP_FLAGS_GET_ZIP_SSIZE
(
Êags
) \

329 ((
Êags
 & 
FSP_FLAGS_MASK_ZIP_SSIZE
Ë>> 
FSP_FLAGS_POS_ZIP_SSIZE
)

	)

331 
	#FSP_FLAGS_HAS_ATOMIC_BLOBS
(
Êags
) \

332 ((
Êags
 & 
FSP_FLAGS_MASK_ATOMIC_BLOBS
Ë>> 
FSP_FLAGS_POS_ATOMIC_BLOBS
)

	)

334 
	#FSP_FLAGS_GET_PAGE_SSIZE
(
Êags
) \

335 ((
Êags
 & 
FSP_FLAGS_MASK_PAGE_SSIZE
Ë>> 
FSP_FLAGS_POS_PAGE_SSIZE
)

	)

337 
	#FSP_FLAGS_HAS_DATA_DIR
(
Êags
) \

338 ((
Êags
 & 
FSP_FLAGS_MASK_DATA_DIR
Ë>> 
FSP_FLAGS_POS_DATA_DIR
)

	)

340 
	#FSP_FLAGS_GET_SHARED
(
Êags
) \

341 ((
Êags
 & 
FSP_FLAGS_MASK_SHARED
Ë>> 
FSP_FLAGS_POS_SHARED
)

	)

343 
	#FSP_FLAGS_GET_TEMPORARY
(
Êags
) \

344 ((
Êags
 & 
FSP_FLAGS_MASK_TEMPORARY
Ë>> 
FSP_FLAGS_POS_TEMPORARY
)

	)

346 
	#FSP_FLAGS_GET_ENCRYPTION
(
Êags
) \

347 ((
Êags
 & 
FSP_FLAGS_MASK_ENCRYPTION
Ë>> 
FSP_FLAGS_POS_ENCRYPTION
)

	)

349 
	#FSP_FLAGS_HAS_SDI
(
Êags
) \

350 ((
Êags
 & 
FSP_FLAGS_MASK_SDI
Ë>> 
FSP_FLAGS_POS_SDI
)

	)

352 
	#FSP_FLAGS_GET_UNUSED
(
Êags
Ë(Êag†>> 
FSP_FLAGS_POS_UNUSED
)

	)

354 
	#FSP_FLAGS_ARE_NOT_SET
(
Êags
Ë((Êag†& 
FSP_FLAGS_MASK
Ë=0)

	)

357 
UNIV_INLINE
 
	$f•_Êags_£t_í¸y±i⁄
(
uöt32_t
 &
Êags
) {

358 
Êags
 |
FSP_FLAGS_MASK_ENCRYPTION
;

359 
	}
}

362 
UNIV_INLINE
 
	$f•_Êags_un£t_í¸y±i⁄
(
uöt32_t
 &
Êags
) {

363 
Êags
 &~
FSP_FLAGS_MASK_ENCRYPTION
;

364 
	}
}

367 
UNIV_INLINE
 
	$f•_Êags_£t_sdi
(
uöt32_t
 &
Êags
) {

368 
Êags
 |
FSP_FLAGS_MASK_SDI
;

369 
	}
}

372 
UNIV_INLINE
 
	$f•_Êags_un£t_sdi
(
uöt32_t
 &
Êags
) {

373 
Êags
 &~
FSP_FLAGS_MASK_SDI
;

374 
	}
}

377 
	#f•_is_sh¨ed_èbÀ•a˚
 
FSP_FLAGS_GET_SHARED


	)

385 
c⁄°ex¥
 
size_t
 
	gTRX_SYS_N_RSEGS
 = 128;

389 
c⁄°ex¥
 
size_t
 
	gFSP_MIN_UNDO_TABLESPACES
 = 2;

390 
c⁄°ex¥
 
size_t
 
	gFSP_MAX_UNDO_TABLESPACES
 = 
TRX_SYS_N_RSEGS
 - 1;

391 
c⁄°ex¥
 
size_t
 
	gFSP_IMPLICIT_UNDO_TABLESPACES
 = 2;

392 
c⁄°ex¥
 
size_t
 
	gFSP_MAX_ROLLBACK_SEGMENTS
 = 
TRX_SYS_N_RSEGS
;

	@fts0ast.h

33 #i‚de‡
INNOBASE_FST0AST_H


34 
	#INNOBASE_FST0AST_H


	)

36 
	~"ha_¥ŸŸy≥s.h
"

37 
	~"mem0mem.h
"

39 #ifde‡
UNIV_PFS_MEMORY


41 
	#mÆloc
(
A
Ë
	`ut_mÆloc_nokey
(A)

	)

42 
	#‰ì
(
A
Ë
	`ut_‰ì
(A)

	)

43 
	#ªÆloc
(
P
, 
A
Ë
	`ut_ªÆloc
(P, A)

	)

48 
	e·s_a°_ty≥_t
 {

49 
	mFTS_AST_OPER
,

50 
	mFTS_AST_NUMB
,

51 
	mFTS_AST_TERM
,

52 
	mFTS_AST_TEXT
,

53 
	mFTS_AST_PARSER_PHRASE_LIST
,

57 
	mFTS_AST_LIST
,

58 
	mFTS_AST_SUBEXP_LIST


62 
	e·s_a°_›î_t
 {

63 
	mFTS_NONE
,

65 
	mFTS_IGNORE
,

68 
	mFTS_EXIST
,

71 
	mFTS_NEGATE
,

75 
	mFTS_INCR_RATING
,

78 
	mFTS_DECR_RATING
,

81 
	mFTS_DISTANCE
,

82 
	mFTS_IGNORE_SKIP
,

87 
	mFTS_EXIST_SKIP


95 
	g·s_Àxî_t
;

96 
	g·s_a°_node_t
;

97 
	g·s_a°_°©e_t
;

98 
	g·s_a°_°rög_t
;

100 
	$dbîr_t
 (*
	t·s_a°_ˇŒback
)(
	t·s_a°_›î_t
, 
	t·s_a°_node_t
 *, *);

104 
	`·s_∑r£
(

106 
·s_a°_°©e_t
 *
°©e
);

110 
·s_a°_node_t
 *
	`·s_a°_¸óã_node_›î
(

111 *
¨g
,

112 
·s_a°_›î_t
 
›î
);

115 
·s_a°_node_t
 *
	`·s_a°_¸óã_node_ãrm
(

116 *
¨g
,

117 c⁄° 
·s_a°_°rög_t
 *
±r
);

120 
·s_a°_node_t
 *
	`·s_a°_¸óã_node_ãxt
(

121 *
¨g
,

122 c⁄° 
·s_a°_°rög_t
 *
±r
);

125 
·s_a°_node_t
 *
	`·s_a°_¸óã_node_li°
(

126 *
¨g
,

127 
·s_a°_node_t
 *
ex¥
);

131 
·s_a°_node_t
 *
	`·s_a°_¸óã_node_subexp_li°
(

133 *
¨g
,

134 
·s_a°_node_t
 *
ex¥
);

137 
	`·s_a°_ãrm_£t_wûdˇrd
(

138 
·s_a°_node_t
 *
node
);

141 
	`·s_a°_ãxt_£t_di°™˚
(
·s_a°_node_t
 *
node
,

142 
ulöt
 
di°™˚
);

146 
·s_a°_node_t
 *
	`·s_a°_‰ì_node
(

147 
·s_a°_node_t
 *
node
);

150 
·s_a°_node_t
 *
	`·s_a°_add_node
(

151 
·s_a°_node_t
 *
li°
,

152 
·s_a°_node_t
 *
node
);

155 
	`·s_a°_node_¥öt
(

156 
·s_a°_node_t
 *
node
);

159 
	`·s_a°_°©e_‰ì
(
·s_a°_°©e_t
 *
°©e
);

164 
boﬁ
 
	`·s_a°_node_check_uni⁄
(
·s_a°_node_t
 *
node
);

168 
dbîr_t
 
	$·s_a°_visô
(
·s_a°_›î_t
 
›î
,

169 
·s_a°_node_t
 *
node
,

170 
·s_a°_ˇŒback
 
visô‹
,

171 *
¨g
,

172 
boﬁ
 *
has_ign‹e
)

176 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

179 
·s_Àxî_t
 *
	$·s_Àxî_¸óã
(
iboﬁ
 
boﬁón_mode
,

180 c⁄° 
byã
 *
quîy
,

181 
ulöt
 
quîy_Àn
)

182 
	`MY_ATTRIBUTE
((
mÆloc
, 
w¨n_unu£d_ªsu…
));

185 
	`·s_Àxî_‰ì
(
·s_Àxî_t
 *
·s_Àxî
);

194 
·s_a°_°rög_t
 *
	`·s_a°_°rög_¸óã
(c⁄° 
byã
 *
°r
, 
ulöt
 
Àn
);

199 
	`·s_a°_°rög_‰ì
(
·s_a°_°rög_t
 *
a°_°r
);

206 
ulöt
 
	`·s_a°_°rög_to_ul
(c⁄° 
·s_a°_°rög_t
 *
a°_°r
, 
ba£
);

211 
	s·s_a°_°rög_t
 {

213 
byã
 *
°r
;

216 
ulöt
 
Àn
;

220 
	s·s_a°_ãrm_t
 {

221 
·s_a°_°rög_t
 *
±r
;

222 
iboﬁ
 
wûdˇrd
;

226 
	s·s_a°_ãxt_t
 {

227 
·s_a°_°rög_t
 *
±r
;

228 
ulöt
 
di°™˚
;

233 
	s·s_a°_li°_t
 {

234 
·s_a°_node_t
 *
hód
;

235 
·s_a°_node_t
 *
èû
;

239 
	s·s_a°_node_t
 {

240 
·s_a°_ty≥_t
 
ty≥
;

241 
·s_a°_ãxt_t
 
ãxt
;

242 
·s_a°_ãrm_t
 
ãrm
;

243 
·s_a°_›î_t
 
›î
;

244 
·s_a°_li°_t
 
li°
;

245 
·s_a°_node_t
 *
√xt
;

246 
·s_a°_node_t
 *
√xt_Æloc
;

247 
boﬁ
 
visôed
;

249 
åx_t
 *
åx
;

251 
·s_a°_node_t
 *
up_node
;

252 
boﬁ
 
go_up
;

256 
	s·s_a°_°©e_t
 {

257 
mem_hóp_t
 *
hóp
;

258 
·s_a°_node_t
 *
roŸ
;

261 
·s_a°_li°_t
 
li°
;

263 
·s_Àxî_t
 *
Àxî
;

264 
CHARSET_INFO
 *
ch¨£t
;

267 
·s_a°_node_t
 *
cur_node
;

269 
dïth
;

274 
·s_a°_node_t
 *
	`·s_a°_¸óã_node_ãrm_f‹_∑r£r
(

276 *
¨g
,

277 c⁄° *
±r
,

278 c⁄° 
ulöt
 
Àn
);

282 
·s_a°_node_t
 *
	`·s_a°_¸óã_node_phø£_li°
(

283 *
¨g
);

285 #ifde‡
UNIV_DEBUG


286 c⁄° *
	`·s_a°_node_ty≥_gë
(
·s_a°_ty≥_t
 
ty≥
);

	@fts0blex.h

1 #i‚de‡
·s0bHEADER_H


2 
	#·s0bHEADER_H
 1

	)

3 
	#·s0bIN_HEADER
 1

	)

40 
	~"univ.i
"

46 
	#YY_INT_ALIGNED
 

	)

50 
	#FLEX_SCANNER


	)

51 
	#YY_FLEX_MAJOR_VERSION
 2

	)

52 
	#YY_FLEX_MINOR_VERSION
 5

	)

53 
	#YY_FLEX_SUBMINOR_VERSION
 39

	)

54 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

55 
	#FLEX_BETA


	)

61 
	~<°dio.h
>

62 
	~<°rög.h
>

63 
	~<î∫o.h
>

64 
	~<°dlib.h
>

70 #i‚de‡
FLEXINT_H


71 
	#FLEXINT_H


	)

75 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

80 #i‚de‡
__STDC_LIMIT_MACROS


81 
	#__STDC_LIMIT_MACROS
 1

	)

84 
	~<öây≥s.h
>

85 
öt8_t
 
	tÊex_öt8_t
;

86 
uöt8_t
 
	tÊex_uöt8_t
;

87 
öt16_t
 
	tÊex_öt16_t
;

88 
uöt16_t
 
	tÊex_uöt16_t
;

89 
öt32_t
 
	tÊex_öt32_t
;

90 
uöt32_t
 
	tÊex_uöt32_t
;

92 sig√d 
	tÊex_öt8_t
;

93 
	tÊex_öt16_t
;

94 
	tÊex_öt32_t
;

95 
	tÊex_uöt8_t
;

96 
	tÊex_uöt16_t
;

97 
	tÊex_uöt32_t
;

100 #i‚de‡
INT8_MIN


101 
	#INT8_MIN
 (-128)

	)

103 #i‚de‡
INT16_MIN


104 
	#INT16_MIN
 (-32767-1)

	)

106 #i‚de‡
INT32_MIN


107 
	#INT32_MIN
 (-2147483647-1)

	)

109 #i‚de‡
INT8_MAX


110 
	#INT8_MAX
 (127)

	)

112 #i‚de‡
INT16_MAX


113 
	#INT16_MAX
 (32767)

	)

115 #i‚de‡
INT32_MAX


116 
	#INT32_MAX
 (2147483647)

	)

118 #i‚de‡
UINT8_MAX


119 
	#UINT8_MAX
 (255U)

	)

121 #i‚de‡
UINT16_MAX


122 
	#UINT16_MAX
 (65535U)

	)

124 #i‚de‡
UINT32_MAX


125 
	#UINT32_MAX
 (4294967295U)

	)

132 #ifde‡
__˝lu•lus


135 
	#YY_USE_CONST


	)

140 #i‡
deföed
 (
__STDC__
)

142 
	#YY_USE_CONST


	)

147 #ifde‡
YY_USE_CONST


148 
	#yyc⁄°
 c⁄°

	)

150 
	#yyc⁄°


	)

154 #i‚de‡
YY_TYPEDEF_YY_SCANNER_T


155 
	#YY_TYPEDEF_YY_SCANNER_T


	)

156 * 
	tyysˇn_t
;

161 
	#yyö
 
yyg
->
yyö_r


	)

162 
	#yyout
 
yyg
->
yyout_r


	)

163 
	#yyexåa
 
yyg
->
yyexåa_r


	)

164 
	#yyÀng
 
yyg
->
yyÀng_r


	)

165 
	#yyãxt
 
yyg
->
yyãxt_r


	)

166 
	#yylöío
 (
YY_CURRENT_BUFFER_LVALUE
->
yy_bs_löío
)

	)

167 
	#yycﬁumn
 (
YY_CURRENT_BUFFER_LVALUE
->
yy_bs_cﬁumn
)

	)

168 
	#yy_Êex_debug
 
yyg
->
yy_Êex_debug_r


	)

171 #i‚de‡
YY_BUF_SIZE


172 #ifde‡
__ü64__


177 
	#YY_BUF_SIZE
 32768

	)

179 
	#YY_BUF_SIZE
 16384

	)

183 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


184 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

185 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

188 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


189 
	#YY_TYPEDEF_YY_SIZE_T


	)

190 
size_t
 
	tyy_size_t
;

193 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


194 
	#YY_STRUCT_YY_BUFFER_STATE


	)

195 
	syy_buf„r_°©e


197 
FILE
 *
	myy_öput_fûe
;

199 *
	myy_ch_buf
;

200 *
	myy_buf_pos
;

205 
yy_size_t
 
	myy_buf_size
;

210 
yy_size_t
 
	myy_n_ch¨s
;

216 
	myy_is_our_buf„r
;

223 
	myy_is_öãø˘ive
;

229 
	myy_©_bﬁ
;

231 
	myy_bs_löío
;

232 
	myy_bs_cﬁumn
;

237 
	myy_fûl_buf„r
;

239 
	myy_buf„r_°©us
;

244 
·s0bª°¨t
 (
FILE
 *
öput_fûe
 ,
yysˇn_t
 
yysˇ¬î
 );

245 
·s0b_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 ,
yysˇn_t
 
yysˇ¬î
 );

246 
YY_BUFFER_STATE
 
·s0b_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 ,
yysˇn_t
 
yysˇ¬î
 );

247 
·s0b_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 ,
yysˇn_t
 
yysˇ¬î
 );

248 
·s0b_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 ,
yysˇn_t
 
yysˇ¬î
 );

249 
·s0bpush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 ,
yysˇn_t
 
yysˇ¬î
 );

250 
·s0bp›_buf„r_°©e
 (
yysˇn_t
 
yysˇ¬î
 );

252 
YY_BUFFER_STATE
 
·s0b_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 ,
yysˇn_t
 
yysˇ¬î
 );

253 
YY_BUFFER_STATE
 
·s0b_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 ,
yysˇn_t
 
yysˇ¬î
 );

254 
YY_BUFFER_STATE
 
·s0b_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 ,
yysˇn_t
 
yysˇ¬î
 );

256 *
·s0bÆloc
 (
yy_size_t
 ,
yysˇn_t
 
yysˇ¬î
 );

257 *
·s0bªÆloc
 (*,
yy_size_t
 ,
yysˇn_t
 
yysˇ¬î
 );

258 
·s0b‰ì
 (* ,
yysˇn_t
 
yysˇ¬î
 );

262 
	#·s0bwøp
(
yysˇ¬î
Ë1

	)

263 
	#YY_SKIP_YYWRAP


	)

265 
	#yyãxt_±r
 
yyãxt_r


	)

267 #ifde‡
YY_HEADER_EXPORT_START_CONDITIONS


268 
	#INITIAL
 0

	)

272 #i‚de‡
YY_NO_UNISTD_H


277 
	~<uni°d.h
>

280 #i‚de‡
YY_EXTRA_TYPE


281 
	#YY_EXTRA_TYPE
 *

	)

284 
·s0bÀx_öô
 (
yysˇn_t
* 
sˇ¬î
);

286 
·s0bÀx_öô_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
,
yysˇn_t
* 
sˇ¬î
);

291 
·s0bÀx_de°roy
 (
yysˇn_t
 
yysˇ¬î
 );

293 
·s0bgë_debug
 (
yysˇn_t
 
yysˇ¬î
 );

295 
·s0b£t_debug
 (
debug_Êag
 ,
yysˇn_t
 
yysˇ¬î
 );

297 
YY_EXTRA_TYPE
 
·s0bgë_exåa
 (
yysˇn_t
 
yysˇ¬î
 );

299 
·s0b£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 ,
yysˇn_t
 
yysˇ¬î
 );

301 
FILE
 *
·s0bgë_ö
 (
yysˇn_t
 
yysˇ¬î
 );

303 
·s0b£t_ö
 (
FILE
 * 
ö_°r
 ,
yysˇn_t
 
yysˇ¬î
 );

305 
FILE
 *
·s0bgë_out
 (
yysˇn_t
 
yysˇ¬î
 );

307 
·s0b£t_out
 (
FILE
 * 
out_°r
 ,
yysˇn_t
 
yysˇ¬î
 );

309 
yy_size_t
 
·s0bgë_Àng
 (
yysˇn_t
 
yysˇ¬î
 );

311 *
·s0bgë_ãxt
 (
yysˇn_t
 
yysˇ¬î
 );

313 
·s0bgë_löío
 (
yysˇn_t
 
yysˇ¬î
 );

315 
·s0b£t_löío
 (
löe_numbî
 ,
yysˇn_t
 
yysˇ¬î
 );

317 
·s0bgë_cﬁumn
 (
yysˇn_t
 
yysˇ¬î
 );

319 
·s0b£t_cﬁumn
 (
cﬁumn_no
 ,
yysˇn_t
 
yysˇ¬î
 );

325 #i‚de‡
YY_SKIP_YYWRAP


326 #ifde‡
__˝lu•lus


327 "C" 
·s0bwøp
 (
yysˇn_t
 
yysˇ¬î
 );

329 
·s0bwøp
 (
yysˇn_t
 
yysˇ¬î
 );

333 #i‚de‡
yyãxt_±r


334 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,,
yysˇn_t
 
yysˇ¬î
);

337 #ifde‡
YY_NEED_STRLEN


338 
yy_Êex_°æí
 (
yyc⁄°
 * ,
yysˇn_t
 
yysˇ¬î
);

341 #i‚de‡
YY_NO_INPUT


346 #i‚de‡
YY_READ_BUF_SIZE


347 #ifde‡
__ü64__


349 
	#YY_READ_BUF_SIZE
 16384

	)

351 
	#YY_READ_BUF_SIZE
 8192

	)

356 #i‚de‡
YY_START_STACK_INCR


357 
	#YY_START_STACK_INCR
 25

	)

363 #i‚de‡
YY_DECL


364 
	#YY_DECL_IS_OURS
 1

	)

366 
·s0bÀx
 (
yysˇn_t
 
yysˇ¬î
);

368 
	#YY_DECL
 
	`·s0bÀx
 (
yysˇn_t
 
yysˇ¬î
)

	)

373 #unde‡
YY_NEW_FILE


374 #unde‡
YY_FLUSH_BUFFER


375 #unde‡
yy_£t_bﬁ


376 #unde‡
yy_√w_buf„r


377 #unde‡
yy_£t_öãø˘ive


378 #unde‡
YY_DO_BEFORE_ACTION


380 #ifde‡
YY_DECL_IS_OURS


381 #unde‡
YY_DECL_IS_OURS


382 #unde‡
YY_DECL


389 #unde‡
·s0bIN_HEADER


	@fts0fts.h

33 #i‚de‡
·s0·s_h


34 
	#·s0·s_h


	)

36 
	~"ha_¥ŸŸy≥s.h
"

38 
	~"d©a0ty≥.h
"

39 
	~"d©a0ty≥s.h
"

40 
	~"di˘0ty≥s.h
"

41 
	~"·_globÆ.h
"

42 
	~"hash0hash.h
"

43 
	~"mem0mem.h
"

44 
	~"mysql/∂ugö_·∑r£r.h
"

45 
	~"que0ty≥s.h
"

46 
	~"ªm0ty≥s.h
"

47 
	~"row0ty≥s.h
"

48 
	~"åx0ty≥s.h
"

49 
	~"ut0rbt.h
"

50 
	~"ut0vec.h
"

51 
	~"ut0wqueue.h
"

54 
	#FTS_NULL_DOC_ID
 0

	)

57 
	#FTS_DOC_ID_COL_NAME
 "FTS_DOC_ID"

	)

60 
	#FTS_DOC_ID_INDEX_NAME
 "FTS_DOC_ID_INDEX"

	)

62 
	#FTS_DOC_ID_INDEX_NAME_LEN
 16

	)

65 
	#FTS_DOC_ID_LEN
 8

	)

69 
	#FTS_NUM_FIELDS_SORT
 3

	)

73 
	#MAX_DOC_ID_OPT_VAL
 1073741824

	)

76 
ib_uöt64_t
 
	tdoc_id_t
;

79 
	#FTS_DOC_ID_FORMAT
 
IB_ID_FMT


	)

82 
	#·s_wrôe_doc_id
(
d
, 
s
Ë
	`mach_wrôe_to_8
(d, s)

	)

85 
	#·s_ªad_doc_id
(
s
Ë
	`mach_ªad_‰om_8
(s)

	)

88 
	#·s_böd_doc_id
(
i
, 
n
, 
v
Ë
	`∑rs_öfo_böd_öt8_lôîÆ
(i,Ç, v)

	)

92 
	#FTS_NL
 0

	)

93 
	#FTS_BOOL
 1

	)

94 
	#FTS_SORTED
 2

	)

95 
	#FTS_EXPAND
 4

	)

96 
	#FTS_NO_RANKING
 8

	)

97 
	#FTS_PROXIMITY
 16

	)

98 
	#FTS_PHRASE
 32

	)

99 
	#FTS_OPT_RANKING
 64

	)

101 
	#FTS_INDEX_TABLE_IND_NAME
 "FTS_INDEX_TABLE_IND"

	)

102 
	#FTS_COMMON_TABLE_IND_NAME
 "FTS_COMMON_TABLE_IND"

	)

105 
	#FTS_NUM_AUX_INDEX
 6

	)

108 
	#FTS_NUM_AUX_COMMON
 5

	)

111 
	#FTS_OPTIMIZE_THRESHOLD
 10000000

	)

115 
	#FTS_DOC_ID_MAX_STEP
 65535

	)

118 
	#FTS_MAX_WORD_LEN
 
HA_FT_MAXBYTELEN


	)

121 
	#FTS_MAX_WORD_LEN_IN_CHAR
 
HA_FT_MAXCHARLEN


	)

124 
	#FTS_DELETED_TABLE_NUM_COLS
 1

	)

125 
	#FTS_CONFIG_TABLE_NUM_COLS
 2

	)

126 
	#FTS_AUX_INDEX_TABLE_NUM_COLS
 5

	)

129 
	#FTS_DELETED_TABLE_COL_LEN
 8

	)

131 
	#FTS_CONFIG_TABLE_KEY_COL_LEN
 50

	)

132 
	#FTS_CONFIG_TABLE_VALUE_COL_LEN
 200

	)

134 
	#FTS_INDEX_WORD_LEN
 
FTS_MAX_WORD_LEN


	)

135 
	#FTS_INDEX_FIRST_DOC_ID_LEN
 8

	)

136 
	#FTS_INDEX_LAST_DOC_ID_LEN
 8

	)

137 
	#FTS_INDEX_DOC_COUNT_LEN
 4

	)

139 
	#FTS_INDEX_ILIST_LEN
 0

	)

141 
	#FTS_MAX_NESTED_EXP
 31

	)

143 c⁄° *
FTS_PREFIX
;

144 c⁄° *
FTS_SUFFIX_BEING_DELETED
;

145 c⁄° *
FTS_SUFFIX_BEING_DELETED_CACHE
;

146 c⁄° *
FTS_SUFFIX_CONFIG
;

147 c⁄° *
FTS_SUFFIX_DELETED
;

148 c⁄° *
FTS_SUFFIX_DELETED_CACHE
;

150 c⁄° *
FTS_PREFIX_5_7
;

151 c⁄° *
FTS_SUFFIX_CONFIG_5_7
;

154 
ul⁄g
 
·s_s‹t_∂l_degªe
;

158 
ul⁄g
 
·s_num_w‹d_›timize
;

162 
boﬁ
 
·s_íabÀ_düg_¥öt
;

165 
	t·s_ønk_t
;

168 
	saux_«me_vec_t
 {

170 
	m°d
::
ve˘‹
<*> 
aux_«me
;

179 
	e·s_row_°©e
 {

180 
	mFTS_INSERT
 = 0,

181 
	mFTS_MODIFY
,

182 
	mFTS_DELETE
,

183 
	mFTS_NOTHING
,

184 
	mFTS_INVALID


188 
	e·s_èbÀ_ty≥_t
 {

189 
	mFTS_INDEX_TABLE
,

193 
	mFTS_COMMON_TABLE
,

196 
	mFTS_OBSOLETED_TABLE


200 
	g·s_doc_t
;

201 
	g·s_ˇche_t
;

202 
	g·s_tokí_t
;

203 
	g·s_doc_ids_t
;

204 
	g·s_ödex_ˇche_t
;

208 
	#FTS_INIT_FTS_TABLE
(
·s_èbÀ
, 
m_suffix
, 
m_ty≥
, 
m_èbÀ
) \

210 (
·s_èbÀ
)->
suffix
 = 
m_suffix
; \

211 (
·s_èbÀ
)->
ty≥
 = 
m_ty≥
; \

212 (
·s_èbÀ
)->
èbÀ_id
 = 
m_èbÀ
->
id
; \

213 (
·s_èbÀ
)->
∑ª¡
 = 
m_èbÀ
->
«me
.
m_«me
; \

214 (
·s_èbÀ
)->
èbÀ
 = 
m_èbÀ
; \

215 } 0);

	)

217 
	#FTS_INIT_INDEX_TABLE
(
·s_èbÀ
, 
m_suffix
, 
m_ty≥
, 
m_ödex
) \

219 (
·s_èbÀ
)->
suffix
 = 
m_suffix
; \

220 (
·s_èbÀ
)->
ty≥
 = 
m_ty≥
; \

221 (
·s_èbÀ
)->
èbÀ_id
 = 
m_ödex
->
èbÀ
->
id
; \

222 (
·s_èbÀ
)->
∑ª¡
 = 
m_ödex
->
èbÀ
->
«me
.
m_«me
; \

223 (
·s_èbÀ
)->
èbÀ
 = 
m_ödex
->table; \

224 (
·s_èbÀ
)->
ödex_id
 = 
m_ödex
->
id
; \

225 } 0);

	)

229 
	s·s_åx_t
 {

230 
åx_t
 *
	måx
;

232 
ib_ve˘‹_t
 *
	mßvïoöts
;

235 
ib_ve˘‹_t
 *
	mœ°_°mt
;

237 
mem_hóp_t
 *
	mhóp
;

241 
	s·s_ßvïoöt_t
 {

242 *
	m«me
;

246 
ib_rbt_t
 *
	mèbÀs
;

250 
	s·s_åx_èbÀ_t
 {

251 
di˘_èbÀ_t
 *
	mèbÀ
;

253 
·s_åx_t
 *
	m·s_åx
;

255 
ib_rbt_t
 *
	mrows
;

258 
·s_doc_ids_t
 *
	madded_doc_ids
;

262 
que_t
 *
	mdocs_added_gøph
;

266 
	s·s_åx_row_t
 {

267 
doc_id_t
 
	mdoc_id
;

269 
·s_row_°©e
 
	m°©e
;

271 
ib_ve˘‹_t
 *
	m·s_ödexes
;

277 
	s·s_doc_ids_t
 {

278 
ib_ve˘‹_t
 *
	mdoc_ids
;

281 
ib_Æloc_t
 *
	m£lf_hóp
;

291 
	tib_uc_t
;

294 
	s·s_°rög_t
 {

295 
byã
 *
	mf_°r
;

297 
ulöt
 
	mf_Àn
;

298 
ulöt
 
	mf_n_ch¨
;

302 
	s·s_ønkög_t
 {

303 
doc_id_t
 
	mdoc_id
;

305 
·s_ønk_t
 
	mønk
;

307 
byã
 *
	mw‹ds
;

310 
ulöt
 
	mw‹ds_Àn
;

314 
	s·s_ªsu…_t
 {

315 
ib_rbt_node_t
 *
	mcuºít
;

317 
ib_rbt_t
 *
	mønkögs_by_id
;

319 
ib_rbt_t
 *
	mønkögs_by_ønk
;

326 
	s·s_èbÀ_t
 {

327 c⁄° *
	m∑ª¡
;

331 
·s_èbÀ_ty≥_t
 
	mty≥
;

333 
èbÀ_id_t
 
	mèbÀ_id
;

335 
•a˚_ödex_t
 
	mödex_id
;

337 c⁄° *
	msuffix
;

340 c⁄° 
di˘_èbÀ_t
 *
	mèbÀ
;

341 
CHARSET_INFO
 *
	mch¨£t
;

345 
	e·s_°©us
 {

346 
	mBG_THREAD_STOP
 = 1,

351 
	mBG_THREAD_READY
 = 2,

354 
	mADD_THREAD_STARTED
 = 4,

357 
	mADDED_TABLE_SYNCED
 = 8,

361 
·s_°©us
 
	t·s_°©us_t
;

364 ˛as†
	c·s_t
 {

365 
	mpublic
:

369 
·s_t
(
di˘_èbÀ_t
 *
èbÀ
, 
mem_hóp_t
 *
hóp
);

372 ~
·s_t
();

375 
ib_muãx_t
 
	mbg_thªads_muãx
;

378 
ulöt
 
	mbg_thªads
;

382 
ulöt
 
	m·s_°©us
;

387 
ib_wqueue_t
 *
	madd_wq
;

391 
·s_ˇche_t
 *
	mˇche
;

394 
ulöt
 
	mdoc_cﬁ
;

397 
ib_ve˘‹_t
 *
	mödexes
;

400 
mem_hóp_t
 *
	m·s_hóp
;

403 
	g·s_°›w‹d_t
;

406 
	#STOPWORD_NOT_INIT
 0x1

	)

407 
	#STOPWORD_OFF
 0x2

	)

408 
	#STOPWORD_FROM_DEFAULT
 0x4

	)

409 
	#STOPWORD_USER_TABLE
 0x8

	)

411 c⁄° *
·s_deÁu…_°›w‹d
[];

414 
ul⁄g
 
·s_max_ˇche_size
;

417 
ul⁄g
 
·s_max_tŸÆ_ˇche_size
;

420 
ul⁄g
 
·s_ªsu…_ˇche_limô
;

423 
ul⁄g
 
·s_max_tokí_size
;

426 
ul⁄g
 
·s_mö_tokí_size
;

430 
boﬁ
 
·s_√ed_sync
;

434 *
·s_öã∫Æ_tbl_«me
;

436 
	#·s_que_gøph_‰ì
(
gøph
) \

438 
	`que_gøph_‰ì
(
gøph
); \

439 } 0)

	)

442 
·s_ˇche_t
 *
·s_ˇche_¸óã
(

443 
di˘_èbÀ_t
 *
èbÀ
);

447 
·s_ödex_ˇche_t
 *
·s_ˇche_ödex_ˇche_¸óã
(

448 
di˘_èbÀ_t
 *
èbÀ
,

449 
di˘_ödex_t
 *
ödex
);

454 
·s_ˇche_ödex_ˇche_ªmove
(
di˘_èbÀ_t
 *
èbÀ
, 
di˘_ödex_t
 *
ödex
);

459 
dbîr_t
 
·s_gë_√xt_doc_id
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

460 
doc_id_t
 *
doc_id
);

464 
·s_upd©e_√xt_doc_id
(

465 
åx_t
 *
åx
,

466 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

467 c⁄° *
èbÀ_«me
,

468 
doc_id_t
 
doc_id
);

476 
dbîr_t
 
·s_¸óã_doc_id
(
di˘_èbÀ_t
 *
èbÀ
, 
dtu∂e_t
 *
row
, 
mem_hóp_t
 *
hóp
);

480 
·s_doc_ids_t
 *
·s_doc_ids_¸óã
();

483 
·s_doc_ids_‰ì
(
·s_doc_ids_t
 *
doc_ids
);

491 
·s_åx_add_›
(
åx_t
 *
åx
, 
di˘_èbÀ_t
 *
èbÀ
, 
doc_id_t
 
doc_id
,

492 
·s_row_°©e
 
°©e
, 
ib_ve˘‹_t
 *
·s_ödexes
);

495 
·s_åx_‰ì
(
·s_åx_t
 *
·s_åx
);

500 
boﬁ
 
·s_check_comm⁄_èbÀs_exi°
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

521 
dbîr_t
 
	$·s_¸óã_comm⁄_èbÀs
(
åx_t
 *
åx
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

522 c⁄° *
«me
, 
boﬁ
 
skù_doc_id_ödex
)

523 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

540 
dbîr_t
 
	$·s_¸óã_ödex_èbÀs
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
)

541 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

549 
dbîr_t
 
	$·s_¸óã_ödex_èbÀs_low
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
,

550 c⁄° *
èbÀ_«me
, 
èbÀ_id_t
 
èbÀ_id
)

551 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

556 
	`·s_add_doc_id_cﬁumn
(
di˘_èbÀ_t
 *
èbÀ
, 
mem_hóp_t
 *
hóp
);

565 
dbîr_t
 
	`·s_dr›_èbÀs
(
åx_t
 *
åx
, 
di˘_èbÀ_t
 *
èbÀ
,

566 
aux_«me_vec_t
 *
aux_vec
);

572 
dbîr_t
 
	`·s_lock_Æl_aux_èbÀs
(
THD
 *
thd
, 
di˘_èbÀ_t
 *
èbÀ
);

578 
boﬁ
 
	`·s_dr›_dd_èbÀs
(c⁄° 
aux_«me_vec_t
 *
aux_vec
, boﬁ 
fûe_≥r_èbÀ
);

583 
	`·s_‰ì_aux_«mes
(
aux_«me_vec_t
 *
aux_vec
);

588 
dbîr_t
 
	$·s_commô
(
åx_t
 *
åx
)

589 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

600 
dbîr_t
 
	$·s_quîy
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, 
uöt
 
Êags
,

601 c⁄° 
byã
 *
quîy_°r
, 
ulöt
 
quîy_Àn
, 
·s_ªsu…_t
 **
ªsu…
,

602 
ul⁄gl⁄g
 
limô
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

606 
	`·s_ªåõve_ønkög
(

607 
·s_ªsu…_t
 *
ªsu…
,

608 
doc_id_t
 
doc_id
);

612 
	`·s_quîy_s‹t_ªsu…_⁄_ønk
(
·s_ªsu…_t
 *
ªsu…
);

616 
	`·s_quîy_‰ì_ªsu…
(
·s_ªsu…_t
 *
ªsu…
);

620 
doc_id_t
 
	`·s_gë_doc_id_‰om_row
(
di˘_èbÀ_t
 *
èbÀ
,

621 
dtu∂e_t
 *
row
);

630 
doc_id_t
 
	`·s_gë_doc_id_‰om_ªc
(
di˘_èbÀ_t
 *
èbÀ
, c⁄° 
ªc_t
 *
ªc
,

631 c⁄° 
di˘_ödex_t
 *
ödex
, 
mem_hóp_t
 *
hóp
);

645 
doc_id_t
 
	`·s_upd©e_doc_id
(
di˘_èbÀ_t
 *
èbÀ
, 
upd_fõld_t
 *
ufõld
,

646 
doc_id_t
 *
√xt_doc_id
);

649 
	`·s_°¨tup
();

655 
	`·s_°¨t_shutdown
(

656 
di˘_èbÀ_t
* 
èbÀ
,

658 
·s_t
* 
·s
);

664 
	`·s_shutdown
(

665 
di˘_èbÀ_t
* 
èbÀ
,

667 
·s_t
* 
·s
);

673 
·s_t
 *
	`·s_¸óã
(
di˘_èbÀ_t
 *
èbÀ
);

677 
	`·s_‰ì
(
di˘_èbÀ_t
 *
èbÀ
);

682 
dbîr_t
 
	`·s_›timize_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
);

685 
	`·s_›timize_öô
();

693 
dbîr_t
 
	`·s_dr›_ödex_èbÀs
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
,

694 
aux_«me_vec_t
 *
aux_vec
);

700 
dbîr_t
 
	`·s_em±y_comm⁄_èbÀs
(
åx_t
 *
åx
, 
di˘_èbÀ_t
 *
èbÀ
);

704 
	`·s_›timize_ªmove_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
);

707 
	`·s_›timize_shutdown
();

711 
	`·s_›timize_ªque°_sync_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
);

717 
	`·s_ßvïoöt_èke
(
åx_t
 *
åx
, 
·s_åx_t
 *
·s_åx
, c⁄° *
«me
);

720 
	`·s_ßvïoöt_œ°°mt_ª‰esh
(
åx_t
 *
åx
);

723 
	`·s_ßvïoöt_ªÀa£
(
åx_t
 *
åx
,

724 c⁄° *
«me
);

728 
	`·s_ˇche_˛ór
(
·s_ˇche_t
 *
ˇche
);

731 
	`·s_ˇche_öô
(
·s_ˇche_t
 *
ˇche
);

734 
	`·s_ßvïoöt_rﬁlback
(
åx_t
 *
åx
,

735 c⁄° *
«me
);

738 
	`·s_ßvïoöt_rﬁlback_œ°_°mt
(
åx_t
 *
åx
);

744 *
	`·s_gë_∑ª¡_èbÀ_«me
(c⁄° *
aux_èbÀ_«me
,

745 
ulöt
 
aux_èbÀ_Àn
);

754 
dbîr_t
 
	`·s_sync_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
, 
boﬁ
 
u∆ock_ˇche
, boﬁ 
waô
,

755 
boﬁ
 
has_di˘
);

758 
CHARSET_INFO
 *
	`·s_ödex_gë_ch¨£t
(
di˘_ödex_t
 *
ödex
);

762 
doc_id_t
 
	`·s_öô_doc_id
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

768 
	`önoba£_·s_ãxt_cmp
(c⁄° *
cs
, c⁄° *
p1
,

769 c⁄° *
p2
);

777 
size_t
 
	`önoba£_·s_ˇ£dn_°r
(
CHARSET_INFO
 *
cs
, *
§c
,

778 
size_t
 
§c_Àn
, *
d°
,

779 
size_t
 
d°_Àn
);

785 
	`önoba£_·s_ãxt_cmp_¥efix
(c⁄° *
cs
, c⁄° *
p1
,

786 c⁄° *
p2
);

789 
ulöt
 
	`önoba£_mysql_·s_gë_tokí
(

790 
CHARSET_INFO
 *
ch¨£t
,

791 c⁄° 
byã
 *
°¨t
,

792 c⁄° 
byã
 *
íd
,

794 
·s_°rög_t
 *
tokí
);

800 
boﬁ
 
	`önoba£_·s_dr›_dd_èbÀ
(c⁄° *
«me
, boﬁ 
fûe_≥r_èbÀ
);

804 
ulöt
 
	`·s_gë_tokí_size
(c⁄° 
CHARSET_INFO
 *
cs
,

805 c⁄° *
tokí
,

806 
ulöt
 
Àn
);

810 
	`·s_tokíize_documít_öã∫Æ
(

811 
MYSQL_FTPARSER_PARAM
 *
∑øm
,

812 *
doc
,

813 
Àn
);

817 
ulöt
 
	`·s_gë_rows_cou¡
(
·s_èbÀ_t
 *
·s_èbÀ
);

821 
doc_id_t
 
	`·s_gë_max_doc_id
(
di˘_èbÀ_t
 *
èbÀ
);

826 
CHARSET_INFO
 *
	`·s_vÆid_°›w‹d_èbÀ
(

827 c⁄° *
°›w‹d_èbÀ_«me
);

831 
iboﬁ
 
	`·s_lﬂd_°›w‹d
(

832 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

833 
åx_t
 *
åx
,

834 c⁄° *
globÆ_°›w‹d_èbÀ
,

836 c⁄° *
£ssi⁄_°›w‹d_èbÀ
,

838 
iboﬁ
 
°›w‹d_is_⁄
,

840 
iboﬁ
 
ªlﬂd
);

845 
dbîr_t
 
	`·s_èbÀ_„tch_doc_ids
(
åx_t
 *
åx
,

846 
·s_èbÀ_t
 *
·s_èbÀ
,

847 
·s_doc_ids_t
 *
doc_ids
);

854 
iboﬁ
 
	`·s_öô_ödex
(
di˘_èbÀ_t
 *
èbÀ
,

855 
iboﬁ
 
has_ˇche_lock
);

858 
	`·s_add_ödex
(
di˘_ödex_t
 *
ödex
,

859 
di˘_èbÀ_t
 *
èbÀ
);

867 
dbîr_t
 
	`·s_dr›_ödex
(
di˘_èbÀ_t
 *
èbÀ
, 
di˘_ödex_t
 *
ödex
, 
åx_t
 *
åx
,

868 
aux_«me_vec_t
 *
aux_vec
);

872 
dbîr_t
 
	`·s_ª«me_aux_èbÀs
(
di˘_èbÀ_t
 *
èbÀ
,

873 c⁄° *
√w_«me
,

874 
åx_t
 *
åx
,

875 
boﬁ
 
ª∂ay
);

881 
iboﬁ
 
	`·s_check_ˇched_ödex
(

882 
di˘_èbÀ_t
 *
èbÀ
);

894 
	`·s_add_doc_‰om_tu∂e
(
·s_åx_èbÀ_t
 *
·t
, 
doc_id_t
 
doc_id
,

895 c⁄° 
dtu∂e_t
 *
tu∂e
);

900 
·s_åx_t
 *
	`·s_åx_¸óã
(
åx_t
 *
åx
);

903 
	s·s_aux_èbÀ_t
 {

905 
èbÀ_id_t
 
id
;

908 
èbÀ_id_t
 
∑ª¡_id
;

911 
èbÀ_id_t
 
ödex_id
;

914 *
«me
;

917 
·s_èbÀ_ty≥_t
 
ty≥
;

925 
boﬁ
 
	`·s_is_aux_èbÀ_«me
(
·s_aux_èbÀ_t
 *
èbÀ
, c⁄° *
«me
, 
ulöt
 
Àn
);

930 
	`·s_‰ìze_aux_èbÀs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

936 
	`·s_dëach_aux_èbÀs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, 
boﬁ
 
di˘_locked
);

941 
boﬁ
 
	`·s_¸óã_comm⁄_dd_èbÀs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

947 
dbîr_t
 
	`·s_¸óã_ödex_dd_èbÀs
(
di˘_èbÀ_t
 *
èbÀ
);

955 
dbîr_t
 
	`·s_upgøde_aux_èbÀs
(
di˘_èbÀ_t
 *
èbÀ
);

964 
dbîr_t
 
	`·s_upgøde_ª«me
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, 
boﬁ
 
rﬁlback
);

	@fts0opt.h

32 #i‚de‡
INNODB_FTS0OPT_H


33 
	#INNODB_FTS0OPT_H


	)

37 
iboﬁ
 
·s_›timize_ödex_„tch_node
(

39 *
row
,

40 *
u£r_¨g
);

	@fts0pars.h

35 #i‚de‡
YYTOKENTYPE


36 
	#YYTOKENTYPE


	)

39 
	eyytokíty≥
 {

40 
	mFTS_OPER
 = 258,

41 
	mFTS_TEXT
 = 259,

42 
	mFTS_TERM
 = 260,

43 
	mFTS_NUMB
 = 261

49 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


50 
	uYYSTYPE


56 
	m›î
;

57 
·s_a°_°rög_t
* 
	mtokí
;

58 
·s_a°_node_t
* 
	mnode
;

64 } 
	tYYSTYPE
;

65 
	#YYSTYPE_IS_TRIVIAL
 1

	)

66 
	#yy°y≥
 
YYSTYPE


	)

67 
	#YYSTYPE_IS_DECLARED
 1

	)

	@fts0plugin.h

33 #i‚de‡
INNOBASE_FTS0PLUGIN_H


34 
	#INNOBASE_FTS0PLUGIN_H


	)

36 
	~"ha_¥ŸŸy≥s.h
"

38 
°_mysql_·∑r£r
 
·s_deÁu…_∑r£r
;

40 
	g·s_a°_°©e_t
;

42 
	#PARSER_INIT
(
∑r£r
, 
¨g
) \

43 i‡(
∑r£r
->
öô
) { \

44 
∑r£r
->
	`öô
(
¨g
); \

45 }

	)

46 
	#PARSER_DEINIT
(
∑r£r
, 
¨g
) \

47 i‡(
∑r£r
->
deöô
) { \

48 
∑r£r
->
	`deöô
(
¨g
); \

49 }

	)

53 
·s_∑r£_by_∑r£r
(
iboﬁ
 
mode
,

54 
uch¨
 *
quîy
,

55 
ulöt
 
Àn
,

56 
°_mysql_·∑r£r
 *
∑r£
,

57 
·s_a°_°©e_t
 *
°©e
);

	@fts0priv.h

33 #i‚de‡
INNOBASE_FTS0PRIV_H


34 
	#INNOBASE_FTS0PRIV_H


	)

36 
	~"di˘0di˘.h
"

37 
	~"·s0ty≥s.h
"

38 
	~"∑rs0∑rs.h
"

39 
	~"que0que.h
"

40 
	~"que0ty≥s.h
"

41 
	~"univ.i
"

45 
	e·s_èbÀ_°©e_íum
 {

50 
	mFTS_TABLE_STATE_RUNNING
 = 0,

52 
	mFTS_TABLE_STATE_OPTIMIZING
,

54 
	mFTS_TABLE_STATE_DELETED


58 
·s_èbÀ_°©e_íum
 
	t·s_èbÀ_°©e_t
;

61 
	#FTS_MAX_BACKGROUND_THREAD_WAIT
 10000

	)

64 
	#FTS_BACKGROUND_THREAD_WAIT_COUNT
 1000

	)

67 
	#FTS_MAX_CONFIG_NAME_LEN
 64

	)

70 
	#FTS_MAX_CONFIG_VALUE_LEN
 1024

	)

73 
	#FTS_ILIST_MAX_SIZE
 (64 * 1024)

	)

78 
	#FTS_OPTIMIZE_LIMIT_IN_SECS
 "›timize_checkpoöt_limô"

	)

81 
	#FTS_SYNCED_DOC_ID
 "syn˚d_doc_id"

	)

84 
	#FTS_LAST_OPTIMIZED_WORD
 "œ°_›timized_w‹d"

	)

88 
	#FTS_TOTAL_DELETED_COUNT
 "dñëed_doc_cou¡"

	)

91 
	#FTS_TOTAL_WORD_COUNT
 "tŸÆ_w‹d_cou¡"

	)

94 
	#FTS_OPTIMIZE_START_TIME
 "›timize_°¨t_time"

	)

97 
	#FTS_OPTIMIZE_END_TIME
 "›timize_íd_time"

	)

100 
	#FTS_STOPWORD_TABLE_NAME
 "°›w‹d_èbÀ_«me"

	)

103 
	#FTS_USE_STOPWORD
 "u£_°›w‹d"

	)

107 
	#FTS_TABLE_STATE
 "èbÀ_°©e"

	)

117 
	#FTS_AUX_MIN_TABLE_ID_LENGTH
 48

	)

120 
	#FTS_MAX_INT_LEN
 32

	)

124 
que_t
 *
	$·s_∑r£_sql
(
·s_èbÀ_t
 *
·s_èbÀ
,

125 
∑rs_öfo_t
 *
öfo
,

126 c⁄° *
sql
)

127 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

131 
dbîr_t
 
	$·s_evÆ_sql
(
åx_t
 *
åx
,

132 
que_t
 *
gøph
)

133 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

138 
	`·s_gë_èbÀ_«me
(

139 c⁄° 
·s_èbÀ_t
 *
·s_èbÀ
,

140 *
èbÀ_«me
);

147 
	`·s_gë_èbÀ_«me_5_7
(c⁄° 
·s_èbÀ_t
 *
·s_èbÀ
, *
èbÀ_«me
);

163 c⁄° *
	$·s_gë_£À˘_cﬁumns_°r
(

164 
di˘_ödex_t
 *
ödex
,

165 
∑rs_öfo_t
 *
öfo
,

166 
mem_hóp_t
 *
hóp
)

167 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

172 
	#FTS_FETCH_DOC_BY_ID_EQUAL
 1

	)

173 
	#FTS_FETCH_DOC_BY_ID_LARGE
 2

	)

178 
dbîr_t
 
	`·s_doc_„tch_by_doc_id
(

179 
·s_gë_doc_t
 *
gë_doc
,

180 
doc_id_t
 
doc_id
,

181 
di˘_ödex_t
 *
ödex_to_u£
,

183 
ulöt
 
›ti⁄
,

185 
·s_sql_ˇŒback
 
ˇŒback
,

187 *
¨g
);

192 
iboﬁ
 
	`·s_quîy_ex∑nsi⁄_„tch_doc
(*
row
,

193 *
u£r_¨g
);

198 
dbîr_t
 
	$·s_wrôe_node
(
åx_t
 *
åx
,

199 
que_t
 **
gøph
,

200 
·s_èbÀ_t
 *
·s_èbÀ
,

201 
·s_°rög_t
 *
w‹d
,

202 
·s_node_t
 *
node
)

203 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

215 
boﬁ
 
	`·s_check_tokí
(c⁄° 
·s_°rög_t
 *
tokí
, c⁄° 
ib_rbt_t
 *
°›w‹ds
,

216 
boﬁ
 
is_ngøm
, c⁄° 
CHARSET_INFO
 *
cs
);

219 
	`·s_doc_öô
(
·s_doc_t
 *
doc
);

224 
	$·s_b£¨ch
(
·s_upd©e_t
 *
¨øy
,

225 
lowî
,

226 
uµî
,

227 
doc_id_t
 
doc_id
)

228 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

230 
	`·s_doc_‰ì
(
·s_doc_t
 *
doc
);

233 
	`·s_w‹d_‰ì
(
·s_w‹d_t
 *
w‹d
);

237 
dbîr_t
 
	`·s_ödex_„tch_nodes
(

238 
åx_t
 *
åx
,

239 
que_t
 **
gøph
,

240 
·s_èbÀ_t
 *
·s_èbÀ
,

241 c⁄° 
·s_°rög_t
 *
w‹d
,

242 
·s_„tch_t
 *
„tch
);

249 
UNIV_INLINE


250 
	`·s_åx_èbÀ_cmp
(c⁄° *
v1
, c⁄° *
v2
);

256 
UNIV_INLINE


257 
	`·s_åx_èbÀ_id_cmp
(c⁄° *
p1
, c⁄° *
p2
);

261 
dbîr_t
 
	`·s_sql_commô
(
åx_t
 *
åx
);

265 
dbîr_t
 
	`·s_sql_rﬁlback
(
åx_t
 *
åx
);

270 
dbîr_t
 
	`·s_c⁄fig_gë_vÆue
(

271 
åx_t
 *
åx
,

272 
·s_èbÀ_t
 *
·s_èbÀ
,

273 c⁄° *
«me
,

275 
·s_°rög_t
 *
vÆue
);

281 
dbîr_t
 
	$·s_c⁄fig_gë_ödex_vÆue
(
åx_t
 *
åx
,

282 
di˘_ödex_t
 *
ödex
,

283 c⁄° *
∑øm
,

285 
·s_°rög_t
 *
vÆue
)

287 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

291 
dbîr_t
 
	`·s_c⁄fig_£t_vÆue
(

292 
åx_t
 *
åx
,

293 
·s_èbÀ_t
 *
·s_èbÀ
,

294 c⁄° *
«me
,

296 c⁄° 
·s_°rög_t
 *
vÆue
);

300 
dbîr_t
 
	$·s_c⁄fig_£t_ulöt
(

301 
åx_t
 *
åx
,

302 
·s_èbÀ_t
 *
·s_èbÀ
,

303 c⁄° *
«me
,

304 
ulöt
 
öt_vÆue
)

305 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

309 
dbîr_t
 
	$·s_c⁄fig_£t_ödex_vÆue
(
åx_t
 *
åx
,

310 
di˘_ödex_t
 *
ödex
,

311 c⁄° *
∑øm
,

313 
·s_°rög_t
 *
vÆue
)

315 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

317 #ifde‡
FTS_OPTIMIZE_DEBUG


320 
dbîr_t
 
	$·s_c⁄fig_gë_ödex_ulöt
(
åx_t
 *
åx
,

321 
di˘_ödex_t
 *
ödex
,

322 c⁄° *
«me
,

323 
ulöt
 *
öt_vÆue
)

324 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

328 
dbîr_t
 
	$·s_c⁄fig_£t_ödex_ulöt
(
åx_t
 *
åx
,

329 
di˘_ödex_t
 *
ödex
,

330 c⁄° *
«me
,

331 
ulöt
 
öt_vÆue
)

332 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

337 
dbîr_t
 
	`·s_c⁄fig_gë_ulöt
(

338 
åx_t
 *
åx
,

339 
·s_èbÀ_t
 *
·s_èbÀ
,

340 c⁄° *
«me
,

341 
ulöt
 *
öt_vÆue
);

345 c⁄° 
ib_ve˘‹_t
 *
	$·s_ˇche_föd_w‹d
(

346 c⁄° 
·s_ödex_ˇche_t
 *
ödex_ˇche
,

347 c⁄° 
·s_°rög_t
 *
ãxt
)

348 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

351 
	`·s_ˇche_≠≥nd_dñëed_doc_ids
(

352 c⁄° 
·s_ˇche_t
 *
ˇche
,

353 
ib_ve˘‹_t
 *
ve˘‹
);

358 
iboﬁ
 
	`·s_waô_f‹_background_thªad_to_°¨t
(

359 
di˘_èbÀ_t
 *
èbÀ
,

361 
ulöt
 
max_waô
);

366 
·s_ödex_ˇche_t
 *
	$·s_föd_ödex_ˇche
(

367 c⁄° 
·s_ˇche_t
 *
ˇche
,

368 c⁄° 
di˘_ödex_t
 *
ödex
)

369 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

376 
UNIV_INLINE


377 
	`·s_wrôe_obje˘_id
(
ib_id_t
 
id
, *
°r
);

381 
UNIV_INLINE


382 
iboﬁ
 
	$·s_ªad_obje˘_id
(
ib_id_t
 *
id
,

383 c⁄° *
°r
)

384 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

388 
	$·s_gë_èbÀ_id
(

389 c⁄° 
·s_èbÀ_t
 *
·s_èbÀ
,

390 *
èbÀ_id
)

393 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

396 
	`·s_›timize_add_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
);

400 *
	$·s_gë_èbÀ_«me_¥efix
(

401 c⁄° 
·s_èbÀ_t
 *
·s_èbÀ
)

402 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

405 
	`·s_ˇche_node_add_posôi⁄s
(

406 
·s_ˇche_t
 *
ˇche
,

407 
·s_node_t
 *
node
,

408 
doc_id_t
 
doc_id
,

409 
ib_ve˘‹_t
 *
posôi⁄s
);

413 *
	$·s_c⁄fig_¸óã_ödex_∑øm_«me
(

414 c⁄° *
∑øm
,

415 c⁄° 
di˘_ödex_t
 *
ödex
)

416 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

418 
	~"·s0¥iv.ic
"

	@fts0priv.ic

38 
UNIV_INLINE


39 
	$·s_wrôe_obje˘_id
(
ib_id_t
 
id
, *
°r
) {

40  (
	`•rötf
(
°r
, 
UINT64PFx
, 
id
));

41 
	}
}

45 
UNIV_INLINE


46 
iboﬁ
 
	$·s_ªad_obje˘_id
(
ib_id_t
 *
id
,

47 c⁄° *
°r
)

52  (
	`ssˇnf
(
°r
, 
UINT64PFx
, 
id
) == 1);

53 
	}
}

57 
UNIV_INLINE


58 
	$·s_åx_èbÀ_cmp
(c⁄° *
p1
,

59 c⁄° *
p2
)

61 c⁄° 
di˘_èbÀ_t
 *
èbÀ1
 =

62 (*
°©ic_ˇ°
<c⁄° 
·s_åx_èbÀ_t
 *c⁄° *>(
p1
))->
èbÀ
;

64 c⁄° 
di˘_èbÀ_t
 *
èbÀ2
 =

65 (*
°©ic_ˇ°
<c⁄° 
·s_åx_èbÀ_t
 *c⁄° *>(
p2
))->
èbÀ
;

67  ((
èbÀ1
->
id
 > 
èbÀ2
->id) ? 1 : (table1->id ==Åable2->id) ? 0 : -1);

68 
	}
}

72 
UNIV_INLINE


73 
	$·s_åx_èbÀ_id_cmp
(c⁄° *
p1
,

74 c⁄° *
p2
)

76 c⁄° 
uötmax_t
 *
èbÀ_id
 = 
°©ic_ˇ°
<c⁄° uötmax_à*>(
p1
);

77 c⁄° 
di˘_èbÀ_t
 *
èbÀ2
 =

78 (*
°©ic_ˇ°
<c⁄° 
·s_åx_èbÀ_t
 *c⁄° *>(
p2
))->
èbÀ
;

80  ((*
èbÀ_id
 > 
èbÀ2
->
id
) ? 1 : (*table_id ==Åable2->id) ? 0 : -1);

81 
	}
}

	@fts0tlex.h

1 #i‚de‡
·s0tHEADER_H


2 
	#·s0tHEADER_H
 1

	)

3 
	#·s0tIN_HEADER
 1

	)

39 
	~"univ.i
"

45 
	#YY_INT_ALIGNED
 

	)

49 
	#FLEX_SCANNER


	)

50 
	#YY_FLEX_MAJOR_VERSION
 2

	)

51 
	#YY_FLEX_MINOR_VERSION
 5

	)

52 
	#YY_FLEX_SUBMINOR_VERSION
 39

	)

53 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

54 
	#FLEX_BETA


	)

60 
	~<°dio.h
>

61 
	~<°rög.h
>

62 
	~<î∫o.h
>

63 
	~<°dlib.h
>

69 #i‚de‡
FLEXINT_H


70 
	#FLEXINT_H


	)

74 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

79 #i‚de‡
__STDC_LIMIT_MACROS


80 
	#__STDC_LIMIT_MACROS
 1

	)

83 
	~<öây≥s.h
>

84 
öt8_t
 
	tÊex_öt8_t
;

85 
uöt8_t
 
	tÊex_uöt8_t
;

86 
öt16_t
 
	tÊex_öt16_t
;

87 
uöt16_t
 
	tÊex_uöt16_t
;

88 
öt32_t
 
	tÊex_öt32_t
;

89 
uöt32_t
 
	tÊex_uöt32_t
;

91 sig√d 
	tÊex_öt8_t
;

92 
	tÊex_öt16_t
;

93 
	tÊex_öt32_t
;

94 
	tÊex_uöt8_t
;

95 
	tÊex_uöt16_t
;

96 
	tÊex_uöt32_t
;

99 #i‚de‡
INT8_MIN


100 
	#INT8_MIN
 (-128)

	)

102 #i‚de‡
INT16_MIN


103 
	#INT16_MIN
 (-32767-1)

	)

105 #i‚de‡
INT32_MIN


106 
	#INT32_MIN
 (-2147483647-1)

	)

108 #i‚de‡
INT8_MAX


109 
	#INT8_MAX
 (127)

	)

111 #i‚de‡
INT16_MAX


112 
	#INT16_MAX
 (32767)

	)

114 #i‚de‡
INT32_MAX


115 
	#INT32_MAX
 (2147483647)

	)

117 #i‚de‡
UINT8_MAX


118 
	#UINT8_MAX
 (255U)

	)

120 #i‚de‡
UINT16_MAX


121 
	#UINT16_MAX
 (65535U)

	)

123 #i‚de‡
UINT32_MAX


124 
	#UINT32_MAX
 (4294967295U)

	)

131 #ifde‡
__˝lu•lus


134 
	#YY_USE_CONST


	)

139 #i‡
deföed
 (
__STDC__
)

141 
	#YY_USE_CONST


	)

146 #ifde‡
YY_USE_CONST


147 
	#yyc⁄°
 c⁄°

	)

149 
	#yyc⁄°


	)

153 #i‚de‡
YY_TYPEDEF_YY_SCANNER_T


154 
	#YY_TYPEDEF_YY_SCANNER_T


	)

155 * 
	tyysˇn_t
;

160 
	#yyö
 
yyg
->
yyö_r


	)

161 
	#yyout
 
yyg
->
yyout_r


	)

162 
	#yyexåa
 
yyg
->
yyexåa_r


	)

163 
	#yyÀng
 
yyg
->
yyÀng_r


	)

164 
	#yyãxt
 
yyg
->
yyãxt_r


	)

165 
	#yylöío
 (
YY_CURRENT_BUFFER_LVALUE
->
yy_bs_löío
)

	)

166 
	#yycﬁumn
 (
YY_CURRENT_BUFFER_LVALUE
->
yy_bs_cﬁumn
)

	)

167 
	#yy_Êex_debug
 
yyg
->
yy_Êex_debug_r


	)

170 #i‚de‡
YY_BUF_SIZE


171 #ifde‡
__ü64__


176 
	#YY_BUF_SIZE
 32768

	)

178 
	#YY_BUF_SIZE
 16384

	)

182 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


183 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

184 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

187 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


188 
	#YY_TYPEDEF_YY_SIZE_T


	)

189 
size_t
 
	tyy_size_t
;

192 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


193 
	#YY_STRUCT_YY_BUFFER_STATE


	)

194 
	syy_buf„r_°©e


196 
FILE
 *
	myy_öput_fûe
;

198 *
	myy_ch_buf
;

199 *
	myy_buf_pos
;

204 
yy_size_t
 
	myy_buf_size
;

209 
yy_size_t
 
	myy_n_ch¨s
;

215 
	myy_is_our_buf„r
;

222 
	myy_is_öãø˘ive
;

228 
	myy_©_bﬁ
;

230 
	myy_bs_löío
;

231 
	myy_bs_cﬁumn
;

236 
	myy_fûl_buf„r
;

238 
	myy_buf„r_°©us
;

243 
·s0åe°¨t
 (
FILE
 *
öput_fûe
 ,
yysˇn_t
 
yysˇ¬î
 );

244 
·s0t_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 ,
yysˇn_t
 
yysˇ¬î
 );

245 
YY_BUFFER_STATE
 
·s0t_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 ,
yysˇn_t
 
yysˇ¬î
 );

246 
·s0t_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 ,
yysˇn_t
 
yysˇ¬î
 );

247 
·s0t_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 ,
yysˇn_t
 
yysˇ¬î
 );

248 
·s0çush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 ,
yysˇn_t
 
yysˇ¬î
 );

249 
·s0ç›_buf„r_°©e
 (
yysˇn_t
 
yysˇ¬î
 );

251 
YY_BUFFER_STATE
 
·s0t_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 ,
yysˇn_t
 
yysˇ¬î
 );

252 
YY_BUFFER_STATE
 
·s0t_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 ,
yysˇn_t
 
yysˇ¬î
 );

253 
YY_BUFFER_STATE
 
·s0t_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 ,
yysˇn_t
 
yysˇ¬î
 );

255 *
·s0èŒoc
 (
yy_size_t
 ,
yysˇn_t
 
yysˇ¬î
 );

256 *
·s0åóŒoc
 (*,
yy_size_t
 ,
yysˇn_t
 
yysˇ¬î
 );

257 
·s0t‰ì
 (* ,
yysˇn_t
 
yysˇ¬î
 );

261 
	#·s0twøp
(
yysˇ¬î
Ë1

	)

262 
	#YY_SKIP_YYWRAP


	)

264 
	#yyãxt_±r
 
yyãxt_r


	)

266 #ifde‡
YY_HEADER_EXPORT_START_CONDITIONS


267 
	#INITIAL
 0

	)

271 #i‚de‡
YY_NO_UNISTD_H


276 
	~<uni°d.h
>

279 #i‚de‡
YY_EXTRA_TYPE


280 
	#YY_EXTRA_TYPE
 *

	)

283 
·s0éex_öô
 (
yysˇn_t
* 
sˇ¬î
);

285 
·s0éex_öô_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
,
yysˇn_t
* 
sˇ¬î
);

290 
·s0éex_de°roy
 (
yysˇn_t
 
yysˇ¬î
 );

292 
·s0tgë_debug
 (
yysˇn_t
 
yysˇ¬î
 );

294 
·s0t£t_debug
 (
debug_Êag
 ,
yysˇn_t
 
yysˇ¬î
 );

296 
YY_EXTRA_TYPE
 
·s0tgë_exåa
 (
yysˇn_t
 
yysˇ¬î
 );

298 
·s0t£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 ,
yysˇn_t
 
yysˇ¬î
 );

300 
FILE
 *
·s0tgë_ö
 (
yysˇn_t
 
yysˇ¬î
 );

302 
·s0t£t_ö
 (
FILE
 * 
ö_°r
 ,
yysˇn_t
 
yysˇ¬î
 );

304 
FILE
 *
·s0tgë_out
 (
yysˇn_t
 
yysˇ¬î
 );

306 
·s0t£t_out
 (
FILE
 * 
out_°r
 ,
yysˇn_t
 
yysˇ¬î
 );

308 
yy_size_t
 
·s0tgë_Àng
 (
yysˇn_t
 
yysˇ¬î
 );

310 *
·s0tgë_ãxt
 (
yysˇn_t
 
yysˇ¬î
 );

312 
·s0tgë_löío
 (
yysˇn_t
 
yysˇ¬î
 );

314 
·s0t£t_löío
 (
löe_numbî
 ,
yysˇn_t
 
yysˇ¬î
 );

316 
·s0tgë_cﬁumn
 (
yysˇn_t
 
yysˇ¬î
 );

318 
·s0t£t_cﬁumn
 (
cﬁumn_no
 ,
yysˇn_t
 
yysˇ¬î
 );

324 #i‚de‡
YY_SKIP_YYWRAP


325 #ifde‡
__˝lu•lus


326 "C" 
·s0twøp
 (
yysˇn_t
 
yysˇ¬î
 );

328 
·s0twøp
 (
yysˇn_t
 
yysˇ¬î
 );

332 #i‚de‡
yyãxt_±r


333 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,,
yysˇn_t
 
yysˇ¬î
);

336 #ifde‡
YY_NEED_STRLEN


337 
yy_Êex_°æí
 (
yyc⁄°
 * ,
yysˇn_t
 
yysˇ¬î
);

340 #i‚de‡
YY_NO_INPUT


345 #i‚de‡
YY_READ_BUF_SIZE


346 #ifde‡
__ü64__


348 
	#YY_READ_BUF_SIZE
 16384

	)

350 
	#YY_READ_BUF_SIZE
 8192

	)

355 #i‚de‡
YY_START_STACK_INCR


356 
	#YY_START_STACK_INCR
 25

	)

362 #i‚de‡
YY_DECL


363 
	#YY_DECL_IS_OURS
 1

	)

365 
·s0éex
 (
yysˇn_t
 
yysˇ¬î
);

367 
	#YY_DECL
 
	`·s0éex
 (
yysˇn_t
 
yysˇ¬î
)

	)

372 #unde‡
YY_NEW_FILE


373 #unde‡
YY_FLUSH_BUFFER


374 #unde‡
yy_£t_bﬁ


375 #unde‡
yy_√w_buf„r


376 #unde‡
yy_£t_öãø˘ive


377 #unde‡
YY_DO_BEFORE_ACTION


379 #ifde‡
YY_DECL_IS_OURS


380 #unde‡
YY_DECL_IS_OURS


381 #unde‡
YY_DECL


388 #unde‡
·s0tIN_HEADER


	@fts0tokenize.h

33 
	~"·_globÆ.h
"

34 
	~"m_˘y≥.h
"

35 
	~"mysql/∂ugö_·∑r£r.h
"

39 
	#åue_w‹d_ch¨
(
c
, 
ch
Ë((cË& (
_MY_U
 | 
_MY_L
 | 
_MY_NMR
Ë|| (chË='_')

	)

42 
	#misc_w‹d_ch¨
(
X
Ë0

	)

45 c⁄° *
	g·s_boﬁón_sy¡ax
 = 
DEFAULT_FTB_SYNTAX
;

47 
	#FTB_YES
 (
·s_boﬁón_sy¡ax
[0])

	)

48 
	#FTB_EGAL
 (
·s_boﬁón_sy¡ax
[1])

	)

49 
	#FTB_NO
 (
·s_boﬁón_sy¡ax
[2])

	)

50 
	#FTB_INC
 (
·s_boﬁón_sy¡ax
[3])

	)

51 
	#FTB_DEC
 (
·s_boﬁón_sy¡ax
[4])

	)

52 
	#FTB_LBR
 (
·s_boﬁón_sy¡ax
[5])

	)

53 
	#FTB_RBR
 (
·s_boﬁón_sy¡ax
[6])

	)

54 
	#FTB_NEG
 (
·s_boﬁón_sy¡ax
[7])

	)

55 
	#FTB_TRUNC
 (
·s_boﬁón_sy¡ax
[8])

	)

56 
	#FTB_LQUOT
 (
·s_boﬁón_sy¡ax
[10])

	)

57 
	#FTB_RQUOT
 (
·s_boﬁón_sy¡ax
[11])

	)

60 
	sFT_WORD
 {

61 
uch¨
 *
	mpos
;

62 
uöt
 
	mÀn
;

63 
	mweight
;

78 
ölöe
 
uch¨
 
	$·s_gë_w‹d
(c⁄° 
CHARSET_INFO
 *
cs
, 
uch¨
 **
°¨t
, uch¨ *
íd
,

79 
FT_WORD
 *
w‹d
, 
MYSQL_FTPARSER_BOOLEAN_INFO
 *
öfo
) {

80 
uch¨
 *
doc
 = *
°¨t
;

81 
˘y≥
;

82 
uöt
 
mwc
;

83 
uöt
 
Àngth
;

84 
mbl
;

86 
öfo
->
ye¢o
 = (
FTB_YES
 =' 'Ë? 1 : (öfo->
quŸ
 !
nuŒ±r
);

87 
öfo
->
weight_adju°
 = info->
wasign
 = 0;

88 
öfo
->
ty≥
 = 
FT_TOKEN_EOF
;

90 
doc
 < 
íd
) {

91 ; 
doc
 < 
íd
; do¯+(
mbl
 > 0 ? mbl : (mbl < 0 ? -mbl : 1))) {

92 
mbl
 = 
cs
->
c£t
->
	`˘y≥
(cs, &
˘y≥
, 
doc
, 
íd
);

94 i‡(
	`åue_w‹d_ch¨
(
˘y≥
, *
doc
)) {

98 i‡(*
doc
 =
FTB_RQUOT
 && 
öfo
->
quŸ
) {

99 *
°¨t
 = 
doc
 + 1;

100 
öfo
->
ty≥
 = 
FT_TOKEN_RIGHT_PAREN
;

102  (
öfo
->
ty≥
);

105 i‡(!
öfo
->
quŸ
) {

106 i‡(*
doc
 =
FTB_LBR
 || *do¯=
FTB_RBR
 || *do¯=
FTB_LQUOT
) {

108 *
°¨t
 = 
doc
 + 1;

109 i‡(*
doc
 =
FTB_LQUOT
) {

110 
öfo
->
quŸ
 = (*)1;

113 
öfo
->
ty≥
 =

114 (*
doc
 =
FTB_RBR
 ? 
FT_TOKEN_RIGHT_PAREN
 : 
FT_TOKEN_LEFT_PAREN
);

116  (
öfo
->
ty≥
);

119 i‡(
öfo
->
¥ev
 == ' ') {

120 i‡(*
doc
 =
FTB_YES
) {

121 
öfo
->
ye¢o
 = +1;

123 } i‡(*
doc
 =
FTB_EGAL
) {

124 
öfo
->
ye¢o
 = 0;

126 } i‡(*
doc
 =
FTB_NO
) {

127 
öfo
->
ye¢o
 = -1;

129 } i‡(*
doc
 =
FTB_INC
) {

130 
öfo
->
weight_adju°
++;

132 } i‡(*
doc
 =
FTB_DEC
) {

133 
öfo
->
weight_adju°
--;

135 } i‡(*
doc
 =
FTB_NEG
) {

136 
öfo
->
wasign
 = !info->wasign;

142 
öfo
->
¥ev
 = *
doc
;

143 
öfo
->
ye¢o
 = (
FTB_YES
 =' 'Ë? 1 : (öfo->
quŸ
 !
nuŒ±r
);

144 
öfo
->
weight_adju°
 = info->
wasign
 = 0;

147 
mwc
 = 
Àngth
 = 0;

148 
w‹d
->
pos
 = 
doc
; do¯< 
íd
;

149 
Àngth
++, 
doc
 +(
mbl
 > 0 ? mbl : (mbl < 0 ? -mbl : 1))) {

150 
mbl
 = 
cs
->
c£t
->
	`˘y≥
(cs, &
˘y≥
, 
doc
, 
íd
);

152 i‡(
	`åue_w‹d_ch¨
(
˘y≥
, *
doc
)) {

153 
mwc
 = 0;

154 } i‡(!
	`misc_w‹d_ch¨
(*
doc
Ë|| 
mwc
) {

157 
mwc
++;

162 
öfo
->
¥ev
 = 'A';

163 
w‹d
->
Àn
 = (
uöt
)(
doc
 - w‹d->
pos
Ë- 
mwc
;

165 i‡((
öfo
->
åunc
 = (
doc
 < 
íd
 && *do¯=
FTB_TRUNC
))) {

166 
doc
++;

170 *
°¨t
 = 
doc
;

171 
öfo
->
ty≥
 = 
FT_TOKEN_WORD
;

173  (
öfo
->
ty≥
);

176 i‡(
öfo
->
quŸ
) {

177 *
°¨t
 = 
doc
;

178 
öfo
->
ty≥
 = 
FT_TOKEN_RIGHT_PAREN
;

181  (
öfo
->
ty≥
);

182 
	}
}

	@fts0types.h

33 #i‚de‡
INNOBASE_FTS0TYPES_H


34 
	#INNOBASE_FTS0TYPES_H


	)

36 
	~"·s0·s.h
"

37 
	~"fut0fut.h
"

38 
	~"∑rs0∑rs.h
"

39 
	~"que0ty≥s.h
"

40 
	~"univ.i
"

41 
	~"ut0byã.h
"

42 
	~"ut0rbt.h
"

45 
	g·s_que_t
;

46 
	g·s_node_t
;

49 
∑rs_u£r_func_cb_t
 
	t·s_sql_ˇŒback
;

50 (*
	t·s_fûãr
)(*, 
	t·s_node_t
 *, *, 
	tulöt
 
	tÀn
);

53 
	s·s_doc_°©s_t
 {

54 
doc_id_t
 
doc_id
;

55 
ulöt
 
w‹d_cou¡
;

60 
	s·s_gë_doc_t
 {

61 
·s_ödex_ˇche_t
 *
ödex_ˇche
;

64 
que_t
 *
gë_documít_gøph
;

65 
·s_ˇche_t
 *
ˇche
;

70 
	s·s_ödex_ˇche_t
 {

71 
di˘_ödex_t
 *
ödex
;

73 
ib_rbt_t
 *
w‹ds
;

76 
ib_ve˘‹_t
 *
doc_°©s
;

83 
que_t
 **
ös_gøph
;

85 
que_t
 **
£l_gøph
;

86 
CHARSET_INFO
 *
ch¨£t
;

92 
	s·s_upd©e_t
 {

93 
doc_id_t
 
doc_id
;

95 
ib_ve˘‹_t
 *
·s_ödexes
;

104 
	s·s_°›w‹d_t
 {

105 
ulöt
 
°©us
;

106 
ib_Æloc_t
 *
hóp
;

107 
ib_rbt_t
 *
ˇched_°›w‹d
;

108 
CHARSET_INFO
 *
ch¨£t
;

113 
	s·s_sync_t
 {

114 
åx_t
 *
åx
;

116 
di˘_èbÀ_t
 *
èbÀ
;

117 
ulöt
 
max_ˇche_size
;

118 
iboﬁ
 
ˇche_fuŒ
;

120 
ulöt
 
lowî_ödex
;

123 
ulöt
 
uµî_ödex
;

125 
iboﬁ
 
öãºu±ed
;

126 
doc_id_t
 
mö_doc_id
;

129 
doc_id_t
 
max_doc_id
;

132 
ib_time_m⁄Ÿ⁄ic_t
 
°¨t_time
;

134 
boﬁ
 
ö_¥ogªss
;

135 
boﬁ
 
u∆ock_ˇche
;

137 
os_evít_t
 
evít
;

143 
	s·s_ˇche_t
 {

144 #i‚de‡
UNIV_HOTBACKUP


145 
rw_lock_t
 
lock
;

149 
rw_lock_t
 
öô_lock
;

154 
ib_muãx_t
 
›timize_lock
;

156 
ib_muãx_t
 
dñëed_lock
;

158 
ib_muãx_t
 
doc_id_lock
;

160 
ib_ve˘‹_t
 *
dñëed_doc_ids
;

163 
ib_ve˘‹_t
 *
ödexes
;

168 
ib_ve˘‹_t
 *
gë_docs
;

172 
ulöt
 
tŸÆ_size
;

175 
·s_sync_t
 *
sync
;

177 
ib_Æloc_t
 *
sync_hóp
;

182 
ib_Æloc_t
 *
£lf_hóp
;

188 
doc_id_t
 
√xt_doc_id
;

190 
doc_id_t
 
syn˚d_doc_id
;

192 
doc_id_t
 
fú°_doc_id
;

195 
ulöt
 
dñëed
;

199 
ulöt
 
added
;

203 
·s_°›w‹d_t
 
°›w‹d_öfo
;

204 
mem_hóp_t
 *
ˇche_hóp
;

208 
	s·s_node_t
 {

209 
doc_id_t
 
fú°_doc_id
;

211 
doc_id_t
 
œ°_doc_id
;

213 
byã
 *
ûi°
;

221 
ulöt
 
doc_cou¡
;

223 
ulöt
 
ûi°_size
;

225 
ulöt
 
ûi°_size_Æloc
;

228 
boﬁ
 
syn˚d
;

232 
	s·s_tokíizî_w‹d_t
 {

233 
·s_°rög_t
 
ãxt
;

235 
ib_ve˘‹_t
 *
nodes
;

240 
	s·s_w‹d_t
 {

241 
·s_°rög_t
 
ãxt
;

242 
ib_ve˘‹_t
 *
nodes
;

244 
ib_Æloc_t
 *
hóp_Æloc
;

248 
	s·s_„tch_t
 {

249 *
ªad_¨g
;

251 
·s_sql_ˇŒback
 
ªad_ªc‹d
;

253 
ulöt
 
tŸÆ_mem‹y
;

257 
	s·s_ödex_£À˘‹_t
 {

258 
ulöt
 
vÆue
;

261 c⁄° *
suffix
;

265 
	s·s_doc_t
 {

266 
·s_°rög_t
 
ãxt
;

268 
iboﬁ
 
found
;

271 
ib_rbt_t
 *
tokís
;

276 
ib_Æloc_t
 *
£lf_hóp
;

281 
CHARSET_INFO
 *
ch¨£t
;

283 
°_mysql_·∑r£r
 *
∑r£r
;

285 
boﬁ
 
is_ngøm
;

287 
ib_rbt_t
 *
°›w‹ds
;

291 
	s·s_tokí_t
 {

292 
·s_°rög_t
 
ãxt
;

294 
ib_ve˘‹_t
 *
posôi⁄s
;

300 c⁄° 
·s_ödex_£À˘‹_t
 
·s_ödex_£À˘‹
[];

303 c⁄° 
·s_ödex_£À˘‹_t
 
·s_ödex_£À˘‹_5_7
[];

309 
UNIV_INLINE


310 
	`·s_åx_row_doc_id_cmp
(c⁄° *
p1
, c⁄° *
p2
);

316 
UNIV_INLINE


317 
	`·s_ønkög_doc_id_cmp
(c⁄° *
p1
, c⁄° *
p2
);

323 
UNIV_INLINE


324 
	`·s_upd©e_doc_id_cmp
(c⁄° *
p1
, c⁄° *
p2
);

327 
UNIV_INLINE


328 
ulöt
 
	`·s_decode_vlc
(

330 
byã
 **
±r
);

338 
UNIV_INLINE


339 
	`·s_°rög_dup
(
·s_°rög_t
 *
d°
, c⁄° fts_°rög_à*
§c
,

340 
mem_hóp_t
 *
hóp
);

343 
UNIV_INLINE


344 
ulöt
 
	`·s_gë_ícoded_Àn
(

347 
ulöt
 
vÆ
);

353 
UNIV_INLINE


354 
ulöt
 
	`·s_ícode_öt
(ulöà
vÆ
, 
byã
 *
buf
);

357 
UNIV_INLINE


358 c⁄° *
	`·s_gë_suffix
(
ulöt
 
£À˘ed
);

363 
UNIV_INLINE


364 c⁄° *
	`·s_gë_suffix_5_7
(
ulöt
 
£À˘ed
);

371 
UNIV_INLINE


372 
ulöt
 
	`·s_£À˘_ödex
(c⁄° 
CHARSET_INFO
 *
cs
, c⁄° 
byã
 *
°r
, ulöà
Àn
);

374 
	~"·s0ty≥s.ic
"

375 
	~"·s0vlc.ic
"

	@fts0types.ic

33 #i‚de‡
INNOBASE_FTS0TYPES_IC


34 
	#INNOBASE_FTS0TYPES_IC


	)

36 
	~"ha_¥ŸŸy≥s.h
"

37 
	~"ªm0cmp.h
"

40 
UNIV_INLINE


41 
	$·s_°rög_dup
(
·s_°rög_t
 *
d°
,

42 c⁄° 
·s_°rög_t
 *
§c
,

43 
mem_hóp_t
 *
hóp
)

45 
d°
->
f_°r
 = (
byã
 *)
	`mem_hóp_Æloc
(
hóp
, 
§c
->
f_Àn
 + 1);

46 
	`mem˝y
(
d°
->
f_°r
, 
§c
->f_°r, src->
f_Àn
);

48 
d°
->
f_Àn
 = 
§c
->f_len;

49 
d°
->
f_°r
[
§c
->
f_Àn
] = 0;

50 
d°
->
f_n_ch¨
 = 
§c
->f_n_char;

51 
	}
}

55 
UNIV_INLINE


56 
	$·s_åx_row_doc_id_cmp
(c⁄° *
p1
,

57 c⁄° *
p2
)

59 c⁄° 
·s_åx_row_t
 *
å1
 = (c⁄° fts_åx_row_à*)
p1
;

60 c⁄° 
·s_åx_row_t
 *
å2
 = (c⁄° fts_åx_row_à*)
p2
;

62  (()(
å1
->
doc_id
 - 
å2
->doc_id));

63 
	}
}

67 
UNIV_INLINE


68 
	$·s_ønkög_doc_id_cmp
(c⁄° *
p1
,

69 c⁄° *
p2
)

71 c⁄° 
·s_ønkög_t
 *
rk1
 = (c⁄° fts_ønkög_à*)
p1
;

72 c⁄° 
·s_ønkög_t
 *
rk2
 = (c⁄° fts_ønkög_à*)
p2
;

74  (()(
rk1
->
doc_id
 - 
rk2
->doc_id));

75 
	}
}

79 
UNIV_INLINE


80 
	$·s_upd©e_doc_id_cmp
(c⁄° *
p1
,

81 c⁄° *
p2
)

83 c⁄° 
·s_upd©e_t
 *
up1
 = (c⁄° fts_upd©e_à*)
p1
;

84 c⁄° 
·s_upd©e_t
 *
up2
 = (c⁄° fts_upd©e_à*)
p2
;

86  (()(
up1
->
doc_id
 - 
up2
->doc_id));

87 
	}
}

90 
ulöt
 
önoba£_°∫x‰m
(c⁄° 
CHARSET_INFO
 *
cs
,

91 c⁄° 
uch¨
 *
p2
,

92 c⁄° 
ulöt
 
Àn2
);

98 
UNIV_INLINE


99 
boﬁ
 
	$·s_is_ch¨£t_cjk
(c⁄° 
CHARSET_INFO
 *
cs
) {

100 i‡(
	`°rcmp
(
cs
->
«me
, "gb2312_chinese_ci") == 0 ||

101 
	`°rcmp
(
cs
->
«me
, "gbk_chinese_ci") == 0 ||

102 
	`°rcmp
(
cs
->
«me
, "big5_chinese_ci") == 0 ||

103 
	`°rcmp
(
cs
->
«me
, "gb18030_chinese_ci") == 0 ||

104 
	`°rcmp
(
cs
->
«me
, "ujis_japanese_ci") == 0 ||

105 
	`°rcmp
(
cs
->
«me
, "sjis_japanese_ci") == 0 ||

106 
	`°rcmp
(
cs
->
«me
, "cp932_japanese_ci") == 0 ||

107 
	`°rcmp
(
cs
->
«me
, "eucjpms_japanese_ci") == 0 ||

108 
	`°rcmp
(
cs
->
«me
, "euckr_korean_ci") == 0) {

109  (
åue
);

111  (
Ál£
);

113 
	}
}

120 
UNIV_INLINE


121 
ulöt
 
	$·s_£À˘_ödex_by_ønge
(c⁄° 
CHARSET_INFO
 *
cs
, c⁄° 
byã
 *
°r
,

122 
ulöt
 
Àn
) {

123 
ulöt
 
£À˘ed
 = 0;

124 
ulöt
 
vÆue
 = 
	`önoba£_°∫x‰m
(
cs
, 
°r
, 
Àn
);

126 
·s_ödex_£À˘‹
[
£À˘ed
].
vÆue
 != 0) {

127 i‡(
·s_ödex_£À˘‹
[
£À˘ed
].
vÆue
 == value) {

128  (
£À˘ed
);

130 } i‡(
·s_ödex_£À˘‹
[
£À˘ed
].
vÆue
 > value) {

131  (
£À˘ed
 > 0 ? selected - 1 : 0);

134 ++
£À˘ed
;

137 
	`ut_ad
(
£À˘ed
 > 1);

139  (
£À˘ed
 - 1);

140 
	}
}

147 
UNIV_INLINE


148 
ulöt
 
	$·s_£À˘_ödex_by_hash
(c⁄° 
CHARSET_INFO
 *
cs
, c⁄° 
byã
 *
°r
,

149 
ulöt
 
Àn
) {

150 
ch¨_Àn
;

152 
	`ut_ad
(!(
°r
 =
nuŒ±r
 && 
Àn
 > 0));

154 i‡(
°r
 =
nuŒ±r
 || 
Àn
 == 0) {

159 
ch¨_Àn
 = 
	`my_mbch¨Àn_±r
(
cs
, 
ªöãΩªt_ˇ°
<c⁄° *>(
°r
),

160 
ªöãΩªt_ˇ°
<c⁄° *>(
°r
 + 
Àn
));

161 
	`ut_ad
(
°©ic_ˇ°
<
ulöt
>(
ch¨_Àn
Ë<
Àn
);

168 
uöt64
 
ƒ1
 = 1;

169 
uöt64
 
ƒ2
 = 4;

170 
cs
->
cﬁl
->
	`hash_s‹t
(cs, 
°r
, 
ch¨_Àn
, &
ƒ1
, &
ƒ2
);

172  (
°©ic_ˇ°
<
ul⁄g
>(
ƒ1
Ë% 
FTS_NUM_AUX_INDEX
);

173 
	}
}

180 
UNIV_INLINE


181 
ulöt
 
	$·s_£À˘_ödex
(c⁄° 
CHARSET_INFO
 *
cs
, c⁄° 
byã
 *
°r
, 
ulöt
 
Àn
) {

182 
ulöt
 
£À˘ed
;

184 i‡(
	`·s_is_ch¨£t_cjk
(
cs
)) {

185 
£À˘ed
 = 
	`·s_£À˘_ödex_by_hash
(
cs
, 
°r
, 
Àn
);

187 
£À˘ed
 = 
	`·s_£À˘_ödex_by_ønge
(
cs
, 
°r
, 
Àn
);

190  (
£À˘ed
);

191 
	}
}

194 
UNIV_INLINE


195 c⁄° *
	$·s_gë_suffix
(
ulöt
 
£À˘ed
)

197  (
·s_ödex_£À˘‹
[
£À˘ed
].
suffix
);

198 
	}
}

203 
UNIV_INLINE


204 c⁄° *
	$·s_gë_suffix_5_7
(
ulöt
 
£À˘ed
) {

205  (
·s_ödex_£À˘‹_5_7
[
£À˘ed
].
suffix
);

206 
	}
}

	@fts0vlc.ic

33 #i‚de‡
INNOBASE_FTS0VLC_IC


34 
	#INNOBASE_FTS0VLC_IC


	)

36 
	~"·s0ty≥s.h
"

41 
UNIV_INLINE


42 
ulöt
 
	$·s_gë_ícoded_Àn
(
ulöt
 
vÆ
)

44 i‡(
vÆ
 <= 127) {

46 } i‡(
vÆ
 <= 16383) {

48 } i‡(
vÆ
 <= 2097151) {

50 } i‡(
vÆ
 <= 268435455) {

60 
	}
}

64 
UNIV_INLINE


65 
ulöt
 
	$·s_ícode_öt
(
ulöt
 
vÆ
,

66 
byã
 *
buf
)

68 
ulöt
 
Àn
;

70 i‡(
vÆ
 <= 127) {

71 *
buf
 = (
byã
)
vÆ
;

73 
Àn
 = 1;

74 } i‡(
vÆ
 <= 16383) {

75 *
buf
++ = (
byã
)(
vÆ
 >> 7);

76 *
buf
 = (
byã
)(
vÆ
 & 0x7F);

78 
Àn
 = 2;

79 } i‡(
vÆ
 <= 2097151) {

80 *
buf
++ = (
byã
)(
vÆ
 >> 14);

81 *
buf
++ = (
byã
)((
vÆ
 >> 7) & 0x7F);

82 *
buf
 = (
byã
)(
vÆ
 & 0x7F);

84 
Àn
 = 3;

85 } i‡(
vÆ
 <= 268435455) {

86 *
buf
++ = (
byã
)(
vÆ
 >> 21);

87 *
buf
++ = (
byã
)((
vÆ
 >> 14) & 0x7F);

88 *
buf
++ = (
byã
)((
vÆ
 >> 7) & 0x7F);

89 *
buf
 = (
byã
)(
vÆ
 & 0x7F);

91 
Àn
 = 4;

95 
	`ut_ad
(
vÆ
 <= 4294967295u);

97 *
buf
++ = (
byã
)(
vÆ
 >> 28);

98 *
buf
++ = (
byã
)((
vÆ
 >> 21) & 0x7F);

99 *
buf
++ = (
byã
)((
vÆ
 >> 14) & 0x7F);

100 *
buf
++ = (
byã
)((
vÆ
 >> 7) & 0x7F);

101 *
buf
 = (
byã
)(
vÆ
 & 0x7F);

103 
Àn
 = 5;

107 *
buf
 |= 0x80;

109  (
Àn
);

110 
	}
}

114 
UNIV_INLINE


115 
ulöt
 
	$·s_decode_vlc
(
byã
 **
±r
)

118 
ulöt
 
vÆ
 = 0;

121 
byã
 
b
 = **
±r
;

123 ++*
±r
;

124 
vÆ
 |(
b
 & 0x7F);

127 i‡(
b
 & 0x80) {

130 
vÆ
 <<= 7;

134  (
vÆ
);

135 
	}
}

	@fut0fut.h

33 #i‚de‡
fut0fut_h


34 
	#fut0fut_h


	)

36 
	~"univ.i
"

38 
	~"fû0fû.h
"

39 
	~"må0må.h
"

50 
UNIV_INLINE


51 
byã
 *
	$fut_gë_±r
(
•a˚_id_t
 
•a˚
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

52 
fû_addr_t
 
addr
, 
rw_lock_ty≥_t
 
rw_œtch
, 
må_t
 *
må
,

53 
buf_block_t
 **
±r_block
 = 
nuŒ±r
)

54 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

56 #i‚de‡
UNIV_HOTBACKUP


57 
	~"fut0fut.ic
"

	@fut0fut.ic

33 
	~"buf0buf.h
"

34 
	~"sync0rw.h
"

45 
UNIV_INLINE


46 
byã
 *
	$fut_gë_±r
(
•a˚_id_t
 
•a˚
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

47 
fû_addr_t
 
addr
, 
rw_lock_ty≥_t
 
rw_œtch
, 
må_t
 *
må
,

48 
buf_block_t
 **
±r_block
) {

49 
buf_block_t
 *
block
;

50 
byã
 *
±r
;

52 
	`ut_ad
(
addr
.
boff£t
 < 
UNIV_PAGE_SIZE
);

53 
	`ut_ad
((
rw_œtch
 =
RW_S_LATCH
Ë|| (rw_œtch =
RW_X_LATCH
) ||

54 (
rw_œtch
 =
RW_SX_LATCH
));

56 
block
 = 
	`buf_∑ge_gë
(
	`∑ge_id_t
(
•a˚
, 
addr
.
∑ge
), 
∑ge_size
, 
rw_œtch
, 
må
);

57 
±r
 = 
	`buf_block_gë_‰ame
(
block
Ë+ 
addr
.
boff£t
;

59 
	`buf_block_dbg_add_Àvñ
(
block
, 
SYNC_NO_ORDER_CHECK
);

60 i‡(
±r_block
 !
nuŒ±r
) {

61 *
±r_block
 = 
block
;

64  (
±r
);

65 
	}
}

	@fut0lst.h

33 #i‚de‡
fut0l°_h


34 
	#fut0l°_h


	)

36 
	~"univ.i
"

38 
	~"fû0fû.h
"

39 
	~"må0må.h
"

45 
byã
 
	tÊ°_ba£_node_t
;

46 
byã
 
	tÊ°_node_t
;

49 
c⁄°ex¥
 
ulöt
 
	gFLST_BASE_NODE_SIZE
 = 4 + 2 * 
FIL_ADDR_SIZE
;

52 
c⁄°ex¥
 
ulöt
 
	gFLST_NODE_SIZE
 = 2 * 
FIL_ADDR_SIZE
;

57 
UNIV_INLINE


58 
Ê°_öô
(
Ê°_ba£_node_t
 *
ba£
, 
må_t
 *
må
);

64 
Ê°_add_œ°
(
Ê°_ba£_node_t
 *
ba£
, 
Ê°_node_t
 *
node
, 
må_t
 *
må
);

70 
Ê°_add_fú°
(
Ê°_ba£_node_t
 *
ba£
, 
Ê°_node_t
 *
node
, 
må_t
 *
må
);

76 
Ê°_ªmove
(
Ê°_ba£_node_t
 *
ba£
, 
Ê°_node_t
 *
node2
, 
må_t
 *
må
);

81 
UNIV_INLINE


82 
ulöt
 
Ê°_gë_Àn
(c⁄° 
Ê°_ba£_node_t
 *
ba£
);

88 
UNIV_INLINE


89 
fû_addr_t
 
Ê°_gë_fú°
(c⁄° 
Ê°_ba£_node_t
 *
ba£
, 
må_t
 *
må
);

95 
UNIV_INLINE


96 
fû_addr_t
 
Ê°_gë_œ°
(c⁄° 
Ê°_ba£_node_t
 *
ba£
, 
må_t
 *
må
);

102 
UNIV_INLINE


103 
fû_addr_t
 
Ê°_gë_√xt_addr
(c⁄° 
Ê°_node_t
 *
node
, 
må_t
 *
må
);

109 
UNIV_INLINE


110 
fû_addr_t
 
Ê°_gë_¥ev_addr
(c⁄° 
Ê°_node_t
 *
node
, 
må_t
 *
må
);

116 
UNIV_INLINE


117 
Ê°_wrôe_addr
(
fû_Áddr_t
 *
Áddr
, 
fû_addr_t
 
addr
, 
må_t
 *
må
);

123 
UNIV_INLINE


124 
fû_addr_t
 
Ê°_ªad_addr
(c⁄° 
fû_Áddr_t
 *
Áddr
, 
må_t
 *
må
);

128 
iboﬁ
 
Ê°_vÆid©e
(

129 c⁄° 
Ê°_ba£_node_t
 *
ba£
,

130 
må_t
 *
må1
);

137 
Ê°_ö£π_a·î
(
Ê°_ba£_node_t
 *
ba£
, 
Ê°_node_t
 *
node1
,

138 
Ê°_node_t
 *
node2
, 
må_t
 *
må
);

145 
Ê°_ö£π_bef‹e
(
Ê°_ba£_node_t
 *
ba£
, 
Ê°_node_t
 *
node2
,

146 
Ê°_node_t
 *
node3
, 
må_t
 *
må
);

148 
	~"fut0l°.ic
"

151 
	sÊ°_bnode_t
 {

152 
ulöt
 
	mÀn
;

153 
fû_addr_t
 
	mfú°
;

154 
fû_addr_t
 
	mœ°
;

156 
Ê°_bnode_t
(Ë: 
Àn
(0) {}

158 
Ê°_bnode_t
(c⁄° 
Ê°_ba£_node_t
 *
ba£
, 
må_t
 *
må
)

159 : 
Àn
(
Ê°_gë_Àn
(
ba£
)),

160 
fú°
(
Ê°_gë_fú°
(
ba£
, 
må
)),

161 
œ°
(
Ê°_gë_œ°
(
ba£
, 
må
)) {}

163 
£t
(c⁄° 
Ê°_ba£_node_t
 *
ba£
, 
må_t
 *
må
) {

164 
	mÀn
 = 
Ê°_gë_Àn
(
ba£
);

165 
	mfú°
 = 
Ê°_gë_fú°
(
ba£
, 
må
);

166 
	mœ°
 = 
Ê°_gë_œ°
(
ba£
, 
må
);

169 
ª£t
() {

170 
	mÀn
 = 0;

171 
	mfú°
 = 
fû_addr_nuŒ
;

172 
	mœ°
 = 
fû_addr_nuŒ
;

175 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

176 
out
 << "[Ê°_ba£_node_t:Üí=" << 
Àn
 << ", fú°=" << 
fú°


177 << ",Üa°=" << 
œ°
 << "]";

178  (
	mout
);

182 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gÊ°_bnode_t
 &
	gobj
) {

183  (
	gobj
.
¥öt
(
out
));

	@fut0lst.ic

33 
	~"buf0buf.h
"

34 
	~"fut0fut.h
"

35 
	~"må0log.h
"

38 
	#FLST_PREV
 \

39 0

	)

42 
	#FLST_NEXT
 \

43 
FIL_ADDR_SIZE


	)

48 
	#FLST_LEN
 0

	)

49 
	#FLST_FIRST
 \

50 4

	)

52 
	#FLST_LAST
 \

53 (4 + 
FIL_ADDR_SIZE
Ë

	)

58 
UNIV_INLINE


59 
	$Ê°_wrôe_addr
(
fû_Áddr_t
 *
Áddr
,

60 
fû_addr_t
 
addr
,

61 
må_t
 *
må
)

63 
	`ut_ad
(
Áddr
 && 
må
);

64 
	`ut_ad
(
	`må_memo_c⁄èös_∑ge_Êagged
(

65 
må
, 
Áddr
, 
MTR_MEMO_PAGE_X_FIX
 | 
MTR_MEMO_PAGE_SX_FIX
));

66 
	`ut_a
(
addr
.
∑ge
 =
FIL_NULL
 ||áddr.
boff£t
 >
FIL_PAGE_DATA
);

67 
	`ut_a
(
	`ut_Æign_off£t
(
Áddr
, 
UNIV_PAGE_SIZE
Ë>
FIL_PAGE_DATA
);

69 
	`mlog_wrôe_ulöt
(
Áddr
 + 
FIL_ADDR_PAGE
, 
addr
.
∑ge
, 
MLOG_4BYTES
, 
må
);

70 
	`mlog_wrôe_ulöt
(
Áddr
 + 
FIL_ADDR_BYTE
, 
addr
.
boff£t
, 
MLOG_2BYTES
, 
må
);

71 
	}
}

75 
UNIV_INLINE


76 
fû_addr_t
 
	$Ê°_ªad_addr
(

77 c⁄° 
fû_Áddr_t
 *
Áddr
,

78 
må_t
 *
må
)

80 
fû_addr_t
 
addr
;

82 
	`ut_ad
(
Áddr
 && 
må
);

84 
addr
.
∑ge
 = 
	`må_ªad_ulöt
(
Áddr
 + 
FIL_ADDR_PAGE
, 
MLOG_4BYTES
, 
må
);

85 
addr
.
boff£t
 = 
	`må_ªad_ulöt
(
Áddr
 + 
FIL_ADDR_BYTE
, 
MLOG_2BYTES
, 
må
);

86 
	`ut_a
(
addr
.
∑ge
 =
FIL_NULL
 ||áddr.
boff£t
 >
FIL_PAGE_DATA
);

87 
	`ut_a
(
	`ut_Æign_off£t
(
Áddr
, 
UNIV_PAGE_SIZE
Ë>
FIL_PAGE_DATA
);

88  (
addr
);

89 
	}
}

92 
UNIV_INLINE


93 
	$Ê°_öô
(
Ê°_ba£_node_t
 *
ba£
,

94 
må_t
 *
må
)

96 
	`ut_ad
(
	`må_memo_c⁄èös_∑ge_Êagged
(

97 
må
, 
ba£
, 
MTR_MEMO_PAGE_X_FIX
 | 
MTR_MEMO_PAGE_SX_FIX
));

99 
	`mlog_wrôe_ulöt
(
ba£
 + 
FLST_LEN
, 0, 
MLOG_4BYTES
, 
må
);

100 
	`Ê°_wrôe_addr
(
ba£
 + 
FLST_FIRST
, 
fû_addr_nuŒ
, 
må
);

101 
	`Ê°_wrôe_addr
(
ba£
 + 
FLST_LAST
, 
fû_addr_nuŒ
, 
må
);

102 
	}
}

107 
UNIV_INLINE


108 
ulöt
 
	$Ê°_gë_Àn
(c⁄° 
Ê°_ba£_node_t
 *
ba£
) {

109  (
	`mach_ªad_‰om_4
(
ba£
 + 
FLST_LEN
));

110 
	}
}

114 
UNIV_INLINE


115 
fû_addr_t
 
	$Ê°_gë_fú°
(

116 c⁄° 
Ê°_ba£_node_t
 *
ba£
,

117 
må_t
 *
må
)

119  (
	`Ê°_ªad_addr
(
ba£
 + 
FLST_FIRST
, 
må
));

120 
	}
}

124 
UNIV_INLINE


125 
fû_addr_t
 
	$Ê°_gë_œ°
(

126 c⁄° 
Ê°_ba£_node_t
 *
ba£
,

127 
må_t
 *
må
)

129  (
	`Ê°_ªad_addr
(
ba£
 + 
FLST_LAST
, 
må
));

130 
	}
}

134 
UNIV_INLINE


135 
fû_addr_t
 
	$Ê°_gë_√xt_addr
(

136 c⁄° 
Ê°_node_t
 *
node
,

137 
må_t
 *
må
)

139  (
	`Ê°_ªad_addr
(
node
 + 
FLST_NEXT
, 
må
));

140 
	}
}

144 
UNIV_INLINE


145 
fû_addr_t
 
	$Ê°_gë_¥ev_addr
(

146 c⁄° 
Ê°_node_t
 *
node
,

147 
må_t
 *
må
)

149  (
	`Ê°_ªad_addr
(
node
 + 
FLST_PREV
, 
må
));

150 
	}
}

	@gis0geo.h

29 #i‚de‡
_gis0geo_h


30 
	#_gis0geo_h


	)

32 
	~"∑ge0ty≥s.h
"

33 
	~"sql/gis/πªe_suµ‹t.h
"

35 
	#SPTYPE
 
HA_KEYTYPE_DOUBLE


	)

36 
	#SPLEN
 8

	)

38 
«me•a˚
 
	gdd
 {

39 
˛ass
 
	gS∑tül_ª„ªn˚_sy°em
;

43 
	sπr_•lô_node_t
 {

44 
	msqu¨e
;

45 
	mn_node
;

46 
uch¨
 *
	mkey
;

47 *
	mco‹ds
;

51 
ölöe
 *
	$ª£rve_co‹ds
(**
d_buf„r
,

52 
n_dim
)

54 *
co‹ds
 = *
d_buf„r
;

55 (*
d_buf„r
Ë+
n_dim
 * 2;

56  
co‹ds
;

57 
	}
}

61 
•lô_πªe_node
(

62 
πr_•lô_node_t
 *
node
,

63 
n_íåõs
,

64 
Æl_size
,

65 
key_size
,

66 
mö_size
,

67 
size1
,

68 
size2
,

69 **
d_buf„r
,

70 
n_dim
,

71 
uch¨
 *
fú°_ªc
,

72 c⁄° 
dd
::
S∑tül_ª„ªn˚_sy°em
 *
§s
);

88 
boﬁ
 
πªe_key_cmp
(
∑ge_cur_mode_t
 
mode
, c⁄° 
uch¨
 *
a
, 
a_Àn
,

89 c⁄° 
uch¨
 *
b
, 
b_Àn
,

90 c⁄° 
dd
::
S∑tül_ª„ªn˚_sy°em
 *
§s
);

	@gis0rtree.h

33 #i‚de‡
gis0πªe_h


34 
	#gis0πªe_h


	)

36 
	~"univ.i
"

38 
	~"bå0cur.h
"

39 
	~"bå0ty≥s.h
"

40 
	~"d©a0ty≥.h
"

41 
	~"d©a0ty≥s.h
"

42 
	~"di˘0ty≥s.h
"

43 
	~"gis0geo.h
"

44 
	~"gis0ty≥.h
"

45 
	~"hash0hash.h
"

46 
	~"mem0mem.h
"

47 
	~"∑ge0∑ge.h
"

48 
	~"que0ty≥s.h
"

49 
	~"ªm0ty≥s.h
"

50 
	~"row0ty≥s.h
"

51 
	~"åx0ty≥s.h
"

52 
	~"ut0vec.h
"

53 
	~"ut0wqueue.h
"

56 
	#RTREE_SEARCH_MODE
(
mode
) \

57 (((
mode
Ë>
PAGE_CUR_CONTAIN
Ë&& ((modê<
PAGE_CUR_RTREE_GET_FATHER
)))

	)

60 
	#GEO_DATA_HEADER_SIZE
 4

	)

63 
dtu∂e_t
 *
πr_ödex_buûd_node_±r
(

64 c⁄° 
di˘_ödex_t
 *
ödex
,

65 c⁄° 
πr_mbr_t
 *
mbr
,

66 c⁄° 
ªc_t
 *
ªc
,

68 
∑ge_no_t
 
∑ge_no
,

70 
mem_hóp_t
 *
hóp
,

72 
ulöt
 
Àvñ
);

82 
ªc_t
 *
πr_∑ge_•lô_™d_ö£π
(

83 
uöt32_t
 
Êags
,

84 
bå_cur_t
 *
curs‹
,

87 
ulöt
 **
off£ts
,

88 
mem_hóp_t
 **
hóp
,

89 c⁄° 
dtu∂e_t
 *
tu∂e
,

90 
må_t
 *
må
);

97 
UNIV_INLINE


98 
πr_∑ge_ˇl_mbr
(c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
buf_block_t
 *
block
,

99 
πr_mbr_t
 *
mbr
, 
mem_hóp_t
 *
hóp
);

116 
boﬁ
 
πr_pcur_move_to_√xt
(c⁄° 
dtu∂e_t
 *
tu∂e
, 
∑ge_cur_mode_t
 
mode
,

117 
£À˘_mode
 
£l_mode
, 
bå_pcur_t
 *
curs‹
,

118 
ulöt
 
cur_Àvñ
, 
må_t
 *
må
);

127 
boﬁ
 
πr_cur_£¨ch_wôh_m©ch
(c⁄° 
buf_block_t
 *
block
, 
di˘_ödex_t
 *
ödex
,

128 c⁄° 
dtu∂e_t
 *
tu∂e
, 
∑ge_cur_mode_t
 
mode
,

129 
∑ge_cur_t
 *
curs‹
, 
πr_öfo_t
 *
πr_öfo
);

133 
πr_ªc_ˇl_ö¸ó£
(

134 c⁄° 
dtu∂e_t
 *
dtu∂e
,

136 c⁄° 
ªc_t
 *
ªc
,

140 c⁄° 
ulöt
 *
off£ts
,

141 *
¨ó
,

142 c⁄° 
dd
::
S∑tül_ª„ªn˚_sy°em
 *
§s
);

146 
dbîr_t
 
πr_ös_íœrge_mbr
(
bå_cur_t
 *
curs‹
,

147 
que_thr_t
 *
thr
,

148 
må_t
 *
må
);

151 
πr_gë_Áthî_node
(

152 
di˘_ödex_t
 *
ödex
,

153 
ulöt
 
Àvñ
,

154 c⁄° 
dtu∂e_t
 *
tu∂e
,

157 
bå_cur_t
 *
£a_cur
,

158 
bå_cur_t
 *
curs‹
,

160 
∑ge_no_t
 
∑ge_no
,

161 
må_t
 *
må
);

171 
UNIV_INLINE


172 
πr_n⁄_Àaf_°ack_push
(
πr_node_∑th_t
 *
∑th
, 
∑ge_no_t
 
∑gío
,

173 
node_£q_t
 
£q_no
, 
ulöt
 
Àvñ
, 
∑ge_no_t
 
chûd_no
,

174 
bå_pcur_t
 *
curs‹
, 
mbr_öc
);

183 
πr_n⁄_Àaf_ö£π_°ack_push
(
di˘_ödex_t
 *
ödex
, 
πr_node_∑th_t
 *
∑th
,

184 
ulöt
 
Àvñ
, c⁄° 
buf_block_t
 *
block
,

185 c⁄° 
ªc_t
 *
ªc
, 
mbr_öc
);

189 
UNIV_INLINE


190 
node_£q_t
 
πr_gë_√w_s¢_id
(
di˘_ödex_t
 *
ödex
);

194 
UNIV_INLINE


195 
node_£q_t
 
πr_gë_cuºít_s¢_id
(

196 
di˘_ödex_t
 *
ödex
);

204 
πr_öfo_t
 *
πr_¸óã_πr_öfo
(
boﬁ
 
√ed_¥dt
, boﬁ 
öô_m©ches
,

205 
bå_cur_t
 *
curs‹
, 
di˘_ödex_t
 *
ödex
);

210 
πr_öfo_upd©e_bå
(
bå_cur_t
 *
curs‹
, 
πr_öfo_t
 *
πr_öfo
);

213 
πr_öô_πr_öfo
(

215 
πr_öfo_t
 *
πr_öfo
,

217 
boﬁ
 
√ed_¥dt
,

219 
bå_cur_t
 *
curs‹
,

220 
di˘_ödex_t
 *
ödex
,

221 
boﬁ
 
ªöô
);

224 
πr_˛ón_πr_öfo
(
πr_öfo_t
 *
πr_öfo
,

225 
boﬁ
 
‰ì_Æl
);

231 
πr_gë_mbr_‰om_ªc
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
,

232 
πr_mbr_t
 *
mbr
);

237 
πr_gë_mbr_‰om_tu∂e
(c⁄° 
dtu∂e_t
 *
dtu∂e
, 
πr_mbr
 *
mbr
);

248 
πr_∑ge_gë_Áthî
(
di˘_ödex_t
 *
ödex
, 
buf_block_t
 *
block
, 
må_t
 *
må
,

249 
bå_cur_t
 *
£a_cur
, bå_cur_à*
curs‹
);

254 
ulöt
 *
πr_∑ge_gë_Áthî_block
(

255 
ulöt
 *
off£ts
,

256 
mem_hóp_t
 *
hóp
,

257 
di˘_ödex_t
 *
ödex
,

258 
buf_block_t
 *
block
,

259 
må_t
 *
må
,

260 
bå_cur_t
 *
£a_cur
,

262 
bå_cur_t
 *
curs‹
);

266 
ulöt
 
πr_°‹e_∑ª¡_∑th
(

267 c⁄° 
buf_block_t
 *
block
,

268 
bå_cur_t
 *
bå_cur
,

269 
ulöt
 
œtch_mode
,

271 
ulöt
 
Àvñ
,

272 
må_t
 *
må
);

276 
πr_pcur_›í_low
(

277 
di˘_ödex_t
 *
ödex
,

278 
ulöt
 
Àvñ
,

279 c⁄° 
dtu∂e_t
 *
tu∂e
,

280 
∑ge_cur_mode_t
 
mode
,

286 
ulöt
 
œtch_mode
,

287 
bå_pcur_t
 *
curs‹
,

288 c⁄° *
fûe
,

289 
ulöt
 
löe
,

290 
må_t
 *
må
);

292 
	#πr_pcur_›í
(
i
, 
t
, 
md
, 
l
, 
c
, 
m
) \

293 
	`πr_pcur_›í_low
(
i
, 0, 
t
, 
md
, 
l
, 
c
, 
__FILE__
, 
__LINE__
, 
m
)

	)

295 
	gbå_cur_t
;

302 
UNIV_INLINE


303 
node_visô_t
 *
πr_gë_∑ª¡_node
(
bå_cur_t
 *
bå_cur
, 
ulöt
 
Àvñ
,

304 
ulöt
 
is_ö£π
);

311 
UNIV_INLINE


312 
bå_pcur_t
 *
πr_gë_∑ª¡_curs‹
(
bå_cur_t
 *
bå_cur
, 
ulöt
 
Àvñ
,

313 
ulöt
 
is_ö£π
);

333 
πr_∑ge_c›y_ªc_li°_íd_no_locks
(
buf_block_t
 *
√w_block
,

334 
buf_block_t
 *
block
, 
ªc_t
 *
ªc
,

335 
di˘_ödex_t
 *
ödex
, 
mem_hóp_t
 *
hóp
,

336 
πr_ªc_move_t
 *
ªc_move
,

337 
ulöt
 
max_move
, ulöà*
num_moved
,

338 
må_t
 *
må
);

350 
πr_∑ge_c›y_ªc_li°_°¨t_no_locks
(

351 
buf_block_t
 *
√w_block
, buf_block_à*
block
, 
ªc_t
 *
ªc
, 
di˘_ödex_t
 *
ödex
,

352 
mem_hóp_t
 *
hóp
, 
πr_ªc_move_t
 *
ªc_move
, 
ulöt
 
max_move
,

353 
ulöt
 *
num_moved
, 
må_t
 *
må
);

365 
dbîr_t
 
πr_mîge_™d_upd©e_mbr
(
bå_cur_t
 *
curs‹
, bå_cur_à*
curs‹2
,

366 
ulöt
 *
off£ts
, ulöà*
off£ts2
,

367 
∑ge_t
 *
chûd_∑ge
, 
buf_block_t
 *
mîge_block
,

368 
buf_block_t
 *
block
, 
di˘_ödex_t
 *
ödex
,

369 
må_t
 *
må
);

378 
πr_node_±r_dñëe
(
di˘_ödex_t
 *
ödex
, 
bå_cur_t
 *
£a_cur
,

379 
buf_block_t
 *
block
, 
må_t
 *
må
);

390 
boﬁ
 
πr_mîge_mbr_ch™ged
(
bå_cur_t
 *
curs‹
, bå_cur_à*
curs‹2
,

391 
ulöt
 *
off£ts
, ulöà*
off£ts2
, 
πr_mbr_t
 *
√w_mbr
,

392 
buf_block_t
 *
mîge_block
, buf_block_à*
block
,

393 
di˘_ödex_t
 *
ödex
);

397 
boﬁ
 
πr_upd©e_mbr_fõld
(

398 
bå_cur_t
 *
curs‹
,

399 
ulöt
 *
off£ts
,

400 
bå_cur_t
 *
curs‹2
,

404 
∑ge_t
 *
chûd_∑ge
,

405 
πr_mbr_t
 *
√w_mbr
,

406 
ªc_t
 *
√w_ªc
,

407 
må_t
 *
må
);

411 
boﬁ
 
πr_check_ßme_block
(

412 
di˘_ödex_t
 *
ödex
,

413 
bå_cur_t
 *
cur
,

415 
buf_block_t
 *
∑ª¡b
,

416 
buf_block_t
 *
chûdb
,

417 
mem_hóp_t
 *
hóp
);

422 
UNIV_INLINE


423 
πr_wrôe_mbr
(
byã
 *
d©a
, c⁄° 
πr_mbr_t
 *
mbr
);

428 
UNIV_INLINE


429 
πr_ªad_mbr
(c⁄° 
byã
 *
d©a
, 
πr_mbr_t
 *
mbr
);

435 
πr_check_disˇrd_∑ge
(
di˘_ödex_t
 *
ödex
, 
bå_cur_t
 *
curs‹
,

436 
buf_block_t
 *
block
);

442 
UNIV_INLINE


443 
πr_öfo_ªöô_ö_curs‹
(
bå_cur_t
 *
curs‹
, 
di˘_ödex_t
 *
ödex
,

444 
boﬁ
 
√ed_¥dt
);

451 
öt64_t
 
πr_e°im©e_n_rows_ö_ønge
(
di˘_ödex_t
 *
ödex
, c⁄° 
dtu∂e_t
 *
tu∂e
,

452 
∑ge_cur_mode_t
 
mode
);

454 
	~"gis0πªe.ic
"

	@gis0rtree.ic

34 
UNIV_INLINE


35 
	$πr_∑ge_ˇl_mbr
(c⁄° 
di˘_ödex_t
 *
ödex
,

36 c⁄° 
buf_block_t
 *
block
,

37 
πr_mbr_t
 *
πr_mbr
,

38 
mem_hóp_t
 *
hóp
)

41 
∑ge_t
 *
∑ge
;

42 
ªc_t
 *
ªc
;

43 c⁄° 
byã
 *
fõld
;

44 
ulöt
 
Àn
;

45 
ulöt
 *
off£ts
 = 
nuŒ±r
;

46 
bmö
, 
bmax
;

47 *
amö
;

48 *
amax
;

49 
ulöt
 
öc
 = 0;

50 *
mbr
;

52 
πr_mbr
->
xmö
 = 
DBL_MAX
;

53 
πr_mbr
->
ymö
 = 
DBL_MAX
;

54 
πr_mbr
->
xmax
 = -
DBL_MAX
;

55 
πr_mbr
->
ymax
 = -
DBL_MAX
;

57 
mbr
 = 
ªöãΩªt_ˇ°
<*>(
πr_mbr
);

59 
∑ge
 = 
	`buf_block_gë_‰ame
(
block
);

61 
ªc
 = 
	`∑ge_ªc_gë_√xt
(
	`∑ge_gë_öfimum_ªc
(
∑ge
));

62 
off£ts
 = 
	`ªc_gë_off£ts
(
ªc
, 
ödex
, off£ts, 
ULINT_UNDEFINED
, &
hóp
);

66 
fõld
 = 
	`ªc_gë_¡h_fõld
(
ªc
, 
off£ts
, 0, &
Àn
);

68 
	`ut_ad
(
Àn
 =
DATA_MBR_LEN
);

69 
öc
 = 0;

70 
i
 = 0; i < 
SPDIMS
; i++) {

71 
bmö
 = 
	`mach_doubÀ_ªad
(
fõld
 + 
öc
);

72 
bmax
 = 
	`mach_doubÀ_ªad
(
fõld
 + 
öc
 + ());

74 
amö
 = 
mbr
 + 
i
 * 
SPDIMS
;

75 
amax
 = 
mbr
 + 
i
 * 
SPDIMS
 + 1;

77 i‡(*
amö
 > 
bmö
) *amin = bmin;

78 i‡(*
amax
 < 
bmax
) *amax = bmax;

80 
öc
 += 2 * ();

83 
ªc
 = 
	`∑ge_ªc_gë_√xt
(rec);

85 i‡(
ªc
 =
nuŒ±r
) {

88 } !
	`∑ge_ªc_is_su¥emum
(
ªc
));

89 
	}
}

92 
UNIV_INLINE


93 
	$πr_n⁄_Àaf_°ack_push
(
πr_node_∑th_t
 *
∑th
,

94 
∑ge_no_t
 
∑gío
,

95 
node_£q_t
 
£q_no
,

96 
ulöt
 
Àvñ
,

97 
∑ge_no_t
 
chûd_no
,

98 
bå_pcur_t
 *
curs‹
,

99 
mbr_öc
)

102 
node_visô_t
 
ö£π_vÆ
;

104 
ö£π_vÆ
.
∑ge_no
 = 
∑gío
;

105 
ö£π_vÆ
.
£q_no
 = seq_no;

106 
ö£π_vÆ
.
Àvñ
 =Üevel;

107 
ö£π_vÆ
.
chûd_no
 = child_no;

108 
ö£π_vÆ
.
curs‹
 = cursor;

109 
ö£π_vÆ
.
mbr_öc
 = mbr_inc;

111 
∑th
->
	`push_back
(
ö£π_vÆ
);

113 #ifde‡
RTR_SEARCH_DIAGNOSTIC


114 
	`Ârötf
(
°dîr
,

117 
°©ic_ˇ°
<>(
∑gío
), sètic_ˇ°<>(
Àvñ
),

118 
°©ic_ˇ°
<>(
£q_no
));

120 
	}
}

124 
UNIV_INLINE


125 
node_£q_t
 
	$πr_gë_√w_s¢_id
(

126 
di˘_ödex_t
 *
ödex
)

128 
node_£q_t
 
s¢
;

130 
	`muãx_íãr
(&(
ödex
->
πr_s¢
.
muãx
));

131 
s¢
 = ++
ödex
->
πr_s¢
.
£q_no
;

132 
	`muãx_exô
(&(
ödex
->
πr_s¢
.
muãx
));

134  (
s¢
);

135 
	}
}

138 
UNIV_INLINE


139 
node_£q_t
 
	$πr_gë_cuºít_s¢_id
(
di˘_ödex_t
 *
ödex
)

141 
node_£q_t
 
s¢
;

143 
	`muãx_íãr
(&(
ödex
->
πr_s¢
.
muãx
));

144 
s¢
 = 
ödex
->
πr_s¢
.
£q_no
;

145 
	`muãx_exô
(&(
ödex
->
πr_s¢
.
muãx
));

147  (
s¢
);

148 
	}
}

151 
UNIV_INLINE


152 
	$πr_wrôe_mbr
(
byã
 *
d©a
,

153 c⁄° 
πr_mbr_t
 *
mbr
)

155 c⁄° *
my_mbr
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
mbr
);

157 
i
 = 0; i < 
SPDIMS
 * 2; i++) {

158 
	`mach_doubÀ_wrôe
(
d©a
 + 
i
 * (), 
my_mbr
[i]);

160 
	}
}

163 
UNIV_INLINE


164 
	$πr_ªad_mbr
(c⁄° 
byã
 *
d©a
,

165 
πr_mbr_t
 *
mbr
)

167 
i
 = 0; i < 
SPDIMS
 * 2; i++) {

168 (
ªöãΩªt_ˇ°
<*>(
mbr
))[
i
] =

169 
	`mach_doubÀ_ªad
(
d©a
 + 
i
 * ());

172 
	`ut_ad
(
mbr
->
xmö
 =
DBL_MAX
 || mbr->
xmax
 == -DBL_MAX ||

173 
mbr
->
xmö
 <mbr->
xmax
);

174 
	`ut_ad
(
mbr
->
ymö
 =
DBL_MAX
 || mbr->
ymax
 == -DBL_MAX ||

175 
mbr
->
ymö
 <mbr->
ymax
);

176 
	}
}

181 
UNIV_INLINE


182 
node_visô_t
 *
	$πr_gë_∑ª¡_node
(

183 
bå_cur_t
 *
bå_cur
,

184 
ulöt
 
Àvñ
,

185 
ulöt
 
is_ö£π
)

187 
ulöt
 
num
;

188 
ulöt
 
åì_height
 = 
bå_cur
->tree_height;

189 
node_visô_t
 *
found_node
 = 
nuŒ±r
;

191 i‡(
Àvñ
 >
åì_height
) {

192  (
nuŒ±r
);

195 
	`muãx_íãr
(&
bå_cur
->
πr_öfo
->
πr_∑th_muãx
);

197 
num
 = 
bå_cur
->
πr_öfo
->
∑ª¡_∑th
->
	`size
();

199 i‡(!
num
) {

200 
	`muãx_exô
(&
bå_cur
->
πr_öfo
->
πr_∑th_muãx
);

201  (
nuŒ±r
);

204 i‡(
is_ö£π
) {

205 
ulöt
 
idx
 = 
åì_height
 - 
Àvñ
 - 1;

206 
	`ut_ad
(
idx
 < 
num
);

208 
found_node
 = &(*
bå_cur
->
πr_öfo
->
∑ª¡_∑th
)[
idx
];

210 
node_visô_t
 *
node
;

212 
num
 > 0) {

213 
node
 = &(*
bå_cur
->
πr_öfo
->
∑ª¡_∑th
)[
num
 - 1];

215 i‡(
node
->
Àvñ
 ==Üevel) {

216 
found_node
 = 
node
;

219 
num
--;

223 
	`muãx_exô
(&
bå_cur
->
πr_öfo
->
πr_∑th_muãx
);

225  (
found_node
);

226 
	}
}

230 
UNIV_INLINE


231 
bå_pcur_t
 *
	$πr_gë_∑ª¡_curs‹
(

232 
bå_cur_t
 *
bå_cur
,

233 
ulöt
 
Àvñ
,

234 
ulöt
 
is_ö£π
)

236 
node_visô_t
 *
found_node
 = 
	`πr_gë_∑ª¡_node
(
bå_cur
, 
Àvñ
, 
is_ö£π
);

238  ((
found_node
Ë? found_node->
curs‹
 : 
nuŒ±r
);

239 
	}
}

242 
UNIV_INLINE


243 
	$πr_öfo_ªöô_ö_curs‹
(

245 
bå_cur_t
 *
curs‹
,

246 
di˘_ödex_t
 *
ödex
,

247 
boﬁ
 
√ed_¥dt
)

250 
	`πr_˛ón_πr_öfo
(
curs‹
->
πr_öfo
, 
Ál£
);

251 
	`πr_öô_πr_öfo
(
curs‹
->
πr_öfo
, 
√ed_¥dt
, curs‹, 
ödex
, 
åue
);

252 
	}
}

	@gis0type.h

33 #i‚de‡
gis0ty≥_h


34 
	#gis0ty≥_h


	)

36 
	~"univ.i
"

38 
	~"buf0buf.h
"

39 
	~"d©a0ty≥.h
"

40 
	~"d©a0ty≥s.h
"

41 
	~"di˘0ty≥s.h
"

42 
	~"gis0geo.h
"

43 
	~"hash0hash.h
"

44 
	~"mem0mem.h
"

45 
	~"que0ty≥s.h
"

46 
	~"ªm0ty≥s.h
"

47 
	~"row0ty≥s.h
"

48 
	~"åx0ty≥s.h
"

49 
	~"ut0√w.h
"

50 
	~"ut0vec.h
"

51 
	~"ut0wqueue.h
"

53 
	~<li°
>

54 
	~<ve˘‹
>

57 
ib_uöt32_t
 
	tnode_£q_t
;

60 
	snode_visô
 {

61 
∑ge_no_t
 
	m∑ge_no
;

62 
node_£q_t
 
	m£q_no
;

63 
ulöt
 
	mÀvñ
;

64 
∑ge_no_t
 
	mchûd_no
;

66 
bå_pcur_t
 *
	mcurs‹
;

70 
	mmbr_öc
;

72 } 
	tnode_visô_t
;

74 
	g°d
::
	tve˘‹
<
	tnode_visô_t
, 
	tut_Æloˇt‹
<node_visô_t>> 
	tπr_node_∑th_t
;

76 
	sπr_ªc
 {

77 
ªc_t
 *
	mr_ªc
;

78 
boﬁ
 
	mlocked
;

79 } 
	tπr_ªc_t
;

81 
	g°d
::
	tve˘‹
<
	tπr_ªc_t
, 
	tut_Æloˇt‹
<πr_ªc_t>> 
	tπr_ªc_ve˘‹
;

84 
	sm©ched_ªc
 {

85 
byã
 *
	mbuÂ
;

86 
byã
 
	mªc_buf
[
UNIV_PAGE_SIZE_MAX
 * 2];

88 
buf_block_t
 
	mblock
;

89 
ulöt
 
	mu£d
;

90 
πr_ªc_ve˘‹
 *
	mm©ched_ªcs
;

91 
ib_muãx_t
 
	mπr_m©ch_muãx
;

93 
boﬁ
 
	mvÆid
;

96 
boﬁ
 
	mlocked
;

97 } 
	tm©ched_ªc_t
;

100 
	#RTR_MAX_LEVELS
 100

	)

105 
	#RTR_LEAF_LATCH_NUM
 3

	)

108 
	sπr_öfo
 {

109 
πr_node_∑th_t
 *
	m∑th
;

110 
πr_node_∑th_t
 *
	m∑ª¡_∑th
;

113 
m©ched_ªc_t
 *
	mm©ches
;

114 
ib_muãx_t
 
	mπr_∑th_muãx
;

116 
buf_block_t
 *
	måì_blocks
[
RTR_MAX_LEVELS
 + 
RTR_LEAF_LATCH_NUM
];

119 
ulöt
 
	måì_ßvïoöts
[
RTR_MAX_LEVELS
 + 
RTR_LEAF_LATCH_NUM
];

122 
πr_mbr_t
 
	mmbr
;

123 
que_thr_t
 *
	mthr
;

124 
mem_hóp_t
 *
	mhóp
;

125 
bå_cur_t
 *
	mcurs‹
;

126 
di˘_ödex_t
 *
	mödex
;

127 
boﬁ
 
	m√ed_¥dt_lock
;

130 
boﬁ
 
	m√ed_∑ge_lock
;

133 
boﬁ
 
	mÆloˇãd
;

135 
boﬁ
 
	mmbr_adj
;

137 
boﬁ
 
	mfd_dñ
;

138 c⁄° 
dtu∂e_t
 *
	m£¨ch_tu∂e
;

140 
∑ge_cur_mode_t
 
	m£¨ch_mode
;

144 
boﬁ
 *
	mis_dup
;

146 } 
	tπr_öfo_t
;

148 
	g°d
::
	tli°
<
	tπr_öfo_t
 *, 
	tut_Æloˇt‹
<πr_öfo_à*>> 
	tπr_öfo_a˘ive
;

151 
	sπr_öfo_åack
 {

152 
πr_öfo_a˘ive
 *
	mπr_a˘ive
;

153 
ib_muãx_t
 
	mπr_a˘ive_muãx
;

156 } 
	tπr_öfo_åack_t
;

159 
	sπªe_s¢
 {

160 
ib_muãx_t
 
	mmuãx
;

161 
node_£q_t
 
	m£q_no
;

162 } 
	tπr_s¢_t
;

166 
	sπr_ªc_move
 {

167 
ªc_t
 *
	mﬁd_ªc
;

168 
ªc_t
 *
	m√w_ªc
;

169 
boﬁ
 
	mmoved
;

170 } 
	tπr_ªc_move_t
;

	@ha0ha.h

33 #i‚de‡
ha0ha_h


34 
	#ha0ha_h


	)

36 
	~"univ.i
"

38 
	~"buf0ty≥s.h
"

39 
	~"hash0hash.h
"

40 
	~"∑ge0ty≥s.h
"

41 
	~"ªm0ty≥s.h
"

48 
UNIV_INLINE


49 c⁄° 
ªc_t
 *
ha_£¨ch_™d_gë_d©a
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
fﬁd
);

54 
iboﬁ
 
ha_£¨ch_™d_upd©e_if_found_func
(

55 
hash_èbÀ_t
 *
èbÀ
,

56 
ulöt
 
fﬁd
,

57 c⁄° 
ªc_t
 *
d©a
,

58 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


59 
buf_block_t
 *
√w_block
,

61 c⁄° 
ªc_t
 *
√w_d©a
);

63 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


71 
	#ha_£¨ch_™d_upd©e_if_found
(
èbÀ
, 
fﬁd
, 
d©a
, 
√w_block
, 
√w_d©a
) \

72 
	`ha_£¨ch_™d_upd©e_if_found_func
(
èbÀ
, 
fﬁd
, 
d©a
, 
√w_block
, 
√w_d©a
)

	)

81 
	#ha_£¨ch_™d_upd©e_if_found
(
èbÀ
, 
fﬁd
, 
d©a
, 
√w_block
, 
√w_d©a
) \

82 
	`ha_£¨ch_™d_upd©e_if_found_func
(
èbÀ
, 
fﬁd
, 
d©a
, 
√w_d©a
)

	)

88 
hash_èbÀ_t
 *
ib_¸óã
(

89 
ulöt
 
n
,

90 
œtch_id_t
 
id
,

91 
ulöt
 
n_muãxes
,

93 
ulöt
 
ty≥
);

105 
hash_èbÀ_t
 *
ib_ª¸óã
(hash_èbÀ_à*
èbÀ
, 
ulöt
 
n
);

108 
ha_˛ór
(
hash_èbÀ_t
 *
èbÀ
);

114 
iboﬁ
 
ha_ö£π_f‹_fﬁd_func
(

115 
hash_èbÀ_t
 *
èbÀ
,

116 
ulöt
 
fﬁd
,

120 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


121 
buf_block_t
 *
block
,

123 c⁄° 
ªc_t
 *
d©a
);

125 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


135 
	#ha_ö£π_f‹_fﬁd
(
t
, 
f
, 
b
, 
d
) \

137 
	`ha_ö£π_f‹_fﬁd_func
(
t
, 
f
, 
b
, 
d
); \

138 
	`MONITOR_INC
(
MONITOR_ADAPTIVE_HASH_ROW_ADDED
); \

139 } 0)

	)

150 
	#ha_ö£π_f‹_fﬁd
(
t
, 
f
, 
b
, 
d
) \

152 
	`ha_ö£π_f‹_fﬁd_func
(
t
, 
f
, 
d
); \

153 
	`MONITOR_INC
(
MONITOR_ADAPTIVE_HASH_ROW_ADDED
); \

154 } 0)

	)

163 
UNIV_INLINE


164 
iboﬁ
 
ha_£¨ch_™d_dñëe_if_found
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
fﬁd
,

165 c⁄° 
ªc_t
 *
d©a
);

167 #i‚de‡
UNIV_HOTBACKUP


174 
ha_ªmove_Æl_nodes_to_∑ge
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
fﬁd
,

175 c⁄° 
∑ge_t
 *
∑ge
);

177 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


180 
iboﬁ
 
ha_vÆid©e
(
hash_èbÀ_t
 *
èbÀ
,

181 
ulöt
 
°¨t_ödex
,

182 
ulöt
 
íd_ödex
);

188 
ha_¥öt_öfo
(
FILE
 *
fûe
, 
hash_èbÀ_t
 *
èbÀ
);

193 
	sha_node_t
 {

194 
ulöt
 
	mfﬁd
;

195 
ha_node_t
 *
	m√xt
;

196 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


197 
buf_block_t
 *
	mblock
;

199 c⁄° 
ªc_t
 *
	md©a
;

202 #ifde‡
UNIV_DEBUG


209 
UNIV_INLINE


210 
hash_as£π_ˇn_modify
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
fﬁd
);

217 
UNIV_INLINE


218 
hash_as£π_ˇn_£¨ch
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
fﬁd
);

220 
	#hash_as£π_ˇn_modify
(
t
, 
f
)

	)

221 
	#hash_as£π_ˇn_£¨ch
(
t
, 
f
)

	)

224 
	~"ha0ha.ic
"

	@ha0ha.ic

33 
	~"bå0ty≥s.h
"

34 
	~"mem0mem.h
"

35 
	~"ut0∫d.h
"

38 
ha_dñëe_hash_node
(
hash_èbÀ_t
 *
èbÀ
,

39 
ha_node_t
 *
dñ_node
);

43 
UNIV_INLINE


44 c⁄° 
ªc_t
 *
	$ha_node_gë_d©a
(c⁄° 
ha_node_t
 *
node
)

46  (
node
->
d©a
);

47 
	}
}

50 
UNIV_INLINE


51 
ha_node_£t_d©a_func
(

52 
ha_node_t
 *
node
,

53 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


54 
buf_block_t
 *
block
,

56 c⁄° 
ªc_t
 *
d©a
)

58 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


59 
	gnode
->
	gblock
 = 
block
;

61 
	gnode
->
	gd©a
 = 
d©a
;

64 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


69 
	#ha_node_£t_d©a
(
n
, 
b
, 
d
Ë
	`ha_node_£t_d©a_func
“, b, d)

	)

75 
	#ha_node_£t_d©a
(
n
, 
b
, 
d
Ë
	`ha_node_£t_d©a_func
“, d)

	)

80 
UNIV_INLINE


81 
ha_node_t
 *
	$ha_chaö_gë_√xt
(c⁄° 
ha_node_t
 *
node
)

83  (
node
->
√xt
);

84 
	}
}

88 
UNIV_INLINE


89 
ha_node_t
 *
	$ha_chaö_gë_fú°
(

90 
hash_èbÀ_t
 *
èbÀ
,

91 
ulöt
 
fﬁd
)

94 (
ha_node_t
 *)
	`hash_gë_¡h_˚Œ
(
èbÀ
, 
	`hash_ˇlc_hash
(
fﬁd
,ÅabÀ))->
node
);

95 
	}
}

97 #ifde‡
UNIV_DEBUG


102 
UNIV_INLINE


103 
	$hash_as£π_ˇn_modify
(
hash_èbÀ_t
 *
èbÀ
,

104 
ulöt
 
fﬁd
)

106 i‡(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_MUTEX
) {

107 
	`ut_ad
(
	`muãx_own
(
	`hash_gë_muãx
(
èbÀ
, 
fﬁd
)));

108 } i‡(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_RW_LOCK
) {

109 #i‡
	`deföed
(
UNIV_DEBUG
Ë&& !deföed(
UNIV_HOTBACKUP
)

110 
rw_lock_t
 *
lock
 = 
	`hash_gë_lock
(
èbÀ
, 
fﬁd
);

111 
	`ut_ad
(
	`rw_lock_own
(
lock
, 
RW_LOCK_X
));

114 
	`ut_ad
(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_NONE
);

116 
	}
}

121 
UNIV_INLINE


122 
	$hash_as£π_ˇn_£¨ch
(
hash_èbÀ_t
 *
èbÀ
,

123 
ulöt
 
fﬁd
)

125 i‡(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_MUTEX
) {

126 
	`ut_ad
(
	`muãx_own
(
	`hash_gë_muãx
(
èbÀ
, 
fﬁd
)));

127 } i‡(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_RW_LOCK
) {

128 #i‡
	`deföed
(
UNIV_DEBUG
Ë&& !deföed(
UNIV_HOTBACKUP
)

129 
rw_lock_t
 *
lock
 = 
	`hash_gë_lock
(
èbÀ
, 
fﬁd
);

130 
	`ut_ad
(
	`rw_lock_own
(
lock
, 
RW_LOCK_X
Ë||Ñw_lock_own÷ock, 
RW_LOCK_S
));

133 
	`ut_ad
(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_NONE
);

135 
	}
}

141 
UNIV_INLINE


142 c⁄° 
ªc_t
 *
	$ha_£¨ch_™d_gë_d©a
(

143 
hash_èbÀ_t
 *
èbÀ
,

144 
ulöt
 
fﬁd
)

146 
	`hash_as£π_ˇn_£¨ch
(
èbÀ
, 
fﬁd
);

147 
	`ut_ad
(
bå_£¨ch_íabÀd
);

149 c⁄° 
ha_node_t
 *
node
 = 
	`ha_chaö_gë_fú°
(
èbÀ
, 
fﬁd
);Çodê!
nuŒ±r
;

150 
node
 = 
	`ha_chaö_gë_√xt
(node)) {

151 i‡(
node
->
fﬁd
 == fold) {

152  (
node
->
d©a
);

156  (
nuŒ±r
);

157 
	}
}

161 
UNIV_INLINE


162 
ha_node_t
 *
	$ha_£¨ch_wôh_d©a
(

163 
hash_èbÀ_t
 *
èbÀ
,

164 
ulöt
 
fﬁd
,

165 c⁄° 
ªc_t
 *
d©a
)

167 
ha_node_t
 *
node
;

169 
	`hash_as£π_ˇn_£¨ch
(
èbÀ
, 
fﬁd
);

171 
	`ut_ad
(
bå_£¨ch_íabÀd
);

173 
node
 = 
	`ha_chaö_gë_fú°
(
èbÀ
, 
fﬁd
);

175 
node
) {

176 i‡(
node
->
d©a
 == data) {

177  (
node
);

180 
node
 = 
	`ha_chaö_gë_√xt
(node);

183  (
nuŒ±r
);

184 
	}
}

189 
UNIV_INLINE


190 
iboﬁ
 
	$ha_£¨ch_™d_dñëe_if_found
(

191 
hash_èbÀ_t
 *
èbÀ
,

192 
ulöt
 
fﬁd
,

193 c⁄° 
ªc_t
 *
d©a
)

195 
ha_node_t
 *
node
;

197 
	`hash_as£π_ˇn_modify
(
èbÀ
, 
fﬁd
);

198 
	`ut_ad
(
bå_£¨ch_íabÀd
);

200 
node
 = 
	`ha_£¨ch_wôh_d©a
(
èbÀ
, 
fﬁd
, 
d©a
);

202 i‡(
node
) {

203 
	`ha_dñëe_hash_node
(
èbÀ
, 
node
);

205  (
TRUE
);

208  (
FALSE
);

209 
	}
}

	@ha0storage.h

35 #i‚de‡
ha0°‹age_h


36 
	#ha0°‹age_h


	)

38 
	~"univ.i
"

42 
	#HA_STORAGE_DEFAULT_HEAP_BYTES
 1024

	)

46 
	#HA_STORAGE_DEFAULT_HASH_CELLS
 4096

	)

49 
	gha_°‹age_t
;

57 
UNIV_INLINE


58 
ha_°‹age_t
 *
ha_°‹age_¸óã
(
ulöt
 
öôül_hóp_byãs
,

59 
ulöt
 
öôül_hash_˚Œs
);

70 c⁄° *
ha_°‹age_put_memlim
(

71 
ha_°‹age_t
 *
°‹age
,

72 c⁄° *
d©a
,

73 
ulöt
 
d©a_Àn
,

74 
ulöt
 
memlim
);

81 
	#ha_°‹age_put
(
°‹age
, 
d©a
, 
d©a_Àn
) \

82 
	`ha_°‹age_put_memlim
((
°‹age
), (
d©a
), (
d©a_Àn
), 0)

	)

90 
	#ha_°‹age_put_°r
(
°‹age
, 
°r
) \

91 ((c⁄° *)
	`ha_°‹age_put
((
°‹age
), (
°r
), 
	`°æí
(°rË+ 1))

	)

101 
	#ha_°‹age_put_°r_memlim
(
°‹age
, 
°r
, 
memlim
) \

102 ((c⁄° *)
	`ha_°‹age_put_memlim
((
°‹age
), (
°r
), 
	`°æí
(str) + 1, \

103 (
memlim
)))

	)

108 
UNIV_INLINE


109 
ha_°‹age_em±y
(
ha_°‹age_t
 **
°‹age
);

114 
UNIV_INLINE


115 
ha_°‹age_‰ì
(
ha_°‹age_t
 *
°‹age
);

119 
UNIV_INLINE


120 
ulöt
 
ha_°‹age_gë_size
(c⁄° 
ha_°‹age_t
 *
°‹age
);

122 
	~"ha0°‹age.ic
"

	@ha0storage.ic

35 
	~"ha0°‹age.h
"

36 
	~"hash0hash.h
"

37 
	~"mem0mem.h
"

38 
	~"univ.i
"

41 
	sha_°‹age_t
 {

42 
mem_hóp_t
 *
	mhóp
;

44 
hash_èbÀ_t
 *
	mhash
;

49 
	sha_°‹age_node_t
 {

50 
ulöt
 
	md©a_Àn
;

51 c⁄° *
	md©a
;

52 
ha_°‹age_node_t
 *
	m√xt
;

58 
UNIV_INLINE


59 
ha_°‹age_t
 *
	$ha_°‹age_¸óã
(

60 
ulöt
 
öôül_hóp_byãs
,

61 
ulöt
 
öôül_hash_˚Œs
)

64 
ha_°‹age_t
 *
°‹age
;

65 
mem_hóp_t
 *
hóp
;

67 i‡(
öôül_hóp_byãs
 == 0) {

68 
öôül_hóp_byãs
 = 
HA_STORAGE_DEFAULT_HEAP_BYTES
;

71 i‡(
öôül_hash_˚Œs
 == 0) {

72 
öôül_hash_˚Œs
 = 
HA_STORAGE_DEFAULT_HASH_CELLS
;

77 
hóp
 = 
	`mem_hóp_¸óã
((
ha_°‹age_t
Ë+ 
öôül_hóp_byãs
);

79 
°‹age
 = (
ha_°‹age_t
 *)
	`mem_hóp_Æloc
(
hóp
, (ha_storage_t));

81 
°‹age
->
hóp
 = heap;

82 
°‹age
->
hash
 = 
	`hash_¸óã
(
öôül_hash_˚Œs
);

84  (
°‹age
);

85 
	}
}

90 
UNIV_INLINE


91 
	$ha_°‹age_em±y
(
ha_°‹age_t
 **
°‹age
)

93 
ha_°‹age_t
 
ãmp_°‹age
;

95 
ãmp_°‹age
.
hóp
 = (*
°‹age
)->heap;

96 
ãmp_°‹age
.
hash
 = (*
°‹age
)->hash;

98 
	`hash_èbÀ_˛ór
(
ãmp_°‹age
.
hash
);

99 
	`mem_hóp_em±y
(
ãmp_°‹age
.
hóp
);

101 *
°‹age
 =

102 (
ha_°‹age_t
 *)
	`mem_hóp_Æloc
(
ãmp_°‹age
.
hóp
, (ha_storage_t));

104 (*
°‹age
)->
hóp
 = 
ãmp_°‹age
.heap;

105 (*
°‹age
)->
hash
 = 
ãmp_°‹age
.hash;

106 
	}
}

111 
UNIV_INLINE


112 
	$ha_°‹age_‰ì
(
ha_°‹age_t
 *
°‹age
)

116 
	`hash_èbÀ_‰ì
(
°‹age
->
hash
);

117 
	`mem_hóp_‰ì
(
°‹age
->
hóp
);

118 
	}
}

122 
UNIV_INLINE


123 
ulöt
 
	$ha_°‹age_gë_size
(c⁄° 
ha_°‹age_t
 *
°‹age
)

125 
ulöt
 
ªt
;

127 
ªt
 = 
	`mem_hóp_gë_size
(
°‹age
->
hóp
);

130 
ªt
 +(
hash_èbÀ_t
);

131 
ªt
 +(
hash_˚Œ_t
Ë* 
	`hash_gë_n_˚Œs
(
°‹age
->
hash
);

133  (
ªt
);

134 
	}
}

	@ha_prototypes.h

36 #i‚de‡
HA_INNODB_PROTOTYPES_H


37 
	#HA_INNODB_PROTOTYPES_H


	)

39 
	~"univ.i
"

42 
˛ass
 
	gha_önoba£
;

43 
˛ass
 
	gTHD
;

44 
˛ass
 
	gMDL_tickë
;

45 
	gCHARSET_INFO
;

46 
	gdi˘_èbÀ_t
;

56 
ulöt
 
önoba£_øw_f‹m©
(c⁄° *
d©a
,

57 
ulöt
 
d©a_Àn
,

59 
ulöt
 
ch¨£t_cﬁl
,

60 *
buf
,

61 
ulöt
 
buf_size
);

68 
önoba£_quŸe_idítifõr
(
FILE
 *
fûe
, 
åx_t
 *
åx
, c⁄° *
id
);

75 
	g°d
::
°rög
 
önoba£_quŸe_idítifõr
(
åx_t
 *
åx
, c⁄° *
id
);

79 *
önoba£_c⁄vît_«me
(

80 *
buf
,

81 
ulöt
 
buÊí
,

82 c⁄° *
id
,

83 
ulöt
 
idÀn
,

84 
THD
 *
thd
);

92 
iboﬁ
 
thd_is_ª∂iˇti⁄_¶ave_thªad
(
THD
 *
thd
);

99 
iboﬁ
 
thd_has_edôed_n⁄å™s_èbÀs
(
THD
 *
thd
);

106 
önoba£_mysql_¥öt_thd
(
FILE
 *
f
, 
THD
 *
thd
, 
uöt
 
max_quîy_Àn
);

115 
ulöt
 
gë_önoba£_ty≥_‰om_mysql_ty≥
(ulöà*
unsig√d_Êag
, c⁄° *
f
);

121 
önoba£_gë_c£t_width
(
ulöt
 
c£t
, ulöà*
mbmöÀn
, ulöà*
mbmaxÀn
);

125 
önoba£_°rˇ£cmp
(c⁄° *
a
,

126 c⁄° *
b
);

131 c⁄° *
önoba£_ba£«me
(c⁄° *
∑th_«me
);

135 
iboﬁ
 
thd_is_£À˘
(c⁄° 
THD
 *
thd
);

138 
önoba£_ˇ£dn_°r
(*
a
);

141 
önoba£_ˇ£dn_∑th
(*
a
);

145 c⁄° 
CHARSET_INFO
 *
önoba£_gë_ch¨£t
(

146 
THD
 *
thd
);

153 c⁄° *
önoba£_gë_°mt_unß„
(
THD
 *
thd
, 
size_t
 *
Àngth
);

162 
size_t
 
önoba£_gë_°mt_ß„
(
THD
 *
thd
, *
buf
, size_à
buÊí
);

169 
ulöt
 
önoba£_gë_©_mo°_n_mbch¨s
(

170 
ulöt
 
ch¨£t_id
,

171 
ulöt
 
¥efix_Àn
,

174 
ulöt
 
d©a_Àn
,

175 c⁄° *
°r
);

181 
boﬁ
 
önoba£_should_madvi£_buf_poﬁ
();

186 
önoba£_dißbÀ_c‹e_dump
();

190 
ul⁄g
 
thd_lock_waô_timeout
(
THD
 *
thd
);

193 
thd_£t_lock_waô_time
(
THD
 *
thd
,

194 
ulöt
 
vÆue
);

200 c⁄° *
thd_önodb_tmpdú
(
THD
 *
thd
);

202 #ifde‡
UNIV_DEBUG


207 **
thd_önodb_öãΩªãr_ouçut
(
THD
 *
thd
);

213 **
thd_önodb_öãΩªãr
(
THD
 *
thd
);

220 
ulöt
 
önoba£_gë_èbÀ_ˇche_size
();

227 
ulöt
 
önoba£_gë_lowî_ˇ£_èbÀ_«mes
();

235 
önoba£_noˇ£_com∑ª
(c⁄° *
cs
, c⁄° *
s1
, c⁄° *
s2
);

239 
boﬁ
 
thd_åx_is_ªad_⁄ly
(
THD
 *
thd
);

247 
THD
 *
thd_åx_¨bôøã
(THD *
ªque°‹
, THD *
hﬁdî
);

253 
thd_åx_¥i‹ôy
(
THD
 *
thd
);

258 
iboﬁ
 
thd_åx_is_auto_commô
(
THD
 *
thd
);

262 
ulöt
 
thd_°¨t_time_ö_£cs
(
THD
 *
thd
);

269 
önoba£_f‹m©_«me
(*
buf
, 
ulöt
 
buÊí
, c⁄° *
«me
);

272 
	eib_log_Àvñ_t
 {

273 
	mIB_LOG_LEVEL_INFO
,

274 
	mIB_LOG_LEVEL_WARN
,

275 
	mIB_LOG_LEVEL_ERROR
,

276 
	mIB_LOG_LEVEL_FATAL


289 
	$ib_îrf
(
THD
 *
thd
,

290 
ib_log_Àvñ_t
 
Àvñ
,

291 
ib_uöt32_t
 
code
,

292 c⁄° *
f‹m©
,

294 
	`MY_ATTRIBUTE
((
	`f‹m©
(
¥ötf
, 4, 5)));

305 
	`ib_£ndîrf
(
THD
 *
thd
,

306 
ib_log_Àvñ_t
 
Àvñ
,

307 
ib_uöt32_t
 
code
,

310 c⁄° *
TROUBLESHOOTING_MSG
;

311 c⁄° *
TROUBLESHOOT_DATADICT_MSG
;

312 c⁄° *
BUG_REPORT_MSG
;

313 c⁄° *
FORCE_RECOVERY_MSG
;

314 c⁄° *
ERROR_CREATING_MSG
;

315 c⁄° *
OPERATING_SYSTEM_ERROR_MSG
;

316 c⁄° *
FOREIGN_KEY_CONSTRAINTS_MSG
;

317 c⁄° *
INNODB_PARAMETERS_MSG
;

321 c⁄° *
	`£rvî_gë_ho°«me
();

325 c⁄° *
	`önoba£_gë_îr_msg
(
îr‹_code
);

344 
ul⁄gl⁄g
 
	$önoba£_√xt_autoöc
(

345 
ul⁄gl⁄g
 
cuºít
,

346 
ul⁄gl⁄g
 
√ed
,

347 
ul⁄gl⁄g
 
°ï
,

348 
ul⁄gl⁄g
 
off£t
,

349 
ul⁄gl⁄g
 
max_vÆue
)

350 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

356 
boﬁ
 
	`önoba£_check_idítifõr_Àngth
(

357 c⁄° *
id
);

362 
uöt
 
	`önoba£_c⁄vît_to_sy°em_ch¨£t
(

363 *
to
,

364 c⁄° *
‰om
,

365 
ulöt
 
Àn
,

366 
uöt
 *
îr‹s
);

370 
uöt
 
	`önoba£_c⁄vît_to_fûíame_ch¨£t
(

371 *
to
,

372 c⁄° *
‰om
,

373 
ulöt
 
Àn
);

377 
	`ib_w¨n_row_too_big
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

382 
	~<my_i˝.h
>

384 
ICP_RESULT


385 
	$önoba£_ödex_c⁄d
(
ha_önoba£
 *
h
)

386 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

393 
	~<dur_¥›.h
>

395 
duøbûôy_¥›îtõs
 
	$thd_ªque°ed_duøbûôy
(

396 c⁄° 
THD
 *
thd
)

397 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

402 
	`önodb_£t_buf_poﬁ_size
(
buf_poﬁ_size
);

409 
åx_t
 *
	`check_åx_exi°s
(
THD
 *
thd
);

413 
	`önoba£_commô_low
(
åx_t
 *
åx
);

	@handler0alter.h

31 #i‚de‡
h™dÀr0Æãr_h


32 
	#h™dÀr0Æãr_h


	)

34 
	#ERROR_STR_LENGTH
 1024

	)

41 
önoba£_ªc_to_mysql
(
TABLE
 *
èbÀ
, c⁄° 
ªc_t
 *
ªc
,

42 c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
ulöt
 *
off£ts
);

48 
önoba£_fõlds_to_mysql
(
TABLE
 *
èbÀ
, c⁄° 
di˘_ödex_t
 *
ödex
,

49 c⁄° 
dfõld_t
 *
fõlds
);

55 
önoba£_row_to_mysql
(
TABLE
 *
èbÀ
, c⁄° 
di˘_èbÀ_t
 *
ôab
,

56 c⁄° 
dtu∂e_t
 *
row
);

59 
önoba£_ªc_ª£t
(
TABLE
 *
èbÀ
);

65 
	sib_£quí˚_t
 {

70 
ib_£quí˚_t
(
THD
 *
thd
, 
ul⁄gl⁄g
 
°¨t_vÆue
, ul⁄gl⁄g 
max_vÆue
);

74 
ul⁄gl⁄g
 
	m›î©‹
++(Ë
	mUNIV_NOTHROW
;

78 
boﬁ
 
eof
(Ëc⁄° 
	mUNIV_NOTHROW
 {  (
	mm_eof
); }

82 
	mib_£quí˚_t
 &
	m›î©‹
=(c⁄° 
ib_£quí˚_t
 &
ö
) {

83 
ut_ad
(
ö
.
m_√xt_vÆue
 > 0);

84 
ut_ad
(
ö
.
m_max_vÆue
 == m_max_value);

85 
	mm_√xt_vÆue
 = 
ö
.
m_√xt_vÆue
;

86 
	mm_ö¸emít
 = 
ö
.
m_ö¸emít
;

87 
	mm_off£t
 = 
ö
.
m_off£t
;

88 
	mm_eof
 = 
ö
.
m_eof
;

89  (*
	mthis
);

93 
ul⁄gl⁄g
 
œ°
(Ëc⁄° 
	mUNIV_NOTHROW
 {

94 
ut_ad
(
m_√xt_vÆue
 > 0);

96  (
	mm_√xt_vÆue
);

101 c⁄° 
ul⁄gl⁄g
 
	mm_max_vÆue
;

104 
ul⁄g
 
	mm_ö¸emít
;

107 
ul⁄g
 
	mm_off£t
;

110 
ul⁄gl⁄g
 
	mm_√xt_vÆue
;

113 
boﬁ
 
	mm_eof
;

	@hash0hash.h

33 #i‚de‡
hash0hash_h


34 
	#hash0hash_h


	)

36 
	~<°ddef.h
>

38 
	~"mem0mem.h
"

39 
	~"univ.i
"

40 #i‚de‡
UNIV_HOTBACKUP


41 
	~"sync0rw.h
"

44 
	ghash_èbÀ_t
;

45 
	ghash_˚Œ_t
;

47 *
	thash_node_t
;

50 
	#hash_¸óã
 
hash0_¸óã


	)

54 
	ehash_èbÀ_sync_t
 {

55 
	mHASH_TABLE_SYNC_NONE
 = 0,

58 
	mHASH_TABLE_SYNC_MUTEX
,

60 
	mHASH_TABLE_SYNC_RW_LOCK


67 
hash_èbÀ_t
 *
hash_¸óã
(
ulöt
 
n
);

69 #i‚de‡
UNIV_HOTBACKUP


77 
hash_¸óã_sync_obj
(
hash_èbÀ_t
 *
èbÀ
, 
hash_èbÀ_sync_t
 
ty≥
,

78 
œtch_id_t
 
id
, 
ulöt
 
n_sync_obj
);

82 
hash_èbÀ_‰ì
(
hash_èbÀ_t
 *
èbÀ
);

88 
UNIV_INLINE


89 
ulöt
 
hash_ˇlc_hash
(ulöà
fﬁd
, 
hash_èbÀ_t
 *
èbÀ
);

91 #i‚de‡
UNIV_HOTBACKUP


93 
	#HASH_ASSERT_OWN
(
TABLE
, 
FOLD
) \

94 
	`ut_ad
((
TABLE
)->
ty≥
 !
HASH_TABLE_SYNC_MUTEX
 || \

95 (
	`muãx_own
(
	`hash_gë_muãx
((
TABLE
), 
FOLD
))));

	)

97 
	#HASH_ASSERT_OWN
(
TABLE
, 
FOLD
)

	)

102 
	#HASH_INSERT
(
TYPE
, 
NAME
, 
TABLE
, 
FOLD
, 
DATA
) \

104 
hash_˚Œ_t
 *
˚Œ3333
; \

105 
TYPE
 *
°ru˘3333
; \

107 
	`HASH_ASSERT_OWN
(
TABLE
, 
FOLD
) \

109 (
DATA
)->
NAME
 = 
NULL
; \

111 
˚Œ3333
 = 
	`hash_gë_¡h_˚Œ
(
TABLE
, 
	`hash_ˇlc_hash
(
FOLD
, TABLE)); \

113 i‡(
˚Œ3333
->
node
 =
NULL
) { \

114 
˚Œ3333
->
node
 = 
DATA
; \

116 
°ru˘3333
 = (
TYPE
 *)
˚Œ3333
->
node
; \

118 
°ru˘3333
->
NAME
 !
NULL
) { \

119 
°ru˘3333
 = (
TYPE
 *)°ru˘3333->
NAME
; \

122 
°ru˘3333
->
NAME
 = 
DATA
; \

124 } 0)

	)

126 #ifde‡
UNIV_HASH_DEBUG


127 
	#HASH_ASSERT_VALID
(
DATA
Ë
	`ut_a
((*)(DATAË!(*)-1)

	)

128 
	#HASH_INVALIDATE
(
DATA
, 
NAME
Ë*(**)(&DATA->NAMEË(*)-1

	)

130 
	#HASH_ASSERT_VALID
(
DATA
) \

132 } 0)

	)

133 
	#HASH_INVALIDATE
(
DATA
, 
NAME
) \

135 } 0)

	)

140 
	#HASH_DELETE
(
TYPE
, 
NAME
, 
TABLE
, 
FOLD
, 
DATA
) \

142 
hash_˚Œ_t
 *
˚Œ3333
; \

143 
TYPE
 *
°ru˘3333
; \

145 
	`HASH_ASSERT_OWN
(
TABLE
, 
FOLD
) \

147 
˚Œ3333
 = 
	`hash_gë_¡h_˚Œ
(
TABLE
, 
	`hash_ˇlc_hash
(
FOLD
, TABLE)); \

149 i‡(
˚Œ3333
->
node
 =
DATA
) { \

150 
	`HASH_ASSERT_VALID
(
DATA
->
NAME
); \

151 
˚Œ3333
->
node
 = 
DATA
->
NAME
; \

153 
°ru˘3333
 = (
TYPE
 *)
˚Œ3333
->
node
; \

155 
°ru˘3333
->
NAME
 !
DATA
) { \

156 
°ru˘3333
 = (
TYPE
 *)°ru˘3333->
NAME
; \

157 
	`ut_a
(
°ru˘3333
); \

160 
°ru˘3333
->
NAME
 = 
DATA
->NAME; \

162 
	`HASH_INVALIDATE
(
DATA
, 
NAME
); \

163 } 0)

	)

167 
	#HASH_GET_FIRST
(
TABLE
, 
HASH_VAL
) \

168 (
	`hash_gë_¡h_˚Œ
(
TABLE
, 
HASH_VAL
)->
node
)

	)

172 
	#HASH_GET_NEXT
(
NAME
, 
DATA
Ë((DATA)->NAME)

	)

175 
	#HASH_SEARCH
(
NAME
, 
TABLE
, 
FOLD
, 
TYPE
, 
DATA
, 
ASSERTION
, 
TEST
) \

177 
	`HASH_ASSERT_OWN
(
TABLE
, 
FOLD
) \

179 (
DATA
Ë(
TYPE
)
	`HASH_GET_FIRST
(
TABLE
, 
	`hash_ˇlc_hash
(
FOLD
, TABLE)); \

180 
	`HASH_ASSERT_VALID
(
DATA
); \

182 (
DATA
Ë!
NULL
) { \

183 
ASSERTION
; \

184 i‡(
TEST
) { \

187 
	`HASH_ASSERT_VALID
(
	`HASH_GET_NEXT
(
NAME
, 
DATA
)); \

188 (
DATA
Ë(
TYPE
)
	`HASH_GET_NEXT
(
NAME
, DATA); \

191 }

	)

194 
	#HASH_SEARCH_ALL
(
NAME
, 
TABLE
, 
TYPE
, 
DATA
, 
ASSERTION
, 
TEST
) \

196 
ulöt
 
i3333
; \

198 
i3333
 = (
TABLE
)->
n_˚Œs
; i3333--;) { \

199 (
DATA
Ë(
TYPE
)
	`HASH_GET_FIRST
(
TABLE
, 
i3333
); \

201 (
DATA
Ë!
NULL
) { \

202 
	`HASH_ASSERT_VALID
(
DATA
); \

203 
ASSERTION
; \

205 i‡(
TEST
) { \

209 (
DATA
Ë(
TYPE
)
	`HASH_GET_NEXT
(
NAME
, DATA); \

212 i‡((
DATA
Ë!
NULL
) { \

216 } 0)

	)

222 
UNIV_INLINE


223 
hash_˚Œ_t
 *
hash_gë_¡h_˚Œ
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
n
);

226 
UNIV_INLINE


227 
hash_èbÀ_˛ór
(
hash_èbÀ_t
 *
èbÀ
);

231 
UNIV_INLINE


232 
ulöt
 
hash_gë_n_˚Œs
(
hash_èbÀ_t
 *
èbÀ
);

237 
	#HASH_DELETE_AND_COMPACT
(
TYPE
, 
NAME
, 
TABLE
, 
NODE
) \

239 
TYPE
 *
node111
; \

240 
TYPE
 *
t›_node111
; \

241 
hash_˚Œ_t
 *
˚Œ111
; \

242 
ulöt
 
fﬁd111
; \

244 
fﬁd111
 = (
NODE
)->
fﬁd
; \

246 
	`HASH_DELETE
(
TYPE
, 
NAME
, 
TABLE
, 
fﬁd111
, 
NODE
); \

248 
t›_node111
 = \

249 (
TYPE
 *)
	`mem_hóp_gë_t›
(
	`hash_gë_hóp
(
TABLE
, 
fﬁd111
), (TYPE)); \

254 i‡(
NODE
 !
t›_node111
) { \

257 *(
NODE
Ë*
t›_node111
; \

259 
˚Œ111
 = \

260 
	`hash_gë_¡h_˚Œ
(
TABLE
, 
	`hash_ˇlc_hash
(
t›_node111
->
fﬁd
, TABLE)); \

264 i‡(
˚Œ111
->
node
 =
t›_node111
) { \

267 
˚Œ111
->
node
 = 
NODE
; \

271 
node111
 = 
°©ic_ˇ°
<
TYPE
 *>(
˚Œ111
->
node
); \

273 
t›_node111
 !
	`HASH_GET_NEXT
(
NAME
, 
node111
)) { \

274 
node111
 = 
°©ic_ˇ°
<
TYPE
 *>(
	`HASH_GET_NEXT
(
NAME
,Çode111)); \

279 
node111
->
NAME
 = 
NODE
; \

285 
	`mem_hóp_‰ì_t›
(
	`hash_gë_hóp
(
TABLE
, 
fﬁd111
), (
TYPE
)); \

286 } 0)

	)

288 #i‚de‡
UNIV_HOTBACKUP


291 
	#HASH_MIGRATE
(
OLD_TABLE
, 
NEW_TABLE
, 
NODE_TYPE
, 
PTR_NAME
, 
FOLD_FUNC
) \

293 
ulöt
 
i2222
; \

294 
ulöt
 
˚Œ_cou¡2222
; \

296 
˚Œ_cou¡2222
 = 
	`hash_gë_n_˚Œs
(
OLD_TABLE
); \

298 
i2222
 = 0; i2222 < 
˚Œ_cou¡2222
; i2222++) { \

299 
NODE_TYPE
 *
node2222
 = \

300 
°©ic_ˇ°
<
NODE_TYPE
 *>(
	`HASH_GET_FIRST
((
OLD_TABLE
), 
i2222
)); \

302 
node2222
) { \

303 
NODE_TYPE
 *
√xt2222
 = 
°©ic_ˇ°
<NODE_TYPE *>(
node2222
->
PTR_NAME
); \

304 
ulöt
 
fﬁd2222
 = 
	`FOLD_FUNC
(
node2222
); \

306 
	`HASH_INSERT
(
NODE_TYPE
, 
PTR_NAME
, (
NEW_TABLE
), 
fﬁd2222
, 
node2222
); \

308 
node2222
 = 
√xt2222
; \

311 } 0)

	)

317 
UNIV_INLINE


318 
ulöt
 
hash_gë_sync_obj_ödex
(
hash_èbÀ_t
 *
èbÀ
, ulöà
fﬁd
);

324 
UNIV_INLINE


325 
mem_hóp_t
 *
hash_gë_¡h_hóp
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
i
);

331 
UNIV_INLINE


332 
mem_hóp_t
 *
hash_gë_hóp
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
fﬁd
);

338 
UNIV_INLINE


339 
ib_muãx_t
 *
hash_gë_¡h_muãx
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
i
);

345 
UNIV_INLINE


346 
rw_lock_t
 *
hash_gë_¡h_lock
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
i
);

352 
UNIV_INLINE


353 
ib_muãx_t
 *
hash_gë_muãx
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
fﬁd
);

359 
UNIV_INLINE


360 
rw_lock_t
 *
hash_gë_lock
(
hash_èbÀ_t
 *
èbÀ
, 
ulöt
 
fﬁd
);

368 
UNIV_INLINE


369 
rw_lock_t
 *
hash_lock_s_c⁄fúm
‘w_lock_à*
hash_lock
, 
hash_èbÀ_t
 *
èbÀ
,

370 
ulöt
 
fﬁd
);

378 
UNIV_INLINE


379 
rw_lock_t
 *
hash_lock_x_c⁄fúm
‘w_lock_à*
hash_lock
, 
hash_èbÀ_t
 *
èbÀ
,

380 
ulöt
 
fﬁd
);

383 
hash_lock_x_Æl
(
hash_èbÀ_t
 *
èbÀ
);

386 
hash_u∆ock_x_Æl
(
hash_èbÀ_t
 *
èbÀ
);

391 
hash_u∆ock_x_Æl_but
(
hash_èbÀ_t
 *
èbÀ
, 
rw_lock_t
 *
kìp_lock
);

394 
	#hash_gë_hóp
(
èbÀ
, 
fﬁd
Ë(—abÀ)->
hóp
)

	)

395 
	#hash_lock_x_Æl
(
t
Ë(()0)

	)

396 
	#hash_u∆ock_x_Æl
(
t
Ë(()0)

	)

397 
	#hash_u∆ock_x_Æl_but
(
t
, 
l
Ë(()0)

	)

400 
	shash_˚Œ_t
 {

401 *
	mnode
;

405 
	shash_èbÀ_t
 {

406 
hash_èbÀ_sync_t
 
	mty≥
;

407 #i‡
deföed
 
UNIV_AHI_DEBUG
 || deföed 
UNIV_DEBUG


408 #i‚de‡
UNIV_HOTBACKUP


409 
iboﬁ
 
	mad≠tive
;

414 
ulöt
 
	mn_˚Œs
;

415 
hash_˚Œ_t
 *
	m˚Œs
;

416 #i‚de‡
UNIV_HOTBACKUP


417 
ulöt
 
	mn_sync_obj
;

423 
ib_muãx_t
 *
	mmuãxes
;

426 
rw_lock_t
 *
	mrw_locks
;

429 } 
	msync_obj
;

431 
mem_hóp_t
 **
	mhóps
;

437 
mem_hóp_t
 *
	mhóp
;

438 #ifde‡
UNIV_DEBUG


439 
ulöt
 
	mmagic_n
;

440 
	#HASH_TABLE_MAGIC_N
 76561114

	)

444 
	~"hash0hash.ic
"

	@hash0hash.ic

33 
	~"ut0∫d.h
"

37 
UNIV_INLINE


38 
hash_˚Œ_t
 *
	$hash_gë_¡h_˚Œ
(
hash_èbÀ_t
 *
èbÀ
,

39 
ulöt
 
n
)

41 
	`ut_ad
(
èbÀ
);

42 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

43 
	`ut_ad
(
n
 < 
èbÀ
->
n_˚Œs
);

45  (
èbÀ
->
˚Œs
 + 
n
);

46 
	}
}

49 
UNIV_INLINE


50 
	$hash_èbÀ_˛ór
(
hash_èbÀ_t
 *
èbÀ
)

52 
	`ut_ad
(
èbÀ
);

53 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

54 
	`mem£t
(
èbÀ
->
˚Œs
, 0x0,ÅabÀ->
n_˚Œs
 * (*table->cells));

55 
	}
}

59 
UNIV_INLINE


60 
ulöt
 
	$hash_gë_n_˚Œs
(
hash_èbÀ_t
 *
èbÀ
)

62 
	`ut_ad
(
èbÀ
);

63 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

64  (
èbÀ
->
n_˚Œs
);

65 
	}
}

69 
UNIV_INLINE


70 
ulöt
 
	$hash_ˇlc_hash
(
ulöt
 
fﬁd
,

71 
hash_èbÀ_t
 *
èbÀ
)

73 
	`ut_ad
(
èbÀ
);

74 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

75  (
	`ut_hash_ulöt
(
fﬁd
, 
èbÀ
->
n_˚Œs
));

76 
	}
}

78 #i‚de‡
UNIV_HOTBACKUP


81 
UNIV_INLINE


82 
ulöt
 
	$hash_gë_sync_obj_ödex
(
hash_èbÀ_t
 *
èbÀ
,

83 
ulöt
 
fﬁd
)

85 
	`ut_ad
(
èbÀ
);

86 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

87 
	`ut_ad
(
èbÀ
->
ty≥
 !
HASH_TABLE_SYNC_NONE
);

88 
	`ut_ad
(
	`ut_is_2pow
(
èbÀ
->
n_sync_obj
));

89  (
	`ut_2pow_ªmaödî
(
	`hash_ˇlc_hash
(
fﬁd
, 
èbÀ
),ÅabÀ->
n_sync_obj
));

90 
	}
}

94 
UNIV_INLINE


95 
mem_hóp_t
 *
	$hash_gë_¡h_hóp
(
hash_èbÀ_t
 *
èbÀ
,

96 
ulöt
 
i
)

98 
	`ut_ad
(
èbÀ
);

99 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

100 
	`ut_ad
(
èbÀ
->
ty≥
 !
HASH_TABLE_SYNC_NONE
);

101 
	`ut_ad
(
i
 < 
èbÀ
->
n_sync_obj
);

103  (
èbÀ
->
hóps
[
i
]);

104 
	}
}

108 
UNIV_INLINE


109 
mem_hóp_t
 *
	$hash_gë_hóp
(
hash_èbÀ_t
 *
èbÀ
,

110 
ulöt
 
fﬁd
)

112 
ulöt
 
i
;

114 
	`ut_ad
(
èbÀ
);

115 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

117 i‡(
èbÀ
->
hóp
) {

118  (
èbÀ
->
hóp
);

121 
i
 = 
	`hash_gë_sync_obj_ödex
(
èbÀ
, 
fﬁd
);

123  (
	`hash_gë_¡h_hóp
(
èbÀ
, 
i
));

124 
	}
}

128 
UNIV_INLINE


129 
ib_muãx_t
 *
	$hash_gë_¡h_muãx
(
hash_èbÀ_t
 *
èbÀ
,

130 
ulöt
 
i
)

132 
	`ut_ad
(
èbÀ
);

133 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

134 
	`ut_ad
(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_MUTEX
);

135 
	`ut_ad
(
i
 < 
èbÀ
->
n_sync_obj
);

137  (
èbÀ
->
sync_obj
.
muãxes
 + 
i
);

138 
	}
}

142 
UNIV_INLINE


143 
ib_muãx_t
 *
	$hash_gë_muãx
(
hash_èbÀ_t
 *
èbÀ
,

144 
ulöt
 
fﬁd
)

146 
ulöt
 
i
;

148 
	`ut_ad
(
èbÀ
);

149 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

151 
i
 = 
	`hash_gë_sync_obj_ödex
(
èbÀ
, 
fﬁd
);

153  (
	`hash_gë_¡h_muãx
(
èbÀ
, 
i
));

154 
	}
}

158 
UNIV_INLINE


159 
rw_lock_t
 *
	$hash_gë_¡h_lock
(
hash_èbÀ_t
 *
èbÀ
,

160 
ulöt
 
i
)

162 
	`ut_ad
(
èbÀ
);

163 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

164 
	`ut_ad
(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_RW_LOCK
);

165 
	`ut_ad
(
i
 < 
èbÀ
->
n_sync_obj
);

167  (
èbÀ
->
sync_obj
.
rw_locks
 + 
i
);

168 
	}
}

172 
UNIV_INLINE


173 
rw_lock_t
 *
	$hash_gë_lock
(
hash_èbÀ_t
 *
èbÀ
,

174 
ulöt
 
fﬁd
)

176 
ulöt
 
i
;

178 
	`ut_ad
(
èbÀ
);

179 
	`ut_ad
(
èbÀ
->
ty≥
 =
HASH_TABLE_SYNC_RW_LOCK
);

180 
	`ut_ad
(
èbÀ
->
magic_n
 =
HASH_TABLE_MAGIC_N
);

182 
i
 = 
	`hash_gë_sync_obj_ödex
(
èbÀ
, 
fﬁd
);

184  (
	`hash_gë_¡h_lock
(
èbÀ
, 
i
));

185 
	}
}

193 
UNIV_INLINE


194 
rw_lock_t
 *
	$hash_lock_s_c⁄fúm
(
rw_lock_t
 *
hash_lock
, 
hash_èbÀ_t
 *
èbÀ
,

195 
ulöt
 
fﬁd
) {

196 
	`ut_ad
(
	`rw_lock_own
(
hash_lock
, 
RW_LOCK_S
));

198 
rw_lock_t
 *
hash_lock_tmp
 = 
	`hash_gë_lock
(
èbÀ
, 
fﬁd
);

200 
hash_lock_tmp
 !
hash_lock
) {

201 
	`rw_lock_s_u∆ock
(
hash_lock
);

202 
hash_lock
 = 
hash_lock_tmp
;

203 
	`rw_lock_s_lock
(
hash_lock
);

204 
hash_lock_tmp
 = 
	`hash_gë_lock
(
èbÀ
, 
fﬁd
);

207  (
hash_lock
);

208 
	}
}

216 
UNIV_INLINE


217 
rw_lock_t
 *
	$hash_lock_x_c⁄fúm
(
rw_lock_t
 *
hash_lock
, 
hash_èbÀ_t
 *
èbÀ
,

218 
ulöt
 
fﬁd
) {

219 
	`ut_ad
(
	`rw_lock_own
(
hash_lock
, 
RW_LOCK_X
));

221 
rw_lock_t
 *
hash_lock_tmp
 = 
	`hash_gë_lock
(
èbÀ
, 
fﬁd
);

223 
hash_lock_tmp
 !
hash_lock
) {

224 
	`rw_lock_x_u∆ock
(
hash_lock
);

225 
hash_lock
 = 
hash_lock_tmp
;

226 
	`rw_lock_x_lock
(
hash_lock
);

227 
hash_lock_tmp
 = 
	`hash_gë_lock
(
èbÀ
, 
fﬁd
);

230  (
hash_lock
);

231 
	}
}

	@ib0mutex.h

33 #i‚de‡
ib0muãx_h


34 
	#ib0muãx_h


	)

36 
	~"os0©omic.h
"

37 
	~"os0evít.h
"

38 
	~"sync0pﬁicy.h
"

39 
	~"ut0∫d.h
"

40 
	~"ut0ut.h
"

42 
	~<©omic
>

45 
	gãm∂©e
 <ãm∂©ê<
	gty≥«me
> 
˛ass
 
	gPﬁicy
 = 
NoPﬁicy
>

46 
	sOSTøckMuãx
 {

47 
Pﬁicy
<
	tOSTøckMuãx
> 
	tMuãxPﬁicy
;

49 
ex∂icô
 
OSTøckMuãx
(
boﬁ
 
de°roy_muãx_©_exô
 = 
åue
Ë
UNIV_NOTHROW
 {

50 
ut_d
(
m_‰ìd
 = 
åue
);

51 
ut_d
(
m_locked
 = 
Ál£
);

52 
ut_d
(
m_de°roy_©_exô
 = 
de°roy_muãx_©_exô
);

55 ~
OSTøckMuãx
(Ë
	mUNIV_NOTHROW
 { 
ut_ad
(!
m_de°roy_©_exô
 || !
m_locked
); }

61 
öô
(
œtch_id_t
 
id
, c⁄° *
fûíame
, 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

62 
ut_ad
(
m_‰ìd
);

63 
ut_ad
(!
m_locked
);

65 
	mm_muãx
.
öô
();

67 
ut_d
(
m_‰ìd
 = 
Ál£
);

69 
	mm_pﬁicy
.
öô
(*
this
, 
id
, 
fûíame
, 
löe
);

73 
de°roy
(Ë
	mUNIV_NOTHROW
 {

74 
ut_ad
(!
m_locked
);

75 
ut_ad
(
önodb_ˇŒög_exô
 || !
m_‰ìd
);

77 
	mm_muãx
.
de°roy
();

79 
ut_d
(
m_‰ìd
 = 
åue
);

81 
	mm_pﬁicy
.
de°roy
();

85 
exô
(Ë
	mUNIV_NOTHROW
 {

86 
ut_ad
(
m_locked
);

87 
ut_d
(
m_locked
 = 
Ál£
);

88 
ut_ad
(
önodb_ˇŒög_exô
 || !
m_‰ìd
);

90 
	mm_muãx
.
exô
();

98 
íãr
(
uöt32_t
 
max_•ös
, uöt32_à
max_dñay
, c⁄° *
fûíame
,

99 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

100 
ut_ad
(
önodb_ˇŒög_exô
 || !
m_‰ìd
);

102 
	mm_muãx
.
íãr
();

104 
ut_ad
(!
m_locked
);

105 
ut_d
(
m_locked
 = 
åue
);

109 
boﬁ
 
åy_lock
(Ë
	mUNIV_NOTHROW
 {

110 
ut_ad
(
önodb_ˇŒög_exô
 || !
m_‰ìd
);

112 
boﬁ
 
	mlocked
 = 
m_muãx
.
åy_lock
();

114 i‡(
	mlocked
) {

115 
ut_ad
(!
m_locked
);

116 
ut_d
(
m_locked
 = 
locked
);

119  (
	mlocked
);

122 #ifde‡
UNIV_DEBUG


124 
boﬁ
 
is_ow√d
(Ëc⁄° 
	mUNIV_NOTHROW
 {

125  (
	mm_locked
 && 
	mm_pﬁicy
.
is_ow√d
());

130 
	mMuãxPﬁicy
 &
pﬁicy
(Ë
	mUNIV_NOTHROW
 {  (
	mm_pﬁicy
); }

133 c⁄° 
	mMuãxPﬁicy
 &
pﬁicy
(Ëc⁄° 
	mUNIV_NOTHROW
 {  (
	mm_pﬁicy
); }

135 
	m¥iv©e
:

136 #ifde‡
UNIV_DEBUG


138 
boﬁ
 
m_‰ìd
;

141 
boﬁ
 
	mm_locked
;

144 
boﬁ
 
	mm_de°roy_©_exô
;

148 
OSMuãx
 
	mm_muãx
;

151 
MuãxPﬁicy
 
	mm_pﬁicy
;

154 #ifde‡
HAVE_IB_LINUX_FUTEX


156 
	~<löux/fuãx.h
>

157 
	~<sys/sysˇŒ.h
>

160 
	gãm∂©e
 <ãm∂©ê<
	gty≥«me
> 
˛ass
 
	gPﬁicy
 = 
NoPﬁicy
>

161 
	sTTASFuãxMuãx
 {

162 
Pﬁicy
<
	tTTASFuãxMuãx
> 
	tMuãxPﬁicy
;

164 
TTASFuãxMuãx
(Ë
	mUNIV_NOTHROW
 : 
m_lock_w‹d
(
MUTEX_STATE_UNLOCKED
) {

166 
ut_ad
(!((
ulöt
)&
m_lock_w‹d
 % (ulint)));

169 ~
TTASFuãxMuãx
(Ë{ 
ut_a
(
m_lock_w‹d
 =
MUTEX_STATE_UNLOCKED
); }

176 
öô
(
œtch_id_t
 
id
, c⁄° *
fûíame
, 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

177 
ut_a
(
m_lock_w‹d
 =
MUTEX_STATE_UNLOCKED
);

178 
	mm_pﬁicy
.
öô
(*
this
, 
id
, 
fûíame
, 
löe
);

182 
de°roy
(Ë
	mUNIV_NOTHROW
 {

184 
ut_a
(
m_lock_w‹d
 =
MUTEX_STATE_UNLOCKED
);

185 
	mm_pﬁicy
.
de°roy
();

193 
íãr
(
uöt32_t
 
max_•ös
, uöt32_à
max_dñay
, c⁄° *
fûíame
,

194 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

195 
uöt32_t
 
	mn_•ös
;

196 
lock_w‹d_t
 
	mlock
 = 
âas
(
max_•ös
, 
max_dñay
, 
n_•ös
);

205 
uöt32_t
 
	mn_waôs
;

207 i‡(
	mlock
 !
MUTEX_STATE_UNLOCKED
) {

208 i‡(
lock
 !
MUTEX_STATE_LOCKED
 || !
£t_waôîs
()) {

209 
n_waôs
 = 
waô
();

211 
	mn_waôs
 = 0;

215 
	mn_waôs
 = 0;

218 
	mm_pﬁicy
.
add
(
n_•ös
, 
n_waôs
);

222 
exô
(Ë
	mUNIV_NOTHROW
 {

227 
	m°d
::
©omic_thªad_„n˚
(
°d
::
mem‹y_‹dî_acquúe
);

229 i‡(
°©e
(Ë=
MUTEX_STATE_WAITERS
) {

230 
m_lock_w‹d
 = 
MUTEX_STATE_UNLOCKED
;

232 } i‡(
u∆ock
(Ë=
MUTEX_STATE_LOCKED
) {

237 
sig«l
();

242 
lock_w‹d_t
 
åylock
(Ë
	mUNIV_NOTHROW
 {

243 
lock_w‹d_t
 
	mu∆ocked
 = 
MUTEX_STATE_UNLOCKED
;

244 
	mm_lock_w‹d
.
com∑ª_exch™ge_°r⁄g
(
u∆ocked
, 
MUTEX_STATE_LOCKED
);

245  
	mu∆ocked
;

250 
boﬁ
 
åy_lock
(Ë
	mUNIV_NOTHROW
 {

251 
lock_w‹d_t
 
	mu∆ocked
 = 
MUTEX_STATE_UNLOCKED
;

252  
	mm_lock_w‹d
.
com∑ª_exch™ge_°r⁄g
(
u∆ocked
, 
MUTEX_STATE_LOCKED
);

256 
boﬁ
 
is_locked
(Ëc⁄° 
	mUNIV_NOTHROW
 {

257  (
°©e
(Ë!
MUTEX_STATE_UNLOCKED
);

260 #ifde‡
UNIV_DEBUG


262 
boﬁ
 
is_ow√d
(Ëc⁄° 
	mUNIV_NOTHROW
 {

263  (
is_locked
(Ë&& 
	mm_pﬁicy
.
is_ow√d
());

268 
	mMuãxPﬁicy
 &
pﬁicy
(Ë
	mUNIV_NOTHROW
 {  (
	mm_pﬁicy
); }

271 c⁄° 
	mMuãxPﬁicy
 &
pﬁicy
(Ëc⁄° 
	mUNIV_NOTHROW
 {  (
	mm_pﬁicy
); }

273 
	m¥iv©e
:

275 
lock_w‹d_t
 
°©e
(Ëc⁄° 
UNIV_NOTHROW
 {  (
m_lock_w‹d
); }

279 
lock_w‹d_t
 
u∆ock
(Ë
	mUNIV_NOTHROW
 {

280  
	mm_lock_w‹d
.
exch™ge
(
MUTEX_STATE_UNLOCKED
);

285 
boﬁ
 
£t_waôîs
(Ë
	mUNIV_NOTHROW
 {

286  
	mm_lock_w‹d
.
exch™ge
(
MUTEX_STATE_WAITERS
Ë=
MUTEX_STATE_UNLOCKED
;

291 
uöt32_t
 
waô
(Ë
	mUNIV_NOTHROW
 {

292 
uöt32_t
 
	mn_waôs
 = 0;

298 ++
	mn_waôs
;

300 
sysˇŒ
(
SYS_fuãx
, &
m_lock_w‹d
, 
FUTEX_WAIT_PRIVATE
, 
MUTEX_STATE_WAITERS
,

306 } !
£t_waôîs
());

308  (
	mn_waôs
);

312 
sig«l
(Ë
	mUNIV_NOTHROW
 {

313 
sysˇŒ
(
SYS_fuãx
, &
m_lock_w‹d
, 
FUTEX_WAKE_PRIVATE
, 1, 0, 0, 0);

321 
lock_w‹d_t
 
âas
(
uöt32_t
 
max_•ös
, uöt32_à
max_dñay
,

322 
uöt32_t
 &
n_•ös
Ë
	mUNIV_NOTHROW
 {

323 
	m°d
::
©omic_thªad_„n˚
(
°d
::
mem‹y_‹dî_acquúe
);

325 
	mn_•ös
 = 0;Ç_•ö†< 
	mmax_•ös
; ++n_spins) {

326 i‡(!
is_locked
()) {

327 
lock_w‹d_t
 
	mlock
 = 
åylock
();

329 i‡(
	mlock
 =
MUTEX_STATE_UNLOCKED
) {

331  (
lock
);

335 
ut_dñay
(
ut_∫d_öãrvÆ
(0, 
max_dñay
));

338  (
åylock
());

341 
	m¥iv©e
:

343 
MuãxPﬁicy
 
m_pﬁicy
;

345 
	m°d
::
©omic
<
lock_w‹d_t
> 
m_lock_w‹d
;

350 
	gãm∂©e
 <ãm∂©ê<
	gty≥«me
> 
˛ass
 
	gPﬁicy
 = 
NoPﬁicy
>

351 
	sTTASEvítMuãx
 {

352 
Pﬁicy
<
	tTTASEvítMuãx
> 
	tMuãxPﬁicy
;

354 
TTASEvítMuãx
(Ë
	mUNIV_NOTHROW
 : 
m_lock_w‹d
(
MUTEX_STATE_UNLOCKED
),

355 
m_waôîs
(),

356 
m_evít
() {

358 
ut_ad
(!((
ulöt
)&
m_lock_w‹d
 % (ulint)));

361 ~
TTASEvítMuãx
(Ë
	mUNIV_NOTHROW
 { 
ut_ad
(!
m_lock_w‹d
.
lﬂd
()); }

368 
öô
(
œtch_id_t
 
id
, c⁄° *
fûíame
, 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

369 
ut_a
(
m_evít
 =
nuŒ±r
);

370 
ut_a
(!
m_lock_w‹d
.
lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

372 
	mm_evít
 = 
os_evít_¸óã
();

374 
	mm_pﬁicy
.
öô
(*
this
, 
id
, 
fûíame
, 
löe
);

380 
de°roy
(Ë
	mUNIV_NOTHROW
 {

381 
ut_ad
(!
m_lock_w‹d
.
lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

384 
os_evít_de°roy
(
m_evít
);

385 
	mm_evít
 = 
nuŒ±r
;

387 
	mm_pﬁicy
.
de°roy
();

392 
boﬁ
 
åy_lock
(Ë
	mUNIV_NOTHROW
 {

393 
boﬁ
 
	mex≥˘ed
 = 
Ál£
;

394  (
	mm_lock_w‹d
.
com∑ª_exch™ge_°r⁄g
(
ex≥˘ed
, 
åue
));

398 
exô
(Ë
	mUNIV_NOTHROW
 {

399 
	mm_lock_w‹d
.
°‹e
(
Ál£
);

401 i‡(
	mm_waôîs
.
lﬂd
()) {

402 
sig«l
();

411 
íãr
(
uöt32_t
 
max_•ös
, uöt32_à
max_dñay
, c⁄° *
fûíame
,

412 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

413 i‡(!
åy_lock
()) {

414 
•ö_™d_åy_lock
(
max_•ös
, 
max_dñay
, 
fûíame
, 
löe
);

419 
boﬁ
 
°©e
(Ëc⁄° 
	mUNIV_NOTHROW
 {

420  (
	mm_lock_w‹d
.
lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

425 
os_evít_t
 
evít
(Ë
	mUNIV_NOTHROW
 {  (
	mm_evít
); }

428 
boﬁ
 
is_locked
(Ëc⁄° 
	mUNIV_NOTHROW
 {

429  (
	mm_lock_w‹d
.
lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

432 #ifde‡
UNIV_DEBUG


434 
boﬁ
 
is_ow√d
(Ëc⁄° 
	mUNIV_NOTHROW
 {

435  (
is_locked
(Ë&& 
	mm_pﬁicy
.
is_ow√d
());

440 
	mMuãxPﬁicy
 &
pﬁicy
(Ë
	mUNIV_NOTHROW
 {  (
	mm_pﬁicy
); }

443 c⁄° 
	mMuãxPﬁicy
 &
pﬁicy
(Ëc⁄° 
	mUNIV_NOTHROW
 {  (
	mm_pﬁicy
); }

445 
	m¥iv©e
:

451 
boﬁ
 
waô
(c⁄° *
fûíame
, 
uöt32_t
 
löe
, uöt32_à
•ö
Ë
	mUNIV_NOTHROW
;

458 
boﬁ
 
is_‰ì
(
uöt32_t
 
max_•ös
, uöt32_à
max_dñay
,

459 
uöt32_t
 &
n_•ös
Ëc⁄° 
	mUNIV_NOTHROW
 {

460 
ut_ad
(
n_•ös
 <
max_•ös
);

469 i‡(!
is_locked
()) {

470  (
	måue
);

473 
ut_dñay
(
ut_∫d_öãrvÆ
(0, 
max_dñay
));

475 ++
	mn_•ös
;

477 } 
	mn_•ös
 < 
	mmax_•ös
);

479  (
	mÁl£
);

487 
•ö_™d_åy_lock
(
uöt32_t
 
max_•ös
, uöt32_à
max_dñay
,

488 c⁄° *
fûíame
, 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

489 
uöt32_t
 
	mn_•ös
 = 0;

490 
uöt32_t
 
	mn_waôs
 = 0;

491 c⁄° 
uöt32_t
 
	m°ï
 = 
max_•ös
;

496 i‡(
is_‰ì
(
max_•ös
, 
max_dñay
, 
n_•ös
)) {

497 i‡(
åy_lock
()) {

504 
	mmax_•ös
 = 
n_•ös
 + 
°ï
;

507 ++
	mn_waôs
;

509 
os_thªad_yõld
();

520 i‡(
waô
(
fûíame
, 
löe
, 4)) {

521 
	mn_•ös
 += 4;

530 
	mm_pﬁicy
.
add
(
n_•ös
, 
n_waôs
);

534 
£t_waôîs
(Ë
	mUNIV_NOTHROW
 { 
	mm_waôîs
.
°‹e
(
åue
); }

537 
˛ór_waôîs
(Ë
	mUNIV_NOTHROW
 { 
	mm_waôîs
.
°‹e
(
Ál£
); }

540 
sig«l
(Ë
	mUNIV_NOTHROW
;

542 
	m¥iv©e
:

544 
TTASEvítMuãx
(TTASEvítMuãx &&Ë
dñëe
;

545 
TTASEvítMuãx
(c⁄° TTASEvítMuãx &Ë
dñëe
;

546 
	mTTASEvítMuãx
 &
	m›î©‹
=(
TTASEvítMuãx
 &&Ë
dñëe
;

547 
	mTTASEvítMuãx
 &
	m›î©‹
=(c⁄° 
TTASEvítMuãx
 &Ë
dñëe
;

551 
	m°d
::
©omic_boﬁ
 
m_lock_w‹d
;

555 
	m°d
::
©omic_boﬁ
 
m_waôîs
;

558 
os_evít_t
 
	mm_evít
;

561 
MuãxPﬁicy
 
	mm_pﬁicy
;

566 
	gãm∂©e
 <
ty≥«me
 
	gMuãxIm∂
>

567 
	sPﬁicyMuãx
 {

568 
MuãxIm∂
 
	tMuãxTy≥
;

569 
ty≥«me
 
	tMuãxIm∂
::
	tMuãxPﬁicy
 
	tPﬁicy
;

571 
PﬁicyMuãx
(Ë
	mUNIV_NOTHROW
 : 
m_im∂
() {

572 #ifde‡
UNIV_PFS_MUTEX


573 
m_±r
 = 
nuŒ±r
;

577 ~
PﬁicyMuãx
() {}

580 
	mPﬁicy
 &
pﬁicy
(Ë
	mUNIV_NOTHROW
 {  (
	mm_im∂
.policy()); }

583 c⁄° 
	mPﬁicy
 &
pﬁicy
(Ëc⁄° 
	mUNIV_NOTHROW
 {  (
	mm_im∂
.policy()); }

586 
exô
(Ë
	mUNIV_NOTHROW
 {

587 #ifde‡
UNIV_PFS_MUTEX


588 
pfs_exô
();

591 
pﬁicy
().
ªÀa£
(
m_im∂
);

593 
	mm_im∂
.
exô
();

601 
íãr
(
uöt32_t
 
n_•ös
, uöt32_à
n_dñay
, c⁄° *
«me
,

602 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

603 #ifde‡
UNIV_PFS_MUTEX


607 
PSI_muãx_lockî_°©e
 
	m°©e
;

608 
PSI_muãx_lockî
 *
	mlockî
;

610 
	mlockî
 = 
pfs_begö_lock
(&
°©e
, 
«me
, 
löe
);

613 
pﬁicy
().
íãr
(
m_im∂
, 
«me
, 
löe
);

615 
	mm_im∂
.
íãr
(
n_•ös
, 
n_dñay
, 
«me
, 
löe
);

617 
pﬁicy
().
locked
(
m_im∂
, 
«me
, 
löe
);

618 #ifde‡
UNIV_PFS_MUTEX


619 
pfs_íd
(
lockî
, 0);

626 
åylock
(c⁄° *
«me
, 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

627 #ifde‡
UNIV_PFS_MUTEX


631 
PSI_muãx_lockî_°©e
 
	m°©e
;

632 
PSI_muãx_lockî
 *
	mlockî
;

634 
	mlockî
 = 
pfs_begö_åylock
(&
°©e
, 
«me
, 
löe
);

641 
	mªt
 = 
m_im∂
.
åy_lock
() ? 0 : 1;

643 i‡(
	mªt
 == 0) {

644 
pﬁicy
().
íãr
(
m_im∂
, 
«me
, 
löe
);

646 
pﬁicy
().
locked
(
m_im∂
, 
«me
, 
löe
);

649 #ifde‡
UNIV_PFS_MUTEX


650 
pfs_íd
(
lockî
, 
ªt
);

653  (
	mªt
);

656 #ifde‡
UNIV_DEBUG


658 
boﬁ
 
is_ow√d
(Ëc⁄° 
	mUNIV_NOTHROW
 {  (
	mm_im∂
.is_owned()); }

667 
öô
(
œtch_id_t
 
id
, c⁄° *
fûíame
, 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

668 #ifde‡
UNIV_PFS_MUTEX


669 
pfs_add
(
sync_œtch_gë_pfs_key
(
id
));

672 
	mm_im∂
.
öô
(
id
, 
fûíame
, 
löe
);

676 
de°roy
(Ë
	mUNIV_NOTHROW
 {

677 #ifde‡
UNIV_PFS_MUTEX


678 
pfs_dñ
();

680 
	mm_im∂
.
de°roy
();

684 
›î©‹
 
	msys_muãx_t
 *(Ë
	mUNIV_NOTHROW
 {

685  (
	mm_im∂
.
›î©‹
 
	msys_muãx_t
 *());

688 #ifde‡
UNIV_PFS_MUTEX


697 
pfs_add
(
mysql_pfs_key_t
 
key
Ë
	mUNIV_NOTHROW
 {

698 
ut_ad
(
m_±r
 =
nuŒ±r
);

699 
	mm_±r
 = 
PSI_MUTEX_CALL
(
öô_muãx
)(
key
.
m_vÆue
, 
	mthis
);

702 
	m¥iv©e
:

707 
PSI_muãx_lockî
 *
pfs_begö_lock
(
PSI_muãx_lockî_°©e
 *
°©e
,

708 c⁄° *
«me
,

709 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

710 i‡(
	mm_±r
 !
nuŒ±r
) {

711 i‡(
m_±r
->
m_íabÀd
) {

712  (
PSI_MUTEX_CALL
(
°¨t_muãx_waô
)(
°©e
, 
m_±r
, 
PSI_MUTEX_LOCK
,

713 
«me
, (
uöt
)
löe
));

717  (
	mnuŒ±r
);

724 
PSI_muãx_lockî
 *
pfs_begö_åylock
(
PSI_muãx_lockî_°©e
 *
°©e
,

725 c⁄° *
«me
,

726 
uöt32_t
 
löe
Ë
	mUNIV_NOTHROW
 {

727 i‡(
	mm_±r
 !
nuŒ±r
) {

728 i‡(
m_±r
->
m_íabÀd
) {

729  (
PSI_MUTEX_CALL
(
°¨t_muãx_waô
)(

730 
°©e
, 
m_±r
, 
PSI_MUTEX_TRYLOCK
, 
«me
, (
uöt
)
löe
));

734  (
	mnuŒ±r
);

740 
pfs_íd
(
PSI_muãx_lockî
 *
lockî
, 
ªt
Ë
	mUNIV_NOTHROW
 {

741 i‡(
	mlockî
 !
nuŒ±r
) {

742 
PSI_MUTEX_CALL
(
íd_muãx_waô
)(
lockî
, 
ªt
);

747 
pfs_exô
() {

748 i‡(
	mm_±r
 !
nuŒ±r
) {

749 i‡(
m_±r
->
m_íabÀd
) {

750 
PSI_MUTEX_CALL
(
u∆ock_muãx
)(
m_±r
);

756 
pfs_dñ
() {

757 i‡(
	mm_±r
 !
nuŒ±r
) {

758 
PSI_MUTEX_CALL
(
de°roy_muãx
)(
m_±r
);

759 
	mm_±r
 = 
nuŒ±r
;

764 
	m¥iv©e
:

766 
MuãxIm∂
 
m_im∂
;

768 #ifde‡
UNIV_PFS_MUTEX


770 
PSI_muãx
 *
	mm_±r
;

	@ibuf0ibuf.h

33 #i‚de‡
ibuf0ibuf_h


34 
	#ibuf0ibuf_h


	)

36 
	~"univ.i
"

38 
	~"di˘0mem.h
"

39 
	~"f•0f•.h
"

40 
	~"må0må.h
"

42 
	~"ibuf0ty≥s.h
"

46 
	#CHANGE_BUFFER_DEFAULT_SIZE
 (25)

	)

48 #i‚de‡
UNIV_HOTBACKUP


52 
	mIBUF_OP_INSERT
 = 0,

53 
	mIBUF_OP_DELETE_MARK
 = 1,

54 
	mIBUF_OP_DELETE
 = 2,

57 
	mIBUF_OP_COUNT
 = 3

58 } 
	tibuf_›_t
;

62 
	eibuf_u£_t
 {

63 
	mIBUF_USE_NONE
 = 0,

64 
	mIBUF_USE_INSERT
,

65 
	mIBUF_USE_DELETE_MARK
,

66 
	mIBUF_USE_INSERT_DELETE_MARK
,

67 
	mIBUF_USE_DELETE
,

68 
	mIBUF_USE_ALL


72 
ul⁄g
 
önodb_ch™ge_buf„rög
;

75 
ibuf_t
 *
ibuf
;

98 
ibuf_öô_©_db_°¨t
();

100 
ibuf_max_size_upd©e
(
ulöt
 
√w_vÆ
);

104 
ibuf_upd©e_max_èbÀ•a˚_id
();

106 
UNIV_INLINE


107 
ibuf_må_°¨t
(
må_t
 *
må
);

109 
UNIV_INLINE


110 
ibuf_må_commô
(
må_t
 *
må
);

113 
ibuf_bôm≠_∑ge_öô
(
buf_block_t
 *
block
,

114 
må_t
 *
må
 );

124 
ibuf_ª£t_‰ì_bôs
(

125 
buf_block_t
 *
block
);

149 
UNIV_INLINE


150 
ibuf_upd©e_‰ì_bôs_if_fuŒ
(
buf_block_t
 *
block
, 
ulöt
 
max_ös_size
,

151 
ulöt
 
ö¸ó£
);

160 
ibuf_upd©e_‰ì_bôs_low
(c⁄° 
buf_block_t
 *
block
,

161 
ulöt
 
max_ös_size
,

166 
må_t
 *
må
);

174 
ibuf_upd©e_‰ì_bôs_zù
(
buf_block_t
 *
block
,

175 
må_t
 *
må
);

182 
ibuf_upd©e_‰ì_bôs_f‹_two_∑ges_low
(

183 
buf_block_t
 *
block1
,

184 
buf_block_t
 *
block2
,

185 
må_t
 *
må
);

193 
UNIV_INLINE


194 
iboﬁ
 
ibuf_should_åy
(
di˘_ödex_t
 *
ödex
, 
ulöt
 
ign‹e_£c_unique
);

202 
UNIV_INLINE


203 
iboﬁ
 
	$ibuf_öside
(c⁄° 
må_t
 *
må
)

204 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

210 
UNIV_INLINE


211 
iboﬁ
 
	`ibuf_bôm≠_∑ge
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
);

217 #ifde‡
UNIV_DEBUG


229 
iboﬁ
 
	`ibuf_∑ge_low
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

230 #ifde‡
UNIV_DEBUG


231 
iboﬁ
 
x_œtch
,

233 c⁄° *
fûe
, 
ulöt
 
löe
, 
må_t
 *
må
)

234 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

236 #ifde‡
UNIV_DEBUG


244 
	#ibuf_∑ge
(
∑ge_id
, 
∑ge_size
, 
må
) \

245 
	`ibuf_∑ge_low
(
∑ge_id
, 
∑ge_size
, 
TRUE
, 
__FILE__
, 
__LINE__
, 
må
)

	)

255 
	#ibuf_∑ge
(
∑ge_id
, 
∑ge_size
, 
må
) \

256 
	`ibuf_∑ge_low
(
∑ge_id
, 
∑ge_size
, 
__FILE__
, 
__LINE__
, 
må
)

	)

262 
	`ibuf_‰ì_ex˚ss_∑ges
();

274 
iboﬁ
 
	`ibuf_ö£π
(
ibuf_›_t
 
›
, c⁄° 
dtu∂e_t
 *
íåy
, 
di˘_ödex_t
 *
ödex
,

275 c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

276 
que_thr_t
 *
thr
);

291 
	`ibuf_mîge_‹_dñëe_f‹_∑ge
(
buf_block_t
 *
block
, c⁄° 
∑ge_id_t
 &
∑ge_id
,

292 c⁄° 
∑ge_size_t
 *
∑ge_size
,

293 
iboﬁ
 
upd©e_ibuf_bôm≠
);

299 
	`ibuf_dñëe_f‹_disˇrded_•a˚
(
•a˚_id_t
 
•a˚
);

307 
ulöt
 
	`ibuf_mîge_ö_background
(
boﬁ
 
fuŒ
);

312 
ulöt
 
	`ibuf_mîge_•a˚
(
•a˚_id_t
 
•a˚
);

317 
byã
 *
	`ibuf_∑r£_bôm≠_öô
(byã *
±r
,

318 
byã
 *
íd_±r
,

319 
buf_block_t
 *
block
,

320 
må_t
 *
må
);

321 #i‚de‡
UNIV_HOTBACKUP


322 #ifde‡
UNIV_IBUF_COUNT_DEBUG


328 
ulöt
 
	`ibuf_cou¡_gë
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

334 
boﬁ
 
	`ibuf_is_em±y
();

336 
	`ibuf_¥öt
(
FILE
 *
fûe
);

342 
ulöt
 
	`ibuf_ªc_gë_cou¡î
(c⁄° 
ªc_t
 *
ªc
);

348 
boﬁ
 
	`ibuf_ªc_has_mu…i_vÆue
(c⁄° 
ªc_t
 *
ªc
);

351 
	`ibuf_˛o£
();

355 
dbîr_t
 
	$ibuf_check_bôm≠_⁄_imp‹t
(

356 c⁄° 
åx_t
 *
åx
,

357 
•a˚_id_t
 
•a˚_id
)

358 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

363 
	`ibuf_£t_bôm≠_f‹_bulk_lﬂd
(
buf_block_t
 *
block
, 
boﬁ
 
ª£t
);

365 
	#IBUF_HEADER_PAGE_NO
 
FSP_IBUF_HEADER_PAGE_NO


	)

366 
	#IBUF_TREE_ROOT_PAGE_NO
 
FSP_IBUF_TREE_ROOT_PAGE_NO


	)

372 
	#IBUF_HEADER
 
PAGE_DATA


	)

373 
	#IBUF_TREE_SEG_HEADER
 0

	)

375 
	~"ibuf0ibuf.ic
"

	@ibuf0ibuf.ic

33 
	~"f•0ty≥s.h
"

34 
	~"∑ge0∑ge.h
"

35 
	~"∑ge0zù.h
"

36 #i‚de‡
UNIV_HOTBACKUP


37 
	~"buf0Ãu.h
"

43 
	#IBUF_PAGE_SIZE_PER_FREE_SPACE
 32

	)

46 
UNIV_INLINE


47 
	$ibuf_må_°¨t
(
må_t
 *
må
)

49 
	`må_°¨t
(
må
);

50 
må
->
	`íãr_ibuf
();

51 
	}
}

53 
UNIV_INLINE


54 
	$ibuf_må_commô
(
må_t
 *
må
)

56 
	`ut_ad
(
må
->
	`is_öside_ibuf
());

57 
	`ut_d
(
må
->
	`exô_ibuf
());

59 
	`må_commô
(
må
);

60 
	}
}

63 
	sibuf_t
 {

64 
ulöt
 
	msize
;

66 
ulöt
 
	mmax_size
;

68 
ulöt
 
	m£g_size
;

71 
boﬁ
 
	mem±y
;

77 
ulöt
 
	m‰ì_li°_Àn
;

78 
ulöt
 
	mheight
;

79 
di˘_ödex_t
 *
	mödex
;

81 
	m°d
::
©omic
<
ulöt
> 
n_mîges
;

82 
	m°d
::
©omic
<
ulöt
> 
n_mîged_›s
[
IBUF_OP_COUNT
];

85 
	m°d
::
©omic
<
ulöt
> 
n_disˇrded_›s
[
IBUF_OP_COUNT
];

96 
ibuf_£t_‰ì_bôs_func
(

97 
buf_block_t
 *
block
,

99 #ifde‡
UNIV_IBUF_DEBUG


100 
ulöt
 
max_vÆ
,

104 
ulöt
 
vÆ
);

105 #ifde‡
UNIV_IBUF_DEBUG


106 
	#ibuf_£t_‰ì_bôs
(
b
, 
v
, 
max
Ë
	`ibuf_£t_‰ì_bôs_func
(b, max, v)

	)

108 
	#ibuf_£t_‰ì_bôs
(
b
, 
v
, 
max
Ë
	`ibuf_£t_‰ì_bôs_func
(b, v)

	)

113 
UNIV_INLINE


114 
iboﬁ
 
	$ibuf_should_åy
(
di˘_ödex_t
 *
ödex
,

115 
ulöt
 
ign‹e_£c_unique
)

120  (
önodb_ch™ge_buf„rög
 !
IBUF_USE_NONE
 && 
ibuf
->
max_size
 != 0 &&

121 
ödex
->
•a˚
 !
di˘_sys_t
::
s_•a˚_id
 && !ödex->
	`is_˛u°îed
() &&

122 !
	`di˘_ödex_is_•©ül
(
ödex
Ë&& !
	`di˘_ödex_has_desc
(index) &&

123 
ödex
->
èbÀ
->
quõs˚
 =
QUIESCE_NONE
 &&

124 (
ign‹e_£c_unique
 || !
	`di˘_ödex_is_unique
(
ödex
)) &&

125 
§v_f‹˚_ªcovîy
 < 
SRV_FORCE_NO_IBUF_MERGE
);

126 
	}
}

134 
UNIV_INLINE


135 
iboﬁ
 
	$ibuf_öside
(c⁄° 
må_t
 *
må
)

137  (
må
->
	`is_öside_ibuf
());

138 
	}
}

144 
UNIV_INLINE


145 
iboﬁ
 
	$ibuf_bôm≠_∑ge
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
) {

146  ((
∑ge_id
.
	`∑ge_no
(Ë& (
∑ge_size
.
	`physiˇl
() - 1)) ==

147 
FSP_IBUF_BITMAP_OFFSET
);

148 
	}
}

155 
UNIV_INLINE


156 
ulöt
 
	$ibuf_ödex_∑ge_ˇlc_‰ì_bôs
(
ulöt
 
∑ge_size
, ulöà
max_ös_size
) {

157 
ulöt
 
n
;

158 
	`ut_ad
(
	`ut_is_2pow
(
∑ge_size
));

159 
	`ut_ad
(
∑ge_size
 > 
IBUF_PAGE_SIZE_PER_FREE_SPACE
);

161 
n
 = 
max_ös_size
 / (
∑ge_size
 / 
IBUF_PAGE_SIZE_PER_FREE_SPACE
);

163 i‡(
n
 == 3) {

164 
n
 = 2;

167 i‡(
n
 > 3) {

168 
n
 = 3;

171  (
n
);

172 
	}
}

178 
UNIV_INLINE


179 
ulöt
 
	$ibuf_ödex_∑ge_ˇlc_‰ì_‰om_bôs
(c⁄° 
∑ge_size_t
 &
∑ge_size
,

180 
ulöt
 
bôs
) {

181 
	`ut_ad
(
bôs
 < 4);

182 
	`ut_ad
(!
∑ge_size
.
	`is_com¥es£d
() ||

183 
∑ge_size
.
	`physiˇl
(Ë> 
IBUF_PAGE_SIZE_PER_FREE_SPACE
);

185 i‡(
bôs
 == 3) {

186  (4 * 
∑ge_size
.
	`physiˇl
(Ë/ 
IBUF_PAGE_SIZE_PER_FREE_SPACE
);

189  (
bôs
 * (
∑ge_size
.
	`physiˇl
(Ë/ 
IBUF_PAGE_SIZE_PER_FREE_SPACE
));

190 
	}
}

195 
UNIV_INLINE


196 
ulöt
 
	$ibuf_ödex_∑ge_ˇlc_‰ì_zù
(

197 c⁄° 
buf_block_t
 *
block
)

199 
ulöt
 
max_ös_size
;

200 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
;

201 
löt
 
zù_max_ös
;

203 
	`ut_ad
(
block
->
∑ge
.
size
.
	`is_com¥es£d
());

213 
max_ös_size
 = 
	`∑ge_gë_max_ö£π_size
(
	`buf_block_gë_‰ame
(
block
), 1);

215 
∑ge_zù
 = 
	`buf_block_gë_∑ge_zù
(
block
);

216 
zù_max_ös
 = 
	`∑ge_zù_max_ös_size
(
∑ge_zù
, 
FALSE
 );

218 i‡(
zù_max_ös
 < 0) {

220 } i‡(
max_ös_size
 > (
ulöt
)
zù_max_ös
) {

221 
max_ös_size
 = (
ulöt
)
zù_max_ös
;

224  (
	`ibuf_ödex_∑ge_ˇlc_‰ì_bôs
(
block
->
∑ge
.
size
.
	`physiˇl
(),

225 
max_ös_size
));

226 
	}
}

230 
UNIV_INLINE


231 
ulöt
 
	$ibuf_ödex_∑ge_ˇlc_‰ì
(

232 c⁄° 
buf_block_t
 *
block
)

234 i‡(!
block
->
∑ge
.
size
.
	`is_com¥es£d
()) {

235 
ulöt
 
max_ös_size
;

237 
max_ös_size
 = 
	`∑ge_gë_max_ö£π_size_a·î_ª‹g™ize
(

238 
	`buf_block_gë_‰ame
(
block
), 1);

240  (
	`ibuf_ödex_∑ge_ˇlc_‰ì_bôs
(
block
->
∑ge
.
size
.
	`physiˇl
(),

241 
max_ös_size
));

243  (
	`ibuf_ödex_∑ge_ˇlc_‰ì_zù
(
block
));

245 
	}
}

259 
UNIV_INLINE


260 
	$ibuf_upd©e_‰ì_bôs_if_fuŒ
(

261 
buf_block_t
 *
block
,

266 
ulöt
 
max_ös_size
,

269 
ulöt
 
ö¸ó£
)

273 
ulöt
 
bef‹e
;

274 
ulöt
 
a·î
;

276 
	`ut_ad
(
	`buf_block_gë_∑ge_zù
(
block
Ë=
NULL
);

278 
bef‹e
 =

279 
	`ibuf_ödex_∑ge_ˇlc_‰ì_bôs
(
block
->
∑ge
.
size
.
	`physiˇl
(), 
max_ös_size
);

281 i‡(
max_ös_size
 >
ö¸ó£
) {

282 
	`°©ic_as£π
(
UINT32_UNDEFINED
 > 
UNIV_PAGE_SIZE_MAX
,

285 
a·î
 = 
	`ibuf_ödex_∑ge_ˇlc_‰ì_bôs
(
block
->
∑ge
.
size
.
	`physiˇl
(),

286 
max_ös_size
 - 
ö¸ó£
);

287 #ifde‡
UNIV_IBUF_DEBUG


288 
	`ut_a
(
a·î
 <
	`ibuf_ödex_∑ge_ˇlc_‰ì
(
block
));

292 
a·î
 = 
	`ibuf_ödex_∑ge_ˇlc_‰ì
(
block
);

295 i‡(
a·î
 == 0) {

301 
	`buf_∑ge_make_young
(&
block
->
∑ge
);

304 i‡(
bef‹e
 > 
a·î
) {

305 
	`ibuf_£t_‰ì_bôs
(
block
, 
a·î
, 
bef‹e
);

307 
	}
}

	@ibuf0types.h

33 #i‚de‡
ibuf0ty≥s_h


34 
	#ibuf0ty≥s_h


	)

37 
	#IBUF_SPACE_ID
 
°©ic_ˇ°
<
•a˚_id_t
>(0)

	)

39 
	gibuf_t
;

	@lob0del.h

26 #i‚de‡
lob0dñ_h


27 
	#lob0dñ_h


	)

29 
	~"lob0lob.h
"

31 
«me•a˚
 
	glob
 {

34 ˛as†
	cDñëî
 {

35 
	gpublic
:

37 
Dñëî
(
DñëeC⁄ãxt
 &
˘x
Ë: 
m_˘x
(ctx) {

38 
ut_ad
(
˘x
.
ödex
()->
is_˛u°îed
());

39 
ut_ad
(
må_memo_c⁄èös_Êagged
(
˘x
.
gë_må
(),

40 
di˘_ödex_gë_lock
(
˘x
.
ödex
()),

41 
MTR_MEMO_X_LOCK
 | 
MTR_MEMO_SX_LOCK
) ||

42 
˘x
.
èbÀ
()->
is_öåösic
());

43 
ut_ad
(
må_is_∑ge_fix
(
˘x
.
gë_må
(), ctx.
m_blobªf
.
∑ge_Æign
(),

44 
MTR_MEMO_PAGE_X_FIX
, 
˘x
.
èbÀ
()));

45 
ut_ad
(
˘x
.
ªc_offs_vÆid©e
());

46 
ut_ad
(
˘x
.
vÆid©e_blobªf
());

51 
dbîr_t
 
de°roy
();

56 
dbîr_t
 
‰ì_fú°_∑ge
();

58 
	g¥iv©e
:

60 
x_œtch_ªc_∑ge
();

65 
boﬁ
 
vÆid©e_∑ge_ty≥
(c⁄° 
∑ge_t
 *
∑ge
) const {

66  (
	gm_˘x
.
is_com¥es£d
(Ë? 
vÆid©e_zblob_∑ge_ty≥
(
∑ge
)

67 : 
vÆid©e_blob_∑ge_ty≥
(
∑ge
));

73 
boﬁ
 
vÆid©e_zblob_∑ge_ty≥
(c⁄° 
∑ge_t
 *
∑ge
) const {

74 c⁄° 
∑ge_ty≥_t
 
	g±
 = 
fû_∑ge_gë_ty≥
(
∑ge
);

75 
	g±
) {

76 
	gFIL_PAGE_TYPE_ZBLOB
:

77 
FIL_PAGE_TYPE_ZBLOB2
:

78 
FIL_PAGE_SDI_ZBLOB
:

81 
ut_îr‹
;

83  (
	gåue
);

89 
boﬁ
 
vÆid©e_blob_∑ge_ty≥
(c⁄° 
∑ge_t
 *
∑ge
) const {

90 c⁄° 
∑ge_ty≥_t
 
	gty≥
 = 
fû_∑ge_gë_ty≥
(
∑ge
);

92 
	gty≥
) {

93 
	gFIL_PAGE_TYPE_BLOB
:

94 
FIL_PAGE_SDI_BLOB
:

97 #i‚de‡
UNIV_DEBUG


98 i‡(!
m_˘x
.
has_©omic_blobs
()) {

103  (
åue
);

106 
	gut_îr‹
;

108  (
	gåue
);

115 
boﬁ
 
ˇn_‰ì
() const;

117 
	gDñëeC⁄ãxt
 &
	gm_˘x
;

118 
må_t
 
	gm_må
;

	@lob0first.h

27 #i‚de‡
lob0fú°_h


28 
	#lob0fú°_h


	)

30 
	~"bå0bå.h
"

31 
	~"buf0buf.h
"

32 
	~"di˘0di˘.h
"

33 
	~"fut0l°.h
"

34 
	~"lob0ödex.h
"

35 
	~"lob0lob.h
"

36 
	~"lob0utû.h
"

37 
	~"må0log.h
"

39 
«me•a˚
 
	glob
 {

42 
	gfú°_∑ge_t
 : 
public
 
basic_∑ge_t
 {

44 c⁄° 
ulöt
 
OFFSET_VERSION
 = 
FIL_PAGE_DATA
;

48 c⁄° 
ulöt
 
	gOFFSET_FLAGS
 = 
FIL_PAGE_DATA
 + 1;

51 c⁄° 
uöt32_t
 
	gOFFSET_LOB_VERSION
 = 
OFFSET_FLAGS
 + 1;

54 c⁄° 
ulöt
 
	gOFFSET_LAST_TRX_ID
 = 
OFFSET_LOB_VERSION
 + 4;

57 c⁄° 
ulöt
 
	gOFFSET_LAST_UNDO_NO
 = 
OFFSET_LAST_TRX_ID
 + 6;

60 c⁄° 
ulöt
 
	gOFFSET_DATA_LEN
 = 
OFFSET_LAST_UNDO_NO
 + 4;

63 c⁄° 
ulöt
 
	gOFFSET_TRX_ID
 = 
OFFSET_DATA_LEN
 + 4;

67 c⁄° 
ulöt
 
	gOFFSET_INDEX_LIST
 = 
OFFSET_TRX_ID
 + 6;

71 c⁄° 
ulöt
 
	gOFFSET_INDEX_FREE_NODES
 =

72 
OFFSET_INDEX_LIST
 + 
FLST_BASE_NODE_SIZE
;

75 c⁄° 
ulöt
 
	gLOB_PAGE_DATA
 =

76 
OFFSET_INDEX_FREE_NODES
 + 
FLST_BASE_NODE_SIZE
;

78 c⁄° 
ulöt
 
	gLOB_PAGE_TRAILER_LEN
 = 
FIL_PAGE_DATA_END
;

81 
fú°_∑ge_t
() {}

86 
fú°_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
Ë: 
basic_∑ge_t
(block, mtr) {}

90 
fú°_∑ge_t
(
buf_block_t
 *
block
Ë: 
basic_∑ge_t
(block, 
nuŒ±r
) {}

96 
fú°_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

97 : 
basic_∑ge_t
(
block
, 
må
, 
ödex
) {}

102 
fú°_∑ge_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

103 : 
basic_∑ge_t
(
nuŒ±r
, 
må
, 
ödex
) {}

106 
£t_vîsi⁄_0
() {

107 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_VERSION
, 0, 
MLOG_1BYTE
, 
m_må
);

113 
uöt8_t
 
gë_Êags
(Ë{  (
mach_ªad_‰om_1
(
‰ame
(Ë+ 
OFFSET_FLAGS
)); }

118 
boﬁ
 
ˇn_be_∑πüŒy_upd©ed
() {

119 
uöt8_t
 
	gÊags
 = 
gë_Êags
();

120  (!(
	gÊags
 & 0x01));

124 
imp‹t
(
åx_id_t
 
åx_id
);

129 
m¨k_ˇ¬Ÿ_be_∑πüŒy_upd©ed
(
åx_t
 *
åx
);

136 
buf_block_t
 *
Æloc
(
må_t
 *
Æloc_må
, 
boﬁ
 
is_bulk
);

140 
‰ì_Æl_ödex_∑ges
();

144 
‰ì_Æl_d©a_∑ges
();

150 
buf_block_t
 *
lﬂd_s
(
∑ge_id_t
 
∑ge_id
, 
∑ge_size_t
 
∑ge_size
) {

151 
	gm_block
 = 
buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_S_LATCH
, 
m_må
);

152  (
	gm_block
);

160 
buf_block_t
 *
lﬂd_x
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

161 
må_t
 *
må
);

167 
buf_block_t
 *
lﬂd_x
(
må_t
 *
må
) const {

168 
ut_ad
(
må_memo_c⁄èös
(
m_må
, 
m_block
, 
MTR_MEMO_PAGE_X_FIX
));

169 
buf_block_t
 *
	gtmp
 = 
buf_∑ge_gë
(
m_block
->
∑ge
.
id
, 
m_ödex
->
gë_∑ge_size
(),

170 
RW_X_LATCH
, 
må
);

171 
ut_ad
(
tmp
 =
m_block
);

172  (
	gtmp
);

179 
buf_block_t
 *
lﬂd_x
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
) {

180  (
lﬂd_x
(
∑ge_id
, 
∑ge_size
, 
m_må
));

185 
buf_block_t
 *
gë_block
(Ë{  (
	gm_block
); }

192 
Ê°_node_t
 *
addr2±r_x
(
fû_addr_t
 &
addr
, 
må_t
 *
må
) const {

193 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

194 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

195  (
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_X_LATCH
, 
må
));

202 
Ê°_node_t
 *
addr2±r_x
(
fû_addr_t
 &
addr
) const {

203  (
addr2±r_x
(
addr
, 
m_må
));

210 
Ê°_node_t
 *
addr2±r
(c⁄° 
fû_addr_t
 &
addr
) {

211 
ut_ad
(
m_block
->
∑ge
.
id
.
∑ge_no
(Ë=
addr
.page);

212  (
buf_block_gë_‰ame
(
m_block
Ë+ 
	gaddr
.
	gboff£t
);

219 
Ê°_node_t
 *
addr2±r_s
(
fû_addr_t
 &
addr
) {

220 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

221 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

222  (
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_S_LATCH
, 
m_må
));

231 
Ê°_node_t
 *
addr2±r_s_ˇche
(
°d
::
m≠
<
∑ge_no_t
, 
buf_block_t
 *> &
ˇche
,

232 
fû_addr_t
 &
addr
) const {

233 
byã
 *
	gªsu…
;

234 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

235 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

237 autÿ
	gôî
 = 
ˇche
.
föd
(
addr
.
∑ge
);

239 i‡(
	gôî
 =
ˇche
.
íd
()) {

241 
buf_block_t
 *
block
 = 
nuŒ±r
;

242 
	gªsu…
 = 
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_S_LATCH
, 
m_må
, &
block
);

243 
	gˇche
.
ö£π
(
°d
::
make_∑ú
(
addr
.
∑ge
, 
block
));

245 
buf_block_t
 *
	gblock
 = 
ôî
->
£c⁄d
;

246 
ut_ad
(
block
->
∑ge
.
id
.
∑ge_no
(Ë=
addr
.page);

247 
	gªsu…
 = 
buf_block_gë_‰ame
(
block
Ë+ 
addr
.
boff£t
;

249  (
	gªsu…
);

254 
dóŒoc
();

257 
de°roy
();

261 
boﬁ
 
is_em±y
() const {

262 
Ê°_ba£_node_t
 *
	gba£
 = 
ödex_li°
();

263 
ut_ad
(
ba£
 !
nuŒ±r
);

264  (
Ê°_gë_Àn
(
ba£
) == 0);

272 
Ê°_node_t
 *
Æloc_ödex_íåy
(
boﬁ
 
bulk
);

277 
byã
 *
nodes_begö
(Ëc⁄° {  (
‰ame
(Ë+ 
	gLOB_PAGE_DATA
); }

281 
ulöt
 
∑ylﬂd
() {

282  (
	gUNIV_PAGE_SIZE
 - 
	gLOB_PAGE_DATA
 - 
	gLOB_PAGE_TRAILER_LEN
);

288 
£t_åx_id_no_ªdo
(
åx_id_t
 
id
) {

289 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_TRX_ID
;

290 
mach_wrôe_to_6
(
±r
, 
id
);

295 
£t_åx_id
(
åx_id_t
 
id
) {

296 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_TRX_ID
;

297 
mach_wrôe_to_6
(
±r
, 
id
);

298 
mlog_log_°rög
(
±r
, 6, 
m_må
);

302 
öô_lob_vîsi⁄
() {

303 
ut_ad
(
m_må
 !
nuŒ±r
);

305 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_LOB_VERSION
, 1, 
MLOG_4BYTES
, 
m_må
);

310 
uöt32_t
 
gë_lob_vîsi⁄
() {

311  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
OFFSET_LOB_VERSION
));

315 
uöt32_t
 
ö¸_lob_vîsi⁄
();

320 
£t_œ°_åx_id_no_ªdo
(
åx_id_t
 
id
) {

321 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_TRX_ID
;

322 
mach_wrôe_to_6
(
±r
, 
id
);

327 
£t_œ°_åx_id
(
åx_id_t
 
id
) {

328 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_TRX_ID
;

329 
mach_wrôe_to_6
(
±r
, 
id
);

330 
mlog_log_°rög
(
±r
, 6, 
m_må
);

335 
£t_œ°_åx_undo_no
(
undo_no_t
 
undo_no
) {

336 
ut_ad
(
m_må
 !
nuŒ±r
);

338 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_UNDO_NO
;

339 
mlog_wrôe_ulöt
(
±r
, 
undo_no
, 
MLOG_4BYTES
, 
m_må
);

344 
åx_id_t
 
gë_œ°_åx_id
() const {

345 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_TRX_ID
;

346  (
mach_ªad_‰om_6
(
±r
));

351 
undo_no_t
 
gë_œ°_åx_undo_no
() const {

352 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_UNDO_NO
;

353  (
mach_ªad_‰om_4
(
±r
));

358 
£t_d©a_Àn
(
ulöt
 
Àn
) {

359 
ut_ad
(
m_må
 !
nuŒ±r
);

361 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_DATA_LEN
, 
Àn
, 
MLOG_4BYTES
, 
m_må
);

369 
ulöt
 
wrôe
(
åx_id_t
 
åxid
, c⁄° 
byã
 *&
d©a
, ulöà&
Àn
);

382 
buf_block_t
 *
ª∂a˚
(
åx_t
 *
åx
, 
ulöt
 
off£t
, c⁄° 
byã
 *&
±r
, ulöà&
w™t
,

383 
må_t
 *
må
);

394 
ª∂a˚_ölöe
(
åx_t
 *
åx
, 
ulöt
 
off£t
, c⁄° 
byã
 *&
±r
, ulöà&
w™t
,

395 
må_t
 *
må
);

397 
ulöt
 
gë_d©a_Àn
() const {

398  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
OFFSET_DATA_LEN
));

406 
ulöt
 
ªad
(ulöà
off£t
, 
byã
 *
±r
, ulöà
w™t
);

408 
£t_∑ge_ty≥
() {

409 
ut_ad
(
m_må
 !
nuŒ±r
);

411 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
, 
FIL_PAGE_TYPE_LOB_FIRST
,

412 
MLOG_2BYTES
, 
m_må
);

415 
Ê°_ba£_node_t
 *
ödex_li°
(Ëc⁄° {  (
‰ame
(Ë+ 
	gOFFSET_INDEX_LIST
); }

417 
Ê°_ba£_node_t
 *
‰ì_li°
() const {

418  (
‰ame
(Ë+ 
	gOFFSET_INDEX_FREE_NODES
);

424 
ulöt
 
max_•a˚_avaûabÀ
() {

425 c⁄° 
ulöt
 
	gödex_¨øy_size
 = 
node_cou¡
(Ë* 
ödex_íåy_t
::
SIZE
;

427  (
∑ylﬂd
(Ë- 
	gödex_¨øy_size
);

432 
c⁄°ex¥
 
ulöt
 
node_cou¡
() {

441 
	g°d
::
o°ªam
 &
¥öt_ödex_íåõs
(
°d
::o°ªam &
out
) const;

443 
	g°d
::
o°ªam
 &
¥öt_ödex_íåõs_ˇche_s
(
°d
::o°ªam &
out
,

444 
BlockCache
 &
ˇche
) const;

448 
byã
 *
d©a_begö
() const {

449 
ut_ad
(
buf_block_gë_∑ge_zù
(
m_block
Ë=
NULL
);

451 
c⁄°ex¥
 
ulöt
 
	gödex_¨øy_size
 = 
node_cou¡
(Ë* 
ödex_íåy_t
::
SIZE
;

453  (
‰ame
(Ë+ 
	gLOB_PAGE_DATA
 + 
	gödex_¨øy_size
);

457 
ulöt
 
≠≥nd
(
åx_id_t
 
åxid
, 
byã
 *&
d©a
, ulöà&
Àn
);

459 #ifde‡
UNIV_DEBUG


461 
boﬁ
 
vÆid©e
() const;

464 
∑ge_ty≥_t
 
gë_∑ge_ty≥
(Ë{  (
	gbasic_∑ge_t
::get_page_type()); }

466 
∑ge_ty≥_t
 
gë_∑ge_ty≥
(
di˘_ödex_t
 *
ödex
,

467 c⁄° 
∑ge_id_t
 &
∑ge_id
,

468 c⁄° 
∑ge_size_t
 &
∑ge_size
) {

469 
må_t
 
	gloˇl_må
;

470 
må_°¨t
(&
loˇl_må
);

471 
fú°_∑ge_t
 
fú°
(&
loˇl_må
, 
ödex
);

472 
	gfú°
.
lﬂd_x
(
∑ge_id
, 
∑ge_size
);

473 
∑ge_ty≥_t
 
	g∑ge_ty≥
 = 
fú°
.
gë_∑ge_ty≥
();

474 
må_commô
(&
loˇl_må
);

475  (
	g∑ge_ty≥
);

478 
	gpublic
:

482 
ª°¨t_må
(
må_t
 *
må
) {

483 
ut_ad
(
må
 !
m_må
);

484 
må_commô
(
må
);

485 
må_°¨t
(
må
);

486 
	gmå
->
£t_log_mode
(
m_må
->
gë_log_mode
());

487 
lﬂd_x
(
må
);

	@lob0impl.h

26 #i‚de‡
lob0im∂_h


27 
	#lob0im∂_h


	)

29 
	~"bå0bå.h
"

30 
	~"fut0l°.h
"

31 
	~"lob0fú°.h
"

32 
	~"lob0lob.h
"

33 
	~"mach0d©a.h
"

34 
	~"må0log.h
"

35 
	~"må0må.h
"

36 
	~"må0ty≥s.h
"

38 
«me•a˚
 
	glob
 {

40 
	gz_ödex_íåy_t
;

41 
	gz_fú°_∑ge_t
;

42 
	gz_‰ag_∑ge_t
;

43 
	gödex_íåy_t
;

44 
	gfú°_∑ge_t
;

46 
usög
 
	g∑ddr_t
 = 
ulöt
;

50 ˛as†
	c∂i°_node_t
 {

51 
	gpublic
:

53 c⁄° 
uöt16_t
 
OFFSET_PREV
 = 0;

56 c⁄° 
uöt16_t
 
	gOFFSET_NEXT
 = 2;

59 c⁄° 
uöt8_t
 
	gSIZE
 = 4;

63 
ex∂icô
 
∂i°_node_t
(
må_t
 *
må
)

64 : 
m_‰ame
(
nuŒ±r
), 
m_node
“uŒ±r), 
m_må
(
må
) {}

67 
∂i°_node_t
(Ë: 
m_‰ame
(
nuŒ±r
), 
m_node
“uŒ±r), 
m_må
(nullptr) {}

72 
∂i°_node_t
(
må_t
 *
må
, 
byã
 *
‰ame
)

73 : 
m_‰ame
(
‰ame
), 
m_node
(
nuŒ±r
), 
m_må
(
må
) {}

78 
∂i°_node_t
(
byã
 *
‰ame
, byã *
node
)

79 : 
m_‰ame
(
‰ame
), 
m_node
(
node
), 
m_må
(
nuŒ±r
) {}

87 
∂i°_node_t
(
byã
 *
‰ame
, byã *
node
, 
må_t
 *
må
)

88 : 
m_‰ame
(
‰ame
), 
m_node
(
node
), 
m_må
(
må
) {}

91 
∂i°_node_t
(c⁄°Öli°_node_à&
Ÿhî
) = ;

93 
	g∂i°_node_t
 &
	g›î©‹
=(c⁄° 
∂i°_node_t
 &) = ;

100 
boﬁ
 
is_bef‹e
(c⁄° 
∂i°_node_t
 &
node
) const {

101 
ut_ad
(!
is_nuŒ
());

102 
ut_ad
(!
node
.
is_nuŒ
());

103  (
addr
(Ë< 
	gnode
.addr());

108 
öô
() {

109 
ut_ad
(!
is_nuŒ
());

110 
ut_ad
(
m_må
 !
nuŒ±r
);

112 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_PREV
, 0, 
MLOG_2BYTES
, 
m_må
);

113 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_NEXT
, 0, 
MLOG_2BYTES
, 
m_må
);

118 
£t_¥ev
(
∑ddr_t
 
addr
) {

119 
ut_ad
(
addr
 < 
UNIV_PAGE_SIZE
);

120 
ut_ad
(
m_må
 !
nuŒ±r
);

122 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_PREV
, 
addr
, 
MLOG_2BYTES
, 
m_må
);

127 
£t_¥ev_node
(
∂i°_node_t
 &
¥ev
Ë{ 
£t_¥ev
’ªv.
addr
()); }

131 
£t_√xt
(
∑ddr_t
 
addr
) {

132 
ut_ad
(!
is_nuŒ
());

133 
ut_ad
(
addr
 < 
UNIV_PAGE_SIZE
);

134 
ut_ad
(
m_må
 !
nuŒ±r
);

136 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_NEXT
, 
addr
, 
MLOG_2BYTES
, 
m_må
);

141 
£t_√xt_node
(c⁄° 
∂i°_node_t
 &
√xt
Ë{ 
£t_√xt
“ext.
addr
()); }

145 
∑ddr_t
 
gë_¥ev
(Ëc⁄° {  (
mach_ªad_‰om_2
(
m_node
 + 
OFFSET_PREV
)); }

149 
∑ddr_t
 
gë_√xt
(Ëc⁄° {  (
mach_ªad_‰om_2
(
m_node
 + 
OFFSET_NEXT
)); }

153 
∂i°_node_t
 
gë_√xt_node
() const {

154 
∑ddr_t
 
	gaddr
 = 
gë_√xt
();

155 
byã
 *
	gnode
 = 
nuŒ±r
;

157 i‡(
	gaddr
 != 0) {

158 
node
 = 
m_‰ame
 + 
addr
;

159 
ut_ad
(
addr
 < 
UNIV_PAGE_SIZE
);

162  (
∂i°_node_t
(
m_‰ame
, 
node
, 
m_må
));

167 
∂i°_node_t
 
gë_¥ev_node
() const {

168 
∑ddr_t
 
	gaddr
 = 
gë_¥ev
();

169 
byã
 *
	gnode
 = 
nuŒ±r
;

171 i‡(
	gaddr
 != 0) {

172 
ut_ad
(
addr
 < 
UNIV_PAGE_SIZE
);

173 
	gnode
 = 
m_‰ame
 + 
addr
;

176  (
∂i°_node_t
(
m_‰ame
, 
node
, 
m_må
));

182 
∑ddr_t
 
addr
() const {

183  ((
	gm_node
 =
nuŒ±r
Ë? 0 : (
m_node
 - 
m_‰ame
));

188 
byã
 *
±r
(Ëc⁄° {  (
	gm_node
); }

192 
boﬁ
 
is_nuŒ
(Ëc⁄° {  (
	gm_node
 =
nuŒ±r
); }

197 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

198 
out
 << "[∂i°_node_t:Çext=" << 
gë_√xt
(Ë<< ",Öªv=" << 
gë_¥ev
()

199 << ",Åhis=" << 
addr
(Ë<< ", føme=" << (*)
m_‰ame


200 << ", m_node=" << (*)
m_node
 << "]";

201  (
	gout
);

206 
£t_‰ame
(
byã
 *
‰ame
Ë{ 
	gm_‰ame
 = frame; }

210 
£t_node
(
byã
 *
node
Ë{ 
	gm_node
 =Çode; }

214 
£t_må
(
må_t
 *
må
Ë{ 
	gm_må
 = mtr; }

218 
byã
 *
gë_‰ame
(Ëc⁄° {  (
	gm_‰ame
); }

220 
boﬁ
 
is_equÆ
(c⁄° 
∂i°_node_t
 &
th©
) const {

221 i‡(
	gm_node
 =
nuŒ±r
 || 
th©
.
m_node
 ==Çullptr) {

222  (
Ál£
);

224  (
	gm_node
 =
th©
.
m_node
);

227 
	g¥iv©e
:

229 
byã
 *
m_‰ame
;

232 
byã
 *
	gm_node
;

235 
må_t
 *
	gm_må
;

238 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	g∂i°_node_t
 &
	gobj
) {

239  (
	gobj
.
¥öt
(
out
));

243 
	s∂i°_ba£_node_t
 {

246 c⁄° 
ulöt
 
	gOFFSET_LEN
 = 0;

250 c⁄° 
ulöt
 
	gOFFSET_FIRST
 = 4;

254 c⁄° 
ulöt
 
	gOFFSET_LAST
 = 6;

257 c⁄° 
ulöt
 
	gSIZE
 = 8;

259 
∂i°_ba£_node_t
(
byã
 *
‰ame
, byã *
ba£
, 
må_t
 *
må
)

260 : 
m_‰ame
(
‰ame
), 
m_ba£
(
ba£
), 
m_må
(
må
) {}

262 
öô
() {

263 
ut_ad
(
m_må
 !
nuŒ±r
);

265 
mlog_wrôe_ulöt
(
m_ba£
 + 
OFFSET_LEN
, 0, 
MLOG_4BYTES
, 
m_må
);

266 
mlog_wrôe_ulöt
(
m_ba£
 + 
OFFSET_FIRST
, 0, 
MLOG_2BYTES
, 
m_må
);

267 
mlog_wrôe_ulöt
(
m_ba£
 + 
OFFSET_LAST
, 0, 
MLOG_2BYTES
, 
m_må
);

270 
ªmove
(
∂i°_node_t
 &
node
) {

271 
ut_ad
(
m_må
 !
nuŒ±r
);

273 
∂i°_node_t
 
	g¥ev
 = 
node
.
gë_¥ev_node
();

274 
∂i°_node_t
 
	g√xt
 = 
node
.
gë_√xt_node
();

276 i‡(
	g¥ev
.
is_nuŒ
()) {

277 
£t_fú°
(
√xt
.
addr
());

279 
	g¥ev
.
£t_√xt
(
√xt
.
addr
());

282 i‡(
	g√xt
.
is_nuŒ
()) {

283 
£t_œ°
(
¥ev
.
addr
());

285 
	g√xt
.
£t_¥ev
(
¥ev
.
addr
());

288 
	gnode
.
£t_√xt
(0);

289 
	gnode
.
£t_¥ev
(0);

291 
de¸_Àn
();

294 
push_‰⁄t
(
∂i°_node_t
 &
node
) {

295 
ut_ad
(
m_må
 !
nuŒ±r
);

297 i‡(
gë_Àn
() == 0) {

298 
add_to_em±y
(
node
);

300 
∑ddr_t
 
	gcur_addr
 = 
node
.
addr
();

301 
∑ddr_t
 
	gfú°_addr
 = 
gë_fú°
();

302 
∂i°_node_t
 
	gfú°_node
 = 
gë_node
(
fú°_addr
);

303 
	gnode
.
£t_√xt
(
fú°_addr
);

304 
	gnode
.
£t_¥ev
(0);

305 
	gfú°_node
.
£t_¥ev
(
cur_addr
);

306 
£t_fú°
(
cur_addr
);

307 
ö¸_Àn
();

312 
ö£π_a·î
(
∂i°_node_t
 &
node1
,Öli°_node_à&
node2
) {

313 
ut_ad
(
m_må
 !
nuŒ±r
);

315 i‡(
	gnode1
.
is_nuŒ
()) {

316 
push_back
(
node2
);

318 
∂i°_node_t
 
	gnode3
 = 
node1
.
gë_√xt_node
();

319 
	gnode1
.
£t_√xt_node
(
node2
);

320 
	gnode2
.
£t_√xt_node
(
node3
);

322 i‡(
	gnode3
.
is_nuŒ
()) {

323 
£t_œ°
(
node2
.
addr
());

325 
	gnode3
.
£t_¥ev_node
(
node2
);

328 
	gnode2
.
£t_¥ev_node
(
node1
);

330 
ö¸_Àn
();

335 
ö£π_bef‹e
(
∂i°_node_t
 &
node3
,Öli°_node_à&
node2
) {

336 
ut_ad
(
m_må
 !
nuŒ±r
);

338 i‡(
	gnode3
.
is_nuŒ
()) {

339 
push_back
(
node2
);

341 
∂i°_node_t
 
	gnode1
 = 
node3
.
gë_¥ev_node
();

343 i‡(
	gnode1
.
is_nuŒ
()) {

344 
£t_fú°
(
node2
.
addr
());

346 
	gnode1
.
£t_√xt_node
(
node2
);

349 
	gnode2
.
£t_√xt_node
(
node3
);

350 
	gnode3
.
£t_¥ev_node
(
node2
);

351 
	gnode2
.
£t_¥ev_node
(
node1
);

353 
ö¸_Àn
();

357 
add_to_em±y
(
∂i°_node_t
 &
node
) {

358 
ut_ad
(
m_må
 !
nuŒ±r
);

359 
ut_ad
(
gë_Àn
() == 0);

361 
£t_fú°
(
node
.
addr
());

362 
£t_œ°
(
node
.
addr
());

363 
ö¸_Àn
();

366 
push_back
(
∂i°_node_t
 &
node
) {

367 
ut_ad
(
m_må
 !
nuŒ±r
);

369 i‡(
gë_Àn
() == 0) {

370 
add_to_em±y
(
node
);

372 
∑ddr_t
 
	gcur_addr
 = 
node
.
addr
();

373 
∑ddr_t
 
	gœ°_addr
 = 
gë_œ°
();

374 
∂i°_node_t
 
	gœ°_node
 = 
gë_node
(
œ°_addr
);

375 
	gnode
.
£t_√xt
(0);

376 
	gnode
.
£t_¥ev_node
(
œ°_node
);

377 
	gœ°_node
.
£t_√xt
(
cur_addr
);

378 
£t_œ°
(
cur_addr
);

379 
ö¸_Àn
();

383 
boﬁ
 
em±y
(Ëc⁄° {  (
gë_Àn
() == 0); }

385 
ulöt
 
gë_Àn
(Ëc⁄° {  (
mach_ªad_‰om_4
(
m_ba£
 + 
OFFSET_LEN
)); }

387 
∑ddr_t
 
gë_fú°
() const {

388  (
mach_ªad_‰om_2
(
m_ba£
 + 
OFFSET_FIRST
));

391 
∂i°_node_t
 
gë_fú°_node
() const {

392 
∂i°_node_t
 
ªsu…
(
m_må
, 
m_‰ame
);

394 i‡(!
em±y
()) {

395 
byã
 *
	gnode
 = 
m_‰ame
 + 
gë_fú°
();

396 
	gªsu…
.
£t_node
(
node
);

398  (
	gªsu…
);

401 
∑ddr_t
 
gë_œ°
(Ëc⁄° {  (
mach_ªad_‰om_2
(
m_ba£
 + 
OFFSET_LAST
)); }

403 
∂i°_node_t
 
gë_œ°_node
() const {

404 
∂i°_node_t
 
ªsu…
(
m_må
, 
m_‰ame
);

406 i‡(!
em±y
()) {

407 
	gªsu…
.
£t_node
(
m_‰ame
 + 
gë_œ°
());

410  (
	gªsu…
);

413 
£t_Àn
(
ulöt
 
Àn
) {

414 
ut_ad
(
m_må
 !
nuŒ±r
);

416 
mlog_wrôe_ulöt
(
m_ba£
 + 
OFFSET_LEN
, 
Àn
, 
MLOG_4BYTES
, 
m_må
);

419 
ö¸_Àn
() {

420 
ut_ad
(
m_må
 !
nuŒ±r
);

422 
ulöt
 
	gÀn
 = 
mach_ªad_‰om_4
(
m_ba£
 + 
OFFSET_LEN
);

423 
mlog_wrôe_ulöt
(
m_ba£
 + 
OFFSET_LEN
, 
Àn
 + 1, 
MLOG_4BYTES
, 
m_må
);

426 
de¸_Àn
() {

427 
ut_ad
(
m_må
 !
nuŒ±r
);

429 
ulöt
 
	gÀn
 = 
mach_ªad_‰om_4
(
m_ba£
 + 
OFFSET_LEN
);

431 
ut_ad
(
Àn
 > 0);

433 
mlog_wrôe_ulöt
(
m_ba£
 + 
OFFSET_LEN
, 
Àn
 - 1, 
MLOG_4BYTES
, 
m_må
);

436 
£t_fú°
(
∑ddr_t
 
addr
) {

437 
ut_ad
(
m_må
 !
nuŒ±r
);

439 
mlog_wrôe_ulöt
(
m_ba£
 + 
OFFSET_FIRST
, 
addr
, 
MLOG_2BYTES
, 
m_må
);

442 
£t_œ°
(
∑ddr_t
 
addr
) {

443 
ut_ad
(
m_må
 !
nuŒ±r
);

445 
mlog_wrôe_ulöt
(
m_ba£
 + 
OFFSET_LAST
, 
addr
, 
MLOG_2BYTES
, 
m_må
);

448 
∂i°_node_t
 
gë_node
(
∑ddr_t
 
addr
) {

449 
byã
 *
	gnode
 = 
m_‰ame
 + 
addr
;

450  (
∂i°_node_t
(
m_‰ame
, 
node
, 
m_må
));

453 
∑ddr_t
 
addr
(Ëc⁄° {  (
	gm_ba£
 - 
	gm_‰ame
); }

455 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

456 
out
 << "[∂i°_ba£_node_t:Üí=" << 
gë_Àn
(Ë<< ", fú°=" << 
gë_fú°
()

457 << ",Üa°=" << 
gë_œ°
(Ë<< ",Åhis=" << 
addr
() << "]";

458  (
	gout
);

461 
	g°d
::
o°ªam
 &
¥öt_li°
(
°d
::o°ªam &
out
) const {

462 
¥öt
(
out
);

463 
	gout
 << 
	g°d
::
ídl
;

465 
∂i°_node_t
 
	gcur
 = 
gë_fú°_node
(); !cur.
is_nuŒ
();

466 
	gcur
 = 
cur
.
gë_√xt_node
()) {

467 
out
 << 
cur
 << 
°d
::
ídl
;

469  (
	gout
);

472 #ifde‡
UNIV_DEBUG


475 
boﬁ
 
vÆid©e
() const;

478 
byã
 *
	gm_‰ame
;

479 
byã
 *
	gm_ba£
;

480 
må_t
 *
	gm_må
;

483 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
,

484 c⁄° 
	g∂i°_ba£_node_t
 &
	gobj
) {

485  (
	gobj
.
¥öt
(
out
));

488 
usög
 
	g‰ag_id_t
 = 
ulöt
;

489 c⁄° 
ulöt
 
	gFRAG_ID_NULL
 = 
°d
::
numîic_limôs
<
uöt16_t
>::
max
();

490 c⁄° 
ulöt
 
	gKB16
 = 16 * 1024;

494 
	gnode_∑ge_t
 : 
public
 
basic_∑ge_t
 {

496 c⁄° 
ulöt
 
OFFSET_VERSION
 = 
FIL_PAGE_DATA
;

497 c⁄° 
ulöt
 
	gLOB_PAGE_DATA
 = 
OFFSET_VERSION
 + 1;

499 
£t_vîsi⁄_0
() {

500 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_VERSION
, 0, 
MLOG_1BYTE
, 
m_må
);

504 
node_∑ge_t
() {}

506 
node_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
Ë: 
basic_∑ge_t
(block, mtr) {}

508 
node_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

509 : 
basic_∑ge_t
(
block
, 
må
, 
ödex
) {}

511 
node_∑ge_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

512 : 
basic_∑ge_t
(
nuŒ±r
, 
må
, 
ödex
) {}

516 
node_∑ge_t
(
buf_block_t
 *
block
Ë: 
basic_∑ge_t
(block, 
nuŒ±r
,Çullptr) {}

520 
imp‹t
(
åx_id_t
 
åx_id
);

522 
buf_block_t
 *
Æloc
(
fú°_∑ge_t
 &
fú°_∑ge
, 
boﬁ
 
bulk
);

524 
buf_block_t
 *
lﬂd_x
(
∑ge_id_t
 
∑ge_id
, 
∑ge_size_t
 
∑ge_size
) {

525 
	gm_block
 = 
buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_X_LATCH
, 
m_må
);

526  (
	gm_block
);

529 
dóŒoc
() {

530 
bå_∑ge_‰ì_low
(
m_ödex
, 
m_block
, 
ULINT_UNDEFINED
, 
m_må
);

531 
	gm_block
 = 
nuŒ±r
;

534 
ulöt
 
∑ylﬂd
() {

535  (
	gUNIV_PAGE_SIZE
 - 
	gLOB_PAGE_DATA
 - 
	gFIL_PAGE_DATA_END
);

538 
ulöt
 
max_•a˚_avaûabÀ
(Ë{  (
∑ylﬂd
()); }

542 
ulöt
 
node_cou¡
();

544 
£t_∑ge_ty≥
() {

545 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
, 
FIL_PAGE_TYPE_LOB_INDEX
,

546 
MLOG_2BYTES
, 
m_må
);

549 
byã
 *
nodes_begö
(Ëc⁄° {  (
‰ame
(Ë+ 
	gLOB_PAGE_DATA
); }

553 
	sz_‰ag_íåy_t
 {

554 
	gpublic
:

556 c⁄° 
ulöt
 
OFFSET_PREV
 = 0;

559 c⁄° 
ulöt
 
	gOFFSET_NEXT
 = 
OFFSET_PREV
 + 
FIL_ADDR_SIZE
;

562 c⁄° 
ulöt
 
	gOFFSET_PAGE_NO
 = 
OFFSET_NEXT
 + 
FIL_ADDR_SIZE
;

565 c⁄° 
ulöt
 
	gOFFSET_N_FRAGS
 = 
OFFSET_PAGE_NO
 + 4;

568 c⁄° 
ulöt
 
	gOFFSET_USED_LEN
 = 
OFFSET_N_FRAGS
 + 2;

571 c⁄° 
ulöt
 
	gOFFSET_TOTAL_FREE_LEN
 = 
OFFSET_USED_LEN
 + 2;

574 c⁄° 
ulöt
 
	gOFFSET_BIG_FREE_LEN
 = 
OFFSET_TOTAL_FREE_LEN
 + 2;

577 c⁄° 
ulöt
 
	gSIZE
 = 
OFFSET_BIG_FREE_LEN
 + 2;

580 
z_‰ag_íåy_t
(
Ê°_node_t
 *
node
, 
må_t
 *
må
Ë: 
m_node
“ode), 
m_må
(mtr) {}

583 
z_‰ag_íåy_t
(Ë: 
m_node
(
nuŒ±r
), 
m_må
(nullptr) {}

586 
z_‰ag_íåy_t
(
må_t
 *
må
Ë: 
m_node
(
nuŒ±r
), 
m_må
(mtr) {}

591 
öô
() {

592 
ut_ad
(
m_må
 !
nuŒ±r
);

593 
ut_ad
(
m_node
 !
nuŒ±r
);

595 
£t_¥ev_nuŒ
();

596 
£t_√xt_nuŒ
();

597 
£t_∑ge_no
(
FIL_NULL
);

598 
£t_n_‰ags
(0);

599 
£t_u£d_Àn
(0);

600 
£t_tŸÆ_‰ì_Àn
(0);

601 
£t_big_‰ì_Àn
(0);

605 
£t_nuŒ
(Ë{ 
	gm_node
 = 
nuŒ±r
; }

609 
boﬁ
 
is_nuŒ
(Ëc⁄° {  (
	gm_node
 =
nuŒ±r
); }

611 
fû_addr_t
 
gë_£lf_addr
() const {

612 
∑ge_t
 *
	g‰ame
 = 
∑ge_Æign
(
m_node
);

613 
∑ge_no_t
 
	g∑ge_no
 = 
mach_ªad_‰om_4
(
‰ame
 + 
FIL_PAGE_OFFSET
);

614 
uöt16_t
 
	goff£t
 = 
°©ic_ˇ°
<uöt16_t>(
m_node
 - 
‰ame
);

615 
ut_ad
(
off£t
 < 
UNIV_PAGE_SIZE
);

616  (
fû_addr_t
(
∑ge_no
, 
off£t
));

623 
upd©e
(c⁄° 
z_‰ag_∑ge_t
 &
‰ag_∑ge
);

628 
ªmove
(
Ê°_ba£_node_t
 *
bnode
) {

629 
ut_ad
(
m_må
 !
nuŒ±r
);

631 
Ê°_ªmove
(
bnode
, 
m_node
, 
m_må
);

636 
push_back
(
Ê°_ba£_node_t
 *
bnode
) {

637 
ut_ad
(
m_må
 !
nuŒ±r
);

639 
Ê°_add_œ°
(
bnode
, 
m_node
, 
m_må
);

644 
push_‰⁄t
(
Ê°_ba£_node_t
 *
bnode
) {

645 
ut_ad
(
m_må
 !
nuŒ±r
);

647 
Ê°_add_fú°
(
bnode
, 
m_node
, 
m_må
);

652 
ª£t
(
Ê°_node_t
 *
node
Ë{ 
	gm_node
 =Çode; }

655 
£t_¥ev_nuŒ
() {

656 
ut_ad
(
m_må
 !
nuŒ±r
);

658 
Ê°_wrôe_addr
(
m_node
 + 
OFFSET_PREV
, 
fû_addr_nuŒ
, 
m_må
);

662 
£t_¥ev
(c⁄° 
fû_addr_t
 &
addr
) {

663 
ut_ad
(
m_må
 !
nuŒ±r
);

665 
Ê°_wrôe_addr
(
m_node
 + 
OFFSET_PREV
, 
addr
, 
m_må
);

669 
fû_addr_t
 
gë_¥ev
() const {

670  (
Ê°_ªad_addr
(
m_node
 + 
OFFSET_PREV
, 
m_må
));

674 
£t_√xt_nuŒ
() {

675 
ut_ad
(
m_må
 !
nuŒ±r
);

677 
Ê°_wrôe_addr
(
m_node
 + 
OFFSET_NEXT
, 
fû_addr_nuŒ
, 
m_må
);

681 
£t_√xt
(c⁄° 
fû_addr_t
 &
addr
) {

682 
ut_ad
(
m_må
 !
nuŒ±r
);

684 
Ê°_wrôe_addr
(
m_node
 + 
OFFSET_NEXT
, 
addr
, 
m_må
);

688 
fû_addr_t
 
gë_√xt
() const {

689  (
Ê°_ªad_addr
(
m_node
 + 
OFFSET_NEXT
, 
m_må
));

693 
∑ge_no_t
 
gë_∑ge_no
() const {

694  (
mach_ªad_‰om_4
(
m_node
 + 
OFFSET_PAGE_NO
));

698 
£t_∑ge_no
(
∑ge_no_t
 
∑ge_no
) const {

699 
ut_ad
(
m_må
 !
nuŒ±r
);

701 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_PAGE_NO
, 
∑ge_no
, 
MLOG_4BYTES
, 
m_må
);

707 
‰ì_‰ag_∑ge
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
);

710 
ulöt
 
gë_n_‰ags
() const {

711  (
mach_ªad_‰om_2
(
m_node
 + 
OFFSET_N_FRAGS
));

715 
£t_n_‰ags
(
ulöt
 
‰ags
) const {

716 
ut_ad
(
m_må
 !
nuŒ±r
);

718 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_N_FRAGS
, 
‰ags
, 
MLOG_2BYTES
, 
m_må
);

722 
ulöt
 
gë_u£d_Àn
() const {

723  (
mach_ªad_‰om_2
(
m_node
 + 
OFFSET_USED_LEN
));

727 
£t_u£d_Àn
(
ulöt
 
u£d
) const {

728 
ut_ad
(
m_må
 !
nuŒ±r
);

730 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_USED_LEN
, 
u£d
, 
MLOG_2BYTES
, 
m_må
);

734 
ulöt
 
gë_tŸÆ_‰ì_Àn
() const {

735  (
mach_ªad_‰om_2
(
m_node
 + 
OFFSET_TOTAL_FREE_LEN
));

739 
ulöt
 
gë_big_‰ì_Àn
() const {

740  (
mach_ªad_‰om_2
(
m_node
 + 
OFFSET_BIG_FREE_LEN
));

744 
£t_tŸÆ_‰ì_Àn
(
ulöt
 
n
) {

745 
ut_ad
(
m_må
 !
nuŒ±r
);

747 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_TOTAL_FREE_LEN
, 
n
, 
MLOG_2BYTES
, 
m_må
);

751 
£t_big_‰ì_Àn
(
ulöt
 
n
) {

752 
ut_ad
(
m_må
 !
nuŒ±r
);

754 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_BIG_FREE_LEN
, 
n
, 
MLOG_2BYTES
, 
m_må
);

757 
purge
(
Ê°_ba£_node_t
 *
u£d_l°
, fl°_ba£_node_à*
‰ì_l°
);

759 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

761 
	g¥iv©e
:

763 
Ê°_node_t
 *
m_node
;

767 
må_t
 *
	gm_må
;

770 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gz_‰ag_íåy_t
 &
	gobj
) {

771  (
	gobj
.
¥öt
(
out
));

775 
	sz_ödex_∑ge_t
 {

777 c⁄° 
ulöt
 
	gOFFSET_VERSION
 = 
FIL_PAGE_DATA
;

778 c⁄° 
ulöt
 
	gLOB_PAGE_DATA
 = 
OFFSET_VERSION
 + 1;

782 
ex∂icô
 
z_ödex_∑ge_t
(
må_t
 *
må
Ë: 
m_block
(
nuŒ±r
), 
m_må
(mtr) {}

788 
z_ödex_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

789 : 
m_block
(
block
), 
m_må
(
må
), 
m_ödex
(
ödex
) {}

794 
z_ödex_∑ge_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

795 : 
z_ödex_∑ge_t
(
nuŒ±r
, 
må
, 
ödex
) {}

799 
ex∂icô
 
z_ödex_∑ge_t
(
buf_block_t
 *
block
)

800 : 
z_ödex_∑ge_t
(
block
, 
nuŒ±r
,Çullptr) {}

805 
z_ödex_∑ge_t
(
buf_block_t
 *
block
, 
di˘_ödex_t
 *
ödex
)

806 : 
z_ödex_∑ge_t
(
block
, 
nuŒ±r
, 
ödex
) {}

811 
£t_•a˚_id_no_ªdo
(
•a˚_id_t
 
•a˚_id
) {

812 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_SPACE_ID
, 
•a˚_id
, 
MLOG_4BYTES
,

813 
nuŒ±r
);

817 
£t_∑ge_ty≥
(
må_t
 *
må
) {

818 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
, 
FIL_PAGE_TYPE_ZLOB_INDEX
,

819 
MLOG_2BYTES
, 
må
);

822 
£t_vîsi⁄_0
() {

823 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_VERSION
, 0, 
MLOG_1BYTE
, 
m_må
);

827 
£t_√xt_∑ge_no
(
∑ge_no_t
 
∑ge_no
) {

828 
ut_ad
(
m_må
 !
nuŒ±r
);

830 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
, 
∑ge_no
, 
MLOG_4BYTES
, 
m_må
);

834 
∑ge_no_t
 
gë_∑ge_no
() const {

835  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
FIL_PAGE_OFFSET
));

839 
∑ge_no_t
 
gë_√xt_∑ge_no
() const {

840  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
));

845 
buf_block_t
 *
Æloc
(
z_fú°_∑ge_t
 &
fú°
, 
boﬁ
 
bulk
);

847 
imp‹t
(
åx_id_t
 
åx_id
);

852 
buf_block_t
 *
lﬂd_x
(
∑ge_no_t
 
∑ge_no
) {

853 
∑ge_id_t
 
∑ge_id
(
di˘_ödex_gë_•a˚
(
m_ödex
), 
∑ge_no
);

854 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

855 
	gm_block
 = 
buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_X_LATCH
, 
m_må
);

857 
ut_ad
(
m_block
->
gë_∑ge_ty≥
(Ë=
FIL_PAGE_TYPE_ZLOB_INDEX
);

858  (
	gm_block
);

861 
dóŒoc
() {

862 
bå_∑ge_‰ì_low
(
m_ödex
, 
m_block
, 
ULINT_UNDEFINED
, 
m_må
);

863 
	gm_block
 = 
nuŒ±r
;

866 
öô
(
Ê°_ba£_node_t
 *
‰ì_l°
, 
må_t
 *
må
);

868 
ulöt
 
∑ylﬂd
() const {

869 c⁄° 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

871  (
	g∑ge_size
.
physiˇl
(Ë- 
	gFIL_PAGE_DATA_END
 - 
	gLOB_PAGE_DATA
);

874 
ulöt
 
gë_n_ödex_íåõs
() const;

876 
byã
 *
‰ame
(Ëc⁄° {  (
buf_block_gë_‰ame
(
m_block
)); }

879 
buf_block_t
 *
	gm_block
;

882 
må_t
 *
	gm_må
;

885 
di˘_ödex_t
 *
	gm_ödex
;

889 
	sz_d©a_∑ge_t
 {

891 c⁄° 
ulöt
 
	gOFFSET_VERSION
 = 
FIL_PAGE_DATA
;

894 c⁄° 
ulöt
 
	gOFFSET_DATA_LEN
 = 
OFFSET_VERSION
 + 1;

897 c⁄° 
ulöt
 
	gOFFSET_TRX_ID
 = 
OFFSET_DATA_LEN
 + 4;

900 c⁄° 
ulöt
 
	gOFFSET_DATA_BEGIN
 = 
OFFSET_TRX_ID
 + 6;

902 
ulöt
 
∑ylﬂd
() {

903 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

904  (
	g∑ge_size
.
physiˇl
(Ë- 
	gOFFSET_DATA_BEGIN
 - 
	gFIL_PAGE_DATA_END
);

907 
z_d©a_∑ge_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

908 : 
m_block
(
nuŒ±r
), 
m_må
(
må
), 
m_ödex
(
ödex
) {}

910 
z_d©a_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

911 : 
m_block
(
block
), 
m_må
(
må
), 
m_ödex
(
ödex
) {}

915 
z_d©a_∑ge_t
(
buf_block_t
 *
block
)

916 : 
m_block
(
block
), 
m_må
(
nuŒ±r
), 
m_ödex
(nullptr) {}

921 
£t_•a˚_id_no_ªdo
(
•a˚_id_t
 
•a˚_id
) {

922 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_SPACE_ID
, 
•a˚_id
, 
MLOG_4BYTES
,

923 
nuŒ±r
);

931 
buf_block_t
 *
Æloc
(
∑ge_no_t
 
höt
, 
boﬁ
 
bulk
);

934 
dóŒoc
() {

935 
bå_∑ge_‰ì_low
(
m_ödex
, 
m_block
, 
ULINT_UNDEFINED
, 
m_må
);

936 
	gm_block
 = 
nuŒ±r
;

940 
£t_∑ge_ty≥
() {

941 
ut_ad
(
m_må
 !
nuŒ±r
);

943 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
, 
FIL_PAGE_TYPE_ZLOB_DATA
,

944 
MLOG_2BYTES
, 
m_må
);

947 
£t_vîsi⁄_0
() {

948 
ut_ad
(
m_må
 !
nuŒ±r
);

950 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_VERSION
, 0, 
MLOG_1BYTE
, 
m_må
);

954 
£t_√xt_∑ge
(
∑ge_no_t
 
∑ge_no
) {

955 
ut_ad
(
m_må
 !
nuŒ±r
);

957 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
, 
∑ge_no
, 
MLOG_4BYTES
, 
m_må
);

960 
öô
() {

961 
ut_ad
(
m_må
 !
nuŒ±r
);

963 
£t_∑ge_ty≥
();

964 
£t_vîsi⁄_0
();

965 
£t_√xt_∑ge
(
FIL_NULL
);

966 
£t_d©a_Àn
(0);

967 
£t_åx_id
(0);

970 
byã
 *
begö_d©a_±r
(Ëc⁄° {  (
‰ame
(Ë+ 
	gOFFSET_DATA_BEGIN
); }

972 
£t_d©a_Àn
(
ulöt
 
Àn
) {

973 
ut_ad
(
m_må
 !
nuŒ±r
);

975 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_DATA_LEN
, 
Àn
, 
MLOG_4BYTES
, 
m_må
);

978 
ulöt
 
gë_d©a_Àn
() const {

979  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
OFFSET_DATA_LEN
));

982 
£t_åx_id
(
åx_id_t
 
tid
) {

983 
ut_ad
(
m_må
 !
nuŒ±r
);

985 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_TRX_ID
;

986 
mach_wrôe_to_6
(
±r
, 
tid
);

987 
mlog_log_°rög
(
±r
, 6, 
m_må
);

993 
£t_åx_id_no_ªdo
(
åx_id_t
 
tid
) {

994 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_TRX_ID
;

995 
mach_wrôe_to_6
(
±r
, 
tid
);

999 
∑ge_no_t
 
gë_∑ge_no
() const {

1000  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
FIL_PAGE_OFFSET
));

1003 
fû_addr_t
 
gë_£lf_addr
() const {

1004 
∑ge_no_t
 
	g∑ge_no
 = 
gë_∑ge_no
();

1005  (
fû_addr_t
(
∑ge_no
, 
OFFSET_DATA_BEGIN
));

1008 
byã
 *
‰ame
(Ëc⁄° {  (
buf_block_gë_‰ame
(
m_block
)); }

1010 
buf_block_t
 *
	gm_block
;

1011 
må_t
 *
	gm_må
;

1012 
di˘_ödex_t
 *
	gm_ödex
;

1016 
	sz_‰ag_node_∑ge_t
 {

1018 c⁄° 
ulöt
 
	gOFFSET_VERSION
 = 
FIL_PAGE_DATA
;

1019 c⁄° 
ulöt
 
	gLOB_PAGE_DATA
 = 
OFFSET_VERSION
 + 1;

1021 
z_‰ag_node_∑ge_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

1022 : 
m_block
(
nuŒ±r
), 
m_må
(
må
), 
m_ödex
(
ödex
) {}

1026 
ex∂icô
 
z_‰ag_node_∑ge_t
(
buf_block_t
 *
block
)

1027 : 
m_block
(
block
), 
m_må
(
nuŒ±r
), 
m_ödex
(nullptr) {}

1032 
£t_•a˚_id_no_ªdo
(
•a˚_id_t
 
•a˚_id
) {

1033 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_SPACE_ID
, 
•a˚_id
, 
MLOG_4BYTES
,

1034 
nuŒ±r
);

1038 
£t_∑ge_ty≥
() {

1039 
ut_ad
(
m_må
 !
nuŒ±r
);

1041 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
, 
FIL_PAGE_TYPE_ZLOB_FRAG_ENTRY
,

1042 
MLOG_2BYTES
, 
m_må
);

1046 
£t_√xt_∑ge_no
(
∑ge_no_t
 
∑ge_no
) {

1047 
ut_ad
(
m_må
 !
nuŒ±r
);

1049 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
, 
∑ge_no
, 
MLOG_4BYTES
, 
m_må
);

1052 
£t_vîsi⁄_0
() {

1053 
ut_ad
(
m_må
 !
nuŒ±r
);

1055 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_VERSION
, 0, 
MLOG_1BYTE
, 
m_må
);

1059 
∑ge_no_t
 
gë_∑ge_no
() const {

1060  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
FIL_PAGE_OFFSET
));

1064 
∑ge_no_t
 
gë_√xt_∑ge_no
() const {

1065  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
));

1070 
buf_block_t
 *
Æloc
(
z_fú°_∑ge_t
 &
fú°
, 
boﬁ
 
bulk
);

1072 
dóŒoc
() {

1073 
bå_∑ge_‰ì_low
(
m_ödex
, 
m_block
, 
ULINT_UNDEFINED
, 
m_må
);

1074 
	gm_block
 = 
nuŒ±r
;

1080 
buf_block_t
 *
lﬂd_x
(
∑ge_no_t
 
∑ge_no
) {

1081 
∑ge_id_t
 
∑ge_id
(
di˘_ödex_gë_•a˚
(
m_ödex
), 
∑ge_no
);

1082 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

1083 
	gm_block
 = 
buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_X_LATCH
, 
m_må
);

1085 
ut_ad
(
m_block
->
gë_∑ge_ty≥
(Ë=
FIL_PAGE_TYPE_ZLOB_FRAG_ENTRY
);

1087  (
	gm_block
);

1090 
öô
(
Ê°_ba£_node_t
 *
‰ì_l°
) {

1091 
ut_ad
(
m_må
 !
nuŒ±r
);

1093 
ulöt
 
	gn
 = 
gë_n_‰ag_íåõs
();

1094 
ulöt
 
	gi
 = 0; i < 
	gn
; ++i) {

1095 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
LOB_PAGE_DATA
;

1096 
	g±r
 +(
i
 * 
z_‰ag_íåy_t
::
SIZE
);

1097 
z_‰ag_íåy_t
 
íåy
(
±r
, 
m_må
);

1098 
	gíåy
.
öô
();

1099 
	gíåy
.
push_back
(
‰ì_l°
);

1103 
ulöt
 
∑ylﬂd
() const {

1104 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

1105  (
	g∑ge_size
.
physiˇl
(Ë- 
	gFIL_PAGE_DATA_END
 - 
	gLOB_PAGE_DATA
);

1108 
ulöt
 
gë_n_‰ag_íåõs
() const {

1109  (
∑ylﬂd
(Ë/ 
	gz_‰ag_íåy_t
::
SIZE
);

1112 
byã
 *
‰ame
(Ëc⁄° {  (
buf_block_gë_‰ame
(
m_block
)); }

1115 
buf_block_t
 *
	gm_block
;

1118 
må_t
 *
	gm_må
;

1121 
di˘_ödex_t
 *
	gm_ödex
;

1129 
dbîr_t
 
z_¥öt_öfo
(c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
lob
::
ªf_t
 &
ªf
,

1130 
°d
::
o°ªam
 &
out
);

1133 
	s‰ag_node_t
 {

1136 c⁄° 
ulöt
 
	gOFFSET_LEN
 = 
∂i°_node_t
::
SIZE
;

1139 c⁄° 
ulöt
 
	gOFFSET_FRAG_ID
 = 
OFFSET_LEN
 + 2;

1142 c⁄° 
ulöt
 
	gOFFSET_DATA
 = 
OFFSET_FRAG_ID
 + 2;

1146 c⁄° 
ulöt
 
	gSIZE_OF_PAGE_DIR_ENTRY
 = 2;

1151 
‰ag_node_t
(c⁄° 
∂i°_node_t
 &
node
, 
må_t
 *
må
)

1152 : 
m_node
(
node
), 
m_må
(
må
) {}

1154 
‰ag_node_t
(
byã
 *
‰ame
, byã *
±r
Ë: 
m_node
(‰ame,Öå), 
m_må
(
nuŒ±r
) {}

1162 
‰ag_node_t
(
byã
 *
‰ame
, byã *
±r
, 
må_t
 *
må
)

1163 : 
m_node
(
‰ame
, 
±r
, 
må
), 
m_må
(mtr) {}

1169 
ulöt
 
ovîhód
(Ë{  (
	gSIZE_OF_PAGE_DIR_ENTRY
 + 
	gOFFSET_DATA
); }

1172 
ulöt
 
hódî_size
(Ë{  (
	gOFFSET_DATA
); }

1181 
‰ag_node_t
(
byã
 *
‰ame
, byã *
±r
, 
ulöt
 
Àn
, 
må_t
 *
må
)

1182 : 
m_node
(
‰ame
, 
±r
, 
må
), 
m_må
(mtr) {

1183 
ut_ad
(
må
 !
nuŒ±r
);

1185 
mlog_wrôe_ulöt
(
m_node
.
±r
(Ë+ 
OFFSET_LEN
, 
Àn
, 
MLOG_2BYTES
, 
må
);

1188 
byã
 *
‰ag_begö
(Ëc⁄° {  (
	gm_node
.
±r
(Ë+ 
	gOFFSET_DATA
); }

1190 
byã
 *
d©a_begö
(Ëc⁄° {  (
	gm_node
.
±r
(Ë+ 
	gOFFSET_DATA
); }

1192 
£t_tŸÆ_Àn
(
ulöt
 
Àn
) {

1193 
ut_ad
(
m_må
 !
nuŒ±r
);

1195 
mlog_wrôe_ulöt
(
m_node
.
±r
(Ë+ 
OFFSET_LEN
, 
Àn
, 
MLOG_2BYTES
, 
m_må
);

1199 
ö¸_Àngth_by_2
() {

1200 
ut_ad
(
m_må
 !
nuŒ±r
);

1202 
ulöt
 
	gÀn
 = 
mach_ªad_‰om_2
(
m_node
.
±r
(Ë+ 
OFFSET_LEN
);

1203 
mlog_wrôe_ulöt
(
m_node
.
±r
(Ë+ 
OFFSET_LEN
, 
Àn
 + 
SIZE_OF_PAGE_DIR_ENTRY
,

1204 
MLOG_2BYTES
, 
m_må
);

1208 
de¸_Àngth_by_2
() {

1209 
ut_ad
(
m_må
 !
nuŒ±r
);

1211 
ulöt
 
	gÀn
 = 
mach_ªad_‰om_2
(
m_node
.
±r
(Ë+ 
OFFSET_LEN
);

1212 
mlog_wrôe_ulöt
(
m_node
.
±r
(Ë+ 
OFFSET_LEN
, 
Àn
 - 
SIZE_OF_PAGE_DIR_ENTRY
,

1213 
MLOG_2BYTES
, 
m_må
);

1216 
boﬁ
 
is_bef‹e
(c⁄° 
‰ag_node_t
 &
‰ag
) const {

1217  (
	gm_node
.
is_bef‹e
(
‰ag
.
m_node
));

1220 
£t_‰ag_id_nuŒ
() {

1221 
ut_ad
(
m_må
 !
nuŒ±r
);

1223 
mlog_wrôe_ulöt
(
m_node
.
±r
(Ë+ 
OFFSET_FRAG_ID
, 
FRAG_ID_NULL
, 
MLOG_2BYTES
,

1224 
m_må
);

1227 
£t_‰ag_id
(
ulöt
 
id
) {

1228 
ut_ad
(
m_må
 !
nuŒ±r
);

1230 
mlog_wrôe_ulöt
(
m_node
.
±r
(Ë+ 
OFFSET_FRAG_ID
, 
id
, 
MLOG_2BYTES
, 
m_må
);

1233 
ulöt
 
gë_‰ag_id
() const {

1234  (
mach_ªad_‰om_2
(
m_node
.
±r
(Ë+ 
OFFSET_FRAG_ID
));

1238 
ulöt
 
∑ylﬂd
(Ëc⁄° {  (
gë_tŸÆ_Àn
(Ë- 
hódî_size
()); }

1241 
ulöt
 
gë_tŸÆ_Àn
() const {

1242  (
mach_ªad_‰om_2
(
m_node
.
±r
(Ë+ 
OFFSET_LEN
));

1247 
∑ddr_t
 
addr
(Ëc⁄° {  (
	gm_node
.addr()); }

1252 
byã
 *
±r
() const {

1253 
ut_ad
(!
m_node
.
is_nuŒ
());

1254  (
	gm_node
.
±r
());

1261 
byã
 *
íd_±r
() const {

1262 
ut_ad
(!
m_node
.
is_nuŒ
());

1263  (
±r
(Ë+ 
gë_tŸÆ_Àn
());

1268 
byã
 *
‰ame
(Ëc⁄° {  (
	gm_node
.
gë_‰ame
()); }

1270 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

1271 i‡(!
m_node
.
is_nuŒ
()) {

1272 
ulöt
 
Àn
 = 
gë_tŸÆ_Àn
();

1273 
	gout
 << "[‰ag_node_t: " << 
	gm_node
 << ",Üí=" << 
	gÀn
 << "/" << 
∑ylﬂd
()

1274 << ", føg_id=" << 
gë_‰ag_id
() << "]";

1276 
	gout
 << "[frag_node_t:Çull,Üen=0]";

1278  (
	gout
);

1281 
‰ag_node_t
 
gë_√xt_‰ag
() {

1282 
ut_ad
(!
is_nuŒ
());

1283 
∂i°_node_t
 
	g√xt
 = 
m_node
.
gë_√xt_node
();

1284  (
‰ag_node_t
(
√xt
, 
m_må
));

1287 
‰ag_node_t
 
gë_√xt_node
(Ë{  (
gë_√xt_‰ag
()); }

1289 
‰ag_node_t
 
gë_¥ev_node
(Ë{  (
gë_¥ev_‰ag
()); }

1291 
‰ag_node_t
 
gë_¥ev_‰ag
() {

1292 
ut_ad
(!
is_nuŒ
());

1293 
∂i°_node_t
 
	g¥ev
 = 
m_node
.
gë_¥ev_node
();

1294  (
‰ag_node_t
(
¥ev
, 
m_må
));

1308 
boﬁ
 
mîge
(
‰ag_node_t
 &
√xt
) {

1309 
ut_ad
(
m_må
 !
nuŒ±r
);

1311 
byã
 *
	gp1
 = 
±r
();

1312 
ulöt
 
	gÀn1
 = 
gë_tŸÆ_Àn
();

1313 
byã
 *
	gp2
 = 
√xt
.
±r
();

1314 
ulöt
 
	gÀn2
 = 
√xt
.
gë_tŸÆ_Àn
();

1316 i‡(
	gp2
 =(
p1
 + 
Àn1
)) {

1317 
£t_tŸÆ_Àn
(
Àn1
 + 
Àn2
);

1318  (
	gåue
);

1321  (
	gÁl£
);

1324 
boﬁ
 
is_nuŒ
(Ëc⁄° {  (
	gm_node
.is_null()); }

1326 
boﬁ
 
is_equÆ
(c⁄° 
‰ag_node_t
 &
th©
) const {

1327  (
	gm_node
.
is_equÆ
(
th©
.
m_node
));

1330 
boﬁ
 
is_equÆ
(c⁄° 
∂i°_node_t
 &
node
) const {

1331  (
	gm_node
.
is_equÆ
(
node
));

1335 
∂i°_node_t
 
	gm_node
;

1337 
	g¥iv©e
:

1339 
må_t
 *
m_må
;

1342 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	g‰ag_node_t
 &
	gobj
) {

1343  (
	gobj
.
¥öt
(
out
));

1348 
	sz_‰ag_∑ge_t
 {

1350 c⁄° 
ulöt
 
	gOFFSET_VERSION
 = 
FIL_PAGE_DATA
;

1353 c⁄° 
ulöt
 
	gOFFSET_FRAG_ENTRY
 = 
OFFSET_VERSION
 + 1;

1356 c⁄° 
ulöt
 
	gOFFSET_FREE_LIST
 = 
OFFSET_FRAG_ENTRY
 + 
FIL_ADDR_SIZE
;

1359 c⁄° 
ulöt
 
	gOFFSET_FRAGS_LIST
 =

1360 
OFFSET_FREE_LIST
 + 
∂i°_ba£_node_t
::
SIZE
;

1363 c⁄° 
ulöt
 
	gOFFSET_FRAGS_BEGIN
 =

1364 
OFFSET_FRAGS_LIST
 + 
∂i°_ba£_node_t
::
SIZE
;

1367 c⁄° 
ulöt
 
	gOFFSET_PAGE_DIR_ENTRY_COUNT
 = 
FIL_PAGE_DATA_END
 + 2;

1370 c⁄° 
ulöt
 
	gOFFSET_PAGE_DIR_ENTRY_FIRST
 =

1371 
OFFSET_PAGE_DIR_ENTRY_COUNT
 + 2;

1373 c⁄° 
ulöt
 
	gSIZE_OF_PAGE_DIR_ENTRY
 = 2;

1379 
z_‰ag_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

1380 : 
m_block
(
block
), 
m_må
(
må
), 
m_ödex
(
ödex
) {

1381 
ut_ad
(
‰ag_node_t
::
SIZE_OF_PAGE_DIR_ENTRY
 ==

1382 
z_‰ag_∑ge_t
::
SIZE_OF_PAGE_DIR_ENTRY
);

1388 
z_‰ag_∑ge_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

1389 : 
z_‰ag_∑ge_t
(
nuŒ±r
, 
må
, 
ödex
) {}

1393 
ex∂icô
 
z_‰ag_∑ge_t
(
buf_block_t
 *
block
)

1394 : 
m_block
(
block
), 
m_må
(
nuŒ±r
), 
m_ödex
(nullptr) {

1395 
ut_ad
(
‰ag_node_t
::
SIZE_OF_PAGE_DIR_ENTRY
 ==

1396 
z_‰ag_∑ge_t
::
SIZE_OF_PAGE_DIR_ENTRY
);

1402 
£t_•a˚_id_no_ªdo
(
•a˚_id_t
 
•a˚_id
) {

1403 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_SPACE_ID
, 
•a˚_id
, 
MLOG_4BYTES
,

1404 
nuŒ±r
);

1407 
z_‰ag_íåy_t
 
gë_‰ag_íåy_x
();

1408 
z_‰ag_íåy_t
 
gë_‰ag_íåy_s
();

1410 
upd©e_‰ag_íåy
() {

1411 
z_‰ag_íåy_t
 
	gíåy
 = 
gë_‰ag_íåy_x
();

1412 
	gíåy
.
upd©e
(*
this
);

1415 
£t_vîsi⁄_0
() {

1416 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_VERSION
, 0, 
MLOG_1BYTE
, 
m_må
);

1419 
Ê°_node_t
 *
addr2±r_x
(
fû_addr_t
 &
addr
) {

1420 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

1421 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

1422  (
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_X_LATCH
, 
m_må
));

1425 
Ê°_node_t
 *
addr2±r_s
(
fû_addr_t
 &
addr
) {

1426 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

1427 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

1428  (
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_S_LATCH
, 
m_må
));

1431 
£t_‰ag_íåy
(c⁄° 
fû_addr_t
 &
addr
) const {

1432 
ut_a
(
addr
.
boff£t
 < 
gë_∑ge_size
());

1433  (
Ê°_wrôe_addr
(
‰ame
(Ë+ 
OFFSET_FRAG_ENTRY
, 
addr
, 
m_må
));

1439 
fû_addr_t
 
gë_‰ag_íåy
() const {

1440  (
Ê°_ªad_addr
(
‰ame
(Ë+ 
OFFSET_FRAG_ENTRY
, 
m_må
));

1443 
£t_‰ag_íåy_nuŒ
() const {

1444  (
Ê°_wrôe_addr
(
‰ame
(Ë+ 
OFFSET_FRAG_ENTRY
, 
fû_addr_nuŒ
, 
m_må
));

1447 
ulöt
 
gë_n_dú_íåõs
() const {

1448 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
gë_∑ge_size
(Ë- 
OFFSET_PAGE_DIR_ENTRY_COUNT
;

1449  (
mach_ªad_‰om_2
(
±r
));

1452 
£t_n_dú_íåõs
(
ulöt
 
n
) const {

1453 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
gë_∑ge_size
(Ë- 
OFFSET_PAGE_DIR_ENTRY_COUNT
;

1454 
mlog_wrôe_ulöt
(
±r
, 
n
, 
MLOG_2BYTES
, 
m_må
);

1457 
boﬁ
 
is_b‹dî_‰ag
(c⁄° 
‰ag_node_t
 &
node
) const {

1458  (
¶Ÿs_íd_±r
(Ë=
node
.
íd_±r
());

1461 
byã
 *
¶Ÿs_íd_±r
() const {

1462 
ulöt
 
	gn
 = 
gë_n_dú_íåõs
();

1463 
byã
 *
	gfú°
 = 
‰ame
(Ë+ 
gë_∑ge_size
(Ë- 
OFFSET_PAGE_DIR_ENTRY_COUNT
;

1464 
byã
 *
	g±r
 = 
fú°
 - (
n
 * 
SIZE_OF_PAGE_DIR_ENTRY
);

1465  (
	g±r
);

1468 
∑ddr_t
 
‰ag_id_to_addr
(
ulöt
 
‰ag_id
) const {

1469 
byã
 *
	gfú°
 = 
‰ame
(Ë+ 
gë_∑ge_size
(Ë- 
OFFSET_PAGE_DIR_ENTRY_FIRST
;

1470 
byã
 *
	g±r
 = 
fú°
 - (
‰ag_id
 * 
SIZE_OF_PAGE_DIR_ENTRY
);

1471  (
mach_ªad_‰om_2
(
±r
));

1474 
ulöt
 
gë_¡h_dú_íåy
(ulöà
‰ag_id
) {

1475 
byã
 *
	gfú°
 = 
‰ame
(Ë+ 
gë_∑ge_size
(Ë- 
OFFSET_PAGE_DIR_ENTRY_FIRST
;

1476 
byã
 *
	g±r
 = 
fú°
 - (
‰ag_id
 * 
SIZE_OF_PAGE_DIR_ENTRY
);

1477  (
mach_ªad_‰om_2
(
±r
));

1480 
£t_¡h_dú_íåy
(
ulöt
 
‰ag_id
, 
∑ddr_t
 
vÆ
) {

1481 
byã
 *
	gfú°
 = 
‰ame
(Ë+ 
gë_∑ge_size
(Ë- 
OFFSET_PAGE_DIR_ENTRY_FIRST
;

1482 
byã
 *
	g±r
 = 
fú°
 - (
‰ag_id
 * 
SIZE_OF_PAGE_DIR_ENTRY
);

1483 
mlog_wrôe_ulöt
(
±r
, 
vÆ
, 
MLOG_2BYTES
, 
m_må
);

1486 
ulöt
 
öô_œ°_dú_íåy
() {

1487 
ulöt
 
	gn
 = 
gë_n_dú_íåõs
();

1488 
£t_¡h_dú_íåy
(
n
 - 1, 0);

1489  (
	gn
 - 1);

1492 
ö¸_n_dú_íåõs
() const {

1493 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
gë_∑ge_size
(Ë- 
OFFSET_PAGE_DIR_ENTRY_COUNT
;

1494 
ulöt
 
	gn
 = 
mach_ªad_‰om_2
(
±r
);

1495 
ut_a
(
n
 < 
FRAG_ID_NULL
);

1496 
mlog_wrôe_ulöt
(
±r
, 
n
 + 1, 
MLOG_2BYTES
, 
m_må
);

1499 
de¸_n_dú_íåõs
() const {

1500 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
gë_∑ge_size
(Ë- 
OFFSET_PAGE_DIR_ENTRY_COUNT
;

1501 
ulöt
 
	gn
 = 
mach_ªad_‰om_2
(
±r
);

1502 
ut_a
(
n
 > 0);

1503 
mlog_wrôe_ulöt
(
±r
, 
n
 - 1, 
MLOG_2BYTES
, 
m_må
);

1506 
ulöt
 
gë_∑ge_size
() const {

1507 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

1508  (
	g∑ge_size
.
physiˇl
());

1511 
ulöt
 
•a˚_u£d_by_dú
() const {

1512 
ulöt
 
	gn
 = 
gë_n_dú_íåõs
();

1513  (
n
 * 
	gSIZE_OF_PAGE_DIR_ENTRY
);

1516 
ulöt
 
loˇã_‰ì_¶Ÿ
() {

1517 
ulöt
 
	gn
 = 
gë_n_dú_íåõs
();

1519 
ulöt
 
	g‰ag_id
 = 0; føg_id < 
	gn
; frag_id++) {

1520 
ulöt
 
	g∑ddr
 = 
gë_¡h_dú_íåy
(
‰ag_id
);

1522 i‡(
	g∑ddr
 == 0) {

1523  (
‰ag_id
);

1527  (
	gFRAG_ID_NULL
);

1533 
ulöt
 
Æloc_‰ag_id
() {

1534 
ulöt
 
	gid
 = 
loˇã_‰ì_¶Ÿ
();

1536 i‡(
	gid
 =
FRAG_ID_NULL
) {

1537  (
Æloc_dú_íåy
());

1540  (
	gid
);

1543 
	g°d
::
o°ªam
 &
¥öt_‰ag_id
(
°d
::o°ªam &
out
) {

1544 
ulöt
 
n
 = 
gë_n_dú_íåõs
();

1545 
	gout
 << "FRAG IDS: " << 
	g°d
::
ídl
;

1547 
ulöt
 
	g‰ag_id
 = 0; føg_id < 
	gn
; frag_id++) {

1548 
	gout
 << "id=" << 
	g‰ag_id
 << ",áddr=" << 
‰ag_id_to_addr
(
‰ag_id
)

1549 << 
	g°d
::
ídl
;

1552  (
	gout
);

1557 
ulöt
 
Æloc_dú_íåy
();

1560 
£t_∑ge_√xt
(
∑ge_no_t
 
∑ge_no
) {

1561 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
, 
∑ge_no
, 
MLOG_4BYTES
, 
m_må
);

1565 
£t_∑ge_¥ev
(
∑ge_no_t
 
∑ge_no
Ë{ së_∑ge_¥ev’age_no, 
m_må
); }

1568 
£t_∑ge_¥ev
(
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
) {

1569 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_PREV
, 
∑ge_no
, 
MLOG_4BYTES
, 
må
);

1574 
∑ge_no_t
 
gë_√xt_∑ge_no
(Ëc⁄° {  (
	gm_block
->get_next_page_no()); }

1579 
∑ge_no_t
 
gë_¥ev_∑ge_no
(
må_t
 *
må
) const {

1580  (
må_ªad_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_PREV
, 
MLOG_4BYTES
, 
må
));

1585 
∑ge_no_t
 
gë_¥ev_∑ge_no
(Ëc⁄° {  (gë_¥ev_∑ge_no(
m_må
)); }

1593 
buf_block_t
 *
Æloc
(
z_fú°_∑ge_t
 &
fú°
, 
∑ge_no_t
 
höt
, 
boﬁ
 
bulk
);

1598 
dóŒoc_wôh_íåy
(
z_fú°_∑ge_t
 &
fú°
, 
må_t
 *
Æloc_må
);

1601 
dóŒoc
() {

1602 
bå_∑ge_‰ì_low
(
m_ödex
, 
m_block
, 
ULINT_UNDEFINED
, 
m_må
);

1603 
	gm_block
 = 
nuŒ±r
;

1606 
buf_block_t
 *
lﬂd_x
(
∑ge_no_t
 
∑ge_no
) {

1607 
∑ge_id_t
 
∑ge_id
(
di˘_ödex_gë_•a˚
(
m_ödex
), 
∑ge_no
);

1608 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

1609 
	gm_block
 = 
buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_X_LATCH
, 
m_må
);

1610  (
	gm_block
);

1613 
mîge_‰ì_‰ags
() {

1614 
∂i°_ba£_node_t
 
	g‰ì_l°
 = 
‰ì_li°
();

1615 
‰ag_node_t
 
‰ag
(
‰ì_l°
.
gë_fú°_node
(), 
m_må
);

1616 
‰ag_node_t
 
	g√xt
 = 
‰ag
.
gë_√xt_‰ag
();

1618 !
	g√xt
.
is_nuŒ
(Ë&& 
	g‰ag
.
mîge
(
√xt
)) {

1619 
	g‰ì_l°
.
ªmove
(
√xt
.
m_node
);

1620 
	g√xt
 = 
‰ag
.
gë_√xt_‰ag
();

1624 
mîge_‰ì_‰ags
(
‰ag_node_t
 &
‰ag
) {

1625 
ut_ad
(!
‰ag
.
is_nuŒ
());

1626 
∂i°_ba£_node_t
 
	g‰ì_l°
 = 
‰ì_li°
();

1627 
‰ag_node_t
 
	g√xt
 = 
‰ag
.
gë_√xt_‰ag
();

1629 !
	g√xt
.
is_nuŒ
(Ë&& 
	g‰ag
.
mîge
(
√xt
)) {

1630 
	g‰ì_l°
.
ªmove
(
√xt
.
m_node
);

1631 
	g√xt
 = 
‰ag
.
gë_√xt_‰ag
();

1635 
boﬁ
 
vÆid©e_li°s
() const {

1636 
∂i°_ba£_node_t
 
	g‰ì_l°
 = 
‰ì_li°
();

1637 
∂i°_ba£_node_t
 
	g‰ag_l°
 = 
‰ag_li°
();

1638 
∂i°_node_t
 
	g‰ì_node
 = 
‰ì_l°
.
gë_fú°_node
();

1640 !
	g‰ì_node
.
is_nuŒ
()) {

1641 
∂i°_node_t
 
	g‰ag_node
 = 
‰ag_l°
.
gë_fú°_node
();

1643 !
	g‰ag_node
.
is_nuŒ
()) {

1644 
ut_ad
(
‰ag_node
.
addr
(Ë!
‰ì_node
.addr());

1645 
	g‰ag_node
 = 
‰ag_node
.
gë_√xt_node
();

1648 
	g‰ì_node
 = 
‰ì_node
.
gë_√xt_node
();

1650  (
	gåue
);

1653 
ö£π_öto_‰ì_li°
(
‰ag_node_t
 &
‰ag
) {

1654 
ut_ad
(
‰ag
.
gë_‰ag_id
(Ë=
FRAG_ID_NULL
);

1656 
∂i°_ba£_node_t
 
	g‰ì_l°
 = 
‰ì_li°
();

1658 
∂i°_node_t
 
	gnode
 = 
‰ì_l°
.
gë_fú°_node
();

1659 
∂i°_node_t
 
¥ev_node
(
m_må
);

1661 !
	gnode
.
is_nuŒ
()) {

1662 
ut_ad
(
‰ag
.
addr
(Ë!
node
.addr());

1663 i‡(
	g‰ag
.
addr
(Ë< 
	gnode
.addr()) {

1666 
	g¥ev_node
 = 
node
;

1667 
	gnode
 = 
node
.
gë_√xt_node
();

1670 
	g‰ì_l°
.
ö£π_bef‹e
(
node
, 
‰ag
.
m_node
);

1672 i‡(
	g¥ev_node
.
is_nuŒ
()) {

1673 
mîge_‰ì_‰ags
();

1675 
‰ag_node_t
 
¥ev_‰ag
(
¥ev_node
, 
m_må
);

1676 
mîge_‰ì_‰ags
(
¥ev_‰ag
);

1682 
ö£π_öto_‰ag_li°
(
‰ag_node_t
 &
‰ag
) {

1683 
∂i°_ba£_node_t
 
	g‰ag_l°
 = 
‰ag_li°
();

1684 
∂i°_node_t
 
	gnode
 = 
‰ag_l°
.
gë_fú°_node
();

1686 !
	gnode
.
is_nuŒ
()) {

1687 
ut_ad
(
‰ag
.
addr
(Ë!
node
.addr());

1688 i‡(
	g‰ag
.
addr
(Ë< 
	gnode
.addr()) {

1691 
	gnode
 = 
node
.
gë_√xt_node
();

1694 
	g‰ag_l°
.
ö£π_bef‹e
(
node
, 
‰ag
.
m_node
);

1704 
•lô_‰ì_‰ag
(
‰ag_node_t
 &
‰ì_‰ag
, 
ulöt
 
size
) {

1705 
ut_ad
(
size
 < 
‰ì_‰ag
.
∑ylﬂd
());

1706 c⁄° 
ulöt
 
	gﬁd_tŸÆ_Àn
 = 
‰ì_‰ag
.
gë_tŸÆ_Àn
();

1707 
∂i°_ba£_node_t
 
	g‰ì_l°
 = 
‰ì_li°
();

1710 
byã
 *
	gp2
 = 
‰ì_‰ag
.
d©a_begö
(Ë+ 
size
;

1712 
ulöt
 
	gªmaö
 =

1713 
‰ì_‰ag
.
gë_tŸÆ_Àn
(Ë- 
‰ag_node_t
::
hódî_size
(Ë- 
size
;

1715 
ut_a
(
ªmaö
 >
‰ag_node_t
::
OFFSET_DATA
);

1717 
	g‰ì_‰ag
.
£t_tŸÆ_Àn
(
‰ag_node_t
::
hódî_size
(Ë+ 
size
);

1719 
‰ag_node_t
 
‰ag2
(
‰ame
(), 
p2
, 
ªmaö
, 
m_må
);

1720 
	g‰ag2
.
£t_tŸÆ_Àn
(
ªmaö
);

1721 
	g‰ag2
.
£t_‰ag_id_nuŒ
();

1722 
	g‰ì_l°
.
ö£π_a·î
(
‰ì_‰ag
.
m_node
, 
‰ag2
.m_node);

1724 
ut_a
(
‰ì_‰ag
.
gë_tŸÆ_Àn
(Ë+ 
‰ag2
.gë_tŸÆ_Àn(Ë=
ﬁd_tŸÆ_Àn
);

1726 
ut_ad
(
vÆid©e_li°s
());

1729 
‰ag_node_t
 
gë_‰ag_node
(
‰ag_id_t
 
id
) const {

1730 
ut_ad
(
id
 !
FRAG_ID_NULL
);

1732 
∑ddr_t
 
	goff
 = 
‰ag_id_to_addr
(
id
);

1733 
byã
 *
	gf
 = 
‰ame
();

1734  (
‰ag_node_t
(
f
, f + 
off
));

1737 
dóŒoc_‰agmít
(
ulöt
 
‰ag_id
) {

1738 
ut_ad
(
‰ag_id
 !
FRAG_ID_NULL
);

1740 
∑ddr_t
 
	goff
 = 
‰ag_id_to_addr
(
‰ag_id
);

1741 
byã
 *
	gf
 = 
‰ame
();

1742 
‰ag_node_t
 
‰ag
(
f
, f + 
off
, 
m_må
);

1743 
dóŒoc_‰agmít
(
‰ag
);

1744 
dóŒoc_‰ag_id
(
‰ag_id
);

1747 
upd©e_‰ag_íåy
();

1755 
‰ag_id_t
 
Æloc_‰agmít
(
ulöt
 
size
, 
z_‰ag_íåy_t
 &
íåy
);

1757 
∂i°_ba£_node_t
 
‰ì_li°
() const {

1758 
byã
 *
	gf
 = 
‰ame
();

1759  (
∂i°_ba£_node_t
(
f
, f + 
OFFSET_FREE_LIST
, 
m_må
));

1762 
∂i°_ba£_node_t
 
‰ag_li°
() const {

1763 
byã
 *
	gf
 = 
‰ame
();

1764  (
∂i°_ba£_node_t
(
f
, f + 
OFFSET_FRAGS_LIST
, 
m_må
));

1767 
£t_∑ge_ty≥
() {

1768 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
FIL_PAGE_TYPE
;

1769 
mlog_wrôe_ulöt
(
±r
, 
FIL_PAGE_TYPE_ZLOB_FRAG
, 
MLOG_2BYTES
, 
m_må
);

1772 
∑ge_ty≥_t
 
gë_∑ge_ty≥
() const {

1773  (
mach_ªad_‰om_2
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
));

1776 c⁄° *
gë_∑ge_ty≥_°r
() const {

1777 
∑ge_ty≥_t
 
	gty≥
 = 
gë_∑ge_ty≥
();

1778 
ut_a
(
ty≥
 =
FIL_PAGE_TYPE_ZLOB_FRAG
);

1784 
ulöt
 
∑ylﬂd
(Ë{  (
	gz_‰ag_∑ge_t
::
max_∑ylﬂd
(
m_ödex
)); }

1788 
ulöt
 
max_∑ylﬂd
(
di˘_ödex_t
 *
ödex
) {

1789 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
ödex
->
èbÀ
));

1790  (
	g∑ge_size
.
physiˇl
(Ë- 
	gOFFSET_FRAGS_BEGIN
 -

1791 
	gOFFSET_PAGE_DIR_ENTRY_COUNT
);

1799 
boﬁ
 
ˇn_d©a_fô
(
di˘_ödex_t
 *
ödex
, 
ulöt
 
d©a_size
);

1802 
∑ge_no_t
 
gë_∑ge_no
(Ëc⁄° {  (
	gm_block
->get_page_no()); }

1804 
byã
 *
‰ame
(Ëc⁄° {  (
buf_block_gë_‰ame
(
m_block
)); }

1806 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

1807 
¥öt_‰ì_li°
(
out
);

1808 
¥öt_‰ag_li°
(
out
);

1809 
¥öt_‰ags_ö_‹dî
(
out
);

1810 
¥öt_∑ge_dú
(
out
);

1811  (
	gout
);

1815 
ulöt
 
gë_tŸÆ_°‹ed_d©a
() const;

1818 
ulöt
 
gë_tŸÆ_‰ì_Àn
() const;

1821 
ulöt
 
gë_big_‰ì_Àn
() const;

1824 
ulöt
 
gë_n_‰ags
() const {

1825 
∂i°_ba£_node_t
 
	g‰ag_l°
 = 
‰ag_li°
();

1826  (
	g‰ag_l°
.
gë_Àn
());

1829 
	g°d
::
o°ªam
 &
¥öt_‰ags_ö_‹dî
(
°d
::o°ªam &
out
) const;

1831 
	g°d
::
o°ªam
 &
¥öt_‰ì_li°
(
°d
::o°ªam &
out
) const {

1832 i‡(
m_block
 =
nuŒ±r
) {

1833  (
out
);

1836 
∂i°_ba£_node_t
 
	g‰ì_l°
 = 
‰ì_li°
();

1837 
	gout
 << "[FªêLi°: " << 
	g‰ì_l°
 << "]" << 
	g°d
::
ídl
;

1839 
∂i°_node_t
 
	gcur
 = 
‰ì_l°
.
gë_fú°_node
(); !cur.
is_nuŒ
();

1840 
	gcur
 = 
cur
.
gë_√xt_node
()) {

1841 
‰ag_node_t
 
‰ag
(
cur
, 
m_må
);

1842 
	gout
 << 
	g‰ag
 << 
	g°d
::
ídl
;

1844  (
	gout
);

1847 
	g°d
::
o°ªam
 &
¥öt_‰ag_li°
(
°d
::o°ªam &
out
) const {

1848 i‡(
m_block
 =
nuŒ±r
) {

1849  (
out
);

1852 
∂i°_ba£_node_t
 
	g‰ag_l°
 = 
‰ag_li°
();

1853 
	gout
 << "[Føg Li°: " << 
	g‰ag_l°
 << "]" << 
	g°d
::
ídl
;

1855 
∂i°_node_t
 
	gcur
 = 
‰ag_l°
.
gë_fú°_node
(); !cur.
is_nuŒ
();

1856 
	gcur
 = 
cur
.
gë_√xt_node
()) {

1857 
‰ag_node_t
 
‰ag
(
cur
, 
m_må
);

1858 
	gout
 << 
	g‰ag
 << 
	g°d
::
ídl
;

1860  (
	gout
);

1863 
	g°d
::
o°ªam
 &
¥öt_∑ge_dú
(
°d
::o°ªam &
out
) const {

1864 i‡(
m_block
 =
nuŒ±r
) {

1865  (
out
);

1868 
ulöt
 
	gn
 = 
gë_n_dú_íåõs
();

1870 
ulöt
 
	g‰ag_id
 = 0; føg_id < 
	gn
; ++frag_id) {

1871 
∑ddr_t
 
	goff
 = 
‰ag_id_to_addr
(
‰ag_id
);

1872 
	gout
 << "[‰ag_id=" << 
	g‰ag_id
 << ",áddr=" << 
	goff
 << "]" << 
	g°d
::
ídl
;

1875  (
	gout
);

1878 
£t_må
(
må_t
 *
må
Ë{ 
	gm_må
 = mtr; }

1880 
£t_ödex
(
di˘_ödex_t
 *
ödex
Ë{ 
	gm_ödex
 = index; }

1882 
£t_block_nuŒ
(Ë{ 
	gm_block
 = 
nuŒ±r
; }

1887 
boﬁ
 
is_œ°_‰ag
(c⁄° 
‰ag_node_t
 &
node
) const {

1888  (
	gnode
.
íd_±r
(Ë=
¶Ÿs_íd_±r
());

1891 
	g¥iv©e
:

1892 
fû_addr_t
 
gë_‰ag_íåy_addr
() const {

1893  (
Ê°_ªad_addr
(
‰ame
(Ë+ 
OFFSET_FRAG_ENTRY
, 
m_må
));

1896 
dóŒoc_‰agmít
(
‰ag_node_t
 &
‰ag
) {

1897 
∂i°_ba£_node_t
 
	g‰ag_l°
 = 
‰ag_li°
();

1898 
	g‰ag_l°
.
ªmove
(
‰ag
.
m_node
);

1899 
	g‰ag
.
£t_‰ag_id_nuŒ
();

1900 
ö£π_öto_‰ì_li°
(
‰ag
);

1905 
dóŒoc_‰ag_id
();

1909 
dóŒoc_‰ag_id
(
ulöt
 
‰ag_id
) {

1910 
£t_¡h_dú_íåy
(
‰ag_id
, 0);

1911 
dóŒoc_‰ag_id
();

1914 
buf_block_t
 *
	gm_block
;

1915 
må_t
 *
	gm_må
;

1916 
di˘_ödex_t
 *
	gm_ödex
;

1930 
dbîr_t
 
z_ö£π_chunk
(
di˘_ödex_t
 *
ödex
, 
z_fú°_∑ge_t
 &
fú°
, 
åx_t
 *
åx
,

1931 
ªf_t
 
ªf
, 
byã
 *
blob
, 
ulöt
 
Àn
,

1932 
z_ödex_íåy_t
 *
out_íåy
, 
må_t
 *
må
, 
boﬁ
 
bulk
);

	@lob0index.h

26 #i‚de‡
lob0ödex_h


27 
	#lob0ödex_h


	)

29 
	~"fut0l°.h
"

30 
	~"lob0utû.h
"

31 
	~"åx0åx.h
"

32 
	~"univ.i
"

34 
«me•a˚
 
	glob
 {

36 
	g°d
::
	tm≠
<
	t∑ge_no_t
, 
	tbuf_block_t
 *> 
	tBlockCache
;

37 
	gfú°_∑ge_t
;

40 
	södex_íåy_mem_t
 {

41 
fû_addr_t
 
	gm_£lf
;

42 
fû_addr_t
 
	gm_¥ev
;

43 
fû_addr_t
 
	gm_√xt
;

44 
Ê°_bnode_t
 
	gm_vîsi⁄s
;

45 
åx_id_t
 
	gm_åx_id
;

46 
åx_id_t
 
	gm_åx_id_modifõr
;

47 
undo_no_t
 
	gm_undo_no
;

48 
undo_no_t
 
	gm_undo_no_modifõr
;

49 
∑ge_no_t
 
	gm_∑ge_no
;

50 
ulöt
 
	gm_d©a_Àn
;

52 
ödex_íåy_mem_t
(Ë{ 
ª£t
(); }

54 
ª£t
();

56 
boﬁ
 
is_nuŒ
(Ë{  (
	gm_£lf
.
is_equÆ
(
fû_addr_nuŒ
)); }

58 
∑ge_no_t
 
gë_∑ge_no
(Ëc⁄° {  (
	gm_∑ge_no
); }

63 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

67 
usög
 
	gLi°_õm_t
 = 
°d
::
li°
<
ödex_íåy_mem_t
>;

74 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
,

75 c⁄° 
	gödex_íåy_mem_t
 &
	gobj
) {

76  (
	gobj
.
¥öt
(
out
));

80 
	södex_íåy_t
 {

82 c⁄° 
ulöt
 
	gOFFSET_PREV
 = 0;

83 c⁄° 
ulöt
 
	gOFFSET_NEXT
 = 
OFFSET_PREV
 + 
FIL_ADDR_SIZE
;

87 c⁄° 
ulöt
 
	gOFFSET_VERSIONS
 = 
OFFSET_NEXT
 + 
FIL_ADDR_SIZE
;

90 c⁄° 
ulöt
 
	gOFFSET_TRXID
 = 
OFFSET_VERSIONS
 + 
FLST_BASE_NODE_SIZE
;

93 c⁄° 
ulöt
 
	gOFFSET_TRXID_MODIFIER
 = 
OFFSET_TRXID
 + 6;

94 c⁄° 
ulöt
 
	gOFFSET_TRX_UNDO_NO
 = 
OFFSET_TRXID_MODIFIER
 + 6;

97 c⁄° 
ulöt
 
	gOFFSET_TRX_UNDO_NO_MODIFIER
 = 
OFFSET_TRX_UNDO_NO
 + 4;

98 c⁄° 
ulöt
 
	gOFFSET_PAGE_NO
 = 
OFFSET_TRX_UNDO_NO_MODIFIER
 + 4;

99 c⁄° 
ulöt
 
	gOFFSET_DATA_LEN
 = 
OFFSET_PAGE_NO
 + 4;

102 c⁄° 
ulöt
 
	gOFFSET_LOB_VERSION
 = 
OFFSET_DATA_LEN
 + 4;

105 c⁄° 
ulöt
 
	gSIZE
 = 
OFFSET_LOB_VERSION
 + 4;

109 
ödex_íåy_t
(
Ê°_node_t
 *
node
)

110 : 
m_node
(
node
), 
m_må
(
nuŒ±r
), 
m_ödex
“uŒ±r), 
m_block
(nullptr) {}

112 
ödex_íåy_t
(
Ê°_node_t
 *
node
, 
må_t
 *
må
)

113 : 
m_node
(
node
), 
m_må
(
må
), 
m_ödex
(
nuŒ±r
), 
m_block
(nullptr) {}

115 
ödex_íåy_t
(
Ê°_node_t
 *
node
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

116 : 
m_node
(
node
), 
m_må
(
må
), 
m_ödex
(
ödex
), 
m_block
(
nuŒ±r
) {}

118 
ödex_íåy_t
(
må_t
 *
må
, c⁄° 
di˘_ödex_t
 *
ödex
)

119 : 
m_node
(
nuŒ±r
), 
m_må
(
må
), 
m_ödex
(
ödex
), 
m_block
(nullptr) {}

123 
ª£t
(
fû_addr_t
 &
addr
) {

124 
ut_ad
(
m_block
->
∑ge
.
id
.
∑ge_no
(Ë=
addr
.page);

126 
	gm_node
 = 
buf_block_gë_‰ame
(
m_block
Ë+ 
addr
.
boff£t
;

131 
buf_block_t
 *
gë_block
(Ëc⁄° {  (
	gm_block
); }

135 
ª£t
(
Ê°_node_t
 *
node
Ë{ 
	gm_node
 =Çode; }

137 
boﬁ
 
is_nuŒ
() const {

138 c⁄° 
byã
 
	gzîo
[
SIZE
] = {0x00};

139  (
	gm_node
 =
nuŒ±r
 || 
memcmp
(
m_node
, 
zîo
, 
SIZE
) == 0);

143 
öô
() {

144 
£t_¥ev_nuŒ
();

145 
£t_√xt_nuŒ
();

146 
£t_vîsi⁄s_nuŒ
();

147 
£t_åx_id
(0);

148 
£t_åx_undo_no
(0);

149 
£t_∑ge_no
(
FIL_NULL
);

150 
£t_d©a_Àn
(0);

154 
fû_addr_t
 
gë_£lf
() const;

157 
£t_vîsi⁄s_nuŒ
() {

158 
ut_ad
(
m_må
 !
nuŒ±r
);

160 
byã
 *
	gba£_node
 = 
gë_vîsi⁄s_±r
();

161 
Ê°_öô
(
ba£_node
, 
m_må
);

168 
boﬁ
 
ˇn_rﬁlback
(
åx_id_t
 
åxid
, 
undo_no_t
 
undo_no
) {

170  ((
	gåxid
 =
gë_åx_id
()Ë&& (
gë_åx_undo_no
(Ë>
undo_no
));

177 
boﬁ
 
ˇn_be_purged
(
åx_id_t
 
åxid
, 
undo_no_t
 
undo_no
) {

178  ((
	gåxid
 =
gë_åx_id_modifõr
()) &&

179 (
gë_åx_undo_no_modifõr
(Ë=
undo_no
));

185 
£t_ﬁd_vîsi⁄
(
ödex_íåy_t
 &
íåy
) {

186 
Ê°_node_t
 *
	gnode
 = 
íåy
.
gë_node_±r
();

187 
Ê°_ba£_node_t
 *
	gvîsi⁄_li°
 = 
gë_vîsi⁄s_±r
();

188 
ut_ad
(
Ê°_gë_Àn
(
vîsi⁄_li°
) == 0);

190 
	gíåy
.
move_vîsi⁄_ba£_node
(*
this
);

191 
Ê°_add_fú°
(
vîsi⁄_li°
, 
node
, 
m_må
);

204 
fû_addr_t
 
make_ﬁd_vîsi⁄_cuºít
(
di˘_ödex_t
 *
ödex
, 
åx_id_t
 
åxid
,

205 
fú°_∑ge_t
 &
fú°_∑ge
);

213 
fû_addr_t
 
purge_vîsi⁄
(
di˘_ödex_t
 *
ödex
, 
åx_id_t
 
åxid
,

214 
Ê°_ba£_node_t
 *
l°
, fl°_ba£_node_à*
‰ì_li°
);

216 
add_vîsi⁄
(
ödex_íåy_t
 &
íåy
) const {

217 
Ê°_node_t
 *
	gnode
 = 
íåy
.
gë_node_±r
();

218 
Ê°_ba£_node_t
 *
	gvîsi⁄_li°
 = 
gë_vîsi⁄s_±r
();

219 
Ê°_add_fú°
(
vîsi⁄_li°
, 
node
, 
m_må
);

222 
Ê°_ba£_node_t
 *
gë_vîsi⁄s_li°
(Ëc⁄° {  (
gë_vîsi⁄s_±r
()); }

226 
push_back
(
Ê°_ba£_node_t
 *
bnode
) {

227 
Ê°_add_œ°
(
bnode
, 
m_node
, 
m_må
);

231 
Ê°_bnode_t
 
gë_vîsi⁄s_mem
() const {

232 
Ê°_ba£_node_t
 *
	gnode
 = 
gë_vîsi⁄s_li°
();

233  (
Ê°_bnode_t
(
node
, 
m_må
));

236 
åx_id_t
 
gë_åx_id
() const {

237 
byã
 *
	g±r
 = 
gë_åxid_±r
();

238  (
mach_ªad_‰om_6
(
±r
));

241 
åx_id_t
 
gë_åx_id_modifõr
() const {

242 
byã
 *
	g±r
 = 
gë_åxid_modifõr_±r
();

243  (
mach_ªad_‰om_6
(
±r
));

246 
undo_no_t
 
gë_åx_undo_no
() const {

247 
byã
 *
	g±r
 = 
gë_åx_undo_no_±r
();

248  (
mach_ªad_‰om_4
(
±r
));

251 
uöt32_t
 
gë_lob_vîsi⁄
() const {

252 
byã
 *
	g±r
 = 
gë_lob_vîsi⁄_±r
();

253  (
mach_ªad_‰om_4
(
±r
));

258 
undo_no_t
 
gë_åx_undo_no_modifõr
() const {

259 
byã
 *
	g±r
 = 
gë_åx_undo_no_modifõr_±r
();

260  (
mach_ªad_‰om_4
(
±r
));

263 
fû_addr_t
 
gë_√xt
() const {

264 
ut_ad
(
m_node
 !
nuŒ±r
);

266  (
Ê°_ªad_addr
(
m_node
 + 
OFFSET_NEXT
, 
m_må
));

272 
buf_block_t
 *
√xt
() {

273 
fû_addr_t
 
	gnode_loc
 = 
gë_√xt
();

275 i‡(
	gnode_loc
.
is_nuŒ
()) {

276  (
	gnuŒ±r
);

279 i‡(
	gm_block
 =
nuŒ±r
 || 
m_block
->
∑ge
.
id
.
∑ge_no
(Ë!
node_loc
.page) {

280 
lﬂd_x
(
node_loc
);

283 
ª£t
(
node_loc
);

286  (
	gm_block
);

291 
fû_addr_t
 
gë_¥ev
() const {

292  (
Ê°_ªad_addr
(
m_node
 + 
OFFSET_PREV
, 
m_må
));

299 
£t_åx_id_no_ªdo
(
åx_id_t
 
id
) {

300 
byã
 *
	g±r
 = 
gë_åxid_±r
();

301 
mach_wrôe_to_6
(
±r
, 
id
);

308 
£t_åx_id_modifõr_no_ªdo
(
åx_id_t
 
id
) {

309 
byã
 *
	g±r
 = 
gë_åxid_modifõr_±r
();

310 
mach_wrôe_to_6
(
±r
, 
id
);

313 
£t_åx_id
(
åx_id_t
 
id
) {

314 
byã
 *
	g±r
 = 
gë_åxid_±r
();

315 
mach_wrôe_to_6
(
±r
, 
id
);

316 
mlog_log_°rög
(
±r
, 6, 
m_må
);

319 
£t_åx_id_modifõr
(
åx_id_t
 
id
) {

320 
ut_ad
(
m_må
 !
nuŒ±r
);

322 
byã
 *
	g±r
 = 
gë_åxid_modifõr_±r
();

323 
mach_wrôe_to_6
(
±r
, 
id
);

324 
mlog_log_°rög
(
±r
, 6, 
m_må
);

327 
£t_åx_undo_no
(
undo_no_t
 
undo_no
) {

328 
byã
 *
	g±r
 = 
gë_åx_undo_no_±r
();

329 
mlog_wrôe_ulöt
(
±r
, 
undo_no
, 
MLOG_4BYTES
, 
m_må
);

334 
£t_lob_vîsi⁄
(
uöt32_t
 
vîsi⁄
) {

335 
byã
 *
	g±r
 = 
gë_lob_vîsi⁄_±r
();

336 
mlog_wrôe_ulöt
(
±r
, 
vîsi⁄
, 
MLOG_4BYTES
, 
m_må
);

339 
£t_åx_undo_no_modifõr
(
undo_no_t
 
undo_no
) {

340 
ut_ad
(
m_må
 !
nuŒ±r
);

342 
byã
 *
	g±r
 = 
gë_åx_undo_no_modifõr_±r
();

343 
mlog_wrôe_ulöt
(
±r
, 
undo_no
, 
MLOG_4BYTES
, 
m_må
);

346 
£t_∑ge_no
(
∑ge_no_t
 
num
) {

347 
ut_ad
(
num
 > 0);

348 
byã
 *
	g±r
 = 
gë_∑gío_±r
();

349  (
mlog_wrôe_ulöt
(
±r
, 
num
, 
MLOG_4BYTES
, 
m_må
));

352 
£t_¥ev_nuŒ
() {

353 
Ê°_wrôe_addr
(
m_node
 + 
OFFSET_PREV
, 
fû_addr_nuŒ
, 
m_må
);

356 
£t_√xt_nuŒ
() {

357 
Ê°_wrôe_addr
(
m_node
 + 
OFFSET_NEXT
, 
fû_addr_nuŒ
, 
m_må
);

360 
∑ge_no_t
 
gë_∑ge_no
() const {

361 
byã
 *
	g±r
 = 
gë_∑gío_±r
();

362  (
mach_ªad_‰om_4
(
±r
));

365 
£t_d©a_Àn
(
ulöt
 
Àn
) {

366 
byã
 *
	g±r
 = 
gë_d©Æí_±r
();

367  (
mlog_wrôe_ulöt
(
±r
, 
Àn
, 
MLOG_2BYTES
, 
m_må
));

370 
ulöt
 
gë_d©a_Àn
() const {

371 
byã
 *
	g±r
 = 
gë_d©Æí_±r
();

372  (
mach_ªad_‰om_2
(
±r
));

375 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

377 
boﬁ
 
is_ßme
(c⁄° 
ödex_íåy_t
 &
th©
Ë{  (
	gm_node
 =th©.
m_node
); }

379 
ªad
(
ödex_íåy_mem_t
 &
íåy_mem
) const;

385 
buf_block_t
 *
lﬂd_x
(c⁄° 
fû_addr_t
 &
addr
);

391 
buf_block_t
 *
lﬂd_s
(c⁄° 
fû_addr_t
 &
addr
);

393 
ö£π_a·î
(
Ê°_ba£_node_t
 *
ba£
, 
ödex_íåy_t
 &
íåy
) {

394 
Ê°_ö£π_a·î
(
ba£
, 
m_node
, 
íåy
.
gë_node
(), 
m_må
);

397 
ö£π_bef‹e
(
Ê°_ba£_node_t
 *
ba£
, 
ödex_íåy_t
 &
íåy
) {

398 
Ê°_ö£π_bef‹e
(
ba£
, 
íåy
.
gë_node
(), 
m_node
, 
m_må
);

401 
ªmove
(
Ê°_ba£_node_t
 *
bnode
Ë{ 
Ê°_ªmove
(bnode, 
m_node
, 
m_må
); }

403 
	g¥iv©e
:

407 
move_vîsi⁄_ba£_node
(
ödex_íåy_t
 &
to_íåy
);

412 
purge
(
di˘_ödex_t
 *
ödex
);

414 
byã
 *
gë_vîsi⁄s_±r
(Ëc⁄° {  (
	gm_node
 + 
	gOFFSET_VERSIONS
); }

416 
byã
 *
gë_åxid_±r
(Ëc⁄° {  (
	gm_node
 + 
	gOFFSET_TRXID
); }

418 
byã
 *
gë_åxid_modifõr_±r
() const {

419  (
	gm_node
 + 
	gOFFSET_TRXID_MODIFIER
);

422 
byã
 *
gë_åx_undo_no_±r
(Ëc⁄° {  (
	gm_node
 + 
	gOFFSET_TRX_UNDO_NO
); }

424 
byã
 *
gë_lob_vîsi⁄_±r
(Ëc⁄° {  (
	gm_node
 + 
	gOFFSET_LOB_VERSION
); }

426 
byã
 *
gë_åx_undo_no_modifõr_±r
() const {

427  (
	gm_node
 + 
	gOFFSET_TRX_UNDO_NO_MODIFIER
);

430 
byã
 *
gë_∑gío_±r
(Ëc⁄° {  (
	gm_node
 + 
	gOFFSET_PAGE_NO
); }

432 
byã
 *
gë_d©Æí_±r
(Ëc⁄° {  (
	gm_node
 + 
	gOFFSET_DATA_LEN
); }

434 
byã
 *
gë_node_±r
(Ëc⁄° {  (
	gm_node
); }

436 
byã
 *
gë_node
(Ëc⁄° {  (
	gm_node
); }

438 
	g¥iv©e
:

439 
byã
 *
m_node
;

440 
må_t
 *
	gm_må
;

441 c⁄° 
di˘_ödex_t
 *
	gm_ödex
;

442 
buf_block_t
 *
	gm_block
;

449 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gödex_íåy_t
 &
	gobj
) {

450  (
	gobj
.
¥öt
(
out
));

	@lob0inf.h

26 #i‚de‡
lob0öf_h


27 
	#lob0öf_h


	)

29 
	~<li°
>

31 
	~"fut0l°.h
"

32 
	~"lob0ödex.h
"

33 
	~"lob0lob.h
"

34 
	~"må0må.h
"

35 
	~"èbÀ.h
"

36 
	~"åx0åx.h
"

38 
	glob_diff_t
;

40 
«me•a˚
 
	glob
 {

49 
dbîr_t
 
ö£π
(
In£πC⁄ãxt
 *
˘x
, 
åx_t
 *
åx
, 
ªf_t
 &
ªf
,

50 
big_ªc_fõld_t
 *
fõld
, 
ulöt
 
fõld_j
);

59 
dbîr_t
 
z_ö£π
(
In£πC⁄ãxt
 *
˘x
, 
åx_t
 *
åx
, 
ªf_t
 &
ªf
,

60 
big_ªc_fõld_t
 *
fõld
, 
ulöt
 
fõld_j
);

69 
ulöt
 
ªad
(
RódC⁄ãxt
 *
˘x
, 
ªf_t
 
ªf
, ulöà
off£t
, ulöà
Àn
, 
byã
 *
buf
);

78 
ulöt
 
z_ªad
(
lob
::
RódC⁄ãxt
 *
˘x
,Üob::
ªf_t
 
ªf
, ulöà
off£t
, ulöà
Àn
,

79 
byã
 *
buf
);

87 
¥öt
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, 
°d
::
o°ªam
 &
out
, 
ªf_t
 
ªf
,

88 
boﬁ
 
Áèl
);

91 
dbîr_t
 
z_¥öt_öfo
(c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
lob
::
ªf_t
 &
ªf
,

92 
°d
::
o°ªam
 &
out
);

100 
dbîr_t
 
upd©e
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, c⁄° 
upd_t
 *
upd
,

101 
ulöt
 
fõld_no
);

109 
dbîr_t
 
z_upd©e
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, c⁄° 
upd_t
 *
upd
,

110 
ulöt
 
fõld_no
);

120 
dbîr_t
 
gë_af„˘ed_ödex_íåõs
(c⁄° 
ªf_t
 &
ªf
, 
di˘_ödex_t
 *
ödex
,

121 c⁄° 
Bö¨y_diff
 &
bdiff
,

122 
Li°_õm_t
 &
íåõs
, 
må_t
 *
må
);

131 
dbîr_t
 
≠∂y_undﬁog
(
må_t
 *
må
, 
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, 
ªf_t
 
ªf
,

132 c⁄° 
upd_fõld_t
 *
uf
);

143 
dbîr_t
 
gë_öfo
(
ªf_t
 &
ªf
, 
di˘_ödex_t
 *
ödex
, 
ulöt
 &
lob_vîsi⁄
,

144 
åx_id_t
 &
œ°_åx_id
, 
undo_no_t
 &
œ°_undo_no
,

145 
∑ge_ty≥_t
 &
∑ge_ty≥
, 
må_t
 *
må
);

154 
boﬁ
 
vÆid©e_size
(c⁄° 
ulöt
 
lob_size
, 
di˘_ödex_t
 *
ödex
,

155 
fû_addr_t
 
node_loc
, 
må_t
 *
må
);

	@lob0ins.h

26 #i‚de‡
lob0ös_h


27 
	#lob0ös_h


	)

29 
	~"lob0lob.h
"

31 
«me•a˚
 
	glob
 {

35 
	sBa£In£πî
 {

38 
Ba£In£πî
(
In£πC⁄ãxt
 *
˘x
)

39 : 
m_˘x
(
˘x
),

40 
m_îr
(
DB_SUCCESS
),

41 
m_¥ev_∑ge_no
(
˘x
->
gë_∑ge_no
()),

42 
m_cur_blob_block
(
nuŒ±r
),

43 
m_cur_blob_∑ge_no
(
FIL_NULL
) {}

47 
må_t
 *
°¨t_blob_må
() {

48 
må_°¨t
(&
m_blob_må
);

49 
	gm_blob_må
.
£t_log_mode
(
m_˘x
->
gë_log_mode
());

50 
	gm_blob_må
.
£t_Êush_ob£rvî
(
m_˘x
->
gë_Êush_ob£rvî
());

51  (&
	gm_blob_må
);

56 
buf_block_t
 *
Æloc_blob_∑ge
();

62 
∑ge_t
 *
gë_¥evious_blob_∑ge
();

68 
buf_block_t
 *
gë_¥evious_blob_block
();

72 
boﬁ
 
is_ödex_sdi
(Ë{  (
di˘_ödex_is_sdi
(
m_˘x
->
ödex
())); }

76 
∑ge_t
 *
cur_∑ge
(Ëc⁄° {  (
buf_block_gë_‰ame
(
m_cur_blob_block
)); }

78 
	g¥Ÿe˘ed
:

80 
In£πC⁄ãxt
 *
m_˘x
;

83 
dbîr_t
 
	gm_îr
;

86 
må_t
 
	gm_blob_må
;

90 
∑ge_no_t
 
	gm_¥ev_∑ge_no
;

93 
buf_block_t
 *
	gm_cur_blob_block
;

96 
∑ge_no_t
 
	gm_cur_blob_∑ge_no
;

100 ˛as†
	cIn£πî
 : 
¥iv©e
 
Ba£In£πî
 {

101 
public
:

104 
In£πî
(
In£πC⁄ãxt
 *
˘x
Ë: 
Ba£In£πî
(ctx) {}

107 ~
In£πî
() {}

111 
dbîr_t
 
wrôe
();

116 
dbîr_t
 
wrôe_⁄e_blob
(
size_t
 
blob_j
);

121 
dbîr_t
 
wrôe_⁄e_smÆl_blob
(
size_t
 
blob_j
);

129 
dbîr_t
 
wrôe_sögÀ_blob_∑ge
(
size_t
 
blob_j
, 
big_ªc_fõld_t
 &
fõld
,

130 
ulöt
 
¡h_blob_∑ge
);

134 
boﬁ
 
is_ok
(Ëc⁄° {  (
	gm_îr
 =
DB_SUCCESS
); }

139 
£t_∑ge_√xt
();

143 
log_∑ge_ty≥
() {

144 
∑ge_ty≥_t
 
	g∑ge_ty≥
;

145 
∑ge_t
 *
	gblob_∑ge
 = 
cur_∑ge
();

147 i‡(
is_ödex_sdi
()) {

148 
	g∑ge_ty≥
 = 
FIL_PAGE_SDI_BLOB
;

150 
	g∑ge_ty≥
 = 
FIL_PAGE_TYPE_BLOB
;

153 
mlog_wrôe_ulöt
(
blob_∑ge
 + 
FIL_PAGE_TYPE
, 
∑ge_ty≥
, 
MLOG_2BYTES
,

154 &
m_blob_må
);

159 
ulöt
 
∑ylﬂd
() const {

160 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
m_˘x
->
∑ge_size
();

161 c⁄° 
ulöt
 
	g∑ylﬂd_size
 =

162 
∑ge_size
.
physiˇl
(Ë- 
FIL_PAGE_DATA
 - 
LOB_HDR_SIZE
 - 
FIL_PAGE_DATA_END
;

163  (
	g∑ylﬂd_size
);

168 
wrôe_öto_sögÀ_∑ge
(
big_ªc_fõld_t
 &
fõld
);

174 
dbîr_t
 
wrôe_fú°_∑ge
(
size_t
 
blob_j
, 
big_ªc_fõld_t
 &
fõld
);

176 
	g¥iv©e
:

178 
blob_dú_t
 
m_dú
;

181 
ulöt
 
	gm_ªmaöög
;

	@lob0lob.h

26 #i‚de‡
lob0lob_h


27 
	#lob0lob_h


	)

29 
	~<my_dbug.h
>

30 
	~"bå0pcur.h
"

31 
	~"di˘0mem.h
"

32 
	~"∑ge0∑ge.h
"

33 
	~"row0log.h
"

34 
	~"univ.i
"

41 
	gupd_t
;

42 
	g°d
::
	tm≠
<
	t∑ge_no_t
, 
	tbuf_block_t
 *> 
	tBlockCache
;

80 
«me•a˚
 
	glob
 {

83 c⁄° 
ulöt
 
	gMAX_SIZE
 = 
UINT32_MAX
;

89 
	#KB128
 (128 * 1024)

	)

90 
	#Z_CHUNK_SIZE
 
KB128


	)

101 c⁄° 
ulöt
 
	gBTR_EXTERN_SPACE_ID
 = 0;

104 c⁄° 
ulöt
 
	gBTR_EXTERN_PAGE_NO
 = 4;

107 c⁄° 
ulöt
 
	gBTR_EXTERN_OFFSET
 = 8;

110 c⁄° 
ulöt
 
	gBTR_EXTERN_VERSION
 = 
BTR_EXTERN_OFFSET
;

114 c⁄° 
ulöt
 
	gBTR_EXTERN_LEN
 = 12;

122 c⁄° 
ulöt
 
	gBTR_EXTERN_OWNER_FLAG
 = 128UL;

129 c⁄° 
ulöt
 
	gBTR_EXTERN_INHERITED_FLAG
 = 64UL;

135 c⁄° 
ulöt
 
	gBTR_EXTERN_BEING_MODIFIED_FLAG
 = 32UL;

140 c⁄° 
ulöt
 
	gLOB_HDR_PART_LEN
 = 0;

144 c⁄° 
ulöt
 
	gLOB_HDR_NEXT_PAGE_NO
 = 4;

147 c⁄° 
ulöt
 
	gLOB_HDR_SIZE
 = 8;

150 c⁄° 
uöt
 
	gZLOB_PAGE_DATA
 = 
FIL_PAGE_DATA
;

153 
	sªf_mem_t
 {

155 
•a˚_id_t
 
	gm_•a˚_id
;

158 
∑ge_no_t
 
	gm_∑ge_no
;

161 
ulöt
 
	gm_off£t
;

164 
ulöt
 
	gm_Àngth
;

167 
boﬁ
 
	gm_nuŒ
;

170 
boﬁ
 
	gm_ow√r
;

174 
boﬁ
 
	gm_öhîô
;

177 
boﬁ
 
	gm_∑πül
;

180 
boﬁ
 
	gm_beög_modifõd
;

184 
boﬁ
 
is_purged
() const {

185  ((
	gm_∑ge_no
 =
FIL_NULL
Ë&& (
m_Àngth
 == 0));

189 c⁄° 
byã
 
fõld_ªf_Æmo°_zîo
[
FIELD_REF_SIZE
];

197 
	sªf_t
 {

198 
	g¥iv©e
:

202 c⁄° 
ulöt
 
LOB_BIG_THRESHOLD_SIZE
 = 2;

204 
	gpublic
:

209 c⁄° 
ulöt
 
LOB_SMALL_CHANGE_THRESHOLD
 = 100;

213 
ex∂icô
 
ªf_t
(
byã
 *
±r
Ë: 
m_ªf
(ptr) {}

217 
boﬁ
 
u£_sögÀ_z_°ªam
(Ëc⁄° {  (
Àngth
(Ë<
Z_CHUNK_SIZE
); }

221 
boﬁ
 
u£_sögÀ_z_°ªam
(
ulöt
 
Àn
Ë{  (
	gÀn
 <
Z_CHUNK_SIZE
); }

227 
boﬁ
 
is_big
(c⁄° 
∑ge_size_t
 &
∑ge_size
, c⁄° 
ulöt
 
lob_Àngth
) {

229  (
	gåue
);

231 c⁄° 
ulöt
 
	glimô
 = 
∑ge_size
.
physiˇl
(Ë* 
LOB_BIG_THRESHOLD_SIZE
;

232  (
	glob_Àngth
 >
limô
);

238 
boﬁ
 
is_big
(c⁄° 
∑ge_size_t
 &
∑ge_size
) const {

240  (
	gåue
);

242 c⁄° 
ulöt
 
	glimô
 = 
∑ge_size
.
physiˇl
(Ë* 
LOB_BIG_THRESHOLD_SIZE
;

243 c⁄° 
ulöt
 
	glob_Àngth
 = 
Àngth
();

244  (
	glob_Àngth
 >
limô
);

250 
∑r£
(
ªf_mem_t
 &
obj
) const {

251 
	gobj
.
	gm_•a˚_id
 = 
•a˚_id
();

252 
	gobj
.
	gm_∑ge_no
 = 
∑ge_no
();

253 
	gobj
.
	gm_off£t
 = 
off£t
();

254 
	gobj
.
	gm_Àngth
 = 
Àngth
();

255 
	gobj
.
	gm_nuŒ
 = 
is_nuŒ
();

256 
	gobj
.
	gm_ow√r
 = 
is_ow√r
();

257 
	gobj
.
	gm_öhîô
 = 
is_öhîôed
();

258 
	gobj
.
	gm_beög_modifõd
 = 
is_beög_modifõd
();

264 
c›y
(
byã
 *
fõld_ªf
Ëc⁄° { 
mem˝y
(fõld_ªf, 
m_ªf
, 
SIZE
); }

269 
boﬁ
 
is_equÆ
(c⁄° 
byã
 *
±r
Ëc⁄° {  (
	gm_ªf
 ==Ötr); }

273 
£t_ªf
(
byã
 *
±r
Ë{ 
	gm_ªf
 =Ötr; }

277 
£t_nuŒ
(
må_t
 *
må
) {

278 
mlog_wrôe_°rög
(
m_ªf
, 
fõld_ªf_zîo
, 
FIELD_REF_SIZE
, 
må
);

284 
boﬁ
 
is_nuŒ_ªœxed
() const {

285  (
is_nuŒ
(Ë|| 
memcmp
(
fõld_ªf_Æmo°_zîo
, 
m_ªf
, 
SIZE
) == 0);

290 
boﬁ
 
is_nuŒ
(Ëc⁄° {  (
memcmp
(
fõld_ªf_zîo
, 
m_ªf
, 
SIZE
) == 0); }

292 #ifde‡
UNIV_DEBUG


298 
boﬁ
 
is_nuŒ_ªœxed
(c⁄° 
byã
 *
ªf
) {

299  (
is_nuŒ
(
ªf
Ë|| 
memcmp
(
fõld_ªf_Æmo°_zîo
,Ñef, 
SIZE
) == 0);

305 
boﬁ
 
is_nuŒ
(c⁄° 
byã
 *
ªf
) {

306  (
memcmp
(
fõld_ªf_zîo
, 
ªf
, 
SIZE
) == 0);

314 
£t_ow√r
(
boﬁ
 
ow√r
, 
må_t
 *
må
) {

315 
ulöt
 
	gbyã_vÆ
 = 
mach_ªad_‰om_1
(
m_ªf
 + 
BTR_EXTERN_LEN
);

317 i‡(
	gow√r
) {

319 
	gbyã_vÆ
 &~
BTR_EXTERN_OWNER_FLAG
;

321 
	gbyã_vÆ
 |
BTR_EXTERN_OWNER_FLAG
;

324 
mlog_wrôe_ulöt
(
m_ªf
 + 
BTR_EXTERN_LEN
, 
byã_vÆ
, 
MLOG_1BYTE
, 
må
);

331 
£t_beög_modifõd
(
byã
 *
ªf
, 
boﬁ
 
modifyög
, 
må_t
 *
må
) {

332 
ulöt
 
	gbyã_vÆ
 = 
mach_ªad_‰om_1
(
ªf
 + 
BTR_EXTERN_LEN
);

334 i‡(
	gmodifyög
) {

335 
	gbyã_vÆ
 |
BTR_EXTERN_BEING_MODIFIED_FLAG
;

337 
	gbyã_vÆ
 &~
BTR_EXTERN_BEING_MODIFIED_FLAG
;

340 
mlog_wrôe_ulöt
(
ªf
 + 
BTR_EXTERN_LEN
, 
byã_vÆ
, 
MLOG_1BYTE
, 
må
);

346 
£t_beög_modifõd
(
boﬁ
 
modifyög
, 
må_t
 *
må
) {

347 
£t_beög_modifõd
(
m_ªf
, 
modifyög
, 
må
);

353 
boﬁ
 
is_beög_modifõd
(c⁄° 
byã
 *
fõld_ªf
) {

354 c⁄° 
ulöt
 
	gbyã_vÆ
 = 
mach_ªad_‰om_1
(
fõld_ªf
 + 
BTR_EXTERN_LEN
);

355  (
	gbyã_vÆ
 & 
	gBTR_EXTERN_BEING_MODIFIED_FLAG
);

360 
boﬁ
 
is_beög_modifõd
(Ëc⁄° {  (is_beög_modifõd(
m_ªf
)); }

365 
£t_öhîôed
(
boﬁ
 
öhîôed
, 
må_t
 *
må
) {

366 
ulöt
 
	gbyã_vÆ
 = 
mach_ªad_‰om_1
(
m_ªf
 + 
BTR_EXTERN_LEN
);

368 i‡(
	göhîôed
) {

369 
	gbyã_vÆ
 |
BTR_EXTERN_INHERITED_FLAG
;

371 
	gbyã_vÆ
 &~
BTR_EXTERN_INHERITED_FLAG
;

374 
mlog_wrôe_ulöt
(
m_ªf
 + 
BTR_EXTERN_LEN
, 
byã_vÆ
, 
MLOG_1BYTE
, 
må
);

379 
boﬁ
 
is_ow√r
() const {

380 
ulöt
 
	gbyã_vÆ
 = 
mach_ªad_‰om_1
(
m_ªf
 + 
BTR_EXTERN_LEN
);

381  (!(
	gbyã_vÆ
 & 
	gBTR_EXTERN_OWNER_FLAG
));

386 
boﬁ
 
is_öhîôed
() const {

387 c⁄° 
ulöt
 
	gbyã_vÆ
 = 
mach_ªad_‰om_1
(
m_ªf
 + 
BTR_EXTERN_LEN
);

388  (
	gbyã_vÆ
 & 
	gBTR_EXTERN_INHERITED_FLAG
);

391 #ifde‡
UNIV_DEBUG


395 
•a˚_id_t
 
•a˚_id
(c⁄° 
byã
 *
ªf
) {

396  (
mach_ªad_‰om_4
(
ªf
));

401 
∑ge_no_t
 
∑ge_no
(c⁄° 
byã
 *
ªf
) {

402  (
mach_ªad_‰om_4
(
ªf
 + 
BTR_EXTERN_PAGE_NO
));

408 
•a˚_id_t
 
•a˚_id
(Ëc⁄° {  (
mach_ªad_‰om_4
(
m_ªf
)); }

412 
∑ge_no_t
 
∑ge_no
() const {

413  (
mach_ªad_‰om_4
(
m_ªf
 + 
BTR_EXTERN_PAGE_NO
));

418 
ulöt
 
off£t
(Ëc⁄° {  (
mach_ªad_‰om_4
(
m_ªf
 + 
BTR_EXTERN_OFFSET
)); }

422 
uöt32_t
 
vîsi⁄
() const {

423  (
mach_ªad_‰om_4
(
m_ªf
 + 
BTR_EXTERN_VERSION
));

428 
ulöt
 
Àngth
() const {

429  (
mach_ªad_‰om_4
(
m_ªf
 + 
BTR_EXTERN_LEN
 + 4));

437 
upd©e
(
•a˚_id_t
 
•a˚_id
, 
ulöt
 
∑ge_no
, ulöà
off£t
, 
må_t
 *
må
) {

438 
£t_•a˚_id
(
•a˚_id
, 
må
);

439 
£t_∑ge_no
(
∑ge_no
, 
må
);

440 
£t_off£t
(
off£t
, 
må
);

446 
£t_•a˚_id
(c⁄° 
•a˚_id_t
 
•a˚_id
, 
må_t
 *
må
) {

447 
mlog_wrôe_ulöt
(
m_ªf
 + 
BTR_EXTERN_SPACE_ID
, 
•a˚_id
, 
MLOG_4BYTES
, 
må
);

453 
£t_∑ge_no
(c⁄° 
ulöt
 
∑ge_no
, 
må_t
 *
må
) {

454 
mlog_wrôe_ulöt
(
m_ªf
 + 
BTR_EXTERN_PAGE_NO
, 
∑ge_no
, 
MLOG_4BYTES
, 
må
);

460 
£t_off£t
(c⁄° 
ulöt
 
off£t
, 
må_t
 *
må
) {

461 
mlog_wrôe_ulöt
(
m_ªf
 + 
BTR_EXTERN_OFFSET
, 
off£t
, 
MLOG_4BYTES
, 
må
);

467 
£t_Àngth
(c⁄° 
ulöt
 
Àn
, 
må_t
 *
må
) {

468 
ut_ad
(
Àn
 <
MAX_SIZE
);

469 
mlog_wrôe_ulöt
(
m_ªf
 + 
BTR_EXTERN_LEN
 + 4, 
Àn
, 
MLOG_4BYTES
, 
må
);

474 
∑ge_t
 *
∑ge_Æign
(Ëc⁄° {  (::∑ge_Æign(
m_ªf
)); }

476 #ifde‡
UNIV_DEBUG


482 
boﬁ
 
vÆid©e
(
må_t
 *
må
) {

483 
ut_ad
(
m_ªf
 !
nuŒ±r
);

484 
ut_ad
(
må
 !
nuŒ±r
);

486 i‡(
	gmå
->
gë_log_mode
(Ë=
MTR_LOG_NO_REDO
) {

487  (
åue
);

490 
buf_block_t
 *
	gblock
 = 
må
->
memo_c⁄èös_∑ge_Êagged
(

491 
m_ªf
, 
MTR_MEMO_PAGE_X_FIX
 | 
MTR_MEMO_PAGE_SX_FIX
);

492 
ut_ad
(
block
 !
nuŒ±r
);

493  (
	gåue
);

500 
boﬁ
 
check_•a˚_id
(
di˘_ödex_t
 *
ödex
) const;

507 
boﬁ
 
is_lob_∑πüŒy_upd©abÀ
(c⁄° 
di˘_ödex_t
 *
ödex
) const;

515 
m¨k_nŸ_∑πüŒy_upd©abÀ
(
åx_t
 *
åx
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
,

516 c⁄° 
∑ge_size_t
 &
∑ge_size
);

523 
ulöt
 
gë_lob_∑ge_öfo
(c⁄° 
di˘_ödex_t
 *
ödex
,

524 c⁄° 
∑ge_size_t
 &
∑ge_size
,

525 
boﬁ
 &
is_∑πüŒy_upd©abÀ
) const;

530 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

533 c⁄° 
uöt
 
	gSIZE
 = 
BTR_EXTERN_FIELD_REF_SIZE
;

535 
	g¥iv©e
:

537 
byã
 *
m_ªf
;

545 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gªf_t
 &
	gobj
) {

546  (
	gobj
.
¥öt
(
out
));

550 
	e›code
 {

553 
	gOPCODE_INSERT
 = 0,

556 
	gOPCODE_INSERT_UPDATE
,

559 
	gOPCODE_UPDATE
,

562 
	gOPCODE_INSERT_BULK
,

565 
	gOPCODE_UNKNOWN


592 
dbîr_t
 
bå_°‹e_big_ªc_exã∫_fõlds
(
åx_t
 *
åx
, 
bå_pcur_t
 *
pcur
,

593 c⁄° 
upd_t
 *
upd
, 
ulöt
 *
off£ts
,

594 c⁄° 
big_ªc_t
 *
big_ªc_vec
,

595 
må_t
 *
bå_må
, 
›code
 
›
)

596 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

608 #ifde‡
UNIV_DEBUG


615 
byã
 *
bå_ªc_c›y_exã∫Æly_°‹ed_fõld_func
(

616 
åx_t
 *
åx
, c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
ªc_t
 *
ªc
,

617 c⁄° 
ulöt
 *
off£ts
, c⁄° 
∑ge_size_t
 &
∑ge_size
, ulöà
no
, ulöà*
Àn
,

618 
size_t
 *
lob_vîsi⁄
,

619 #ifde‡
UNIV_DEBUG


620 
boﬁ
 
is_sdi
,

622 
mem_hóp_t
 *
hóp
);

624 #ifde‡
UNIV_DEBUG


625 
	#bå_ªc_c›y_exã∫Æly_°‹ed_fõld
( \

626 
åx
, 
ödex
, 
ªc
, 
off£ts
, 
∑ge_size
, 
no
, 
Àn
, 
vî
, 
is_sdi
, 
hóp
) \

627 
	`bå_ªc_c›y_exã∫Æly_°‹ed_fõld_func
( \

628 
åx
, 
ödex
, 
ªc
, 
off£ts
, 
∑ge_size
, 
no
, 
Àn
, 
vî
, 
is_sdi
, 
hóp
)

	)

630 
	#bå_ªc_c›y_exã∫Æly_°‹ed_fõld
( \

631 
åx
, 
ödex
, 
ªc
, 
off£ts
, 
∑ge_size
, 
no
, 
Àn
, 
vî
, 
is_sdi
, 
hóp
) \

632 
	`bå_ªc_c›y_exã∫Æly_°‹ed_fõld_func
(
åx
, 
ödex
, 
ªc
, 
off£ts
, \

633 
∑ge_size
, 
no
, 
Àn
, 
vî
, 
hóp
)

	)

640 
ulöt
 
bå_ªc_gë_fõld_ªf_offs
(c⁄° ulöà*
off£ts
, ulöà
n
);

647 
	#bå_ªc_gë_fõld_ªf
(
ªc
, 
off£ts
, 
n
) \

648 ((
ªc
Ë+ 
lob
::
	`bå_ªc_gë_fõld_ªf_offs
(
off£ts
, 
n
))

	)

656 
blob_‰ì
(
di˘_ödex_t
 *
ödex
, 
buf_block_t
 *
block
, 
boﬁ
 
Æl
, 
må_t
 *
må
);

659 ˛as†
	cBåC⁄ãxt
 {

660 
	gpublic
:

662 
BåC⁄ãxt
()

663 : 
m_må
(
nuŒ±r
),

664 
m_pcur
(
nuŒ±r
),

665 
m_ödex
(
nuŒ±r
),

666 
m_ªc
(
nuŒ±r
),

667 
m_off£ts
(
nuŒ±r
),

668 
m_block
(
nuŒ±r
),

669 
m_›
(
OPCODE_UNKNOWN
),

670 
m_bå_∑ge_no
(
FIL_NULL
) {}

673 
BåC⁄ãxt
(
må_t
 *
må
, 
bå_pcur_t
 *
pcur
, 
di˘_ödex_t
 *
ödex
, 
ªc_t
 *
ªc
,

674 
ulöt
 *
off£ts
, 
buf_block_t
 *
block
)

675 : 
m_må
(
må
),

676 
m_pcur
(
pcur
),

677 
m_ödex
(
ödex
),

678 
m_ªc
(
ªc
),

679 
m_off£ts
(
off£ts
),

680 
m_block
(
block
),

681 
m_›
(
OPCODE_UNKNOWN
),

682 
m_bå_∑ge_no
(
FIL_NULL
) {

683 
ut_ad
(
m_pcur
 =
nuŒ±r
 || 
ªc_offs_vÆid©e
());

684 
ut_ad
(
m_block
 =
nuŒ±r
 || 
m_ªc
 ==Çullptr ||

685 
m_block
->
‰ame
 =
∑ge_Æign
(
m_ªc
));

686 
ut_ad
(
m_pcur
 =
nuŒ±r
 || 
m_ªc
 =
bå_pcur_gë_ªc
(m_pcur));

690 
BåC⁄ãxt
(
må_t
 *
må
, 
bå_pcur_t
 *
pcur
, 
di˘_ödex_t
 *
ödex
, 
ªc_t
 *
ªc
,

691 
ulöt
 *
off£ts
, 
buf_block_t
 *
block
, 
›code
 
›
)

692 : 
m_må
(
må
),

693 
m_pcur
(
pcur
),

694 
m_ödex
(
ödex
),

695 
m_ªc
(
ªc
),

696 
m_off£ts
(
off£ts
),

697 
m_block
(
block
),

698 
m_›
(
›
),

699 
m_bå_∑ge_no
(
FIL_NULL
) {

700 
ut_ad
(
m_pcur
 =
nuŒ±r
 || 
ªc_offs_vÆid©e
());

701 
ut_ad
(
m_block
->
‰ame
 =
∑ge_Æign
(
m_ªc
));

702 
ut_ad
(
m_pcur
 =
nuŒ±r
 || 
m_ªc
 =
bå_pcur_gë_ªc
(m_pcur));

706 
BåC⁄ãxt
(c⁄° BåC⁄ãxà&
Ÿhî
)

707 : 
m_må
(
Ÿhî
.m_mtr),

708 
m_pcur
(
Ÿhî
.m_pcur),

709 
m_ödex
(
Ÿhî
.m_index),

710 
m_ªc
(
Ÿhî
.m_rec),

711 
m_off£ts
(
Ÿhî
.m_offsets),

712 
m_block
(
Ÿhî
.m_block),

713 
m_›
(
Ÿhî
.m_op),

714 
m_bå_∑ge_no
(
Ÿhî
.m_btr_page_no) {}

721 
disown_öhîôed_fõlds
(c⁄° 
upd_t
 *
upd©e
);

726 
£t_ow√rshù_of_exã∫_fõld
(
ulöt
 
i
, 
iboﬁ
 
vÆ
) {

727 
byã
 *
	gd©a
;

728 
ulöt
 
	gloˇl_Àn
;

730 
	gd©a
 =

731 
c⁄°_ˇ°
<
byã
 *>(
ªc_gë_¡h_fõld
(
m_ªc
, 
m_off£ts
, 
i
, &
loˇl_Àn
));

732 
ut_ad
(
ªc_offs_¡h_exã∫
(
m_off£ts
, 
i
));

733 
ut_a
(
loˇl_Àn
 >
BTR_EXTERN_FIELD_REF_SIZE
);

735 
	gloˇl_Àn
 -
BTR_EXTERN_FIELD_REF_SIZE
;

737 
ªf_t
 
ªf
(
d©a
 + 
loˇl_Àn
);

739 
ut_a
(
vÆ
 || 
ªf
.
is_ow√r
());

741 
∑ge_zù_des_t
 *
	g∑ge_zù
 = 
gë_∑ge_zù
();

743 i‡(
	g∑ge_zù
) {

744 
	gªf
.
£t_ow√r
(
vÆ
, 
nuŒ±r
);

745 
∑ge_zù_wrôe_blob_±r
(
∑ge_zù
, 
m_ªc
, 
m_ödex
, 
m_off£ts
, 
i
, 
m_må
);

747 
	gªf
.
£t_ow√r
(
vÆ
, 
m_må
);

755 
unm¨k_exã∫_fõlds
() {

756 
ut_ad
(!
ªc_offs_comp
(
m_off£ts
Ë|| !
ªc_gë_node_±r_Êag
(
m_ªc
));

758 
ulöt
 
	gn
 = 
ªc_offs_n_fõlds
(
m_off£ts
);

760 i‡(!
ªc_offs_™y_exã∫
(
m_off£ts
)) {

764 
ulöt
 
	gi
 = 0; i < 
	gn
; i++) {

765 i‡(
ªc_offs_¡h_exã∫
(
m_off£ts
, 
i
)) {

766 
£t_ow√rshù_of_exã∫_fõld
(
i
, 
TRUE
);

778 
‰ì_exã∫Æly_°‹ed_fõlds
(
åx_id_t
 
åx_id
, 
undo_no_t
 
undo_no
,

779 
boﬁ
 
rﬁlback
, 
ulöt
 
ªc_ty≥
);

788 
‰ì_upd©ed_exã∫_fõlds
(
åx_id_t
 
åx_id
, 
undo_no_t
 
undo_no
,

789 c⁄° 
upd_t
 *
upd©e
, 
boﬁ
 
rﬁlback
);

793 
∑ge_zù_des_t
 *
gë_∑ge_zù
() const {

794  (
buf_block_gë_∑ge_zù
(
m_block
));

799 
∑ge_no_t
 
gë_∑ge_no
() const {

800  (
∑ge_gë_∑ge_no
(
buf_block_gë_‰ame
(
m_block
)));

805 
ulöt
 
gë_ªc_off£t
(Ëc⁄° {  (
∑ge_off£t
(
m_ªc
)); }

809 
boﬁ
 
√ed_ªˇlc
() const {

810  ((
	gm_pcur
 !
nuŒ±r
Ë&& (
m_ªc
 !
bå_pcur_gë_ªc
(
m_pcur
)));

815 
ªc_t
 *
ªc
() const {

816 
ut_ad
(
m_pcur
 =
nuŒ±r
 || 
m_ªc
 =
bå_pcur_gë_ªc
(m_pcur));

817  (
	gm_ªc
);

823 
byã
 *
gë_fõld_ªf
(
ulöt
 
fõld_no
) const {

824  (
bå_ªc_gë_fõld_ªf
(
m_ªc
, 
gë_off£ts
(), 
fõld_no
));

827 #ifde‡
UNIV_DEBUG


833 
boﬁ
 
vÆid©e
() const {

834 
ªc_offs_make_vÆid
(
ªc
(), 
ödex
(), 
m_off£ts
);

836 
ut_ad
(
m_må
->
memo_c⁄èös_∑ge_Êagged
(

837 
m_ªc
, 
MTR_MEMO_PAGE_X_FIX
 | 
MTR_MEMO_PAGE_SX_FIX
) ||

838 
èbÀ
()->
is_öåösic
());

840 
ut_ad
(
må_memo_c⁄èös_Êagged
(
m_må
, 
di˘_ödex_gë_lock
(
ödex
()),

841 
MTR_MEMO_SX_LOCK
 | 
MTR_MEMO_X_LOCK
) ||

842 
èbÀ
()->
is_öåösic
());

844  (
	gåue
);

851 
boﬁ
 
¨e_Æl_blobªfs_vÆid
() const {

852 
ulöt
 
	gi
 = 0; i < 
ªc_offs_n_fõlds
(
m_off£ts
); i++) {

853 i‡(!
ªc_offs_¡h_exã∫
(
m_off£ts
, 
i
)) {

857 
byã
 *
	gfõld_ªf
 = 
bå_ªc_gë_fõld_ªf
(
ªc
(), 
m_off£ts
, 
i
);

859 
ªf_t
 
blobªf
(
fõld_ªf
);

863 
ut_a
(!
blobªf
.
is_nuŒ
());

866 
ut_a
(
blobªf
.
is_ow√r
());

869  (
	gåue
);

875 
boﬁ
 
is_bulk
(Ëc⁄° {  (
	gm_›
 =
OPCODE_INSERT_BULK
); }

880 c⁄° 
∑ge_t
 *
ªc_‰ame
() const {

881 
ut_ad
(
m_block
->
‰ame
 =
∑ge_Æign
(
m_ªc
));

882  (
	gm_block
->
	g‰ame
);

887 
commô_bå_må
(Ë{ 
	gm_må
->
commô
(); }

891 
°¨t_bå_må
() {

892 
må_log_t
 
	glog_mode
 = 
m_må
->
gë_log_mode
();

893 
	gm_må
->
°¨t
();

894 
	gm_må
->
£t_log_mode
(
log_mode
);

899 
∑ge_no_t
 
gë_bå_∑ge_no
() const {

900  (
∑ge_gë_∑ge_no
(
buf_block_gë_‰ame
(
m_block
)));

903 #i‚de‡
UNIV_HOTBACKUP


914 
ªc_block_fix
() {

915 
	gm_ªc_off£t
 = 
∑ge_off£t
(
m_ªc
);

916 
	gm_bå_∑ge_no
 = 
∑ge_gë_∑ge_no
(
buf_block_gë_‰ame
(
m_block
));

917 
buf_block_buf_fix_öc
(
m_block
, 
__FILE__
, 
__LINE__
);

929 
ªc_block_unfix
() {

930 
•a˚_id_t
 
	g•a˚_id
 = 
•a˚
();

931 
∑ge_id_t
 
∑ge_id
(
•a˚_id
, 
m_bå_∑ge_no
);

932 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
èbÀ
()));

933 
∑ge_cur_t
 *
	g∑ge_cur
 = &
m_pcur
->
m_bå_cur
.
∑ge_cur
;

935 
må_x_lock
(
di˘_ödex_gë_lock
(
ödex
()), 
m_må
);

937 
	g∑ge_cur
->
	gblock
 =

938 
bå_block_gë
(
∑ge_id
, 
∑ge_size
, 
RW_X_LATCH
, 
ödex
(), 
m_må
);

940 
	g∑ge_cur
->
	gªc
 = 
buf_block_gë_‰ame
(
∑ge_cur
->
block
Ë+ 
m_ªc_off£t
;

942 
buf_block_buf_fix_dec
(
∑ge_cur
->
block
);

946 
ut_ad
(
∑ge_cur
->
block
->
∑ge
.
buf_fix_cou¡
 > 0);

947 
ªˇlc
();

952 
ª°‹e_posôi⁄
() {

953 
ut_ad
(
m_pcur
->
m_ªl_pos
 =
BTR_PCUR_ON
);

954 
boﬁ
 
	gªt
 = 
bå_pcur_ª°‹e_posôi⁄
(
m_pcur
->
m_œtch_mode
, m_pcur, 
m_må
);

956 
ut_a
(
ªt
);

958 
ªˇlc
();

963 
di˘_ödex_t
 *
ödex
(Ëc⁄° {  (
	gm_ödex
); }

967 
di˘_èbÀ_t
 *
èbÀ
() const {

968 
di˘_èbÀ_t
 *
	gªsu…
 = 
nuŒ±r
;

970 i‡(
	gm_pcur
 !
nuŒ±r
 && 
m_pcur
->
ödex
() !=Çullptr) {

971 
ªsu…
 = 
m_pcur
->
ödex
()->
èbÀ
;

974  (
	gªsu…
);

979 
•a˚_id_t
 
•a˚
(Ëc⁄° {  (
ödex
()->
	g•a˚
); }

983 c⁄° 
∑ge_size_t
 
∑ge_size
() const {

984  (
di˘_èbÀ_∑ge_size
(
èbÀ
()));

989 
∑ge_no_t
 
∑ges_ö_exã¡
() const {

990  (
di˘_èbÀ_exã¡_size
(
èbÀ
()));

995 
check_ªdﬁog
() {

996 
is_bulk
(Ë? 
check_ªdﬁog_bulk
(Ë: 
check_ªdﬁog_n‹mÆ
();

1001 
make_¡h_exã∫
(
ulöt
 
fõld_no
) {

1002 
ªc_offs_make_¡h_exã∫
(
m_off£ts
, 
fõld_no
);

1007 
må_log_t
 
gë_log_mode
(Ë{  (
	gm_må
->get_log_mode()); }

1011 
FlushOb£rvî
 *
gë_Êush_ob£rvî
() const {

1012  (
	gm_må
->
gë_Êush_ob£rvî
());

1017 
ulöt
 *
gë_off£ts
(Ëc⁄° {  (
	gm_off£ts
); }

1021 
boﬁ
 
ªc_offs_vÆid©e
() const {

1022 i‡(
	gm_ªc
 !
nuŒ±r
) {

1023 
ut_ad
(::
ªc_offs_vÆid©e
(
m_ªc
, 
m_ödex
, 
m_off£ts
));

1025  (
	gåue
);

1030 
må_t
 *
gë_må
(Ë{  (
	gm_må
); }

1034 
buf_block_t
 *
block
(Ëc⁄° {  (
	gm_block
); }

1037 
°‹e_posôi⁄
(Ë{ 
bå_pcur_°‹e_posôi⁄
(
m_pcur
, 
m_må
); }

1041 
check_ªdﬁog_n‹mÆ
();

1045 
check_ªdﬁog_bulk
();

1049 
ªˇlc
() {

1050 
	gm_block
 = 
bå_pcur_gë_block
(
m_pcur
);

1051 
	gm_ªc
 = 
bå_pcur_gë_ªc
(
m_pcur
);

1052 
	gm_bå_∑ge_no
 = 
∑ge_gë_∑ge_no
(
buf_block_gë_‰ame
(
m_block
));

1053 
	gm_ªc_off£t
 = 
∑ge_off£t
(
m_ªc
);

1055 
ªc_offs_make_vÆid
(
ªc
(), 
ödex
(), 
m_off£ts
);

1063 
zblob_wrôe_blobªf
(
ulöt
 
fõld_no
, 
må_t
 *
må
) {

1064 
∑ge_zù_wrôe_blob_±r
(
gë_∑ge_zù
(), 
m_ªc
, 
ödex
(), 
m_off£ts
, 
fõld_no
,

1065 
må
);

1068 
må_t
 *
	gm_må
;

1069 
bå_pcur_t
 *
	gm_pcur
;

1070 
di˘_ödex_t
 *
	gm_ödex
;

1071 
ªc_t
 *
	gm_ªc
;

1072 
ulöt
 *
	gm_off£ts
;

1073 
buf_block_t
 *
	gm_block
;

1074 
›code
 
	gm_›
;

1077 
ulöt
 
	gm_ªc_off£t
;

1080 
∑ge_no_t
 
	gm_bå_∑ge_no
;

1085 
	gIn£πC⁄ãxt
 : 
public
 
BåC⁄ãxt
 {

1089 
In£πC⁄ãxt
(c⁄° 
BåC⁄ãxt
 &
bå_˘x
, c⁄° 
big_ªc_t
 *
big_ªc_vec
)

1090 : 
BåC⁄ãxt
(
bå_˘x
), 
m_big_ªc_vec
(
big_ªc_vec
) {}

1094 c⁄° 
big_ªc_t
 *
gë_big_ªc_vec
(Ë{  (
	gm_big_ªc_vec
); }

1098 
ulöt
 
gë_big_ªc_vec_size
(Ë{  (
	gm_big_ªc_vec
->
	gn_fõlds
); }

1104 c⁄° 
big_ªc_t
 *
	gm_big_ªc_vec
;

1108 
	sblob_∑ge_öfo_t
 {

1115 
blob_∑ge_öfo_t
(
∑ge_no_t
 
∑ge_no
, 
uöt
 
byãs
, uöà
zbyãs
)

1116 : 
m_∑ge_no
(
∑ge_no
), 
m_byãs
(
byãs
), 
m_zbyãs
(
zbyãs
) {}

1119 
ª£t
() {

1120 
	gm_∑ge_no
 = 0;

1121 
	gm_byãs
 = 0;

1122 
	gm_zbyãs
 = 0;

1128 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

1132 
£t_com¥es£d_size
(
uöt
 
byãs
Ë{ 
	gm_zbyãs
 = bytes; }

1136 
£t_uncom¥es£d_size
(
uöt
 
byãs
Ë{ 
	gm_byãs
 = bytes; }

1140 
£t_∑ge_no
(
∑ge_no_t
 
∑ge_no
Ë{ 
	gm_∑ge_no
 =Öage_no; }

1142 
	g¥iv©e
:

1144 
∑ge_no_t
 
m_∑ge_no
;

1147 
uöt
 
	gm_byãs
;

1150 
uöt
 
	gm_zbyãs
;

1153 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
,

1154 c⁄° 
	gblob_∑ge_öfo_t
 &
	gobj
) {

1155  (
	gobj
.
¥öt
(
out
));

1160 
	sblob_dú_t
 {

1161 
	g°d
::
	tve˘‹
<
	tblob_∑ge_öfo_t
>::
	tc⁄°_ôî©‹
 const_iterator;

1166 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

1169 
˛ór
(Ë{ 
	gm_∑ges
.clear(); }

1174 
dbîr_t
 
add
(c⁄° 
blob_∑ge_öfo_t
 &
∑ge
) {

1175 
	gm_∑ges
.
push_back
(
∑ge
);

1176  (
	gDB_SUCCESS
);

1180 
	g°d
::
ve˘‹
<
blob_∑ge_öfo_t
> 
m_∑ges
;

1188 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gblob_dú_t
 &
	gobj
) {

1189  (
	gobj
.
¥öt
(
out
));

1193 
	sRódC⁄ãxt
 {

1205 #ifde‡
UNIV_DEBUG


1209 
RódC⁄ãxt
(c⁄° 
∑ge_size_t
 &
∑ge_size
, c⁄° 
byã
 *
d©a
, 
ulöt
 
¥efix_Àn
,

1210 
byã
 *
buf
, 
ulöt
 
Àn


1211 #ifde‡
UNIV_DEBUG


1213 
boﬁ
 
is_sdi


1216 : 
m_∑ge_size
(
∑ge_size
),

1217 
m_d©a
(
d©a
),

1218 
m_loˇl_Àn
(
¥efix_Àn
),

1219 
m_blobªf
(
c⁄°_ˇ°
<
byã
 *>(
d©a
Ë+ 
¥efix_Àn
 -

1220 
BTR_EXTERN_FIELD_REF_SIZE
),

1221 
m_buf
(
buf
),

1222 
m_Àn
(
Àn
),

1223 
m_lob_vîsi⁄
(0)

1224 #ifde‡
UNIV_DEBUG


1226 
m_is_sdi
(
is_sdi
)

1229 
ªad_blobªf
();

1234 
ªad_blobªf
() {

1235 
	gm_•a˚_id
 = 
m_blobªf
.
•a˚_id
();

1236 
	gm_∑ge_no
 = 
m_blobªf
.
∑ge_no
();

1237 
	gm_off£t
 = 
m_blobªf
.
off£t
();

1244 
boﬁ
 
is_vÆid_blob
(Ëc⁄° {  (
	gm_blobªf
.
Àngth
() > 0); }

1246 
di˘_ödex_t
 *
ödex
(Ë{  (
	gm_ödex
); }

1249 c⁄° 
	g∑ge_size_t
 &
	gm_∑ge_size
;

1254 c⁄° 
byã
 *
	gm_d©a
;

1258 
ulöt
 
	gm_loˇl_Àn
;

1261 c⁄° 
ªf_t
 
	gm_blobªf
;

1264 
byã
 *
	gm_buf
;

1267 
ulöt
 
	gm_Àn
;

1270 
•a˚_id_t
 
	gm_•a˚_id
;

1273 
∑ge_no_t
 
	gm_∑ge_no
;

1276 
ulöt
 
	gm_off£t
;

1278 
di˘_ödex_t
 *
	gm_ödex
;

1280 
ulöt
 
	gm_lob_vîsi⁄
;

1282 #ifde‡
UNIV_DEBUG


1285 
boﬁ
 
is_sdi
(Ëc⁄° {  (
	gm_is_sdi
); }

1288 c⁄° 
boﬁ
 
	gm_is_sdi
;

1292 
boﬁ
 
as£π_ªad_uncommôãd
() const;

1296 
åx_t
 *
	gm_åx
 = 
nuŒ±r
;

1300 
	szRódî
 {

1302 
ex∂icô
 
zRódî
(c⁄° 
RódC⁄ãxt
 &
˘x
Ë: 
m_r˘x
(ctx) {}

1306 
dbîr_t
 
„tch
();

1310 
dbîr_t
 
„tch_∑ge
();

1314 
ulöt
 
Àngth
(Ëc⁄° {  (
	gm_°ªam
.
	gtŸÆ_out
); }

1316 
	g¥iv©e
:

1319 
£tup_z°ªam
();

1321 #ifde‡
UNIV_DEBUG


1326 
boﬁ
 
as£π_em±y_loˇl_¥efix
();

1329 
RódC⁄ãxt
 
	gm_r˘x
;

1332 
ulöt
 
	gm_ªmaöög
;

1335 
z_°ªam
 
	gm_°ªam
;

1338 
mem_hóp_t
 *
	gm_hóp
;

1344 
buf_∑ge_t
 *
	gm_b∑ge
;

1346 #ifde‡
UNIV_DEBUG


1348 
ulöt
 
	gm_∑ge_ty≥_ex
;

1353 
	sRódî
 {

1355 
Ródî
(c⁄° 
RódC⁄ãxt
 &
˘x
)

1356 : 
m_r˘x
(
˘x
), 
m_cur_block
(
nuŒ±r
), 
m_c›õd_Àn
(0) {}

1360 
ulöt
 
„tch
();

1363 
„tch_∑ge
();

1365 
RódC⁄ãxt
 
	gm_r˘x
;

1368 
buf_block_t
 *
	gm_cur_block
;

1373 
ulöt
 
	gm_c›õd_Àn
;

1378 
	gDñëeC⁄ãxt
 : 
public
 
BåC⁄ãxt
 {

1380 
DñëeC⁄ãxt
(c⁄° 
BåC⁄ãxt
 &
bå
, 
byã
 *
fõld_ªf
, 
ulöt
 
fõld_no
,

1381 
boﬁ
 
rﬁlback
)

1382 : 
BåC⁄ãxt
(
bå
),

1383 
m_blobªf
(
fõld_ªf
),

1384 
m_fõld_no
(
fõld_no
),

1385 
m_rﬁlback
(
rﬁlback
),

1386 
m_∑ge_size
(
èbÀ
(Ë=
nuŒ±r
 ? 
gë_∑ge_size
()

1387 : 
di˘_èbÀ_∑ge_size
(
èbÀ
())) {

1388 
m_blobªf
.
∑r£
(
m_blobªf_mem
);

1391 
boﬁ
 
is_ªf_vÆid
() const {

1392  (
	gm_blobªf_mem
.
	gm_∑ge_no
 =
m_blobªf
.
∑ge_no
());

1397 
boﬁ
 
is_com¥es£d
(Ëc⁄° {  (
	gm_∑ge_size
.is_compressed()); }

1401 
boﬁ
 
has_©omic_blobs
() const {

1402 
•a˚_id_t
 
	g•a˚_id
 = 
m_blobªf
.
•a˚_id
();

1403 
uöt32_t
 
	gÊags
 = 
fû_•a˚_gë_Êags
(
•a˚_id
);

1404  (
DICT_TF_HAS_ATOMIC_BLOBS
(
Êags
));

1407 
boﬁ
 
is_dñëe_m¨ked
() const {

1408 
ªc_t
 *
	g˛u°_ªc
 = 
ªc
();

1409 i‡(
	g˛u°_ªc
 =
nuŒ±r
) {

1410  (
åue
);

1412  (
ªc_gë_dñëed_Êag
(
˛u°_ªc
, 
∑ge_ªc_is_comp
(clust_rec)));

1415 #ifde‡
UNIV_DEBUG


1418 
boﬁ
 
vÆid©e_blobªf
() const {

1419 
ªc_t
 *
	g˛u°_ªc
 = 
ªc
();

1420 i‡(
	g˛u°_ªc
 !
nuŒ±r
) {

1421 c⁄° 
byã
 *
v2
 =

1422 
bå_ªc_gë_fõld_ªf
(
˛u°_ªc
, 
gë_off£ts
(), 
m_fõld_no
);

1424 
ut_ad
(
m_blobªf
.
is_equÆ
(
v2
));

1426  (
	gåue
);

1433 
x_œtch_ªc_∑ge
(
må_t
 *
må
);

1436 
ªf_t
 
	gm_blobªf
;

1439 
ulöt
 
	gm_fõld_no
;

1442 
boﬁ
 
	gm_rﬁlback
;

1444 
∑ge_size_t
 
	gm_∑ge_size
;

1446 
	g¥iv©e
:

1448 
ªf_mem_t
 
m_blobªf_mem
;

1452 
∑ge_size_t
 
gë_∑ge_size
() const {

1453 
boﬁ
 
	gfound
;

1454 
•a˚_id_t
 
	g•a˚_id
 = 
m_blobªf
.
•a˚_id
();

1455 c⁄° 
	g∑ge_size_t
 &
	gtmp
 = 
fû_•a˚_gë_∑ge_size
(
•a˚_id
, &
found
);

1456 
ut_ad
(
found
);

1457  (
	gtmp
);

1464 
ölöe
 
boﬁ
 
	$bå_lob_›_is_upd©e
(
›code
 
›
) {

1465 
›
) {

1466 
OPCODE_INSERT
:

1467 
OPCODE_INSERT_BULK
:

1468  (
Ál£
);

1469 
OPCODE_INSERT_UPDATE
:

1470 
OPCODE_UPDATE
:

1471  (
åue
);

1472 
OPCODE_UNKNOWN
:

1476 
	`ut_ad
(0);

1477  (
FALSE
);

1478 
	}
}

1480 #ifde‡
UNIV_DEBUG


1481 
	#bå_c›y_exã∫Æly_°‹ed_fõld_¥efix
( \

1482 
åx
, 
ödex
, 
buf
, 
Àn
, 
∑ge_size
, 
d©a
, 
is_sdi
, 
loˇl_Àn
) \

1483 
	`bå_c›y_exã∫Æly_°‹ed_fõld_¥efix_func
( \

1484 
åx
, 
ödex
, 
buf
, 
Àn
, 
∑ge_size
, 
d©a
, 
is_sdi
, 
loˇl_Àn
)

	)

1486 
	#bå_c›y_exã∫Æly_°‹ed_fõld
(
åx
, 
ödex
, 
Àn
, 
vî
, 
d©a
, \

1487 
∑ge_size
, 
loˇl_Àn
, 
is_sdi
, 
hóp
) \

1488 
	`bå_c›y_exã∫Æly_°‹ed_fõld_func
(
åx
, 
ödex
, 
Àn
, 
vî
, 
d©a
, 
∑ge_size
, \

1489 
loˇl_Àn
, 
is_sdi
, 
hóp
)

	)

1492 
	#bå_c›y_exã∫Æly_°‹ed_fõld_¥efix
( \

1493 
åx
, 
ödex
, 
buf
, 
Àn
, 
∑ge_size
, 
d©a
, 
is_sdi
, 
loˇl_Àn
) \

1494 
	`bå_c›y_exã∫Æly_°‹ed_fõld_¥efix_func
(
åx
, 
ödex
, 
buf
, 
Àn
, \

1495 
∑ge_size
, 
d©a
, 
loˇl_Àn
)

	)

1497 
	#bå_c›y_exã∫Æly_°‹ed_fõld
(
åx
, 
ödex
, 
Àn
, 
vî
, 
d©a
, \

1498 
∑ge_size
, 
loˇl_Àn
, 
is_sdi
, 
hóp
) \

1499 
	`bå_c›y_exã∫Æly_°‹ed_fõld_func
(
åx
, 
ödex
, 
Àn
, 
vî
, 
d©a
, 
∑ge_size
, \

1500 
loˇl_Àn
, 
hóp
)

	)

1515 #ifde‡
UNIV_DEBUG


1523 
ulöt
 
bå_c›y_exã∫Æly_°‹ed_fõld_¥efix_func
(
åx_t
 *
åx
,

1524 c⁄° 
di˘_ödex_t
 *
ödex
,

1525 
byã
 *
buf
, 
ulöt
 
Àn
,

1526 c⁄° 
∑ge_size_t
 &
∑ge_size
,

1527 c⁄° 
byã
 *
d©a
,

1528 #ifde‡
UNIV_DEBUG


1529 
boﬁ
 
is_sdi
,

1531 
ulöt
 
loˇl_Àn
);

1545 #ifde‡
UNIV_DEBUG


1552 
byã
 *
bå_c›y_exã∫Æly_°‹ed_fõld_func
(

1553 
åx_t
 *
åx
, c⁄° 
di˘_ödex_t
 *
ödex
, 
ulöt
 *
Àn
, 
size_t
 *
lob_vîsi⁄
,

1554 c⁄° 
byã
 *
d©a
, c⁄° 
∑ge_size_t
 &
∑ge_size
, 
ulöt
 
loˇl_Àn
,

1555 #ifde‡
UNIV_DEBUG


1556 
boﬁ
 
is_sdi
,

1558 
mem_hóp_t
 *
hóp
);

1564 
ulöt
 
bå_ªc_gë_exã∫Æly_°‹ed_Àn
(c⁄° 
ªc_t
 *
ªc
, c⁄° ulöà*
off£ts
);

1574 
purge
(
lob
::
DñëeC⁄ãxt
 *
˘x
, 
di˘_ödex_t
 *
ödex
, 
åx_id_t
 
åxid
,

1575 
undo_no_t
 
undo_no
, 
ulöt
 
ªc_ty≥
, c⁄° 
upd_fõld_t
 *
uf
);

1585 
dbîr_t
 
upd©e
(
In£πC⁄ãxt
 &
˘x
, 
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
,

1586 c⁄° 
upd_t
 *
upd
, 
ulöt
 
fõld_no
, 
ªf_t
 
blobªf
);

1596 
dbîr_t
 
z_upd©e
(
In£πC⁄ãxt
 &
˘x
, 
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
,

1597 c⁄° 
upd_t
 *
upd
, 
ulöt
 
fõld_no
, 
ªf_t
 
blobªf
);

1605 
¥öt
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, 
°d
::
o°ªam
 &
out
, 
ªf_t
 
ªf
,

1606 
boﬁ
 
Áèl
);

1613 
z_imp‹t
(c⁄° 
di˘_ödex_t
 *
ödex
, 
byã
 *
fõld_ªf
, 
åx_id_t
 
åx_id
);

1620 
imp‹t
(c⁄° 
di˘_ödex_t
 *
ödex
, 
byã
 *
fõld_ªf
, 
åx_id_t
 
åx_id
);

1622 #ifde‡
UNIV_DEBUG


1629 
boﬁ
 
ªc_check_lobªf_•a˚_id
(
di˘_ödex_t
 *
ödex
, c⁄° 
ªc_t
 *
ªc
,

1630 c⁄° 
ulöt
 *
off£ts
);

1641 
dbîr_t
 
m¨k_nŸ_∑πüŒy_upd©abÀ
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
,

1642 c⁄° 
upd_t
 *
upd©e
, c⁄° 
må_t
 *
bå_må
);

	@lob0pages.h

26 #i‚de‡
lob0∑ges_h


27 
	#lob0∑ges_h


	)

29 
	~"lob0fú°.h
"

31 
«me•a˚
 
	glob
 {

34 
	gd©a_∑ge_t
 : 
public
 
basic_∑ge_t
 {

35 c⁄° 
ulöt
 
OFFSET_VERSION
 = 
FIL_PAGE_DATA
;

36 c⁄° 
ulöt
 
	gOFFSET_DATA_LEN
 = 
OFFSET_VERSION
 + 1;

37 c⁄° 
ulöt
 
	gOFFSET_TRX_ID
 = 
OFFSET_DATA_LEN
 + 4;

38 c⁄° 
ulöt
 
	gLOB_PAGE_DATA
 = 
OFFSET_TRX_ID
 + 6;

40 
d©a_∑ge_t
() {}

43 
d©a_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
Ë: 
basic_∑ge_t
(block, mtr) {

44 
∑ge_ty≥_t
 
	gty≥
 = 
gë_∑ge_ty≥
();

45 
ut_a
(
ty≥
 =
FIL_PAGE_TYPE_LOB_DATA
);

48 
d©a_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

49 : 
basic_∑ge_t
(
block
, 
må
, 
ödex
) {}

51 
d©a_∑ge_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

52 : 
basic_∑ge_t
(
nuŒ±r
, 
må
, 
ödex
) {}

56 
d©a_∑ge_t
(
buf_block_t
 *
block
Ë: 
basic_∑ge_t
(block, 
nuŒ±r
,Çullptr) {}

62 
buf_block_t
 *
Æloc
(
må_t
 *
Æloc_må
, 
boﬁ
 
is_bulk
);

64 
buf_block_t
 *
lﬂd_x
(
∑ge_no_t
 
∑ge_no
);

66 
£t_vîsi⁄_0
() {

67 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_VERSION
, 0, 
MLOG_1BYTE
, 
m_må
);

70 
dóŒoc
() {

71 
bå_∑ge_‰ì_low
(
m_ödex
, 
m_block
, 
ULINT_UNDEFINED
, 
m_må
);

72 
	gm_block
 = 
nuŒ±r
;

75 
£t_∑ge_ty≥
() {

76 
ut_ad
(
m_må
 !
nuŒ±r
);

78 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
, 
FIL_PAGE_TYPE_LOB_DATA
,

79 
MLOG_2BYTES
, 
m_må
);

82 
£t_åx_id
(
åx_id_t
 
id
) {

83 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_TRX_ID
;

84 
mach_wrôe_to_6
(
±r
, 
id
);

85 
mlog_log_°rög
(
±r
, 6, 
m_må
);

91 
£t_åx_id_no_ªdo
(
åx_id_t
 
id
) {

92 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_TRX_ID
;

93 
mach_wrôe_to_6
(
±r
, 
id
);

96 
ulöt
 
∑ylﬂd
() {

97  (
	gUNIV_PAGE_SIZE
 - 
	gLOB_PAGE_DATA
 - 
	gFIL_PAGE_DATA_END
);

100 
byã
 *
d©a_begö
(Ëc⁄° {  (
‰ame
(Ë+ 
	gLOB_PAGE_DATA
); }

110 
buf_block_t
 *
ª∂a˚
(
åx_t
 *
åx
, 
ulöt
 
off£t
, c⁄° 
byã
 *&
±r
, ulöà&
w™t
,

111 
må_t
 *
må
);

119 
ª∂a˚_ölöe
(
åx_t
 *
åx
, 
ulöt
 
off£t
, c⁄° 
byã
 *&
±r
, ulöà&
w™t
,

120 
må_t
 *
må
);

122 
ulöt
 
gë_d©a_Àn
() const {

123  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
OFFSET_DATA_LEN
));

126 
£t_d©a_Àn
(
ulöt
 
Àn
) {

127 
ut_ad
(
m_må
 !
nuŒ±r
);

129 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_DATA_LEN
, 
Àn
, 
MLOG_4BYTES
, 
m_må
);

137 
ulöt
 
ªad
(ulöà
off£t
, 
byã
 *
±r
, ulöà
w™t
);

145 
ulöt
 
wrôe
(
åx_id_t
 
åxid
, c⁄° 
byã
 *&
d©a
, ulöà&
Àn
);

152 
ulöt
 
≠≥nd
(
åx_id_t
 
åxid
, 
byã
 *&
d©a
, ulöà&
Àn
);

154 
	g°d
::
∑ú
<
ulöt
, 
	gbyã
 *> 
ö£π_middÀ
(
åx_t
 *
åx
, ulöà
off£t
, 
byã
 *&
d©a
,

155 
ulöt
 &
Àn
, 
buf_block_t
 *&
√w_block
);

157 
buf_block_t
 *
ªmove_middÀ
(
åx_t
 *
åx
, 
ulöt
 
off£t
, ulöà&
Àn
);

159 
ulöt
 
max_•a˚_avaûabÀ
(Ëc⁄° {  (
∑ylﬂd
()); }

161 
ulöt
 
•a˚_À·
() const;

	@lob0undo.h

30 #i‚de‡
lob0undo_h


31 
	#lob0undo_h


	)

33 
	~<li°
>

34 
	~"di˘0mem.h
"

35 
	~"mem0mem.h
"

36 
	~"univ.i
"

38 
«me•a˚
 
	glob
 {

41 
	sundo_d©a_t
 {

49 
≠∂y
(
di˘_ödex_t
 *
ödex
, 
byã
 *
lob_mem
, 
size_t
 
Àn
, size_à
lob_vîsi⁄
,

50 
∑ge_no_t
 
fú°_∑ge_no
);

53 
∑ge_no_t
 
	gm_∑ge_no
 = 
FIL_NULL
;

56 
ulöt
 
	gm_vîsi⁄
 = 0;

59 
ulöt
 
	gm_off£t
 = 0;

62 
ulöt
 
	gm_Àngth
 = 0;

65 
byã
 *
	gm_ﬁd_d©a
 = 
nuŒ±r
;

71 c⁄° 
byã
 *
c›y_ﬁd_d©a
(c⁄° byã *
undo_±r
, 
ulöt
 
Àn
);

74 
de°roy
();

76 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

79 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gundo_d©a_t
 &
	gobj
) {

80  (
	gobj
.
¥öt
(
out
));

85 
	sundo_£q_t
 {

88 
undo_£q_t
(
ulöt
 
fõld_no
Ë: 
m_fõld_no
(fõld_no), 
m_undo_li°
(
nuŒ±r
) {}

96 
≠∂y
(
di˘_ödex_t
 *
ödex
, 
byã
 *
lob
, 
size_t
 
Àn
, size_à
lob_vîsi⁄
,

97 
∑ge_no_t
 
fú°_∑ge_no
) {

98 i‡(
	gm_undo_li°
 !
nuŒ±r
) {

99 autÿ
ôî
 = 
m_undo_li°
->
begö
(); 
	gôî
 !m_undo_li°->
íd
();

100 ++
	gôî
) {

101 
	gôî
->
≠∂y
(
ödex
, 
lob
, 
Àn
, 
lob_vîsi⁄
, 
fú°_∑ge_no
);

108 
ulöt
 
gë_fõld_no
(Ëc⁄° {  (
	gm_fõld_no
); }

112 
push_back
(
undo_d©a_t
 &
u1
) {

113 i‡(
	gm_undo_li°
 =
nuŒ±r
) {

114 
m_undo_li°
 = 
UT_NEW_NOKEY
(
°d
::
li°
<
undo_d©a_t
>());

116 
	gm_undo_li°
->
push_back
(
u1
);

120 
de°roy
() {

121 i‡(
	gm_undo_li°
 !
nuŒ±r
) {

122 
°d
::
f‹_óch
(
m_undo_li°
->
begö
(), m_undo_li°->
íd
(),

123 [](
undo_d©a_t
 &
obj
Ë{ obj.
de°roy
(); });

124 
	gm_undo_li°
->
˛ór
();

125 
UT_DELETE
(
m_undo_li°
);

126 
	gm_undo_li°
 = 
nuŒ±r
;

131 
boﬁ
 
exi°s
() const {

132  (
	gm_undo_li°
 =
nuŒ±r
 ? 
Ál£
 : !
m_undo_li°
->
em±y
());

135 
ulöt
 
	gm_fõld_no
;

137 
	g¥iv©e
:

138 
°d
::
li°
<
undo_d©a_t
> *
m_undo_li°
 = 
nuŒ±r
;

144 
	sundo_vîs_t
 {

145 
	gpublic
:

150 
undo_£q_t
 *
gë_undo_£quí˚_if_exi°s
(
ulöt
 
fõld_no
) {

151 i‡(
m_vîsi⁄s
 =
nuŒ±r
) {

152  (
nuŒ±r
);

154 autÿ
	gôî
 = 
m_vîsi⁄s
->
begö
(); iã∏!m_vîsi⁄s->
íd
(); ++iter) {

155 i‡((*
	gôî
)->
gë_fõld_no
(Ë=
fõld_no
) {

156  (*
ôî
);

160  (
	gnuŒ±r
);

168 
undo_£q_t
 *
gë_undo_£quí˚
(
ulöt
 
fõld_no
) {

169 i‡(
	gm_vîsi⁄s
 =
nuŒ±r
) {

170 
m_vîsi⁄s
 = 
UT_NEW_NOKEY
(
°d
::
li°
<
undo_£q_t
 *>());

172 autÿ
	gôî
 = 
m_vîsi⁄s
->
begö
(); iã∏!m_vîsi⁄s->
íd
(); ++iter) {

173 i‡((*
	gôî
)->
gë_fõld_no
(Ë=
fõld_no
) {

174  (*
ôî
);

179 
undo_£q_t
 *
	g£q
 = 
UT_NEW_NOKEY
(undo_£q_t(
fõld_no
));

180 
	gm_vîsi⁄s
->
push_back
(
£q
);

182  (
	g£q
);

186 
ª£t
() {

187 i‡(
	gm_vîsi⁄s
 !
nuŒ±r
) {

188 autÿ
ôî
 = 
m_vîsi⁄s
->
begö
(); 
	gôî
 !m_vîsi⁄s->
íd
(); ++iter) {

189 (*
	gôî
)->
de°roy
();

190 
UT_DELETE
(*
ôî
);

192 
	gm_vîsi⁄s
->
˛ór
();

203 
≠∂y
(
di˘_ödex_t
 *
˛u°_ödex
, 
ulöt
 
fõld_no
, 
byã
 *
lob
, 
size_t
 
Àn
,

204 
size_t
 
lob_vîsi⁄
, 
∑ge_no_t
 
fú°_∑ge
) {

205 
undo_£q_t
 *
	g£q
 = 
gë_undo_£quí˚_if_exi°s
(
fõld_no
);

207 i‡(
	g£q
 !
nuŒ±r
) {

208 
£q
->
≠∂y
(
˛u°_ödex
, 
lob
, 
Àn
, 
lob_vîsi⁄
, 
fú°_∑ge
);

213 
de°roy
() {

214 i‡(
	gm_vîsi⁄s
 !
nuŒ±r
) {

215 
ª£t
();

216 
UT_DELETE
(
m_vîsi⁄s
);

217 
	gm_vîsi⁄s
 = 
nuŒ±r
;

223 
boﬁ
 
is_em±y
(Ëc⁄° {  (
	gm_vîsi⁄s
->
em±y
()); }

226 ~
undo_vîs_t
(Ë{ 
de°roy
(); }

228 
	g¥iv©e
:

230 
°d
::
li°
<
undo_£q_t
 *> *
m_vîsi⁄s
 = 
nuŒ±r
;

	@lob0util.h

26 #i‚de‡
lob0utû_h


27 
	#lob0utû_h


	)

29 
	~<°döt.h
>

31 
	~"buf0buf.h
"

32 
	~"fû0fû.h
"

33 
	~"fut0l°.h
"

35 
«me•a˚
 
	glob
 {

39 c⁄° 
uöt32_t
 
	gMAX_PARTIAL_UPDATE_LIMIT
 = 1000;

41 
	sbasic_∑ge_t
 {

42 
basic_∑ge_t
(Ë: 
m_block
(
nuŒ±r
), 
m_må
“uŒ±r), 
m_ödex
(nullptr) {}

44 
basic_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
)

45 : 
m_block
(
block
), 
m_må
(
må
), 
m_ödex
(
nuŒ±r
) {}

47 
basic_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

48 : 
m_block
(
block
), 
m_må
(
må
), 
m_ödex
(
ödex
) {}

53 
£t_•a˚_id_no_ªdo
(
•a˚_id_t
 
•a˚_id
) {

54 
mach_wrôe_to_4
(
‰ame
(Ë+ 
FIL_PAGE_SPACE_ID
, 
•a˚_id
);

59 
∑ge_no_t
 
gë_∑ge_no
() const {

60 
ut_ad
(
m_block
 !
nuŒ±r
);

61  (
	gm_block
->
	g∑ge
.
	gid
.
∑ge_no
());

66 
∑ge_id_t
 
gë_∑ge_id
() const {

67 
ut_ad
(
m_block
 !
nuŒ±r
);

68  (
	gm_block
->
	g∑ge
.
	gid
);

75 
£t_√xt_∑ge
(
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
) {

76 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
, 
∑ge_no
, 
MLOG_4BYTES
, 
må
);

81 
£t_√xt_∑ge
(
∑ge_no_t
 
∑ge_no
Ë{ së_√xt_∑ge’age_no, 
m_må
); }

84 
£t_√xt_∑ge_nuŒ
() {

85 
ut_ad
(
m_må
 !
nuŒ±r
);

87 
£t_√xt_∑ge
(
FIL_NULL
);

90 
∑ge_no_t
 
gë_√xt_∑ge
() {

91  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
));

94 
∑ge_ty≥_t
 
gë_∑ge_ty≥
() const {

95  (
mach_ªad_‰om_2
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
));

98 
byã
 *
‰ame
(Ëc⁄° {  (
buf_block_gë_‰ame
(
m_block
)); }

100 
Ê°_node_t
 *
gë_Ê°_node
(c⁄° 
fû_addr_t
 &
addr
) {

101 
ut_ad
(!
addr
.
is_nuŒ
());

103 
Ê°_node_t
 *
	gnode
 = 
nuŒ±r
;

104 i‡(
	gaddr
.
	g∑ge
 =
gë_∑ge_no
()) {

105 
node
 = 
‰ame
(Ë+ 
addr
.
boff£t
;

107  (
	gnode
);

110 
ulöt
 
∑ylﬂd
();

111 
ulöt
 
max_•a˚_avaûabÀ
();

113 
£t_block
(
buf_block_t
 *
block
) {

114 
ut_ad
(
må_memo_c⁄èös
(
m_må
, 
block
, 
MTR_MEMO_PAGE_X_FIX
) ||

115 
må_memo_c⁄èös
(
m_må
, 
block
, 
MTR_MEMO_PAGE_S_FIX
));

117 
	gm_block
 = 
block
;

120 
£t_må
(
må_t
 *
må
Ë{ 
	gm_må
 = mtr; }

122 
	g¥Ÿe˘ed
:

123 
buf_block_t
 *
m_block
;

124 
må_t
 *
	gm_må
;

125 
di˘_ödex_t
 *
	gm_ödex
;

135 
buf_block_t
 *
Æloc_lob_∑ge
(
di˘_ödex_t
 *
ödex
, 
må_t
 *
lob_må
, 
∑ge_no_t
 
höt
,

136 
boﬁ
 
bulk
);

142 
boﬁ
 
íåy_visibÀ_to
(
di˘_ödex_t
 *
ödex
, 
åx_t
 *
åx
, 
åx_id_t
 
íåy_åx_id
);

	@lob0zip.h

26 #i‚de‡
lob0zù_h


27 
	#lob0zù_h


	)

29 
	~"lob0ös.h
"

31 
«me•a˚
 
	glob
 {

34 ˛as†
	czIn£πî
 : 
¥iv©e
 
Ba£In£πî
 {

35 
public
:

38 
zIn£πî
(
In£πC⁄ãxt
 *
˘x
Ë: 
Ba£In£πî
(˘x), 
m_hóp
(
nuŒ±r
) {}

41 ~
zIn£πî
();

46 
dbîr_t
 
¥ï¨e
();

50 
dbîr_t
 
wrôe
();

55 
dbîr_t
 
wrôe_⁄e_blob
(
size_t
 
blob_j
);

62 
dbîr_t
 
föish
(
boﬁ
 
vÆid©e
 = 
åue
) {

63 
ªt
 = 
deÊ©eEnd
(&
m_°ªam
);

64 
ut_ad
(
ªt
 =
Z_OK
);

65 
ut_ad
(!
vÆid©e
 || 
vÆid©e_blobªfs
());

67 i‡(
	gªt
 !
Z_OK
) {

68 
m_îr
 = 
DB_FAIL
;

70  (
	gm_îr
);

78 
log_∑ge_ty≥
(
∑ge_t
 *
blob_∑ge
, 
ulöt
 
¡h_blob_∑ge
) {

79 
∑ge_ty≥_t
 
	g∑ge_ty≥
;

81 i‡(
is_ödex_sdi
()) {

82 
	g∑ge_ty≥
 = 
FIL_PAGE_SDI_ZBLOB
;

83 } i‡(
	g¡h_blob_∑ge
 == 0) {

84 
∑ge_ty≥
 = 
FIL_PAGE_TYPE_ZBLOB
;

86 
	g∑ge_ty≥
 = 
FIL_PAGE_TYPE_ZBLOB2
;

89 
mlog_wrôe_ulöt
(
blob_∑ge
 + 
FIL_PAGE_TYPE
, 
∑ge_ty≥
, 
MLOG_2BYTES
,

90 &
m_blob_må
);

95 
ulöt
 
ˇlc_tŸÆ_∑ges
() {

96 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
m_˘x
->
∑ge_size
();

99 c⁄° 
ulöt
 
	g∑ylﬂd_size_zù
 = 
∑ge_size
.
physiˇl
(Ë- 
FIL_PAGE_DATA
;

101 c⁄° 
big_ªc_t
 *
	gvec
 = 
m_˘x
->
gë_big_ªc_vec
();

103 
ulöt
 
	gtŸÆ_blob_∑ges
 = 0;

104 
ulöt
 
	gi
 = 0; i < 
	gvec
->
	gn_fõlds
; i++) {

105 
	gtŸÆ_blob_∑ges
 +=

106 
°©ic_ˇ°
<
ulöt
>(

107 
deÊ©eBound
(&
m_°ªam
, 
°©ic_ˇ°
<
uL⁄g
>(
vec
->
fõlds
[
i
].
Àn
)) +

108 
	g∑ylﬂd_size_zù
 - 1) /

109 
	g∑ylﬂd_size_zù
;

112  (
	gtŸÆ_blob_∑ges
);

117 
wrôe_öto_sögÀ_∑ge
();

120 
commô_blob_må
(Ë{ 
må_commô
(&
m_blob_må
); }

128 
wrôe_sögÀ_blob_∑ge
(
size_t
 
blob_j
, 
big_ªc_fõld_t
 &
fõld
,

129 
ulöt
 
¡h_blob_∑ge
);

135 
wrôe_fú°_∑ge
(
size_t
 
blob_j
, 
big_ªc_fõld_t
 &
fõld
);

140 
boﬁ
 
vÆid©e_blobªfs
() const {

141 c⁄° 
ulöt
 *
	goff£ts
 = 
m_˘x
->
gë_off£ts
();

143 
ulöt
 
	gi
 = 0; i < 
ªc_offs_n_fõlds
(
off£ts
); i++) {

144 i‡(!
ªc_offs_¡h_exã∫
(
off£ts
, 
i
)) {

148 
byã
 *
	gfõld_ªf
 = 
bå_ªc_gë_fõld_ªf
(
m_˘x
->
ªc
(), 
off£ts
, 
i
);

150 
ªf_t
 
blobªf
(
fõld_ªf
);

154 
ut_a
(!
blobªf
.
is_nuŒ
(Ë|| 
m_îr
 !
DB_SUCCESS
);

157 
ut_a
(
blobªf
.
is_ow√r
());

159  (
	gåue
);

165 
upd©e_Àngth_ö_blobªf
(
big_ªc_fõld_t
 &
fõld
);

171 
dbîr_t
 
£t_∑ge_√xt
();

177 
dbîr_t
 
wrôe_⁄e_smÆl_blob
(
size_t
 
blob_j
);

179 
	g¥iv©e
:

182 
add_to_blob_dú
(c⁄° 
blob_∑ge_öfo_t
 &
∑ge_öfo
) {

183 
m_dú
.
add
(
∑ge_öfo
);

186 
mem_hóp_t
 *
	gm_hóp
;

187 
z_°ªam
 
	gm_°ªam
;

190 
blob_dú_t
 
	gm_dú
;

193 
ölöe
 
	gzIn£πî
::~
	$zIn£πî
() {

194 i‡(
m_hóp
 !
nuŒ±r
) {

195 
	`mem_hóp_‰ì
(
m_hóp
);

197 
	}
}

	@lock0guards.h

27 #i‚de‡
lock0gu¨ds_h


28 
	#lock0gu¨ds_h


	)

30 
	~"lock0lock.h
"

31 
	~"ut0˛ass_li„_cy˛e.h
"

33 
«me•a˚
 
	glocksys
 {

39 ˛as†
	cGlobÆ_ex˛usive_œtch_gu¨d
 : 
¥iv©e
 
ut
::
N⁄_c›yabÀ
 {

40 
public
:

41 
GlobÆ_ex˛usive_œtch_gu¨d
();

42 ~
GlobÆ_ex˛usive_œtch_gu¨d
();

50 ˛as†
	cGlobÆ_ex˛usive_åy_œtch
 : 
¥iv©e
 
ut
::
N⁄_c›yabÀ
 {

51 
public
:

52 
GlobÆ_ex˛usive_åy_œtch
();

53 ~
GlobÆ_ex˛usive_åy_œtch
();

57 
boﬁ
 
owns_lock
(Ëc⁄° 
	gn€x˚±
 {  
	gm_owns_ex˛usive_globÆ_œtch
; }

59 
	g¥iv©e
:

61 
boﬁ
 
m_owns_ex˛usive_globÆ_œtch
;

70 ˛as†
	cGlobÆ_sh¨ed_œtch_gu¨d
 : 
¥iv©e
 
ut
::
N⁄_c›yabÀ
 {

71 
public
:

72 
GlobÆ_sh¨ed_œtch_gu¨d
();

73 ~
GlobÆ_sh¨ed_œtch_gu¨d
();

86 ˛as†
	cSh¨d_«ked_œtch_gu¨d
 : 
¥iv©e
 
ut
::
N⁄_c›yabÀ
 {

87 
ex∂icô
 
Sh¨d_«ked_œtch_gu¨d
(
Lock_muãx
 &
sh¨d_muãx
);

89 
	gpublic
:

90 
ex∂icô
 
Sh¨d_«ked_œtch_gu¨d
(c⁄° 
di˘_èbÀ_t
 &
èbÀ
);

92 
ex∂icô
 
Sh¨d_«ked_œtch_gu¨d
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

94 ~
Sh¨d_«ked_œtch_gu¨d
();

96 
	g¥iv©e
:

98 
Lock_muãx
 &
m_sh¨d_muãx
;

107 ˛as†
	cSh¨d_œtch_gu¨d
 {

108 
GlobÆ_sh¨ed_œtch_gu¨d
 
	gm_globÆ_sh¨ed_œtch_gu¨d
;

109 
Sh¨d_«ked_œtch_gu¨d
 
	gm_sh¨d_«ked_œtch_gu¨d
;

111 
	gpublic
:

112 
ex∂icô
 
Sh¨d_œtch_gu¨d
(c⁄° 
di˘_èbÀ_t
 &
èbÀ
)

113 : 
m_globÆ_sh¨ed_œtch_gu¨d
{}, 
	gm_sh¨d_«ked_œtch_gu¨d
{
	gèbÀ
} {}

115 
ex∂icô
 
Sh¨d_œtch_gu¨d
(c⁄° 
∑ge_id_t
 &
∑ge_id
)

116 : 
m_globÆ_sh¨ed_œtch_gu¨d
{}, 
	gm_sh¨d_«ked_œtch_gu¨d
{
	g∑ge_id
} {}

131 ˛as†
	cSh¨d_«ked_œtches_gu¨d
 {

132 
ex∂icô
 
Sh¨d_«ked_œtches_gu¨d
(
Lock_muãx
 &
sh¨d_muãx_a
,

133 
Lock_muãx
 &
sh¨d_muãx_b
);

135 
	gpublic
:

136 
ex∂icô
 
Sh¨d_«ked_œtches_gu¨d
(c⁄° 
buf_block_t
 &
block_a
,

137 c⁄° 
buf_block_t
 &
block_b
);

139 ~
Sh¨d_«ked_œtches_gu¨d
();

141 
	g¥iv©e
:

143 
Lock_muãx
 &
m_sh¨d_muãx_1
;

145 
	gLock_muãx
 &
	gm_sh¨d_muãx_2
;

147 
c⁄°ex¥
 
	g°d
::
Àss
<
Lock_muãx
 *> 
MUTEX_ORDER
{};

158 ˛as†
	cSh¨d_œtches_gu¨d
 {

159 
	gpublic
:

160 
ex∂icô
 
Sh¨d_œtches_gu¨d
(c⁄° 
buf_block_t
 &
block_a
,

161 c⁄° 
buf_block_t
 &
block_b
)

162 : 
m_globÆ_sh¨ed_œtch_gu¨d
{},

163 
	gm_sh¨d_«ked_œtches_gu¨d
{
	gblock_a
, 
	gblock_b
} {}

165 
	g¥iv©e
:

166 
GlobÆ_sh¨ed_œtch_gu¨d
 
m_globÆ_sh¨ed_œtch_gu¨d
;

167 
Sh¨d_«ked_œtches_gu¨d
 
	gm_sh¨d_«ked_œtches_gu¨d
;

	@lock0iter.h

33 #i‚de‡
lock0ôî_h


34 
	#lock0ôî_h


	)

36 
	~"lock0ty≥s.h
"

37 
	~"univ.i
"

39 
	slock_queue_ôî©‹_t
 {

40 c⁄° 
lock_t
 *
	mcuºít_lock
;

44 
ulöt
 
	mbô_no
;

55 
lock_queue_ôî©‹_ª£t
(

56 
lock_queue_ôî©‹_t
 *
ôî
,

57 c⁄° 
lock_t
 *
lock
,

58 
ulöt
 
bô_no
);

65 c⁄° 
lock_t
 *
lock_queue_ôî©‹_gë_¥ev
(

66 
lock_queue_ôî©‹_t
 *
ôî
);

	@lock0latches.h

26 #i‚de‡
lock0œtches_h


27 
	#lock0œtches_h


	)

29 
	~"sync0sh¨ded_rw.h
"

30 
	~"ut0˝u_ˇche.h
"

31 
	~"ut0muãx.h
"

34 
	gdi˘_èbÀ_t
;

35 
˛ass
 
	g∑ge_id_t
;

37 
«me•a˚
 
	glocksys
 {

101 ˛as†
	cL©ches
 {

102 
	g¥iv©e
:

103 
usög
 
Lock_muãx
 = 
ib_muãx_t
;

113 ˛as†
	cUnique_sh¨ded_rw_lock
 {

115 
Sh¨ded_rw_lock
 
	grw_lock
;

119 
c⁄°ex¥
 
size_t
 
	gNOT_IN_USE
 = 
°d
::
numîic_limôs
<size_t>::
max
();

123 
thªad_loˇl
 
size_t
 
	gm_sh¨d_id
;

125 
	gpublic
:

126 
Unique_sh¨ded_rw_lock
();

127 ~
Unique_sh¨ded_rw_lock
();

128 
boﬁ
 
åy_x_lock
(Ë{  
	grw_lock
.try_x_lock(); }

129 
x_lock
(Ë{ 
	grw_lock
.x_lock(); }

130 
x_u∆ock
(Ë{ 
	grw_lock
.x_unlock(); }

131 
s_lock
() {

132 
ut_ad
(
m_sh¨d_id
 =
NOT_IN_USE
);

133 
	gm_sh¨d_id
 = 
rw_lock
.
s_lock
();

135 
s_u∆ock
() {

136 
ut_ad
(
m_sh¨d_id
 !
NOT_IN_USE
);

137 
	grw_lock
.
s_u∆ock
(
m_sh¨d_id
);

138 
	gm_sh¨d_id
 = 
NOT_IN_USE
;

140 #ifde‡
UNIV_DEBUG


141 
boﬁ
 
x_own
(Ëc⁄° {  
	grw_lock
.x_own(); }

142 
boﬁ
 
s_own
() const {

143  
	gm_sh¨d_id
 !
NOT_IN_USE
 && 
rw_lock
.
s_own
(
m_sh¨d_id
);

148 
usög
 
	gPadded_muãx
 = 
ut
::
Cachñöe_∑dded
<
Lock_muãx
>;

152 
c⁄°ex¥
 
size_t
 
	gSHARDS_COUNT
 = 512;

162 ˛as†
	cPage_sh¨ds
 {

165 
Padded_muãx
 
	gmuãxes
[
SHARDS_COUNT
];

172 
size_t
 
gë_sh¨d
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

174 
	gpublic
:

175 
Page_sh¨ds
();

176 ~
Page_sh¨ds
();

184 c⁄° 
	gLock_muãx
 &
gë_muãx
(c⁄° 
∑ge_id_t
 &
∑ge_id
) const;

192 
	gLock_muãx
 &
gë_muãx
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

201 ˛as†
	cTabÀ_sh¨ds
 {

204 
Padded_muãx
 
	gmuãxes
[
SHARDS_COUNT
];

210 
size_t
 
gë_sh¨d
(c⁄° 
di˘_èbÀ_t
 &
èbÀ
);

212 
	gpublic
:

213 
TabÀ_sh¨ds
();

214 ~
TabÀ_sh¨ds
();

221 
	gLock_muãx
 &
gë_muãx
(c⁄° 
di˘_èbÀ_t
 &
èbÀ
);

228 c⁄° 
	gLock_muãx
 &
gë_muãx
(c⁄° 
di˘_èbÀ_t
 &
èbÀ
) const;

233 
	g∑d1
[
ut
::
INNODB_CACHE_LINE_SIZE
] = {};

235 
Unique_sh¨ded_rw_lock
 
	gglobÆ_œtch
;

237 
Page_sh¨ds
 
	g∑ge_sh¨ds
;

239 
TabÀ_sh¨ds
 
	gèbÀ_sh¨ds
;

241 
	gpublic
:

243 
‰õnd
 
˛ass
 
GlobÆ_ex˛usive_œtch_gu¨d
;

244 
‰õnd
 
˛ass
 
	gGlobÆ_ex˛usive_åy_œtch
;

245 
‰õnd
 
˛ass
 
	gGlobÆ_sh¨ed_œtch_gu¨d
;

246 
‰õnd
 
˛ass
 
	gSh¨d_«ked_œtch_gu¨d
;

247 
‰õnd
 
˛ass
 
	gSh¨d_«ked_œtches_gu¨d
;

254 
‰õnd
 
˛ass
 
	gUnß„_globÆ_œtch_m™ùuœt‹
;

267 ~
L©ches
() {}

269 #ifde‡
UNIV_DEBUG


274 
boﬁ
 
owns_ex˛usive_globÆ_œtch
(Ëc⁄° {  
	gglobÆ_œtch
.
x_own
(); }

280 
boﬁ
 
owns_sh¨ed_globÆ_œtch
(Ëc⁄° {  
	gglobÆ_œtch
.
s_own
(); }

288 
boﬁ
 
owns_∑ge_sh¨d
(c⁄° 
∑ge_id_t
 &
∑ge_id
) const {

289  
owns_ex˛usive_globÆ_œtch
() ||

290 (
	g∑ge_sh¨ds
.
gë_muãx
(
∑ge_id
).
is_ow√d
() &&

291 
owns_sh¨ed_globÆ_œtch
());

300 
boﬁ
 
owns_èbÀ_sh¨d
(c⁄° 
di˘_èbÀ_t
 &
èbÀ
) const {

301  
owns_ex˛usive_globÆ_œtch
() ||

302 (
	gèbÀ_sh¨ds
.
gë_muãx
(
èbÀ
).
is_ow√d
() &&

303 
owns_sh¨ed_globÆ_œtch
());

	@lock0lock.h

33 #i‚de‡
lock0lock_h


34 
	#lock0lock_h


	)

36 
	~"buf0ty≥s.h
"

37 
	~"di˘0ty≥s.h
"

38 
	~"hash0hash.h
"

39 
	~"lock0ty≥s.h
"

40 
	~"må0ty≥s.h
"

41 
	~"que0ty≥s.h
"

42 
	~"ªm0ty≥s.h
"

43 
	~"§v0§v.h
"

44 
	~"åx0ty≥s.h
"

45 
	~"univ.i
"

46 
	~"ut0vec.h
"

47 #i‚de‡
UNIV_HOTBACKUP


48 
	~"gis0πªe.h
"

50 
	~"lock0œtches.h
"

51 
	~"lock0¥dt.h
"

245 
˛ass
 
	gRódVõw
;

247 
boﬁ
 
önoba£_dódlock_dëe˘
;

251 
ulöt
 
lock_gë_size
();

253 
lock_sys_¸óã
(

254 
ulöt
 
n_˚Œs
);

258 
lock_sys_ªsize
(
ulöt
 
n_˚Œs
);

261 
lock_sys_˛o£
();

264 
UNIV_INLINE


265 
ulöt
 
lock_gë_mö_hóp_no
(c⁄° 
buf_block_t
 *
block
);

270 
lock_move_ª‹g™ize_∑ge
(

271 c⁄° 
buf_block_t
 *
block
,

273 c⁄° 
buf_block_t
 *
oblock
);

281 
lock_move_ªc_li°_íd
(c⁄° 
buf_block_t
 *
√w_block
,

282 c⁄° 
buf_block_t
 *
block
, c⁄° 
ªc_t
 *
ªc
);

291 
lock_move_ªc_li°_°¨t
(c⁄° 
buf_block_t
 *
√w_block
,

292 c⁄° 
buf_block_t
 *
block
, c⁄° 
ªc_t
 *
ªc
,

293 c⁄° 
ªc_t
 *
ﬁd_íd
);

298 
lock_upd©e_•lô_right
(c⁄° 
buf_block_t
 *
right_block
,

299 c⁄° 
buf_block_t
 *
À·_block
);

306 
lock_upd©e_mîge_right
(c⁄° 
buf_block_t
 *
right_block
,

307 c⁄° 
ªc_t
 *
‹ig_succ
,

308 c⁄° 
buf_block_t
 *
À·_block
);

316 
lock_upd©e_roŸ_øi£
(

317 c⁄° 
buf_block_t
 *
block
,

318 c⁄° 
buf_block_t
 *
roŸ
);

324 
lock_upd©e_c›y_™d_disˇrd
(c⁄° 
buf_block_t
 *
√w_block
,

325 c⁄° 
buf_block_t
 *
block
);

330 
lock_upd©e_•lô_À·
(c⁄° 
buf_block_t
 *
right_block
,

331 c⁄° 
buf_block_t
 *
À·_block
);

338 
lock_upd©e_mîge_À·
(c⁄° 
buf_block_t
 *
À·_block
,

339 c⁄° 
ªc_t
 *
‹ig_¥ed
,

340 c⁄° 
buf_block_t
 *
right_block
);

349 
lock_ªc_ª£t_™d_öhîô_g≠_locks
(c⁄° 
buf_block_t
 *
heú_block
,

350 c⁄° 
buf_block_t
 *
block
,

351 
ulöt
 
heú_hóp_no
, ulöà
hóp_no
);

357 
lock_upd©e_disˇrd
(c⁄° 
buf_block_t
 *
heú_block
, 
ulöt
 
heú_hóp_no
,

358 c⁄° 
buf_block_t
 *
block
);

363 
lock_upd©e_ö£π
(c⁄° 
buf_block_t
 *
block
, c⁄° 
ªc_t
 *
ªc
);

368 
lock_upd©e_dñëe
(c⁄° 
buf_block_t
 *
block
, c⁄° 
ªc_t
 *
ªc
);

376 
lock_ªc_°‹e_⁄_∑ge_öfimum
(

377 c⁄° 
buf_block_t
 *
block
,

378 c⁄° 
ªc_t
 *
ªc
);

390 
lock_ªc_ª°‹e_‰om_∑ge_öfimum
(c⁄° 
buf_block_t
 *
block
,

391 c⁄° 
ªc_t
 *
ªc
,

392 c⁄° 
buf_block_t
 *
d⁄©‹
);

397 
boﬁ
 
	$lock_ªc_ex∂_exi°_⁄_∑ge
(c⁄° 
∑ge_id_t
 &
∑ge_id
)

398 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

405 
dbîr_t
 
	$lock_ªc_ö£π_check_™d_lock
(

406 
ulöt
 
Êags
,

408 c⁄° 
ªc_t
 *
ªc
,

409 
buf_block_t
 *
block
,

410 
di˘_ödex_t
 *
ödex
,

411 
que_thr_t
 *
thr
,

412 
må_t
 *
må
,

413 
iboﬁ
 *
öhîô
)

417 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

426 
dbîr_t
 
	$lock_˛u°_ªc_modify_check_™d_lock
(

427 
ulöt
 
Êags
,

429 c⁄° 
buf_block_t
 *
block
,

430 c⁄° 
ªc_t
 *
ªc
,

432 
di˘_ödex_t
 *
ödex
,

433 c⁄° 
ulöt
 *
off£ts
,

434 
que_thr_t
 *
thr
)

435 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

439 
dbîr_t
 
	$lock_£c_ªc_modify_check_™d_lock
(

440 
ulöt
 
Êags
,

442 
buf_block_t
 *
block
,

443 c⁄° 
ªc_t
 *
ªc
,

448 
di˘_ödex_t
 *
ödex
,

449 
que_thr_t
 *
thr
,

451 
må_t
 *
må
)

452 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

457 
	`lock_⁄_°©emít_íd
(
åx_t
 *
åx
);

460 ˛as†
	clock_duøti⁄_t
 {

464 
REGULAR
 = 0,

467 
AT_LEAST_STATEMENT
 = 1,

491 
dbîr_t
 
	`lock_£c_ªc_ªad_check_™d_lock
(
lock_duøti⁄_t
 
duøti⁄
,

492 c⁄° 
buf_block_t
 *
block
,

493 c⁄° 
ªc_t
 *
ªc
, 
di˘_ödex_t
 *
ödex
,

494 c⁄° 
ulöt
 *
off£ts
,

495 
£À˘_mode
 
£l_mode
, 
lock_mode
 
mode
,

496 
ulöt
 
g≠_mode
, 
que_thr_t
 *
thr
);

523 
dbîr_t
 
	`lock_˛u°_ªc_ªad_check_™d_lock
(

524 
lock_duøti⁄_t
 
duøti⁄
, c⁄° 
buf_block_t
 *
block
, c⁄° 
ªc_t
 *
ªc
,

525 
di˘_ödex_t
 *
ödex
, c⁄° 
ulöt
 *
off£ts
, 
£À˘_mode
 
£l_mode
,

526 
lock_mode
 
mode
, 
ulöt
 
g≠_mode
, 
que_thr_t
 *
thr
);

537 
dbîr_t
 
	$lock_˛u°_ªc_ªad_check_™d_lock_Æt
(

538 c⁄° 
buf_block_t
 *
block
,

539 c⁄° 
ªc_t
 *
ªc
,

543 
di˘_ödex_t
 *
ödex
,

544 
lock_mode
 
mode
,

549 
ulöt
 
g≠_mode
,

551 
que_thr_t
 *
thr
)

552 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

556 
boﬁ
 
	`lock_˛u°_ªc_c⁄s_ªad_£es
(

557 c⁄° 
ªc_t
 *
ªc
,

559 
di˘_ödex_t
 *
ödex
,

560 c⁄° 
ulöt
 *
off£ts
,

561 
RódVõw
 *
võw
);

571 
boﬁ
 
	$lock_£c_ªc_c⁄s_ªad_£es
(

572 c⁄° 
ªc_t
 *
ªc
,

575 c⁄° 
di˘_ödex_t
 *
ödex
,

576 c⁄° 
RódVõw
 *
võw
)

577 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

581 
dbîr_t
 
	$lock_èbÀ
(
ulöt
 
Êags
,

583 
di˘_èbÀ_t
 *
èbÀ
,

585 
lock_mode
 
mode
,

586 
que_thr_t
 *
thr
)

587 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

592 
	`lock_èbÀ_ix_ªsuºe˘
(
di˘_èbÀ_t
 *
èbÀ
, 
åx_t
 *
åx
);

599 
dbîr_t
 
	$lock_èbÀ_f‹_åx
(
di˘_èbÀ_t
 *
èbÀ
, 
åx_t
 *
åx
, 
lock_mode
 
mode
)

600 
	`MY_ATTRIBUTE
((
n⁄nuŒ
, 
w¨n_unu£d_ªsu…
));

605 
	`lock_ªc_u∆ock
(

606 
åx_t
 *
åx
,

608 c⁄° 
buf_block_t
 *
block
,

609 c⁄° 
ªc_t
 *
ªc
,

610 
lock_mode
Üock_mode);

614 
	`lock_åx_ªÀa£_locks
(
åx_t
 *
åx
);

620 
	`lock_åx_ªÀa£_ªad_locks
(
åx_t
 *
åx
, 
boﬁ
 
⁄ly_g≠
);

634 
	`lock_make_åx_hô_li°
(
åx_t
 *
åx
, 
hô_li°_t
 &
hô_li°
);

640 
	`lock_ªmove_Æl_⁄_èbÀ
(

641 
di˘_èbÀ_t
 *
èbÀ
,

643 
iboﬁ
 
ªmove_Æso_èbÀ_sx_locks
);

650 
UNIV_INLINE


651 
ulöt
 
	`lock_ªc_fﬁd
(c⁄° 
∑ge_id_t
 
∑ge_id
);

657 
UNIV_INLINE


658 
ulöt
 
	`lock_ªc_hash
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

661 
UNIV_INLINE


662 
hash_èbÀ_t
 *
	`lock_hash_gë
(
ulöt
 
mode
);

668 
ulöt
 
	`lock_ªc_föd_£t_bô
(c⁄° 
lock_t
 *
lock
);

676 
ulöt
 
	`lock_ªc_föd_√xt_£t_bô
(c⁄° 
lock_t
 *
lock
, ulöà
hóp_no
);

680 
boﬁ
 
	`lock_has_to_waô
(c⁄° 
lock_t
 *
lock1
,

681 c⁄° 
lock_t
 *
lock2
);

692 
	`lock_ªp‹t_åx_id_ößnôy
(
åx_id_t
 
åx_id
, c⁄° 
ªc_t
 *
ªc
,

693 c⁄° 
di˘_ödex_t
 *
ödex
,

694 c⁄° 
ulöt
 *
off£ts
, 
åx_id_t
 
max_åx_id
);

698 
	`lock_¥öt_öfo_summ¨y
(
FILE
 *
fûe
);

703 
	`lock_åx_¥öt_waô_™d_mvcc_°©e
(
FILE
 *
fûe
, c⁄° 
åx_t
 *
åx
);

709 
	`lock_¥öt_öfo_Æl_å™ß˘i⁄s
(
FILE
 *
fûe
);

717 
ulöt
 
	$lock_numbî_of_rows_locked
(c⁄° 
åx_lock_t
 *
åx_lock
)

718 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

723 
ulöt
 
	$lock_numbî_of_èbÀs_locked
(c⁄° 
åx_t
 *
åx
)

724 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

729 
uöt32_t
 
	`lock_gë_ty≥
(c⁄° 
lock_t
 *
lock
);

734 
åx_id_t
 
	`lock_gë_åx_id
(c⁄° 
lock_t
 *
lock
);

739 
uöt64_t
 
	`lock_gë_åx_immuèbÀ_id
(c⁄° 
lock_t
 *
lock
);

744 
uöt64_t
 
	`lock_gë_immuèbÀ_id
(c⁄° 
lock_t
 *
lock
);

752 
	`lock_gë_psi_evít
(c⁄° 
lock_t
 *
lock
, 
ul⁄gl⁄g
 *
thªad_id
,

753 
ul⁄gl⁄g
 *
evít_id
);

759 c⁄° 
lock_t
 *
	`lock_gë_fú°_åx_locks
(c⁄° 
åx_lock_t
 *
åx_lock
);

765 c⁄° 
lock_t
 *
	`lock_gë_√xt_åx_locks
(c⁄°Üock_à*
lock
);

770 c⁄° *
	`lock_gë_mode_°r
(c⁄° 
lock_t
 *
lock
);

775 c⁄° *
	`lock_gë_ty≥_°r
(c⁄° 
lock_t
 *
lock
);

779 
èbÀ_id_t
 
	`lock_gë_èbÀ_id
(c⁄° 
lock_t
 *
lock
);

784 c⁄° 
èbÀ_«me_t
 &
	`lock_gë_èbÀ_«me
(c⁄° 
lock_t
 *
lock
);

788 c⁄° 
di˘_ödex_t
 *
	`lock_ªc_gë_ödex
(c⁄° 
lock_t
 *
lock
);

793 c⁄° *
	`lock_ªc_gë_ödex_«me
(c⁄° 
lock_t
 *
lock
);

798 
∑ge_id_t
 
	`lock_ªc_gë_∑ge_id
(c⁄° 
lock_t
 *
lock
);

805 
boﬁ
 
	`lock_èbÀ_has_locks
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

808 
	`lock_waô_timeout_thªad
();

813 
	`lock_waô_ªque°_check_f‹_cy˛es
();

820 
	`lock_waô_su•íd_thªad
(
que_thr_t
 *
thr
);

825 
	`lock_u∆ock_èbÀ_autoöc
(
åx_t
 *
åx
);

830 
dbîr_t
 
	`lock_åx_h™dÀ_waô
(
åx_t
 *
åx
);

832 
	`lock_åx_lock_li°_öô
(

833 
åx_lock_li°_t
 *
lock_li°
);

836 
	`lock_£t_timeout_evít
();

837 #ifde‡
UNIV_DEBUG


840 
boﬁ
 
	$lock_check_åx_id_ßnôy
(

841 
åx_id_t
 
åx_id
,

842 c⁄° 
ªc_t
 *
ªc
,

843 c⁄° 
di˘_ödex_t
 *
ödex
,

844 c⁄° 
ulöt
 *
off£ts
)

845 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

853 
boﬁ
 
	$lock_åx_has_ªc_x_lock
(
que_thr_t
 *
thr
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

854 c⁄° 
buf_block_t
 *
block
, 
ulöt
 
hóp_no
)

855 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

859 
boﬁ
 
	`lock_vÆid©e
();

865 
	`lock_åx_Æloc_locks
(
åx_t
 *
åx
);

869 
	#LOCK_MODE_MASK
 \

870 0xFUL

	)

873 
	#LOCK_TABLE
 16

	)

874 
	#LOCK_REC
 32

	)

875 
	#LOCK_TYPE_MASK
 \

876 0xF0UL

	)

878 #i‡
LOCK_MODE_MASK
 & 
LOCK_TYPE_MASK


882 
	#LOCK_WAIT
 \

883 256

	)

888 
	#LOCK_ORDINARY
 \

889 0

	)

892 
	#LOCK_GAP
 \

893 512

	)

900 
	#LOCK_REC_NOT_GAP
 \

901 1024

	)

909 
	#LOCK_INSERT_INTENTION
 \

910 2048

	)

918 
	#LOCK_PREDICATE
 8192

	)

919 
	#LOCK_PRDT_PAGE
 16384

	)

921 #i‡(
LOCK_WAIT
 | 
LOCK_GAP
 | 
LOCK_REC_NOT_GAP
 | 
LOCK_INSERT_INTENTION
 | \

922 
LOCK_PREDICATE
 | 
LOCK_PRDT_PAGE
) & \

923 
LOCK_MODE_MASK


926 #i‡(
LOCK_WAIT
 | 
LOCK_GAP
 | 
LOCK_REC_NOT_GAP
 | 
LOCK_INSERT_INTENTION
 | \

927 
LOCK_PREDICATE
 | 
LOCK_PRDT_PAGE
) & \

928 
LOCK_TYPE_MASK


934 
	slock_›_t
 {

935 
di˘_èbÀ_t
 *
èbÀ
;

936 
lock_mode
 
mode
;

939 
ib_muãx_t
 
	tLock_muãx
;

942 
	slock_sys_t
 {

944 
locksys
::
L©ches
 
œtches
;

948 
hash_èbÀ_t
 *
ªc_hash
;

951 
hash_èbÀ_t
 *
¥dt_hash
;

954 
hash_èbÀ_t
 *
¥dt_∑ge_hash
;

957 
∑d2
[
ut
::
INNODB_CACHE_LINE_SIZE
];

960 
Lock_muãx
 
waô_muãx
;

964 
§v_¶Ÿ_t
 *
waôög_thªads
;

968 
§v_¶Ÿ_t
 *
œ°_¶Ÿ
;

972 
boﬁ
 
rﬁlback_com∂ëe
;

975 
ulöt
 
n_lock_max_waô_time
;

979 
os_evít_t
 
timeout_evít
;

981 #ifde‡
UNIV_DEBUG


983 
°d
::
©omic
<
uöt64_t
> 
m_£q
;

997 
	`lock_ªc_c⁄vît_a˘ive_im∂_to_ex∂
(c⁄° 
buf_block_t
 *
block
,

998 c⁄° 
ªc_t
 *
ªc
, 
di˘_ödex_t
 *
ödex
,

999 c⁄° 
ulöt
 *
off£ts
, 
åx_t
 *
åx
,

1000 
ulöt
 
hóp_no
);

1003 
	`lock_ªc_disˇrd
(
lock_t
 *
ö_lock
);

1013 
	`lock_πr_move_ªc_li°
(c⁄° 
buf_block_t
 *
√w_block
,

1014 c⁄° 
buf_block_t
 *
block
, 
πr_ªc_move_t
 *
ªc_move
,

1015 
ulöt
 
num_move
);

1020 
	`lock_ªc_‰ì_Æl_‰om_disˇrd_∑ge
(

1021 c⁄° 
buf_block_t
 *
block
);

1027 
	`lock_ªc_åx_waô
(
lock_t
 *
lock
, 
ulöt
 
i
, ulöà
ty≥
);

1030 
lock_sys_t
 *
lock_sys
;

1032 #ifde‡
UNIV_DEBUG


1034 
	#lock_waô_muãx_own
(Ë(
lock_sys
->
waô_muãx
.
	`is_ow√d
())

	)

1039 
	#lock_waô_muãx_íãr
() \

1041 
	`muãx_íãr
(&
lock_sys
->
waô_muãx
); \

1042 
	}
} 0)

	)

1045 
	#lock_waô_muãx_exô
() \

1047 
lock_sys
->
waô_muãx
.
	`exô
(); \

1048 } 0)

	)

1050 
	~"lock0lock.ic
"

1052 
«me•a˚
 
	glocksys
 {

1055 #ifde‡
UNIV_DEBUG


1061 
boﬁ
 
owns_ex˛usive_globÆ_œtch
();

1067 
boﬁ
 
owns_sh¨ed_globÆ_œtch
();

1075 
boﬁ
 
owns_∑ge_sh¨d
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

1083 
boﬁ
 
owns_èbÀ_sh¨d
(c⁄° 
di˘_èbÀ_t
 &
èbÀ
);

1091 
boﬁ
 
owns_lock_sh¨d
(c⁄° 
lock_t
 *
lock
);

1097 
	~"lock0gu¨ds.h
"

	@lock0lock.ic

33 
	~"bå0cur.h
"

34 
	~"buf0buf.h
"

35 
	~"di˘0di˘.h
"

36 
	~"log0ªcv.h
"

37 
	~"∑ge0cur.h
"

38 
	~"∑ge0∑ge.h
"

39 
	~"que0que.h
"

40 
	~"ªad0ªad.h
"

41 
	~"row0row.h
"

42 
	~"row0vîs.h
"

43 
	~"§v0§v.h
"

44 
	~"åx0sys.h
"

45 
	~"åx0åx.h
"

47 
UNIV_INLINE


48 
ulöt
 
	$lock_ªc_fﬁd
(c⁄° 
∑ge_id_t
 
∑ge_id
) {

49  (
	`ut_fﬁd_ulöt_∑ú
(
∑ge_id
.
	`•a˚
(),Öage_id.
	`∑ge_no
()));

50 
	}
}

52 
UNIV_INLINE


53 
ulöt
 
	$lock_ªc_hash
(c⁄° 
∑ge_id_t
 &
∑ge_id
) {

54  (
	`hash_ˇlc_hash
(
	`lock_ªc_fﬁd
(
∑ge_id
), 
lock_sys
->
ªc_hash
));

55 
	}
}

59 
UNIV_INLINE


60 
ulöt
 
	$lock_gë_mö_hóp_no
(c⁄° 
buf_block_t
 *
block
)

62 c⁄° 
∑ge_t
 *
∑ge
 = 
block
->
‰ame
;

64 i‡(
	`∑ge_is_comp
(
∑ge
)) {

65  (
	`ªc_gë_hóp_no_√w
(

66 
∑ge
 + 
	`ªc_gë_√xt_offs
’agê+ 
PAGE_NEW_INFIMUM
, 
TRUE
)));

68  (
	`ªc_gë_hóp_no_ﬁd
(

69 
∑ge
 + 
	`ªc_gë_√xt_offs
’agê+ 
PAGE_OLD_INFIMUM
, 
FALSE
)));

71 
	}
}

74 
UNIV_INLINE


75 
hash_èbÀ_t
 *
	$lock_hash_gë
(
ulöt
 
mode
)

77 i‡(
mode
 & 
LOCK_PREDICATE
) {

78  (
lock_sys
->
¥dt_hash
);

79 } i‡(
mode
 & 
LOCK_PRDT_PAGE
) {

80  (
lock_sys
->
¥dt_∑ge_hash
);

82  (
lock_sys
->
ªc_hash
);

84 
	}
}

	@lock0prdt.h

32 #i‚de‡
lock0¥dt_h


33 
	#lock0¥dt_h


	)

35 
	~"lock0lock.h
"

36 
	~"univ.i
"

39 
	slock_¥dt
 {

40 *
	md©a
;

41 
uöt16
 
	m›
;

42 } 
	tlock_¥dt_t
;

46 
dbîr_t
 
lock_¥dt_lock
(
buf_block_t
 *
block
,

47 
lock_¥dt_t
 *
¥dt
,

48 
di˘_ödex_t
 *
ödex
,

49 
lock_mode
 
mode
,

54 
ulöt
 
ty≥_mode
,

56 
que_thr_t
 *
thr
,

58 
må_t
 *
må
);

65 
dbîr_t
 
lock_∂a˚_¥dt_∑ge_lock
(c⁄° 
∑ge_id_t
 &
∑ge_id
, 
di˘_ödex_t
 *
ödex
,

66 
que_thr_t
 *
thr
);

69 
lock_öô_¥dt_‰om_mbr
(

70 
lock_¥dt_t
 *
¥dt
,

71 
πr_mbr_t
 *
mbr
,

72 
ulöt
 
mode
,

73 
mem_hóp_t
 *
hóp
);

77 
lock_¥dt_t
 *
lock_gë_¥dt_‰om_lock
(c⁄° 
lock_t
 *
lock
);

82 
boﬁ
 
lock_¥dt_has_to_waô
(

83 c⁄° 
åx_t
 *
åx
,

84 
ulöt
 
ty≥_mode
,

88 
lock_¥dt_t
 *
¥dt
,

89 c⁄° 
lock_t
 *
lock2
);

101 
lock_¥dt_upd©e_•lô
(
buf_block_t
 *
block
, buf_block_à*
√w_block
,

102 
lock_¥dt_t
 *
¥dt
,Üock_¥dt_à*
√w_¥dt
);

115 
lock_¥dt_upd©e_∑ª¡
(
buf_block_t
 *
À·_block
, buf_block_à*
right_block
,

116 
lock_¥dt_t
 *
À·_¥dt
,Üock_¥dt_à*
right_¥dt
,

117 
lock_¥dt_t
 *
∑ª¡_¥dt
,

118 c⁄° 
∑ge_id_t
 &
∑ge_id
);

123 
dbîr_t
 
lock_¥dt_ö£π_check_™d_lock
(

124 
ulöt
 
Êags
,

126 c⁄° 
ªc_t
 *
ªc
,

127 
buf_block_t
 *
block
,

128 
di˘_ödex_t
 *
ödex
,

129 
que_thr_t
 *
thr
,

130 
må_t
 *
må
,

131 
lock_¥dt_t
 *
¥dt
);

136 
lock_¥dt_£t_¥dt
(
lock_t
 *
lock
, c⁄° 
lock_¥dt_t
 *
¥dt
);

143 
UNIV_INLINE


144 
πr_mbr_t
*

145 
¥dt_gë_mbr_‰om_¥dt
(

146 c⁄° 
lock_¥dt_t
* 
¥dt
);

151 
lock_¥dt_ªc_move
(

152 c⁄° 
buf_block_t
 *
ª˚ivî
,

154 c⁄° 
buf_block_t
 *
d⁄©‹
);

162 
boﬁ
 
lock_ã°_¥dt_∑ge_lock
(c⁄° 
åx_t
 *
åx
, c⁄° 
∑ge_id_t
 &
∑ge_id
);

167 
lock_¥dt_∑ge_‰ì_‰om_disˇrd
(c⁄° 
buf_block_t
 *
block
,

168 
hash_èbÀ_t
 *
lock_hash
);

	@lock0priv.h

33 #i‚de‡
lock0¥iv_h


34 
	#lock0¥iv_h


	)

36 #i‚de‡
LOCK_MODULE_IMPLEMENTATION


40 #îr‹ 
Do
 
nŸ
 
ö˛ude
 
lock0¥iv
.
h
 
outside
 
of
 
the
 
lock
/ 
moduÀ


43 
	~"di˘0ty≥s.h
"

44 
	~"hash0hash.h
"

45 
	~"åx0ty≥s.h
"

46 
	~"univ.i
"

48 
	~<utûôy
>

51 
	slock_èbÀ_t
 {

52 
di˘_èbÀ_t
 *
	mèbÀ
;

54 
UT_LIST_NODE_T
(
lock_t
)

55 
	mlocks
;

60 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

66 
ölöe
 
	g°d
::
o°ªam
 &
lock_èbÀ_t
::
	$¥öt
(
°d
::
o°ªam
 &
out
) const {

67 
out
 << "[lock_èbÀ_t:Çame=" << 
èbÀ
->
«me
 << "]";

68  (
out
);

69 
	}
}

76 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	glock_èbÀ_t
 &
	glock
) {

77  (
	glock
.
¥öt
(
out
));

81 
	slock_ªc_t
 {

84 
∑ge_id_t
 
	m∑ge_id
;

87 
uöt32_t
 
	mn_bôs
;

92 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

98 
ölöe
 
	g°d
::
o°ªam
 &
lock_ªc_t
::
	$¥öt
(
°d
::
o°ªam
 &
out
) const {

99  
out
 << "[lock_ªc_t:Öage_id=" << 
∑ge_id
 << ",Ç_bôs=" << 
n_bôs


101 
	}
}

103 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	glock_ªc_t
 &
	glock
) {

104  (
	glock
.
¥öt
(
out
));

113 
UNIV_INLINE


114 
boﬁ
 
	$lock_mode_is_√xt_key_lock
(
ulöt
 
mode
) {

115 
	`°©ic_as£π
(
LOCK_ORDINARY
 == 0, "LOCK_ORDINARY must be 0 (no flags)");

116 
	`ut_ad
((
mode
 & 
LOCK_WAIT
) == 0);

117 
	`ut_ad
((
mode
 & 
LOCK_TYPE_MASK
) == 0);

118 
	`ut_ad
(((
mode
 & ~(
LOCK_MODE_MASK
)Ë=
LOCK_ORDINARY
) ==

119 (
mode
 =
LOCK_S
 || modê=
LOCK_X
));

120  (
mode
 & ~(
LOCK_MODE_MASK
)Ë=
LOCK_ORDINARY
;

121 
	}
}

127 
UNIV_INLINE


128 
boﬁ
 
lock_ªc_gë_¡h_bô
(c⁄° 
lock_t
 *
lock
, 
ulöt
 
i
);

131 
	slock_t
 {

133 
åx_t
 *
	måx
;

136 
UT_LIST_NODE_T
(
lock_t
Ë
	måx_locks
;

139 
di˘_ödex_t
 *
	mödex
;

143 
lock_t
 *
	mhash
;

147 
lock_èbÀ_t
 
	mèb_lock
;

150 
lock_ªc_t
 
	mªc_lock
;

153 #ifde‡
HAVE_PSI_THREAD_INTERFACE


154 #ifde‡
HAVE_PSI_DATA_LOCK_INTERFACE


156 
ul⁄gl⁄g
 
	mm_psi_öã∫Æ_thªad_id
;

159 
ul⁄gl⁄g
 
	mm_psi_evít_id
;

165 
uöt32_t
 
	mty≥_mode
;

167 #i‡
deföed
(
UNIV_DEBUG
)

169 
uöt64_t
 
	mm_£q
;

173 
u∆ock_g≠_lock
() {

174 
ut_ad
(!
is_g≠
());

175 
ut_ad
(!
is_ö£π_öã¡i⁄
());

176 
ut_ad
(
is_√xt_key_lock
());

178 
	mty≥_mode
 |
LOCK_REC_NOT_GAP
;

183 
boﬁ
 
is_ªc‹d_lock
(Ëc⁄° {  (
ty≥
(Ë=
LOCK_REC
); }

187 
boﬁ
 
is_¥ediˇã
() const {

188  (
	mty≥_mode
 & (
	mLOCK_PREDICATE
 | 
	mLOCK_PRDT_PAGE
));

192 
boﬁ
 
is_waôög
(Ëc⁄° {  (
	mty≥_mode
 & 
	mLOCK_WAIT
); }

195 
boﬁ
 
is_g≠
(Ëc⁄° {  (
	mty≥_mode
 & 
	mLOCK_GAP
); }

198 
boﬁ
 
is_ªc‹d_nŸ_g≠
(Ëc⁄° {  (
	mty≥_mode
 & 
	mLOCK_REC_NOT_GAP
); }

201 
boﬁ
 
is_√xt_key_lock
() const {

202  
is_ªc‹d_lock
() &&

203 
lock_mode_is_√xt_key_lock
(
ty≥_mode
 & ~(
LOCK_WAIT
 | 
LOCK_REC
));

207 
boﬁ
 
is_ö£π_öã¡i⁄
() const {

208  (
	mty≥_mode
 & 
	mLOCK_INSERT_INTENTION
);

212 
boﬁ
 
ö˛udes_su¥emum
() const {

213  (
lock_ªc_gë_¡h_bô
(
this
, 
PAGE_HEAP_NO_SUPREMUM
));

217 
uöt32_t
 
ty≥
(Ëc⁄° {  (
	mty≥_mode
 & 
	mLOCK_TYPE_MASK
); }

220 
lock_mode
 
mode
() const {

221  (
	m°©ic_ˇ°
<
	mlock_mode
>(
	mty≥_mode
 & 
	mLOCK_MODE_MASK
));

226 
hash_èbÀ_t
 *
hash_èbÀ
(Ëc⁄° {  (
lock_hash_gë
(
ty≥_mode
)); }

229 
åx_que_t
 
åx_que_°©e
(Ëc⁄° {  (
	måx
->
	mlock
.
	mque_°©e
); }

234 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

238 
	m°d
::
°rög
 
ty≥_mode_°rög
() const;

241 c⁄° *
ty≥_°rög
() const {

242 
	mty≥_mode
 & 
	mLOCK_TYPE_MASK
) {

243 
	mLOCK_REC
:

245 
	mLOCK_TABLE
:

248 
ut_îr‹
;

255 
ölöe
 
	g°d
::
°rög
 
lock_t
::
	$ty≥_mode_°rög
() const {

256 
°d
::
o°rög°ªam
 
sout
;

257 
sout
 << 
	`ty≥_°rög
();

258 
sout
 << " | " << 
	`lock_mode_°rög
(
	`mode
());

260 i‡(
	`is_ªc‹d_nŸ_g≠
()) {

261 
sout
 << " | LOCK_REC_NOT_GAP";

264 i‡(
	`is_waôög
()) {

265 
sout
 << " | LOCK_WAIT";

268 i‡(
	`is_g≠
()) {

269 
sout
 << " | LOCK_GAP";

272 i‡(
	`is_ö£π_öã¡i⁄
()) {

273 
sout
 << " | LOCK_INSERT_INTENTION";

275  (
sout
.
	`°r
());

276 
	}
}

278 
ölöe
 
	g°d
::
o°ªam
 &
lock_t
::
	$¥öt
(
°d
::
o°ªam
 &
out
) const {

279 
out
 << "[lock_t:Åy≥_mode=" << 
ty≥_mode
 << "(" << 
	`ty≥_mode_°rög
() << ")";

281 i‡(
	`is_ªc‹d_lock
()) {

282 
out
 << 
ªc_lock
;

284 
out
 << 
èb_lock
;

287 
out
 << "]";

288  (
out
);

289 
	}
}

291 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	glock_t
 &
	glock
) {

292  (
	glock
.
¥öt
(
out
));

295 #ifde‡
UNIV_DEBUG


296 
iboﬁ
 
lock_¥öt_waôs
;

303 c⁄° 
ulöt
 
	gLOCK_PAGE_BITMAP_MARGIN
 = 64;

554 c⁄° 
byã
 
	glock_com∑tibûôy_m©rix
[5][5] = {

556  {
TRUE
, TRUE, TRUE, 
FALSE
, TRUE},

557  {
TRUE
, TRUE, 
FALSE
, FALSE, TRUE},

558  {
TRUE
, 
FALSE
, TRUE, FALSE, FALSE},

559  {
FALSE
, FALSE, FALSE, FALSE, FALSE},

560  {
TRUE
, TRUE, 
FALSE
, FALSE, FALSE}};

571 c⁄° 
byã
 
	glock_°ªngth_m©rix
[5][5] = {

573  {
TRUE
, 
FALSE
, FALSE, FALSE, FALSE},

574  {
TRUE
, TRUE, 
FALSE
, FALSE, FALSE},

575  {
TRUE
, 
FALSE
, TRUE, FALSE, FALSE},

576  {
TRUE
, TRUE, TRUE, TRUE, TRUE},

577  {
FALSE
, FALSE, FALSE, FALSE, 
TRUE
}};

580 c⁄° 
ulöt
 
	gMAX_STACK_SIZE
 = 4096;

582 
	#PRDT_HEAPNO
 
PAGE_HEAP_NO_INFIMUM


	)

584 
	elock_ªc_ªq_°©us
 {

586 
	mLOCK_REC_FAIL
,

588 
	mLOCK_REC_SUCCESS
,

590 
	mLOCK_REC_SUCCESS_CREATED


595 
	sRecID
 {

599 
RecID
(c⁄° 
lock_t
 *
lock
, 
ulöt
 
hóp_no
)

600 : 
RecID
(
lock
->
ªc_lock
.
∑ge_id
, 
hóp_no
) {

601 
ut_ad
(
lock
->
is_ªc‹d_lock
());

607 
RecID
(
∑ge_id_t
 
∑ge_id
, 
uöt32_t
 
hóp_no
)

608 : 
m_∑ge_id
(
∑ge_id
), 
m_hóp_no
(
hóp_no
), 
m_fﬁd
(
lock_ªc_fﬁd
(page_id)) {

609 
ut_ad
(
m_∑ge_id
.
•a˚
(Ë< 
UINT32_MAX
);

610 
ut_ad
(
m_∑ge_id
.
∑ge_no
(Ë< 
UINT32_MAX
);

611 
ut_ad
(
m_hóp_no
 < 
UINT32_MAX
);

617 
RecID
(c⁄° 
buf_block_t
 *
block
, 
ulöt
 
hóp_no
)

618 : 
RecID
(
block
->
gë_∑ge_id
(), 
hóp_no
) {}

622 
ulöt
 
fﬁd
(Ëc⁄° {  (
	mm_fﬁd
); }

625 
boﬁ
 
is_su¥emum
(Ëc⁄° {  (
	mm_hóp_no
 =
PAGE_HEAP_NO_SUPREMUM
); }

630 
ölöe
 
boﬁ
 
m©ches
(c⁄° 
lock_t
 *
lock
) const;

632 c⁄° 
	m∑ge_id_t
 &
gë_∑ge_id
(Ëc⁄° {  
	mm_∑ge_id
; }

635 
∑ge_id_t
 
	mm_∑ge_id
;

639 
uöt32_t
 
	mm_hóp_no
;

643 
ulöt
 
	mm_fﬁd
;

648 ˛as†
	cRecLock
 {

649 
	mpublic
:

656 
	$RecLock
(
que_thr_t
 *
thr
, 
di˘_ödex_t
 *
ödex
, c⁄° 
RecID
 &
ªc_id
, 
ulöt
 
mode
)

657 : 
	`m_thr
(
thr
),

658 
	`m_åx
(
	`thr_gë_åx
(
thr
)),

659 
	`m_mode
(
mode
),

660 
	`m_ödex
(
ödex
),

661 
	$m_ªc_id
(
ªc_id
) {

662 
	`ut_ad
(
	`is_¥ediˇã_lock
(
m_mode
));

664 
	`öô
(
nuŒ±r
);

675 
	$RecLock
(
que_thr_t
 *
thr
, 
di˘_ödex_t
 *
ödex
, c⁄° 
buf_block_t
 *
block
,

676 
ulöt
 
hóp_no
, ulöà
mode
, 
lock_¥dt_t
 *
¥dt
 = 
nuŒ±r
)

677 : 
	`m_thr
(
thr
),

678 
	`m_åx
(
	`thr_gë_åx
(
thr
)),

679 
	`m_mode
(
mode
),

680 
	`m_ödex
(
ödex
),

681 
	$m_ªc_id
(
block
, 
hóp_no
) {

682 
	`bå_as£π_nŸ_c‹ru±ed
(
block
, 
ödex
);

684 
	`öô
(
block
->
‰ame
);

685 
	}
}

691 
	$RecLock
(
di˘_ödex_t
 *
ödex
, c⁄° 
RecID
 &
ªc_id
, 
ulöt
 
mode
)

692 : 
	`m_thr
(), 
	`m_åx
(), 
	`m_mode
(
mode
), 
	`m_ödex
(
ödex
), 
	$m_ªc_id
(
ªc_id
) {

693 
	`ut_ad
(
	`is_¥ediˇã_lock
(
m_mode
));

695 
	`öô
(
nuŒ±r
);

696 
	}
}

703 
	$RecLock
(
di˘_ödex_t
 *
ödex
, c⁄° 
buf_block_t
 *
block
, 
ulöt
 
hóp_no
,

704 
ulöt
 
mode
)

705 : 
	`m_thr
(),

706 
	`m_åx
(),

707 
	`m_mode
(
mode
),

708 
	`m_ödex
(
ödex
),

709 
	$m_ªc_id
(
block
, 
hóp_no
) {

710 
	`bå_as£π_nŸ_c‹ru±ed
(
block
, 
ödex
);

712 
	`öô
(
block
->
‰ame
);

713 
	}
}

728 
dbîr_t
 
add_to_waôq
(c⁄° 
lock_t
 *
waô_f‹
,

729 c⁄° 
lock_¥dt_t
 *
¥dt
 = 
nuŒ±r
);

736 
lock_t
 *
¸óã
(
åx_t
 *
åx
, c⁄° 
lock_¥dt_t
 *
¥dt
 = 
nuŒ±r
);

746 
lock_t
 *
lock_Æloc
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, 
ulöt
 
mode
,

747 c⁄° 
RecID
 &
ªc_id
, 
ulöt
 
size
);

749 
	g¥iv©e
:

752 
size_t
 
	$lock_size
(Ëc⁄° {  (
m_size
); 
	}
}

756 
	$¥ï¨e
() const;

761 
	`£t_waô_°©e
(
lock_t
 *
lock
);

767 
	`lock_add
(
lock_t
 *
lock
);

771 
	$öô
(c⁄° 
∑ge_t
 *
∑ge
) {

772 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
m_ªc_id
.
	`gë_∑ge_id
()));

773 
	`ut_ad
(!
§v_ªad_⁄ly_mode
);

774 
	`ut_ad
(
m_ödex
->
	`is_˛u°îed
(Ë|| !
	`di˘_ödex_is_⁄löe_ddl
(m_index));

775 
	`ut_ad
(
m_thr
 =
nuŒ±r
 || 
m_åx
 =
	`thr_gë_åx
(m_thr));

777 
m_size
 = 
	`is_¥ediˇã_lock
(
m_mode
Ë? 
	`lock_size
(m_modeË:Üock_size(
∑ge
);

783 i‡(
m_ªc_id
.
m_hóp_no
 =
PAGE_HEAP_NO_SUPREMUM
) {

784 
	`ut_ad
(!(
m_mode
 & 
LOCK_REC_NOT_GAP
));

786 
m_mode
 &~(
LOCK_GAP
 | 
LOCK_REC_NOT_GAP
);

788 
	}
}

794 
size_t
 
	$lock_size
(
ulöt
 
mode
) {

795 
	`ut_ad
(
	`is_¥ediˇã_lock
(
mode
));

801 
size_t
 
n_byãs
;

803 i‡(
mode
 & 
LOCK_PREDICATE
) {

804 c⁄° 
ulöt
 
Æign
 = 
UNIV_WORD_SIZE
 - 1;

812 
n_byãs
 = (1 + (
lock_¥dt_t
Ë+ 
Æign
) & ~align;

816 
	`ut_ad
(
n_byãs
 =(
lock_¥dt_t
Ë+ 
UNIV_WORD_SIZE
);

819 
n_byãs
 = 1;

822  (
n_byãs
);

823 
	}
}

829 
size_t
 
	$lock_size
(c⁄° 
∑ge_t
 *
∑ge
) {

830 
ulöt
 
n_ªcs
 = 
	`∑ge_dú_gë_n_hóp
(
∑ge
);

834  (1 + ((
n_ªcs
 + 
LOCK_PAGE_BITMAP_MARGIN
) / 8));

835 
	}
}

840 
boﬁ
 
	$is_¥ediˇã_lock
(
ulöt
 
mode
) {

841  (
mode
 & (
LOCK_PREDICATE
 | 
LOCK_PRDT_PAGE
));

842 
	}
}

844 
	g¥iv©e
:

846 
que_thr_t
 *
m_thr
;

850 
åx_t
 *
	gm_åx
;

854 
ulöt
 
	gm_mode
;

858 
size_t
 
	gm_size
;

862 
di˘_ödex_t
 *
	gm_ödex
;

866 
RecID
 
	gm_ªc_id
;

869 #ifde‡
UNIV_DEBUG


871 c⁄° 
ulöt
 
	glock_ty≥s
 = 
UT_ARR_SIZE
(
lock_com∑tibûôy_m©rix
);

876 
UNIV_INLINE


877 
uöt32_t
 
lock_gë_ty≥_low
(c⁄° 
lock_t
 *
lock
);

881 c⁄° 
lock_t
 *
lock_ªc_gë_¥ev
(

882 c⁄° 
lock_t
 *
ö_lock
,

883 
ulöt
 
hóp_no
);

888 
lock_ˇn˚l_waôög_™d_ªÀa£
(
lock_t
 *
lock
);

898 
lock_ª£t_waô_™d_ªÀa£_thªad_if_su•íded
(
lock_t
 *
lock
);

903 
UNIV_INLINE


904 
åx_id_t
 
	$lock_˛u°_ªc_some_has_im∂
(

905 c⁄° 
ªc_t
 *
ªc
,

906 c⁄° 
di˘_ödex_t
 *
ödex
,

907 c⁄° 
ulöt
 *
off£ts
)

908 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

912 
UNIV_INLINE


913 c⁄° 
lock_t
 *
	`lock_ªc_gë_√xt_⁄_∑ge_c⁄°
(

914 c⁄° 
lock_t
 *
lock
);

918 
UNIV_INLINE


919 
ulöt
 
	`lock_ªc_gë_n_bôs
(c⁄° 
lock_t
 *
lock
);

924 
UNIV_INLINE


925 
	`lock_ªc_£t_¡h_bô
(
lock_t
 *
lock
, 
ulöt
 
i
);

929 
UNIV_INLINE


930 
lock_t
 *
	`lock_ªc_gë_√xt_⁄_∑ge
÷ock_à*
lock
);

937 
UNIV_INLINE


938 
lock_t
 *
	`lock_ªc_gë_fú°_⁄_∑ge_addr
(
hash_èbÀ_t
 *
lock_hash
,

939 c⁄° 
∑ge_id_t
 &
∑ge_id
);

946 
UNIV_INLINE


947 
lock_t
 *
	`lock_ªc_gë_fú°_⁄_∑ge
(
hash_èbÀ_t
 *
lock_hash
,

948 c⁄° 
buf_block_t
 *
block
);

954 
UNIV_INLINE


955 
lock_t
 *
	`lock_ªc_gë_√xt
(
ulöt
 
hóp_no
,Üock_à*
lock
);

961 
UNIV_INLINE


962 c⁄° 
lock_t
 *
	`lock_ªc_gë_√xt_c⁄°
(
ulöt
 
hóp_no
, c⁄°Üock_à*
lock
);

969 
UNIV_INLINE


970 
lock_t
 *
	`lock_ªc_gë_fú°
(
hash_èbÀ_t
 *
hash
, c⁄° 
buf_block_t
 *
block
,

971 
ulöt
 
hóp_no
);

975 
UNIV_INLINE


976 
lock_mode
 
	`lock_gë_mode
(c⁄° 
lock_t
 *
lock
);

982 
UNIV_INLINE


983 
ulöt
 
	`lock_mode_com∑tibÀ
(
lock_mode
 
mode1
, lock_modê
mode2
);

989 
UNIV_INLINE


990 
boﬁ
 
	`lock_mode_°r⁄gî_‹_eq
(
lock_mode
 
mode1
, lock_modê
mode2
);

994 
UNIV_INLINE


995 
ulöt
 
	`lock_gë_waô
(c⁄° 
lock_t
 *
lock
);

1018 
UNIV_INLINE


1019 
boﬁ
 
	`lock_èbÀ_has
(c⁄° 
åx_t
 *
åx
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

1020 
lock_mode
 
mode
);

1027 
	`lock_nŸify_about_dódlock
(c⁄° 
ut
::
ve˘‹
<c⁄° 
åx_t
 *> &
åxs_⁄_cy˛e
,

1028 c⁄° 
åx_t
 *
vi˘im_åx
);

1030 
	~"lock0¥iv.ic
"

1033 
	sLock_ôî
 {

1039 
lock_t
 *
	`adv™˚
(c⁄° 
RecID
 &
ªc_id
,Üock_à*
lock
) {

1040 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
ªc_id
.
	`gë_∑ge_id
()));

1041 
	`ut_ad
(
lock
->
	`is_ªc‹d_lock
());

1043 (
lock
 = 
°©ic_ˇ°
<
lock_t
 *>÷ock->
hash
)Ë!
nuŒ±r
) {

1044 
	`ut_ad
(
lock
->
	`is_ªc‹d_lock
());

1046 i‡(
ªc_id
.
	`m©ches
(
lock
)) {

1047  (
lock
);

1051 
	`ut_ad
(
lock
 =
nuŒ±r
);

1052  (
nuŒ±r
);

1059 
lock_t
 *
	`fú°
(
hash_˚Œ_t
 *
li°
, c⁄° 
RecID
 &
ªc_id
) {

1060 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
ªc_id
.
	`gë_∑ge_id
()));

1062 autÿ
lock
 = 
°©ic_ˇ°
<
lock_t
 *>(
li°
->
node
);

1064 
	`ut_ad
(
lock
 =
nuŒ±r
 ||Üock->
	`is_ªc‹d_lock
());

1066 i‡(
lock
 !
nuŒ±r
 && !
ªc_id
.
	`m©ches
(lock)) {

1067 
lock
 = 
	`adv™˚
(
ªc_id
,Üock);

1070  (
lock
);

1078 
ãm∂©e
 <
ty≥«me
 
F
>

1079 c⁄° 
lock_t
 *
	`f‹_óch
(c⁄° 
RecID
 &
ªc_id
, 
F
 &&
f
,

1080 
hash_èbÀ_t
 *
hash_èbÀ
 = 
lock_sys
->
ªc_hash
) {

1081 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
ªc_id
.
	`gë_∑ge_id
()));

1083 autÿ
li°
 = 
	`hash_gë_¡h_˚Œ
(
hash_èbÀ
,

1084 
	`hash_ˇlc_hash
(
ªc_id
.
m_fﬁd
, 
hash_èbÀ
));

1086 autÿ
lock
 = 
	`fú°
(
li°
, 
ªc_id
);Üock !
nuŒ±r
;

1087 
lock
 = 
	`adv™˚
(
ªc_id
,Üock)) {

1088 
	`ut_ad
(
lock
->
	`is_ªc‹d_lock
());

1090 i‡(!
°d
::
f‹w¨d
<
F
>(
f
)(
lock
)) {

1091  (
lock
);

1095  (
nuŒ±r
);

1099 
«me•a˚
 
locksys
 {

1100 ˛as†
	cUnß„_globÆ_œtch_m™ùuœt‹
 {

1101 
public
:

1102 
	`ex˛usive_u∆©ch
(Ë{ 
lock_sys
->
œtches
.
globÆ_œtch
.
	`x_u∆ock
(); }

1103 
	`ex˛usive_œtch
(Ë{ 
lock_sys
->
œtches
.
globÆ_œtch
.
	`x_lock
(); }

1104 
	}
};

	@lock0priv.ic

38 #i‚de‡
LOCK_MODULE_IMPLEMENTATION


39 #îr‹ 
Do
 
nŸ
 
ö˛ude
 
lock0¥iv
.
ic
 
outside
 
of
 
the
 
lock
/ 
moduÀ


44 
UNIV_INLINE


45 
uöt32_t
 
	$lock_gë_ty≥_low
(c⁄° 
lock_t
 *
lock
)

47 
	`ut_ad
(
lock
);

49  (
lock
->
ty≥_mode
 & 
LOCK_TYPE_MASK
);

50 
	}
}

55 
UNIV_INLINE


56 
åx_id_t
 
	$lock_˛u°_ªc_some_has_im∂
(

57 c⁄° 
ªc_t
 *
ªc
,

58 c⁄° 
di˘_ödex_t
 *
ödex
,

59 c⁄° 
ulöt
 *
off£ts
)

61 
	`ut_ad
(
ödex
->
	`is_˛u°îed
());

62 
	`ut_ad
(
	`∑ge_ªc_is_u£r_ªc
(
ªc
));

64  (
	`row_gë_ªc_åx_id
(
ªc
, 
ödex
, 
off£ts
));

65 
	}
}

69 
UNIV_INLINE


70 
ulöt
 
	$lock_ªc_gë_n_bôs
(c⁄° 
lock_t
 *
lock
)

72  (
lock
->
ªc_lock
.
n_bôs
);

73 
	}
}

76 
UNIV_INLINE


77 
	$lock_ªc_£t_¡h_bô
(
lock_t
 *
lock
,

78 
ulöt
 
i
)

80 
ulöt
 
byã_ödex
;

81 
ulöt
 
bô_ödex
;

83 
	`ut_ad
(
lock
);

84 
	`ut_ad
(
	`lock_gë_ty≥_low
(
lock
Ë=
LOCK_REC
);

85 
	`ut_ad
(
i
 < 
lock
->
ªc_lock
.
n_bôs
);

87 
byã_ödex
 = 
i
 / 8;

88 
bô_ödex
 = 
i
 % 8;

89 
byã
 *c⁄° 
the_byã
 = ((byã *)&
lock
[1]Ë+ 
byã_ödex
;

90 
	`ut_ad
(!(*
the_byã
 & (1 << 
bô_ödex
)));

91 *
the_byã
 |1 << 
bô_ödex
;

93 
lock
->
åx
->lock.
n_ªc_locks
.
	`„tch_add
(1, 
°d
::
mem‹y_‹dî_ªœxed
);

94 
	}
}

98 
UNIV_INLINE


99 
lock_t
 *
	$lock_ªc_gë_√xt_⁄_∑ge
(
lock_t
 *
lock
)

101  ((
lock_t
 *)
	`lock_ªc_gë_√xt_⁄_∑ge_c⁄°
(
lock
));

102 
	}
}

104 
UNIV_INLINE


105 
lock_t
 *
	$lock_ªc_gë_fú°_⁄_∑ge_addr
(
hash_èbÀ_t
 *
lock_hash
,

106 c⁄° 
∑ge_id_t
 &
∑ge_id
) {

107 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
∑ge_id
));

109 
lock_t
 *
lock
 = 
°©ic_ˇ°
<lock_t *>(

110 
	`HASH_GET_FIRST
(
lock_hash
, 
	`lock_ªc_hash
(
∑ge_id
)));

111 
lock
 !
nuŒ±r
;

112 
lock
 = 
°©ic_ˇ°
<
lock_t
 *>(
	`HASH_GET_NEXT
(
hash
,Üock))) {

113 i‡(
∑ge_id
 =
lock
->
ªc_lock
.page_id) {

114  (
lock
);

118  (
nuŒ±r
);

119 
	}
}

124 
UNIV_INLINE


125 
lock_t
 *
	$lock_ªc_gë_fú°_⁄_∑ge
(

126 
hash_èbÀ_t
 *
lock_hash
,

127 c⁄° 
buf_block_t
 *
block
)

129 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
block
->
	`gë_∑ge_id
()));

131 c⁄° 
∑ge_id_t
 
∑ge_id
 = 
block
->
∑ge
.
id
;

132 
ulöt
 
hash
 = 
	`buf_block_gë_lock_hash_vÆ
(
block
);

134 
lock_t
 *
lock
 = 
°©ic_ˇ°
<lock_à*>(
	`HASH_GET_FIRST
(
lock_hash
, 
hash
));

135 
lock
 !
nuŒ±r
;

136 
lock
 = 
°©ic_ˇ°
<
lock_t
 *>(
	`HASH_GET_NEXT
(
hash
,Üock))) {

137 i‡(
∑ge_id
 =
lock
->
ªc_lock
.page_id) {

138  (
lock
);

142  (
nuŒ±r
);

143 
	}
}

148 
UNIV_INLINE


149 
lock_t
 *
	$lock_ªc_gë_√xt
(
ulöt
 
hóp_no
,

150 
lock_t
 *
lock
)

152 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
lock
->
ªc_lock
.
∑ge_id
));

155 
	`ut_ad
(
	`lock_gë_ty≥_low
(
lock
Ë=
LOCK_REC
);

156 
lock
 = 
	`lock_ªc_gë_√xt_⁄_∑ge
(lock);

157 } 
lock
 !
nuŒ±r
 && !
	`lock_ªc_gë_¡h_bô
÷ock, 
hóp_no
));

159  (
lock
);

160 
	}
}

165 
UNIV_INLINE


166 c⁄° 
lock_t
 *
	$lock_ªc_gë_√xt_c⁄°
(

167 
ulöt
 
hóp_no
,

168 c⁄° 
lock_t
 *
lock
)

170  (
	`lock_ªc_gë_√xt
(
hóp_no
, (
lock_t
 *)
lock
));

171 
	}
}

175 
UNIV_INLINE


176 
lock_t
 *
	$lock_ªc_gë_fú°
(

177 
hash_èbÀ_t
 *
hash
,

178 c⁄° 
buf_block_t
 *
block
,

179 
ulöt
 
hóp_no
)

181 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
block
->
	`gë_∑ge_id
()));

183 
lock_t
 *
lock
 = 
	`lock_ªc_gë_fú°_⁄_∑ge
(
hash
, 
block
);Üock;

184 
lock
 = 
	`lock_ªc_gë_√xt_⁄_∑ge
(lock)) {

185 i‡(
	`lock_ªc_gë_¡h_bô
(
lock
, 
hóp_no
)) {

186  (
lock
);

190  (
nuŒ±r
);

191 
	}
}

197 
UNIV_INLINE


198 
boﬁ
 
	$lock_ªc_gë_¡h_bô
(c⁄° 
lock_t
 *
lock
, 
ulöt
 
i
) {

199 c⁄° 
byã
 *
b
;

201 
	`ut_ad
(
lock
);

202 
	`ut_ad
(
	`lock_gë_ty≥_low
(
lock
Ë=
LOCK_REC
);

204 i‡(
i
 >
lock
->
ªc_lock
.
n_bôs
) {

205  (
Ál£
);

208 
b
 = ((c⁄° 
byã
 *)&
lock
[1]Ë+ (
i
 / 8);

210  (
åue
 & *
b
 >> (
i
 % 8));

211 
	}
}

215 
UNIV_INLINE


216 c⁄° 
lock_t
 *
	$lock_ªc_gë_√xt_⁄_∑ge_c⁄°
(

217 c⁄° 
lock_t
 *
lock
)

219 
	`ut_ad
(
	`lock_gë_ty≥_low
(
lock
Ë=
LOCK_REC
);

220 c⁄°áutÿ
∑ge_id
 = 
lock
->
ªc_lock
.page_id;

221 
	`ut_ad
(
locksys
::
	`owns_∑ge_sh¨d
(
∑ge_id
));

223 (
lock
 = 
°©ic_ˇ°
<c⁄° 
lock_t
 *>(
	`HASH_GET_NEXT
(
hash
,Üock))) !=

224 
nuŒ±r
) {

225 i‡(
∑ge_id
 =
lock
->
ªc_lock
.page_id) {

226  (
lock
);

230  (
nuŒ±r
);

231 
	}
}

235 
UNIV_INLINE


236 
lock_mode
 
	$lock_gë_mode
(c⁄° 
lock_t
 *
lock
)

238 
	`ut_ad
(
lock
);

240  (
°©ic_ˇ°
<
lock_mode
>(
lock
->
ty≥_mode
 & 
LOCK_MODE_MASK
));

241 
	}
}

245 
UNIV_INLINE


246 
ulöt
 
	$lock_mode_com∑tibÀ
(
lock_mode
 
mode1
,

247 
lock_mode
 
mode2
)

249 
	`ut_ad
((
ulöt
)
mode1
 < 
lock_ty≥s
);

250 
	`ut_ad
((
ulöt
)
mode2
 < 
lock_ty≥s
);

252  (
lock_com∑tibûôy_m©rix
[
mode1
][
mode2
]);

253 
	}
}

255 
UNIV_INLINE


256 
boﬁ
 
	$lock_mode_°r⁄gî_‹_eq
(
lock_mode
 
mode1
, lock_modê
mode2
) {

257 
	`ut_ad
((
ulöt
)
mode1
 < 
lock_ty≥s
);

258 
	`ut_ad
((
ulöt
)
mode2
 < 
lock_ty≥s
);

260  (
lock_°ªngth_m©rix
[
mode1
][
mode2
] != 0);

261 
	}
}

265 
UNIV_INLINE


266 
ulöt
 
	$lock_gë_waô
(c⁄° 
lock_t
 *
lock
)

268 
	`ut_ad
(
lock
);

270  (
lock
->
ty≥_mode
 & 
LOCK_WAIT
);

271 
	}
}

275 
UNIV_INLINE


276 
	$lock_ª£t_lock_™d_åx_waô
(
lock_t
 *
lock
)

278 
	`ut_ad
(
locksys
::
	`owns_lock_sh¨d
(
lock
));

279 
	`ut_ad
(
	`lock_gë_waô
(
lock
));

280 
	`ut_ad
(
lock
->
åx
->lock.
waô_lock
 ==Üock);

287 
lock
->
åx
->lock.
waô_lock
 = 
nuŒ±r
;

292 
lock
->
ty≥_mode
 &~
LOCK_WAIT
;

293 
	}
}

295 
UNIV_INLINE


296 
boﬁ
 
	$lock_èbÀ_has
(c⁄° 
åx_t
 *
åx
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

297 
lock_mode
 
ö_mode
) {

298 
	`ut_ad
(!
	`åx_muãx_own
(
åx
));

299 
	`åx_muãx_íãr
(
åx
);

300 
	`ut_ad
(
	`åx_ˇn_be_h™dÀd_by_cuºít_thªad
(
åx
));

302 i‡(
åx
->
lock
.
èbÀ_locks
.
	`em±y
()) {

303 
	`åx_muãx_exô
(
åx
);

304  (
Ál£
);

307 
lock_poﬁ_t
::
	tc⁄°_ªvî£_ôî©‹
 
	tôî©‹
;

309 
ôî©‹
 
íd
 = 
åx
->
lock
.
èbÀ_locks
.
	`ªnd
();

313 
ôî©‹
 
ô
 = 
åx
->
lock
.
èbÀ_locks
.
	`rbegö
(); ià!
íd
; ++it) {

314 c⁄° 
lock_t
 *
lock
 = *
ô
;

316 
	`ut_ad
(
lock
 !
nuŒ±r
);

318 
lock_mode
 
mode
 = 
	`lock_gë_mode
(
lock
);

320 
	`ut_ad
(
åx
 =
lock
->trx);

321 
	`ut_ad
(
	`lock_gë_ty≥_low
(
lock
Ë& 
LOCK_TABLE
);

322 
	`ut_ad
(
lock
->
èb_lock
.
èbÀ
 !
nuŒ±r
);

324 i‡(
èbÀ
 =
lock
->
èb_lock
.table &&

325 
	`lock_mode_°r⁄gî_‹_eq
(
mode
, 
ö_mode
)) {

326 
	`ut_ad
(!
	`lock_gë_waô
(
lock
));

328 
	`åx_muãx_exô
(
åx
);

329  (
åue
);

333 
	`åx_muãx_exô
(
åx
);

334  (
Ál£
);

335 
	}
}

340 
boﬁ
 
	gRecID
::
	$m©ches
(c⁄° 
lock_t
 *
lock
) const {

341  (
lock
->
ªc_lock
.
∑ge_id
 =
	`gë_∑ge_id
() &&

342 
	`lock_ªc_gë_¡h_bô
(
lock
, 
m_hóp_no
));

343 
	}
}

	@lock0types.h

33 
	~"univ.i
"

35 #i‚de‡
lock0ty≥s_h


36 
	#lock0ty≥s_h


	)

38 
	#lock_t
 
ib_lock_t


	)

40 
	glock_t
;

41 
	glock_sys_t
;

42 
	glock_èbÀ_t
;

44 
	e£À˘_mode
 {

45 
	mSELECT_ORDINARY
,

46 
	mSELECT_SKIP_LOCKED
,

47 
	mSELECT_NOWAIT


51 
	elock_mode
 {

52 
	mLOCK_IS
 = 0,

53 
	mLOCK_IX
,

54 
	mLOCK_S
,

55 
	mLOCK_X
,

56 
	mLOCK_AUTO_INC
,

58 
	mLOCK_NONE
,

59 
	mLOCK_NUM
 = 
LOCK_NONE
,

60 
	mLOCK_NONE_UNSET
 = 255

66 
ölöe
 c⁄° *
	$lock_mode_°rög
(
lock_mode
 
mode
) {

67 
mode
) {

68 
LOCK_IS
:

70 
LOCK_IX
:

72 
LOCK_S
:

74 
LOCK_X
:

76 
LOCK_AUTO_INC
:

78 
LOCK_NONE
:

80 
LOCK_NONE_UNSET
:

83 
ut_îr‹
;

85 
	}
}

87 
	$UT_LIST_BASE_NODE_T
(
	tlock_t
Ë
	tåx_lock_li°_t
;

89 
uöt32_t
 
	tåx_scheduÀ_weight_t
;

	@log0ddl.h

39 #i‚de‡
log0ddl_h


40 
	#log0ddl_h


	)

44 ˛as†
	cLog_Ty≥
 : 
uöt32_t
 {

46 
SMALLEST_LOG
 = 1,

49 
	mFREE_TREE_LOG
 = 1,

52 
	mDELETE_SPACE_LOG
,

55 
	mRENAME_SPACE_LOG
,

58 
	mDROP_LOG
,

61 
	mRENAME_TABLE_LOG
,

64 
	mREMOVE_CACHE_LOG
,

67 
	mALTER_ENCRYPT_TABLESPACE_LOG
,

70 
	mALTER_UNENCRYPT_TABLESPACE_LOG
,

73 
	mBIGGEST_LOG
 = 
ALTER_UNENCRYPT_TABLESPACE_LOG


77 ˛as†
	cDDL_Rec‹d
 {

78 
	mpublic
:

80 
DDL_Rec‹d
();

83 ~
DDL_Rec‹d
();

87 
ulöt
 
	$gë_id
(Ëc⁄° {  (
m_id
); }

91 
	$£t_id
(
ulöt
 
id
Ë{ 
m_id
 = id; 
	}
}

96 
Log_Ty≥
 
	$gë_ty≥
(Ëc⁄° {  (
m_ty≥
); 
	}
}

100 
	$£t_ty≥
(
Log_Ty≥
 
ty≥
Ë{ 
m_ty≥
 =Åy≥; 
	}
}

104 
ulöt
 
	$gë_thªad_id
(Ëc⁄° {  (
m_thªad_id
); 
	}
}

108 
	$£t_thªad_id
(
ulöt
 
thªad_id
Ë{ 
m_thªad_id
 =Åhªad_id; 
	}
}

112 
•a˚_id_t
 
	$gë_•a˚_id
(Ëc⁄° {  (
m_•a˚_id
); 
	}
}

116 
	$£t_•a˚_id
(
•a˚_id_t
 
•a˚
Ë{ 
m_•a˚_id
 = s∑˚; 
	}
}

120 
∑ge_no_t
 
	$gë_∑ge_no
(Ëc⁄° {  (
m_∑ge_no
); 
	}
}

124 
	$£t_∑ge_no
(
∑ge_no_t
 
∑ge_no
Ë{ 
m_∑ge_no
 =Öage_no; 
	}
}

128 
ulöt
 
	$gë_ödex_id
(Ëc⁄° {  (
m_ödex_id
); 
	}
}

132 
	$£t_ödex_id
(
ulöt
 
ödex_id
Ë{ 
m_ödex_id
 = index_id; 
	}
}

136 
èbÀ_id_t
 
	$gë_èbÀ_id
(Ëc⁄° {  (
m_èbÀ_id
); 
	}
}

140 
	$£t_èbÀ_id
(
èbÀ_id_t
 
èbÀ_id
Ë{ 
m_èbÀ_id
 =ÅabÀ_id; 
	}
}

144 
	$£t_dñëabÀ
(
boﬁ
 
dñëabÀ
Ë{ 
m_dñëabÀ
 = dñëabÀ; 
	}
}

148 
boﬁ
 
	$gë_dñëabÀ
(Ëc⁄° {  (
m_dñëabÀ
); 
	}
}

151 
í¸y±i⁄_›_ty≥
 
	$gë_í¸y±i⁄_ty≥
() const {

152 
	`ut_ad
(
	`gë_ty≥
(Ë=
Log_Ty≥
::
ALTER_ENCRYPT_TABLESPACE_LOG
 ||

153 
	`gë_ty≥
(Ë=
Log_Ty≥
::
ALTER_UNENCRYPT_TABLESPACE_LOG
);

154  
	`gë_ty≥
(Ë=
Log_Ty≥
::
ALTER_ENCRYPT_TABLESPACE_LOG
 ? 
ENCRYPTION


155 : 
DECRYPTION
;

156 
	}
}

160 c⁄° *
	$gë_ﬁd_fûe_∑th
(Ëc⁄° {  (
m_ﬁd_fûe_∑th
); 
	}
}

164 
£t_ﬁd_fûe_∑th
(c⁄° *
«me
);

169 
£t_ﬁd_fûe_∑th
(c⁄° 
byã
 *
d©a
, 
ulöt
 
Àn
);

173 c⁄° *
	$gë_√w_fûe_∑th
(Ëc⁄° {  (
m_√w_fûe_∑th
); 
	}
}

177 
£t_√w_fûe_∑th
(c⁄° *
«me
);

182 
£t_√w_fûe_∑th
(c⁄° 
byã
 *
d©a
, 
ulöt
 
Àn
);

187 
	g°d
::
o°ªam
 &
	$¥öt
(
°d
::
o°ªam
 &
out
) const;

189 
¥iv©e
:

191 
ulöt
 
m_id
;

194 
Log_Ty≥
 
m_ty≥
;

197 
ulöt
 
m_thªad_id
;

200 
•a˚_id_t
 
m_•a˚_id
;

203 
∑ge_no_t
 
m_∑ge_no
;

206 
ulöt
 
m_ödex_id
;

209 
èbÀ_id_t
 
m_èbÀ_id
;

213 *
m_ﬁd_fûe_∑th
;

216 *
m_√w_fûe_∑th
;

219 
mem_hóp_t
 *
m_hóp
;

222 
boﬁ
 
m_dñëabÀ
;

223 
	}
};

226 
˛ass
 
	gTHD
;

227 
	gque_thr_t
;

228 
	gdtu∂e_t
;

231 
usög
 
	gDDL_Rec‹ds
 = 
°d
::
ve˘‹
<
DDL_Rec‹d
 *>;

235 ˛as†
	cDDL_Log_TabÀ
 {

236 
	mpublic
:

238 
DDL_Log_TabÀ
();

244 
ex∂icô
 
DDL_Log_TabÀ
(
åx_t
 *
åx
);

247 ~
DDL_Log_TabÀ
();

253 
dbîr_t
 
ö£π
(c⁄° 
DDL_Rec‹d
 &
ªc‹d
);

262 
dbîr_t
 
£¨ch
(
ulöt
 
thªad_id
, 
DDL_Rec‹ds
 &
ªc‹ds
);

268 
dbîr_t
 
£¨ch_Æl
(
DDL_Rec‹ds
 &
ªc‹ds
);

274 
dbîr_t
 
ªmove
(
ulöt
 
id
);

281 
dbîr_t
 
ªmove
(c⁄° 
DDL_Rec‹ds
 &
ªc‹ds
);

283 
	m¥iv©e
:

285 
°¨t_quîy_thªad
();

288 
°›_quîy_thªad
();

293 
¸óã_tu∂e
(c⁄° 
DDL_Rec‹d
 &
ªc‹d
);

299 
¸óã_tu∂e
(
ulöt
 
id
, c⁄° 
di˘_ödex_t
 *
ödex
);

307 
c⁄vît_to_ddl_ªc‹d
(
boﬁ
 
is_˛u°îed
, 
ªc_t
 *
ªc
,

308 c⁄° 
ulöt
 *
off£ts
, 
DDL_Rec‹d
 &
ªc‹d
);

315 
ulöt
 
∑r£_id
(c⁄° 
di˘_ödex_t
 *
ödex
, 
ªc_t
 *
ªc
, c⁄° ulöà*
off£ts
);

322 
£t_fõld
(c⁄° 
byã
 *
d©a
, 
ulöt
 
off£t
, ulöà
Àn
, 
DDL_Rec‹d
 &
ªc‹d
);

328 
ulöt
 
„tch_vÆue
(c⁄° 
byã
 *
d©a
, ulöà
off£t
);

335 
dbîr_t
 
£¨ch_by_id
(
ulöt
 
id
, 
di˘_ödex_t
 *
ödex
, 
DDL_Rec‹ds
 &
ªc‹ds
);

337 
	m¥iv©e
:

339 
c⁄°ex¥
 
s_id_cﬁ_no
 = 0;

342 
c⁄°ex¥
 
	ms_id_cﬁ_Àn
 = 8;

345 
c⁄°ex¥
 
	ms_thªad_id_cﬁ_no
 = 1;

348 
c⁄°ex¥
 
	ms_thªad_id_cﬁ_Àn
 = 8;

351 
c⁄°ex¥
 
	ms_ty≥_cﬁ_no
 = 2;

354 
c⁄°ex¥
 
	ms_ty≥_cﬁ_Àn
 = 4;

357 
c⁄°ex¥
 
	ms_•a˚_id_cﬁ_no
 = 3;

360 
c⁄°ex¥
 
	ms_•a˚_id_cﬁ_Àn
 = 4;

363 
c⁄°ex¥
 
	ms_∑ge_no_cﬁ_no
 = 4;

366 
c⁄°ex¥
 
	ms_∑ge_no_cﬁ_Àn
 = 4;

369 
c⁄°ex¥
 
	ms_ödex_id_cﬁ_no
 = 5;

372 
c⁄°ex¥
 
	ms_ödex_id_cﬁ_Àn
 = 8;

375 
c⁄°ex¥
 
	ms_èbÀ_id_cﬁ_no
 = 6;

378 
c⁄°ex¥
 
	ms_èbÀ_id_cﬁ_Àn
 = 8;

381 
c⁄°ex¥
 
	ms_ﬁd_fûe_∑th_cﬁ_no
 = 7;

384 
c⁄°ex¥
 
	ms_√w_fûe_∑th_cﬁ_no
 = 8;

387 
di˘_èbÀ_t
 *
	mm_èbÀ
;

390 
dtu∂e_t
 *
	mm_tu∂e
;

393 
åx_t
 *
	mm_åx
;

396 
que_thr_t
 *
	mm_thr
;

400 
mem_hóp_t
 *
	mm_hóp
;

404 ˛as†
	cLog_DDL
 {

405 
	mpublic
:

407 
Log_DDL
();

410 ~
	$Log_DDL
() {}

417 
dbîr_t
 
	`wrôe_‰ì_åì_log
(
åx_t
 *
åx
, c⁄° 
di˘_ödex_t
 *
ödex
,

418 
boﬁ
 
is_dr›_èbÀ
);

428 
dbîr_t
 
	`wrôe_dñëe_•a˚_log
(
åx_t
 *
åx
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

429 
•a˚_id_t
 
•a˚_id
, c⁄° *
fûe_∑th
,

430 
boﬁ
 
is_dr›
, boﬁ 
di˘_locked
);

437 
dbîr_t
 
	`wrôe_ª«me_•a˚_log
(
•a˚_id_t
 
•a˚_id
, c⁄° *
ﬁd_fûe_∑th
,

438 c⁄° *
√w_fûe_∑th
);

443 
DDL_Rec‹d
 *
	`föd_Æãr_í¸y±_ªc‹d
(
•a˚_id_t
 
•a˚_id
);

450 
dbîr_t
 
	`wrôe_Æãr_í¸y±_•a˚_log
(
•a˚_id_t
 
•a˚_id
,

451 
í¸y±i⁄_›_ty≥
 
ty≥
,

452 
DDL_Rec‹d
 *
exi°ög_ªc
);

459 
dbîr_t
 
	`wrôe_dr›_log
(
åx_t
 *
åx
, c⁄° 
èbÀ_id_t
 
èbÀ_id
);

466 
dbîr_t
 
	`wrôe_ª«me_èbÀ_log
(
di˘_èbÀ_t
 *
èbÀ
, c⁄° *
ﬁd_«me
,

467 c⁄° *
√w_«me
);

473 
dbîr_t
 
	`wrôe_ªmove_ˇche_log
(
åx_t
 *
åx
, 
di˘_èbÀ_t
 *
èbÀ
);

478 
dbîr_t
 
	`ª∂ay
(
DDL_Rec‹d
 &
ªc‹d
);

484 
dbîr_t
 
	`po°_ddl
(
THD
 *
thd
);

491 
dbîr_t
 
	`ªcovî
();

495 
boﬁ
 
	$is_ö_ªcovîy
(Ë{  (
s_ö_ªcovîy
); 
	}
}

497 
	g¥iv©e
:

504 
dbîr_t
 
ö£π_‰ì_åì_log
(
åx_t
 *
åx
, c⁄° 
di˘_ödex_t
 *
ödex
,

505 
uöt64_t
 
id
, 
ulöt
 
thªad_id
);

511 
ª∂ay_‰ì_åì_log
(
•a˚_id_t
 
•a˚_id
, 
∑ge_no_t
 
∑ge_no
,

512 
ulöt
 
ödex_id
);

522 
dbîr_t
 
ö£π_dñëe_•a˚_log
(
åx_t
 *
åx
, 
uöt64_t
 
id
, 
ulöt
 
thªad_id
,

523 
•a˚_id_t
 
•a˚_id
, c⁄° *
fûe_∑th
,

524 
boﬁ
 
di˘_locked
);

529 
ª∂ay_dñëe_•a˚_log
(
•a˚_id_t
 
•a˚_id
, c⁄° *
fûe_∑th
);

538 
dbîr_t
 
ö£π_ª«me_•a˚_log
(
uöt64_t
 
id
, 
ulöt
 
thªad_id
,

539 
•a˚_id_t
 
•a˚_id
,

540 c⁄° *
ﬁd_fûe_∑th
,

541 c⁄° *
√w_fûe_∑th
);

547 
ª∂ay_ª«me_•a˚_log
(
•a˚_id_t
 
•a˚_id
, c⁄° *
ﬁd_fûe_∑th
,

548 c⁄° *
√w_fûe_∑th
);

557 
dbîr_t
 
ö£π_Æãr_í¸y±_•a˚_log
(
uöt64_t
 
id
, 
ulöt
 
thªad_id
,

558 
•a˚_id_t
 
•a˚_id
,

559 
í¸y±i⁄_›_ty≥
 
ty≥
,

560 
DDL_Rec‹d
 *
exi°ög_ªc
);

565 
dbîr_t
 
ª∂ay_Æãr_í¸y±_•a˚_log
(
DDL_Rec‹d
 &
ªc‹d
);

573 
dbîr_t
 
ö£π_dr›_log
(
åx_t
 *
åx
, 
uöt64_t
 
id
, 
ulöt
 
thªad_id
,

574 c⁄° 
èbÀ_id_t
 
èbÀ_id
);

578 
ª∂ay_dr›_log
(c⁄° 
èbÀ_id_t
 
èbÀ_id
);

587 
dbîr_t
 
ö£π_ª«me_èbÀ_log
(
uöt64_t
 
id
, 
ulöt
 
thªad_id
,

588 
èbÀ_id_t
 
èbÀ_id
, c⁄° *
ﬁd_«me
,

589 c⁄° *
√w_«me
);

595 
ª∂ay_ª«me_èbÀ_log
(
èbÀ_id_t
 
èbÀ_id
, c⁄° *
ﬁd_«me
,

596 c⁄° *
√w_«me
);

604 
dbîr_t
 
ö£π_ªmove_ˇche_log
(
uöt64_t
 
id
, 
ulöt
 
thªad_id
,

605 
èbÀ_id_t
 
èbÀ_id
, c⁄° *
èbÀ_«me
);

610 
ª∂ay_ªmove_ˇche_log
(
èbÀ_id_t
 
èbÀ_id
, c⁄° *
èbÀ_«me
);

618 
dbîr_t
 
dñëe_by_id
(
åx_t
 *
åx
, 
uöt64_t
 
id
, 
boﬁ
 
di˘_locked
);

623 
dbîr_t
 
ª∂ay_by_thªad_id
(
ulöt
 
thªad_id
);

628 
dbîr_t
 
dñëe_by_ids
(
DDL_Rec‹ds
 &
ªc‹ds
);

632 
dbîr_t
 
ª∂ay_Æl
();

636 
ölöe
 
uöt64_t
 
√xt_id
();

642 
ölöe
 
boﬁ
 
skù
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, 
THD
 *
thd
);

644 
	g¥iv©e
:

646 
boﬁ
 
s_ö_ªcovîy
;

650 
Log_DDL
 *
log_ddl
;

653 
ölöe
 
	$ddl_log_˛o£
(Ë{ 
	`UT_DELETE
(
log_ddl
); 
	}
}

655 #ifde‡
UNIV_DEBUG


656 
	gSYS_VAR
;

659 
boﬁ
 
önodb_ddl_log_¸ash_ª£t_debug
;

667 
ddl_log_¸ash_ª£t
(
THD
 *
thd
, 
SYS_VAR
 *
v¨
, *
v¨_±r
,

668 c⁄° *
ßve
);

	@log0log.h

44 #i‚de‡
log0log_h


45 
	#log0log_h


	)

47 
	~"dyn0buf.h
"

48 
	~"univ.i
"

49 #i‚de‡
UNIV_HOTBACKUP


50 
	~"sync0rw.h
"

53 
	~"log0ã°.h
"

54 
	~"log0ty≥s.h
"

55 
	~"my_compûî.h
"

58 
c⁄°ex¥
 c⁄° *c⁄° 
	gib_logfûe_ba£«me
 = "ib_logfile";

61 
c⁄°ex¥
 
uöt32_t
 
	gMAX_LOG_FILE_NAME
 = 32;

64 
c⁄°ex¥
 
uöt32_t
 
	gLOG_NO_CHECKSUM_MAGIC
 = 0xDEADBEEFUL;

68 
c⁄°ex¥
 
uöt32_t
 
	gLOG_CHECKPOINT_EXTRA_FREE
 = 8;

74 
c⁄°ex¥
 
uöt32_t
 
	gLOG_CHECKPOINT_FREE_PER_THREAD
 = 4;

78 
c⁄°ex¥
 
uöt32_t
 
	gLOG_POOL_CHECKPOINT_RATIO_ASYNC
 = 32;

81 
c⁄°ex¥
 
uöt32_t
 
	gLOG_POOL_PREFLUSH_RATIO_SYNC
 = 16;

85 
c⁄°ex¥
 
uöt32_t
 
	gLOG_POOL_PREFLUSH_RATIO_ASYNC
 = 8;

88 
c⁄°ex¥
 
l¢_t
 
	gLOG_START_LSN
 = 16 * 
OS_FILE_LOG_BLOCK_SIZE
;

95 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_HDR_NO
 = 0;

98 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_FLUSH_BIT_MASK
 = 0x80000000UL;

101 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_MAX_NO
 = 0x3FFFFFFFUL + 1;

104 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_HDR_DATA_LEN
 = 4;

108 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_ENCRYPT_BIT_MASK
 = 0x8000UL;

117 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_FIRST_REC_GROUP
 = 6;

122 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_CHECKPOINT_NO
 = 8;

125 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_HDR_SIZE
 = 12;

131 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_CHECKSUM
 = 4;

134 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_TRL_SIZE
 = 4;

136 
°©ic_as£π
(
LOG_BLOCK_HDR_SIZE
 + 
LOG_BLOCK_TRL_SIZE
 < 
OS_FILE_LOG_BLOCK_SIZE
,

140 
c⁄°ex¥
 
uöt32_t
 
	gLOG_BLOCK_DATA_SIZE
 =

141 
OS_FILE_LOG_BLOCK_SIZE
 - 
LOG_BLOCK_HDR_SIZE
 - 
LOG_BLOCK_TRL_SIZE
;

147 
°©ic_as£π
(
LOG_BLOCK_HDR_SIZE
 + 
LOG_BLOCK_TRL_SIZE
 < 
LOG_BLOCK_DATA_SIZE
,

151 
c⁄°ex¥
 
¢_t
 
	gSN_MAX
 = (1ULL << 62) - 1;

154 
c⁄°ex¥
 
¢_t
 
	gSN_LOCKED
 = 1ULL << 63;

160 
c⁄°ex¥
 
l¢_t
 
	gLSN_MAX
 = (1ULL << 63) - 1;

167 
c⁄°ex¥
 
uöt32_t
 
	gLOG_CHECKPOINT_NO
 = 0;

175 
c⁄°ex¥
 
uöt32_t
 
	gLOG_CHECKPOINT_LSN
 = 8;

179 
c⁄°ex¥
 
uöt32_t
 
	gLOG_CHECKPOINT_OFFSET
 = 16;

188 
c⁄°ex¥
 
uöt32_t
 
	gLOG_CHECKPOINT_LOG_BUF_SIZE
 = 24;

195 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_FORMAT
 = 0;

198 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_PAD1
 = 4;

201 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_START_LSN
 = 8;

206 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_CREATOR
 = 16;

209 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_CREATOR_END
 = 
LOG_HEADER_CREATOR
 + 32;

212 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_FLAGS
 = 
LOG_HEADER_CREATOR_END
;

215 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_FLAG_NO_LOGGING
 = 1;

220 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_FLAG_CRASH_UNSAFE
 = 2;

223 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_FLAG_MAX
 = 
LOG_HEADER_FLAG_CRASH_UNSAFE
;

226 
c⁄°ex¥
 
uöt32_t
 
	gLOG_HEADER_SIZE
 = 
LOG_HEADER_FLAGS
 + 4;

231 
ölöe
 
	$LOG_HEADER_SET_FLAG
(
uöt32_t
 &
Êag
, uöt32_à
bô
) {

232 
	`ut_ad
(
bô
 > 0);

233 
	`ut_ad
(
bô
 <
LOG_HEADER_FLAG_MAX
);

234 
Êag
 |
°©ic_ˇ°
<
uöt32_t
>(1UL << (
bô
 - 1));

235 
	}
}

241 
ölöe
 
boﬁ
 
	$LOG_HEADER_CHECK_FLAG
(
uöt32_t
 
Êag
, uöt32_à
bô
) {

242  ((
Êag
 & (1ULL << (
bô
 - 1))) > 0);

243 
	}
}

246 
	#LOG_HEADER_CREATOR_CURRENT
 "MySQL " 
INNODB_VERSION_STR


	)

249 
	#LOG_HEADER_CREATOR_CLONE
 "MySQL Cl⁄e"

	)

254 
c⁄°ex¥
 
uöt32_t
 
	gLOG_CHECKPOINT_1
 = 
OS_FILE_LOG_BLOCK_SIZE
;

257 
c⁄°ex¥
 
uöt32_t
 
	gLOG_ENCRYPTION
 = 2 * 
OS_FILE_LOG_BLOCK_SIZE
;

260 
c⁄°ex¥
 
uöt32_t
 
	gLOG_CHECKPOINT_2
 = 3 * 
OS_FILE_LOG_BLOCK_SIZE
;

263 
c⁄°ex¥
 
uöt32_t
 
	gLOG_FILE_HDR_SIZE
 = 4 * 
OS_FILE_LOG_BLOCK_SIZE
;

268 
c⁄°ex¥
 
ulöt
 
	gINNODB_LOG_WRITE_MAX_SIZE_DEFAULT
 = 4096;

271 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_CHECKPOINT_EVERY_DEFAULT
 = 1000;

279 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WRITER_SPIN_DELAY_DEFAULT
 = 250000;

283 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WRITER_TIMEOUT_DEFAULT
 = 10;

287 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_SPIN_CPU_ABS_LWM_DEFAULT
 = 80;

291 
c⁄°ex¥
 
uöt
 
	gINNODB_LOG_SPIN_CPU_PCT_HWM_DEFAULT
 = 50;

303 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WAIT_FOR_WRITE_SPIN_DELAY_DEFAULT
 = 25000;

306 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WAIT_FOR_WRITE_TIMEOUT_DEFAULT
 = 1000;

311 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WAIT_FOR_FLUSH_SPIN_DELAY_DEFAULT
 = 25000;

314 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WAIT_FOR_FLUSH_SPIN_HWM_DEFAULT
 = 400;

317 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WAIT_FOR_FLUSH_TIMEOUT_DEFAULT
 = 1000;

321 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_FLUSHER_SPIN_DELAY_DEFAULT
 = 250000;

325 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_FLUSHER_TIMEOUT_DEFAULT
 = 10;

328 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WRITE_NOTIFIER_SPIN_DELAY_DEFAULT
 = 0;

331 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WRITE_NOTIFIER_TIMEOUT_DEFAULT
 = 10;

334 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_FLUSH_NOTIFIER_SPIN_DELAY_DEFAULT
 = 0;

337 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_FLUSH_NOTIFIER_TIMEOUT_DEFAULT
 = 10;

340 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_BUFFER_SIZE_DEFAULT
 = 16 * 1024 * 1024UL;

343 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_BUFFER_SIZE_MIN
 = 256 * 1024UL;

346 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_BUFFER_SIZE_MAX
 = 
ULONG_MAX
;

349 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_RECENT_WRITTEN_SIZE_DEFAULT
 = 1024 * 1024;

352 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_RECENT_WRITTEN_SIZE_MIN
 = 
OS_FILE_LOG_BLOCK_SIZE
;

355 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_RECENT_WRITTEN_SIZE_MAX
 = 1024 * 1024 * 1024UL;

358 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_RECENT_CLOSED_SIZE_DEFAULT
 = 2 * 1024 * 1024;

361 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_RECENT_CLOSED_SIZE_MIN
 = 
OS_FILE_LOG_BLOCK_SIZE
;

364 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_RECENT_CLOSED_SIZE_MAX
 = 1024 * 1024 * 1024UL;

367 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_EVENTS_DEFAULT
 = 2048;

370 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_EVENTS_MIN
 = 1;

373 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_EVENTS_MAX
 = 1024 * 1024 * 1024UL;

376 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WRITE_AHEAD_SIZE_DEFAULT
 = 8192;

379 
c⁄°ex¥
 
ul⁄g
 
	gINNODB_LOG_WRITE_AHEAD_SIZE_MIN
 = 
OS_FILE_LOG_BLOCK_SIZE
;

382 
c⁄°ex¥
 
ulöt
 
	gINNODB_LOG_WRITE_AHEAD_SIZE_MAX
 =

383 
UNIV_PAGE_SIZE_DEF
;

386 
c⁄°ex¥
 
öt64_t
 
	gMLOG_TEST_VALUE
 = 10000;

389 
c⁄°ex¥
 
uöt32_t
 
	gMLOG_TEST_MAX_REC_LEN
 = 100;

392 
c⁄°ex¥
 
uöt32_t
 
	gMLOG_TEST_GROUP_MAX_REC_N
 = 100;

395 
c⁄°ex¥
 
uöt32_t
 
	gMLOG_TEST_REC_OVERHEAD
 = 37;

398 
log_t
 *
log_sys
;

402 
log_checksum_func_t
 
log_checksum_Æg‹ôhm_±r
;

404 #i‚de‡
UNIV_HOTBACKUP


406 
°d
::
unique_±r
<
Log_ã°
> 
log_ã°
;

421 
ölöe
 
boﬁ
 
log_block_gë_Êush_bô
(c⁄° 
byã
 *
log_block
);

426 
ölöe
 
log_block_£t_Êush_bô
(
byã
 *
log_block
, 
boﬁ
 
vÆue
);

440 
ölöe
 
uöt32_t
 
log_block_gë_hdr_no
(c⁄° 
byã
 *
log_block
);

447 
ölöe
 
log_block_£t_hdr_no
(
byã
 *
log_block
, 
uöt32_t
 
n
);

452 
ölöe
 
uöt32_t
 
log_block_gë_d©a_Àn
(c⁄° 
byã
 *
log_block
);

457 
ölöe
 
log_block_£t_d©a_Àn
(
byã
 *
log_block
, 
ulöt
 
Àn
);

464 
ölöe
 
uöt32_t
 
log_block_gë_fú°_ªc_group
(c⁄° 
byã
 *
log_block
);

470 
ölöe
 
log_block_£t_fú°_ªc_group
(
byã
 *
log_block
, 
uöt32_t
 
off£t
);

475 
ölöe
 
uöt32_t
 
log_block_gë_checkpoöt_no
(c⁄° 
byã
 *
log_block
);

480 
ölöe
 
log_block_£t_checkpoöt_no
(
byã
 *
log_block
, 
uöt64_t
 
no
);

488 
ölöe
 
uöt32_t
 
log_block_c⁄vît_l¢_to_no
(
l¢_t
 
l¢
);

493 
ölöe
 
uöt32_t
 
log_block_ˇlc_checksum
(c⁄° 
byã
 *
log_block
);

498 
ölöe
 
uöt32_t
 
log_block_ˇlc_checksum_¸c32
(c⁄° 
byã
 *
log_block
);

503 
ölöe
 
uöt32_t
 
log_block_ˇlc_checksum_n⁄e
(c⁄° 
byã
 *
log_block
);

508 
ölöe
 
uöt32_t
 
log_block_gë_checksum
(c⁄° 
byã
 *
log_block
);

513 
ölöe
 
log_block_£t_checksum
(
byã
 *
log_block
, 
uöt32_t
 
checksum
);

519 
ölöe
 
log_block_°‹e_checksum
(
byã
 *
log_block
);

533 
ölöe
 
l¢_t
 
log_gë_l¢
(c⁄° 
log_t
 &
log
);

537 
ölöe
 
l¢_t
 
log_gë_checkpoöt_l¢
(c⁄° 
log_t
 &
log
);

539 #i‚de‡
UNIV_HOTBACKUP


542 
ölöe
 
boﬁ
 
log_√eds_‰ì_check
();

553 
ölöe
 
log_‰ì_check
();

567 
c⁄°ex¥
 
ölöe
 
l¢_t
 
log_å™¶©e_¢_to_l¢
÷¢_à
¢
);

573 
ölöe
 
l¢_t
 
log_å™¶©e_l¢_to_¢
÷¢_à
l¢
);

581 
ölöe
 
boﬁ
 
log_l¢_vÆid©e
(
l¢_t
 
l¢
);

583 #i‚de‡
UNIV_HOTBACKUP


596 
ölöe
 
l¢_t
 
log_gë_checkpoöt_age
(c⁄° 
log_t
 &
log
);

614 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

615 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

619 
	$MY_COMPILER_DIAGNOSTIC_POP
()

624 
Log_h™dÀ
 
	`log_buf„r_ª£rve
(
log_t
 &
log
, 
size_t
 
Àn
);

636 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

637 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

641 
	$MY_COMPILER_DIAGNOSTIC_POP
()

652 
l¢_t
 
	`log_buf„r_wrôe
(
log_t
 &
log
, c⁄° 
Log_h™dÀ
 &
h™dÀ
, c⁄° 
byã
 *
°r
,

653 
size_t
 
°r_Àn
, 
l¢_t
 
°¨t_l¢
);

665 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

666 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

670 
	$MY_COMPILER_DIAGNOSTIC_POP
()

676 
	`log_buf„r_wrôe_com∂ëed
(
log_t
 &
log
, c⁄° 
Log_h™dÀ
 &
h™dÀ
,

677 
l¢_t
 
°¨t_l¢
,Ü¢_à
íd_l¢
);

696 
	`log_buf„r_£t_fú°_ªc‹d_group
(
log_t
 &
log
, c⁄° 
Log_h™dÀ
 &
h™dÀ
,

697 
l¢_t
 
ªc_group_íd_l¢
);

706 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

707 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

711 
	$MY_COMPILER_DIAGNOSTIC_POP
()

716 
	`log_buf„r_˛o£
(
log_t
 &
log
, c⁄° 
Log_h™dÀ
 &
h™dÀ
);

722 
	`log_buf„r_Êush_to_disk
(
log_t
 &
log
, 
boﬁ
 
sync
 = 
åue
);

727 
	`log_buf„r_sync_ö_background
();

731 
ölöe
 
	`log_buf„r_Êush_to_disk
(
boﬁ
 
sync
 = 
åue
);

734 
ölöe
 
l¢_t
 
	`log_buf„r_ªady_f‹_wrôe_l¢
(c⁄° 
log_t
 &
log
);

737 
ölöe
 
l¢_t
 
	`log_buf„r_dúty_∑ges_added_up_to_l¢
(c⁄° 
log_t
 &
log
);

740 
ölöe
 
l¢_t
 
	`log_buf„r_Êush_‹dî_œg
(c⁄° 
log_t
 &
log
);

749 
	`log_buf„r_gë_œ°_block
(
log_t
 &
log
, 
l¢_t
 &
œ°_l¢
, 
byã
 *
œ°_block
,

750 
uöt32_t
 &
block_Àn
);

755 
	`log_adv™˚_ªady_f‹_wrôe_l¢
(
log_t
 &
log
);

763 
	`log_ª˚¡_wrôãn_em±y_vÆid©e
(c⁄° 
log_t
 &
log
, 
l¢_t
 
begö
,

764 
l¢_t
 
íd
);

772 
	`log_ª˚¡_˛o£d_em±y_vÆid©e
(c⁄° 
log_t
 &
log
, 
l¢_t
 
begö
,Ü¢_à
íd
);

786 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

787 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

791 
	$MY_COMPILER_DIAGNOSTIC_POP
()

795 
	`log_waô_f‹_•a˚_ö_log_ª˚¡_˛o£d
(
log_t
 &
log
, 
l¢_t
 
l¢
);

800 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

801 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

805 
	$MY_COMPILER_DIAGNOSTIC_POP
()

809 
	`log_waô_f‹_•a˚_ö_log_buf
(
log_t
 &
log
, 
¢_t
 
íd_¢
);

815 
	`log_waô_f‹_•a˚
(
log_t
 &
log
, 
¢_t
 
íd_¢
);

821 
l¢_t
 
	`log_gë_‰ì_check_ˇ∑côy
(c⁄° 
log_t
 &
log
);

827 
l¢_t
 
	`log_gë_max_modifõd_age_async
(c⁄° 
log_t
 &
log
);

833 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

834 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

838 
	$MY_COMPILER_DIAGNOSTIC_POP
()

841 
	`log_‰ì_check_waô
(
log_t
 &
log
);

846 
	`log_upd©e_limôs
(
log_t
 &
log
);

852 
	`log_upd©e_buf_limô
(
log_t
 &
log
);

859 
	`log_upd©e_buf_limô
(
log_t
 &
log
, 
l¢_t
 
wrôe_l¢
);

866 
Waô_°©s
 
	`log_wrôe_up_to
(
log_t
 &
log
, 
l¢_t
 
l¢
, 
boﬁ
 
Êush_to_disk
);

871 
boﬁ
 
	`log_ªad_í¸y±i⁄
();

879 
boﬁ
 
	`log_wrôe_í¸y±i⁄
(
byã
 *
key
, byã *
iv
, boﬁ 
is_boŸ
);

885 
boﬁ
 
	`log_rŸ©e_í¸y±i⁄
();

888 
	`ªdo_rŸ©e_deÁu…_ma°î_key
();

895 
l¢_t
 
	`log_sync_Êush_l¢
(
log_t
 &
log
);

901 
	`log_ªque°_checkpoöt
(
log_t
 &
log
, 
boﬁ
 
sync
, 
l¢_t
 
l¢
);

907 
	`log_ªque°_checkpoöt
(
log_t
 &
log
, 
boﬁ
 
sync
);

914 
boﬁ
 
	`log_make_œã°_checkpoöt
(
log_t
 &
log
);

920 
boﬁ
 
	`log_make_œã°_checkpoöt
();

925 
	`log_fûes_hódî_ªad
(
log_t
 &
log
, 
uöt32_t
 
hódî
);

933 
	`log_fûes_hódî_fûl
(
byã
 *
buf
, 
l¢_t
 
°¨t_l¢
, c⁄° *
¸ót‹
,

934 
boﬁ
 
no_loggög
, boﬁ 
¸ash_unß„
);

940 
	`log_fûes_hódî_Êush
(
log_t
 &
log
, 
uöt32_t
 
¡h_fûe
, 
l¢_t
 
°¨t_l¢
);

946 
	`log_fûes_downgøde
(
log_t
 &
log
);

954 
	`log_fûes_wrôe_checkpoöt
(
log_t
 &
log
, 
l¢_t
 
√xt_checkpoöt_l¢
);

961 
	`log_fûes_upd©e_off£ts
(
log_t
 &
log
, 
l¢_t
 
l¢
);

965 
	`log_buf„r_x_lock_íãr
(
log_t
 &
log
);

969 
	`log_buf„r_x_lock_exô
(
log_t
 &
log
);

976 
uöt64_t
 
	`log_fûes_size_off£t
(c⁄° 
log_t
 &
log
, uöt64_à
off£t
);

982 
uöt64_t
 
	`log_fûes_ªÆ_off£t
(c⁄° 
log_t
 &
log
, uöt64_à
off£t
);

989 
uöt64_t
 
	`log_fûes_ªÆ_off£t_f‹_l¢
(c⁄° 
log_t
 &
log
, 
l¢_t
 
l¢
);

990 #i‚de‡
UNIV_HOTBACKUP


997 
boﬁ
 
	`log_buf„r_ªsize
(
log_t
 &
log
, 
size_t
 
√w_size
);

1007 
boﬁ
 
	`log_buf„r_ªsize_low
(
log_t
 &
log
, 
size_t
 
√w_size
, 
l¢_t
 
íd_l¢
);

1012 
	`log_wrôe_ahód_ªsize
(
log_t
 &
log
, 
size_t
 
√w_size
);

1017 
	`log_£t_di˘_max_Ælowed_checkpoöt_l¢
(
log_t
 &
log
, 
l¢_t
 
max_l¢
);

1022 
	`log_£t_di˘_≥rsi°_m¨gö
(
log_t
 &
log
, 
¢_t
 
m¨gö
);

1025 
	`log_ö¸ó£_c⁄cuºícy_m¨gö
(
log_t
 &
log
);

1031 
	`log_¥öt
(c⁄° 
log_t
 &
log
, 
FILE
 *
fûe
);

1035 
	`log_ª‰esh_°©s
(
log_t
 &
log
);

1043 
	`log_¸óã_fú°_checkpoöt
(
log_t
 &
log
, 
l¢_t
 
l¢
);

1048 
	`log_ˇlc_max_ages
(
log_t
 &
log
);

1055 
boﬁ
 
	`log_ˇlc_c⁄cuºícy_m¨gö
(
log_t
 &
log
);

1070 
boﬁ
 
	`log_sys_öô
(
uöt32_t
 
n_fûes
, 
uöt64_t
 
fûe_size
, 
•a˚_id_t
 
•a˚_id
);

1081 
	`log_°¨t
(
log_t
 &
log
, 
checkpoöt_no_t
 
checkpoöt_no
, 
l¢_t
 
checkpoöt_l¢
,

1082 
l¢_t
 
°¨t_l¢
);

1087 
	`log_wrôî_thªad_a˘ive_vÆid©e
(c⁄° 
log_t
 &
log
);

1092 
	`log_background_wrôe_thªads_a˘ive_vÆid©e
(c⁄° 
log_t
 &
log
);

1097 
	`log_background_thªads_a˘ive_vÆid©e
(c⁄° 
log_t
 &
log
);

1102 
	`log_background_thªads_öa˘ive_vÆid©e
(c⁄° 
log_t
 &
log
);

1108 
	`log_°¨t_background_thªads
(
log_t
 &
log
);

1115 
	`log_°›_background_thªads
(
log_t
 &
log
);

1119 
	`log_°›_background_thªads_nowaô
(
log_t
 &
log
);

1122 
	`log_wake_thªads
(
log_t
 &
log
);

1129 
	`log_c⁄åﬁ_wrôî_thªads
(
log_t
 &
log
);

1132 
	`log_sys_˛o£
();

1136 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

1137 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

1141 
	$MY_COMPILER_DIAGNOSTIC_POP
()

1144 
	`log_wrôî
(
log_t
 *
log_±r
);

1148 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

1149 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

1153 
	$MY_COMPILER_DIAGNOSTIC_POP
()

1156 
	`log_Êushî
(
log_t
 *
log_±r
);

1160 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

1161 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

1165 
	$MY_COMPILER_DIAGNOSTIC_POP
()

1168 
	`log_Êush_nŸifõr
(
log_t
 *
log_±r
);

1172 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

1173 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

1177 
	$MY_COMPILER_DIAGNOSTIC_POP
()

1180 
	`log_wrôe_nŸifõr
(
log_t
 *
log_±r
);

1184 
	$MY_COMPILER_DIAGNOSTIC_PUSH
()

1185 
	$MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

1189 
	$MY_COMPILER_DIAGNOSTIC_POP
()

1192 
	`log_checkpoöãr
(
log_t
 *
log_±r
);

1194 
	#log_checkpoöãr_muãx_íãr
(
log
) \

1195 
	`muãx_íãr
(&((
log
).
checkpoöãr_muãx
))

	)

1197 
	#log_checkpoöãr_muãx_exô
(
log
Ë
	`muãx_exô
(&(÷og).
checkpoöãr_muãx
))

	)

1199 
	#log_checkpoöãr_muãx_own
(
log
) \

1200 (
	`muãx_own
(&((
log
).
checkpoöãr_muãx
)Ë|| !
	`log_checkpoöãr_is_a˘ive
())

	)

1202 
	#log_˛o£r_muãx_íãr
(
log
Ë
	`muãx_íãr
(&(÷og).
˛o£r_muãx
))

	)

1204 
	#log_˛o£r_muãx_íãr_nowaô
(
log
) \

1205 
	`muãx_íãr_nowaô
(&((
log
).
˛o£r_muãx
))

	)

1207 
	#log_˛o£r_muãx_exô
(
log
Ë
	`muãx_exô
(&(÷og).
˛o£r_muãx
))

	)

1209 
	#log_Êushî_muãx_íãr
(
log
Ë
	`muãx_íãr
(&(÷og).
Êushî_muãx
))

	)

1211 
	#log_Êushî_muãx_íãr_nowaô
(
log
) \

1212 
	`muãx_íãr_nowaô
(&((
log
).
Êushî_muãx
))

	)

1214 
	#log_Êushî_muãx_exô
(
log
Ë
	`muãx_exô
(&(÷og).
Êushî_muãx
))

	)

1216 
	#log_Êushî_muãx_own
(
log
) \

1217 (
	`muãx_own
(&((
log
).
Êushî_muãx
)Ë|| !
	`log_Êushî_is_a˘ive
())

	)

1219 
	#log_Êush_nŸifõr_muãx_íãr
(
log
) \

1220 
	`muãx_íãr
(&((
log
).
Êush_nŸifõr_muãx
))

	)

1222 
	#log_Êush_nŸifõr_muãx_exô
(
log
) \

1223 
	`muãx_exô
(&((
log
).
Êush_nŸifõr_muãx
))

	)

1225 
	#log_Êush_nŸifõr_muãx_own
(
log
) \

1226 (
	`muãx_own
(&((
log
).
Êush_nŸifõr_muãx
)Ë|| !
	`log_Êush_nŸifõr_is_a˘ive
())

	)

1228 
	#log_wrôî_muãx_íãr
(
log
Ë
	`muãx_íãr
(&(÷og).
wrôî_muãx
))

	)

1230 
	#log_wrôî_muãx_íãr_nowaô
(
log
) \

1231 
	`muãx_íãr_nowaô
(&((
log
).
wrôî_muãx
))

	)

1233 
	#log_wrôî_muãx_exô
(
log
Ë
	`muãx_exô
(&(÷og).
wrôî_muãx
))

	)

1235 
	#log_wrôî_muãx_own
(
log
) \

1236 (
	`muãx_own
(&((
log
).
wrôî_muãx
)Ë|| !
	`log_wrôî_is_a˘ive
())

	)

1238 
	#log_wrôe_nŸifõr_muãx_íãr
(
log
) \

1239 
	`muãx_íãr
(&((
log
).
wrôe_nŸifõr_muãx
))

	)

1241 
	#log_wrôe_nŸifõr_muãx_exô
(
log
) \

1242 
	`muãx_exô
(&((
log
).
wrôe_nŸifõr_muãx
))

	)

1244 
	#log_wrôe_nŸifõr_muãx_own
(
log
) \

1245 (
	`muãx_own
(&((
log
).
wrôe_nŸifõr_muãx
)Ë|| !
	`log_wrôe_nŸifõr_is_a˘ive
())

	)

1247 
	#log_limôs_muãx_íãr
(
log
Ë
	`muãx_íãr
(&(÷og).
limôs_muãx
))

	)

1249 
	#log_limôs_muãx_exô
(
log
Ë
	`muãx_exô
(&(÷og).
limôs_muãx
))

	)

1251 
	#log_limôs_muãx_own
(
log
Ë
	`muãx_own
(&÷og).
limôs_muãx
)

	)

1253 
	#LOG_SYNC_POINT
(
a
) \

1255 
	`DEBUG_SYNC_C
(
a
); \

1256 
	`DBUG_EXECUTE_IF
(
a
, 
	`DBUG_SUICIDE
();); \

1257 i‡(
log_ã°
 !
nuŒ±r
) { \

1258 
log_ã°
->
	`sync_poöt
(
a
); \

1260 
	}
} 0)

	)

1265 
log_posôi⁄_lock
(
log_t
 &
log
);

1269 
log_posôi⁄_u∆ock
(
log_t
 &
log
);

1275 
log_posôi⁄_cﬁÀ˘_l¢_öfo
(c⁄° 
log_t
 &
log
, 
l¢_t
 *
cuºít_l¢
,

1276 
l¢_t
 *
checkpoöt_l¢
);

1280 
ölöe
 
boﬁ
 
log_wrôî_is_a˘ive
();

1284 
ölöe
 
boﬁ
 
log_wrôe_nŸifõr_is_a˘ive
();

1288 
ölöe
 
boﬁ
 
log_Êushî_is_a˘ive
();

1292 
ölöe
 
boﬁ
 
log_Êush_nŸifõr_is_a˘ive
();

1296 
ölöe
 
boﬁ
 
log_checkpoöãr_is_a˘ive
();

1304 
boﬁ
 
log_fûe_hódî_fûl_í¸y±i⁄
(
byã
 *
buf
, byã *
key
, byã *
iv
,

1305 
boﬁ
 
is_boŸ
, boﬁ 
í¸y±_key
);

1309 
log_≥rsi°_dißbÀ
(
log_t
 &
log
);

1313 
log_≥rsi°_íabÀ
(
log_t
 &
log
);

1317 
log_≥rsi°_¸ash_ß„
(
log_t
 &
log
);

1321 #ifde‡
UNIV_DEBUG


1325 
meb_log_¥öt_fûe_hdr
(
byã
 *
block
);

1331 
	~"log0log.ic
"

	@log0log.ic

35 
	~<c°rög
>

37 
	~"mach0d©a.h
"

38 
	~"os0fûe.h
"

39 
	~"§v0m⁄.h
"

40 
	~"§v0§v.h
"

41 
	~"ut0¸c32.h
"

43 #ifde‡
UNIV_LOG_LSN_DEBUG


44 
	~"må0ty≥s.h
"

51 
ölöe
 
boﬁ
 
	$log_block_gë_Êush_bô
(c⁄° 
byã
 *
log_block
) {

52 i‡(
LOG_BLOCK_FLUSH_BIT_MASK
 &

53 
	`mach_ªad_‰om_4
(
log_block
 + 
LOG_BLOCK_HDR_NO
)) {

54  (
åue
);

57  (
Ál£
);

58 
	}
}

60 
ölöe
 
	$log_block_£t_Êush_bô
(
byã
 *
log_block
, 
boﬁ
 
vÆue
) {

61 
uöt32_t
 
fõld
 = 
	`mach_ªad_‰om_4
(
log_block
 + 
LOG_BLOCK_HDR_NO
);

63 
	`ut_a
(
fõld
 != 0);

65 i‡(
vÆue
) {

66 
fõld
 = fõld | 
LOG_BLOCK_FLUSH_BIT_MASK
;

68 
fõld
 = fõld & ~
LOG_BLOCK_FLUSH_BIT_MASK
;

71 
	`mach_wrôe_to_4
(
log_block
 + 
LOG_BLOCK_HDR_NO
, 
fõld
);

72 
	}
}

74 
ölöe
 
boﬁ
 
	$log_block_gë_í¸y±_bô
(c⁄° 
byã
 *
log_block
) {

75 i‡(
LOG_BLOCK_ENCRYPT_BIT_MASK
 &

76 
	`mach_ªad_‰om_2
(
log_block
 + 
LOG_BLOCK_HDR_DATA_LEN
)) {

77  (
åue
);

80  (
Ál£
);

81 
	}
}

83 
ölöe
 
	$log_block_£t_í¸y±_bô
(
byã
 *
log_block
, 
iboﬁ
 
vÆ
) {

84 
uöt32_t
 
fõld
;

86 
fõld
 = 
	`mach_ªad_‰om_2
(
log_block
 + 
LOG_BLOCK_HDR_DATA_LEN
);

88 i‡(
vÆ
) {

89 
fõld
 = fõld | 
LOG_BLOCK_ENCRYPT_BIT_MASK
;

91 
fõld
 = fõld & ~
LOG_BLOCK_ENCRYPT_BIT_MASK
;

94 
	`mach_wrôe_to_2
(
log_block
 + 
LOG_BLOCK_HDR_DATA_LEN
, 
fõld
);

95 
	}
}

97 
ölöe
 
uöt32_t
 
	$log_block_gë_hdr_no
(c⁄° 
byã
 *
log_block
) {

98  (~
LOG_BLOCK_FLUSH_BIT_MASK
 &

99 
	`mach_ªad_‰om_4
(
log_block
 + 
LOG_BLOCK_HDR_NO
));

100 
	}
}

102 
ölöe
 
	$log_block_£t_hdr_no
(
byã
 *
log_block
, 
uöt32_t
 
n
) {

103 
	`ut_a
(
n
 > 0);

104 
	`ut_a
(
n
 < 
LOG_BLOCK_FLUSH_BIT_MASK
);

105 
	`ut_a
(
n
 <
LOG_BLOCK_MAX_NO
);

107 
	`mach_wrôe_to_4
(
log_block
 + 
LOG_BLOCK_HDR_NO
, 
n
);

108 
	}
}

110 
ölöe
 
uöt32_t
 
	$log_block_gë_d©a_Àn
(c⁄° 
byã
 *
log_block
) {

111  (
	`mach_ªad_‰om_2
(
log_block
 + 
LOG_BLOCK_HDR_DATA_LEN
));

112 
	}
}

114 
ölöe
 
	$log_block_£t_d©a_Àn
(
byã
 *
log_block
, 
ulöt
 
Àn
) {

115 
	`mach_wrôe_to_2
(
log_block
 + 
LOG_BLOCK_HDR_DATA_LEN
, 
Àn
);

116 
	}
}

118 
ölöe
 
uöt32_t
 
	$log_block_gë_fú°_ªc_group
(c⁄° 
byã
 *
log_block
) {

119  (
	`mach_ªad_‰om_2
(
log_block
 + 
LOG_BLOCK_FIRST_REC_GROUP
));

120 
	}
}

122 
ölöe
 
	$log_block_£t_fú°_ªc_group
(
byã
 *
log_block
, 
uöt32_t
 
off£t
) {

123 
	`mach_wrôe_to_2
(
log_block
 + 
LOG_BLOCK_FIRST_REC_GROUP
, 
off£t
);

124 
	}
}

126 
ölöe
 
uöt32_t
 
	$log_block_gë_checkpoöt_no
(c⁄° 
byã
 *
log_block
) {

127  (
	`mach_ªad_‰om_4
(
log_block
 + 
LOG_BLOCK_CHECKPOINT_NO
));

128 
	}
}

130 
ölöe
 
	$log_block_£t_checkpoöt_no
(
byã
 *
log_block
, 
uöt64_t
 
no
) {

131 
	`mach_wrôe_to_4
(
log_block
 + 
LOG_BLOCK_CHECKPOINT_NO
, (
uöt32_t
)
no
);

132 
	}
}

134 
ölöe
 
uöt32_t
 
	$log_block_c⁄vît_l¢_to_no
(
l¢_t
 
l¢
) {

135  ((
uöt32_t
)(
l¢
 / 
OS_FILE_LOG_BLOCK_SIZE
Ë% 
LOG_BLOCK_MAX_NO
 + 1);

136 
	}
}

138 
ölöe
 
uöt32_t
 
	$log_block_ˇlc_checksum
(c⁄° 
byã
 *
log_block
) {

139  (
log_checksum_Æg‹ôhm_±r
.
	`lﬂd
()(
log_block
));

140 
	}
}

142 
ölöe
 
uöt32_t
 
	$log_block_ˇlc_checksum_¸c32
(c⁄° 
byã
 *
log_block
) {

143  (
	`ut_¸c32
(
log_block
, 
OS_FILE_LOG_BLOCK_SIZE
 - 
LOG_BLOCK_TRL_SIZE
));

144 
	}
}

146 
ölöe
 
uöt32_t
 
	$log_block_ˇlc_checksum_n⁄e
(c⁄° 
byã
 *
log_block
) {

147  (
LOG_NO_CHECKSUM_MAGIC
);

148 
	}
}

150 
ölöe
 
uöt32_t
 
	$log_block_gë_checksum
(c⁄° 
byã
 *
log_block
) {

151  (
	`mach_ªad_‰om_4
(
log_block
 + 
OS_FILE_LOG_BLOCK_SIZE
 -

152 
LOG_BLOCK_CHECKSUM
));

153 
	}
}

155 
ölöe
 
	$log_block_£t_checksum
(
byã
 *
log_block
, 
uöt32_t
 
checksum
) {

156 
	`mach_wrôe_to_4
(
log_block
 + 
OS_FILE_LOG_BLOCK_SIZE
 - 
LOG_BLOCK_CHECKSUM
,

157 
checksum
);

158 
	}
}

160 
ölöe
 
	$log_block_°‹e_checksum
(
byã
 *
log_block
) {

161 
	`log_block_£t_checksum
(
log_block
, 
	`log_block_ˇlc_checksum
(log_block));

162 
	}
}

166 #i‚de‡
UNIV_HOTBACKUP


168 
ölöe
 
¢_t
 
	$log_gë_¢
(c⁄° 
log_t
 &
log
) {

169 c⁄° 
¢_t
 
¢
 = 
log
.¢.
	`lﬂd
();

170 i‡((
¢
 & 
SN_LOCKED
) != 0) {

171  
log
.
¢_locked
.
	`lﬂd
();

173  
¢
;

175 
	}
}

177 
ölöe
 
boﬁ
 
	$log_√eds_‰ì_check
(c⁄° 
log_t
 &
log
) {

178 c⁄° 
¢_t
 
¢
 = 
	`log_gë_¢
(
log
);

179  (
¢
 > 
log
.
‰ì_check_limô_¢
.
	`lﬂd
());

180 
	}
}

182 
ölöe
 
boﬁ
 
	$log_√eds_‰ì_check
(Ë{  (
	`log_√eds_‰ì_check
(*
log_sys
)); 
	}
}

190 
ölöe
 
	$log_‰ì_check
() {

191 
log_t
 &
log
 = *
log_sys
;

193 #ifde‡
UNIV_DEBUG


198 c⁄° 
œtch_Àvñ_t
 
œtches
[] = {

199 
SYNC_NO_ORDER_CHECK
,

200 
SYNC_RSEGS
,

201 
SYNC_UNDO_DDL
,

202 
SYNC_UNDO_SPACES
,

203 
SYNC_FTS_CACHE
,

204 
SYNC_DICT
,

205 
SYNC_DICT_OPERATION
,

206 
SYNC_INDEX_TREE


209 
sync_Ælowed_œtches
 
	`check
(
œtches
,

210 
œtches
 + (latches) / (*latches));

212 i‡(
	`sync_check_ôî©e
(
check
)) {

213 #i‚de‡
UNIV_NO_ERR_MSGS


214 
ib
::
	`îr‹
(
ER_IB_MSG_1381
)

216 
ib
::
	`îr‹
()

219 
ut_îr‹
;

226 i‡(
	`log_√eds_‰ì_check
(
log
)) {

234 
	`log_‰ì_check_waô
(
log
);

236 
	}
}

238 
c⁄°ex¥
 
ölöe
 
l¢_t
 
	$log_å™¶©e_¢_to_l¢
(
l¢_t
 
¢
) {

239  (
¢
 / 
LOG_BLOCK_DATA_SIZE
 * 
OS_FILE_LOG_BLOCK_SIZE
 +

240 
¢
 % 
LOG_BLOCK_DATA_SIZE
 + 
LOG_BLOCK_HDR_SIZE
);

241 
	}
}

243 
ölöe
 
l¢_t
 
	$log_å™¶©e_l¢_to_¢
(
l¢_t
 
l¢
) {

246 c⁄° 
¢_t
 
¢
 = 
l¢
 / 
OS_FILE_LOG_BLOCK_SIZE
 * 
LOG_BLOCK_DATA_SIZE
;

250 c⁄° 
uöt32_t
 
diff
 = 
l¢
 % 
OS_FILE_LOG_BLOCK_SIZE
;

252 i‡(
diff
 < 
LOG_BLOCK_HDR_SIZE
) {

257  (
¢
);

260 i‡(
diff
 > 
OS_FILE_LOG_BLOCK_SIZE
 - 
LOG_BLOCK_TRL_SIZE
) {

265  (
¢
 + 
LOG_BLOCK_DATA_SIZE
);

269  (
¢
 + 
diff
 - 
LOG_BLOCK_HDR_SIZE
);

270 
	}
}

274 
ölöe
 
boﬁ
 
	$log_l¢_vÆid©e
(
l¢_t
 
l¢
) {

275 c⁄° 
uöt32_t
 
off£t
 = 
l¢
 % 
OS_FILE_LOG_BLOCK_SIZE
;

277  (
l¢
 >
LOG_START_LSN
 && 
off£t
 >
LOG_BLOCK_HDR_SIZE
 &&

278 
off£t
 < 
OS_FILE_LOG_BLOCK_SIZE
 - 
LOG_BLOCK_TRL_SIZE
);

279 
	}
}

281 #i‚de‡
UNIV_HOTBACKUP


284 
ölöe
 
uöt64_t
 
	$log_gë_fûe_ˇ∑côy
(c⁄° 
log_t
 &
log
) {

285  (
log
.
fûes_ªÆ_ˇ∑côy
);

286 
	}
}

288 
ölöe
 
l¢_t
 
	$log_gë_l¢
(c⁄° 
log_t
 &
log
) {

289  
	`log_å™¶©e_¢_to_l¢
(
	`log_gë_¢
(
log
));

290 
	}
}

292 
ölöe
 
l¢_t
 
	$log_gë_checkpoöt_l¢
(c⁄° 
log_t
 &
log
) {

293  (
log
.
œ°_checkpoöt_l¢
.
	`lﬂd
());

294 
	}
}

296 
ölöe
 
l¢_t
 
	$log_gë_checkpoöt_age
(c⁄° 
log_t
 &
log
) {

297 c⁄° 
l¢_t
 
œ°_checkpoöt_l¢
 = 
log
.œ°_checkpoöt_l¢.
	`lﬂd
();

299 c⁄° 
l¢_t
 
cuºít_l¢
 = 
	`log_gë_l¢
(
log
);

301 i‡(
cuºít_l¢
 <
œ°_checkpoöt_l¢
) {

312  (
cuºít_l¢
 - 
œ°_checkpoöt_l¢
);

313 
	}
}

315 
ölöe
 
	$log_buf„r_Êush_to_disk
(
boﬁ
 
sync
) {

316 
	`log_buf„r_Êush_to_disk
(*
log_sys
, 
sync
);

317 
	}
}

319 #i‡
deföed
(
UNIV_HOTBACKUP
Ë&& deföed(
UNIV_DEBUG
)

322 
UNIV_INLINE


323 
	$meb_log_¥öt_fûe_hdr
(
byã
 *
block
) {

324 
ib
::
	`öfo
(
ER_IB_MSG_626
) << "Log file header:"

326 << 
	`mach_ªad_‰om_4
(
block
 + 
LOG_HEADER_FORMAT
)

328 << 
	`mach_ªad_‰om_4
(
block
 + 
LOG_HEADER_PAD1
)

330 << 
	`mach_ªad_‰om_8
(
block
 + 
LOG_HEADER_START_LSN
)

331 << " cª©‹ '" << 
block
 + 
LOG_HEADER_CREATOR
 << "'"

332 << " checksum " << 
	`log_block_gë_checksum
(
block
);

333 
	}
}

336 
ölöe
 
l¢_t
 
	$log_buf„r_ªady_f‹_wrôe_l¢
(c⁄° 
log_t
 &
log
) {

337  (
log
.
ª˚¡_wrôãn
.
	`èû
());

338 
	}
}

340 
ölöe
 
l¢_t
 
	$log_buf„r_dúty_∑ges_added_up_to_l¢
(c⁄° 
log_t
 &
log
) {

341  (
log
.
ª˚¡_˛o£d
.
	`èû
());

342 
	}
}

344 
ölöe
 
l¢_t
 
	$log_buf„r_Êush_‹dî_œg
(c⁄° 
log_t
 &
log
) {

345  (
log
.
ª˚¡_˛o£d
.
	`ˇ∑côy
());

346 
	}
}

348 
ölöe
 
boﬁ
 
	$log_wrôe_to_fûe_ªque°s_¨e_‰equít
(
uöt64_t
 
öãrvÆ
) {

349  (
öãrvÆ
 < 1000);

350 
	}
}

352 
ölöe
 
boﬁ
 
	$log_wrôe_to_fûe_ªque°s_¨e_‰equít
(c⁄° 
log_t
 &
log
) {

353  (
	`log_wrôe_to_fûe_ªque°s_¨e_‰equít
(

354 
log
.
wrôe_to_fûe_ªque°s_öãrvÆ
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
)));

355 
	}
}

357 
ölöe
 
boﬁ
 
	$log_wrôî_is_a˘ive
() {

358  (
	`§v_thªad_is_a˘ive
(
§v_thªads
.
m_log_wrôî
));

359 
	}
}

361 
ölöe
 
boﬁ
 
	$log_wrôe_nŸifõr_is_a˘ive
() {

362  (
	`§v_thªad_is_a˘ive
(
§v_thªads
.
m_log_wrôe_nŸifõr
));

363 
	}
}

365 
ölöe
 
boﬁ
 
	$log_Êushî_is_a˘ive
() {

366  (
	`§v_thªad_is_a˘ive
(
§v_thªads
.
m_log_Êushî
));

367 
	}
}

369 
ölöe
 
boﬁ
 
	$log_Êush_nŸifõr_is_a˘ive
() {

370  (
	`§v_thªad_is_a˘ive
(
§v_thªads
.
m_log_Êush_nŸifõr
));

371 
	}
}

373 
ölöe
 
boﬁ
 
	$log_checkpoöãr_is_a˘ive
() {

374  (
	`§v_thªad_is_a˘ive
(
§v_thªads
.
m_log_checkpoöãr
));

375 
	}
}

	@log0meb.h

26 #i‚de‡
log0meb_h


27 
	#log0meb_h


	)

29 
	~"univ.i
"

31 
˛ass
 
	gTHD
;

32 
	gSYS_VAR
;

33 
	g°_mysql_vÆue
;

34 
˛ass
 
	gönodb_£ssi⁄_t
;

36 
«me•a˚
 
	gmeb
 {

39 
mysql_pfs_key_t
 
ªdo_log_¨chive_c⁄sumî_thªad_key
;

42 
mysql_pfs_key_t
 
ªdo_log_¨chive_fûe_key
;

45 *
ªdo_log_¨chive_dús
;

56 
vÆid©e_ªdo_log_¨chive_dús
(
THD
 *
thd
 
MY_ATTRIBUTE
((
unu£d
)),

57 
SYS_VAR
 *
v¨
 
MY_ATTRIBUTE
((
unu£d
)),

58 *
ßve
, 
°_mysql_vÆue
 *
vÆue
);

64 
ªdo_log_¨chive_öô
();

70 
ªdo_log_¨chive_deöô
();

81 
ªdo_log_¨chive_£ssi⁄_íd
(
önodb_£ssi⁄_t
 *
£ssi⁄
);

105 
ªdo_log_¨chive_¥odu˚
(c⁄° 
byã
 *
wrôe_buf
,

106 c⁄° 
size_t
 
wrôe_size
);

111 
boﬁ
 
ªdo_log_¨chive_is_a˘ive
();

121 
boﬁ
 
ªgi°î_¥ivûege
(c⁄° *
¥iv_«me
);

	@log0recv.h

33 #i‚de‡
log0ªcv_h


34 
	#log0ªcv_h


	)

36 
	~"buf0ty≥s.h
"

37 
	~"di˘0ty≥s.h
"

38 
	~"hash0hash.h
"

39 
	~"log0ty≥s.h
"

40 
	~"må0ty≥s.h
"

41 
	~"os0fûe.h
"

42 
	~"univ.i
"

43 
	~"ut0byã.h
"

44 
	~"ut0√w.h
"

46 
	~<li°
>

47 
	~<£t
>

48 
	~<un‹dîed_m≠
>

50 
˛ass
 
	gMëad©aRecovî
;

51 
˛ass
 
	gPîsi°ítTabÀMëad©a
;

53 #ifde‡
UNIV_HOTBACKUP


55 
	gªcv_addr_t
;

58 
°d
::
li°
<°d::
∑ú
<
•a˚_id_t
, 
l¢_t
>> 
ödex_lﬂd_li°
;

60 vﬁ©ûê
l¢_t
 
backup_ªdo_log_Êushed_l¢
;

62 
boﬁ
 
ªcv_is_makög_a_backup
;

77 
meb_sˇn_log_£g
(
byã
 *
buf
, 
ulöt
 
buf_Àn
, 
l¢_t
 *
sˇ¬ed_l¢
,

78 
uöt32_t
 *
sˇ¬ed_checkpoöt_no
, uöt32_à*
block_no
,

79 
ulöt
 *
n_byãs_sˇ¬ed
, 
boﬁ
 *
has_í¸y±ed_log
);

88 
	$ªcv_ªcovî_∑ge_func
(
buf_block_t
 *
block
Ë
SUPPRESS_UBSAN_CLANG10
;

98 
	#ªcv_ªcovî_∑ge
(
jri
, 
block
Ë
	`ªcv_ªcovî_∑ge_func
(block)

	)

101 
	`meb_≠∂y_log_ªcs
();

107 
	`meb_≠∂y_log_ªcs_vü_ˇŒback
(

108 (*
≠∂y_log_ªc‹d_fun˘i⁄
)(
ªcv_addr_t
 *),

109 (*
waô_tûl_d⁄e_fun˘i⁄
)());

114 
	`meb_≠∂y_log_ªc‹d
(
ªcv_addr_t
 *
ªcv_addr
, 
buf_block_t
 *
block
);

121 
	`meb_fû_«me_¥o˚ss
(c⁄° *
«me
, 
•a˚_id_t
 
•a˚_id
);

140 
boﬁ
 
	`meb_sˇn_log_ªcs
(
ulöt
 
avaûabÀ_mem‹y
, c⁄° 
byã
 *
buf
, ulöà
Àn
,

141 
l¢_t
 
checkpoöt_l¢
,Ü¢_à
°¨t_l¢
,

142 
l¢_t
 *
c⁄tiguous_l¢
,Ü¢_à*
group_sˇ¬ed_l¢
);

155 
boﬁ
 
	`meb_ªad_log_í¸y±i⁄
(
IOReque°
 &
í¸y±i⁄_ªque°
,

156 
byã
 *
í¸y±i⁄_öfo
 = 
nuŒ±r
);

158 
boﬁ
 
	`ªcv_check_log_hódî_checksum
(c⁄° 
byã
 *
buf
);

163 
boﬁ
 
	`log_block_checksum_is_ok
(c⁄° 
byã
 *
block
);

175 
	$ªcv_ªcovî_∑ge_func
(
boﬁ
 
ju°_ªad_ö
,

176 
buf_block_t
 *
block
Ë
SUPPRESS_UBSAN_CLANG10
;

185 
	#ªcv_ªcovî_∑ge
(
jri
, 
block
Ë
	`ªcv_ªcovî_∑ge_func
(jri, block)

	)

190 
	`ªcv_sys_‰ì
();

193 
	`ªcv_sys_v¨_öô
();

195 #ifde‡
UNIV_HOTBACKUP


198 
size_t
 
	`meb_hóp_u£d
();

203 
UNIV_INLINE


204 
boﬁ
 
	$ªcv_ªcovîy_is_⁄
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

212 
dbîr_t
 
	$ªcv_ªcovîy_‰om_checkpoöt_°¨t
(
log_t
 &
log
, 
l¢_t
 
Êush_l¢
)

213 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

219 
Mëad©aRecovî
 *
	$ªcv_ªcovîy_‰om_checkpoöt_föish
(
log_t
 &
log
, 
boﬁ
 
ab‹tög
)

220 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

223 
	`ªcv_sys_¸óã
();

226 
	`ªcv_sys_˛o£
();

230 
	`ªcv_sys_öô
(
ulöt
 
max_mem
);

237 
l¢_t
 
	`ªcv_ˇlc_l¢_⁄_d©a_add
÷¢_à
l¢
, 
uöt64_t
 
Àn
);

250 
	`ªcv_≠∂y_hashed_log_ªcs
(
log_t
 &
log
, 
boﬁ
 
Ælow_ibuf
);

252 #i‡
	`deföed
(
UNIV_DEBUG
Ë|| deföed(
UNIV_HOTBACKUP
)

256 c⁄° *
	`gë_mlog_°rög
(
mlog_id_t
 
ty≥
);

260 
	sªcv_d©a_t
 {

265 
ªcv_d©a_t
 *
√xt
;

269 
	sªcv_t
 {

270 
usög
 
Node
 = 
	`UT_LIST_NODE_T
(
ªcv_t
);

273 
mlog_id_t
 
ty≥
;

276 
ulöt
 
Àn
;

279 
ªcv_d©a_t
 *
d©a
;

284 
l¢_t
 
°¨t_l¢
;

289 
l¢_t
 
íd_l¢
;

292 
Node
 
ªc_li°
;

296 
	eªcv_addr_°©e
 {

299 
RECV_NOT_PROCESSED
,

302 
RECV_BEING_READ
,

305 
RECV_BEING_PROCESSED
,

308 
RECV_PROCESSED
,

312 
RECV_DISCARDED


316 
	sªcv_addr_t
 {

317 
usög
 
Li°
 = 
	`UT_LIST_BASE_NODE_T
(
ªcv_t
);

320 
ªcv_addr_°©e
 
°©e
;

323 
•a˚_id_t
 
•a˚
;

326 
∑ge_no_t
 
∑ge_no
;

329 
Li°
 
ªc_li°
;

333 
«me•a˚
 
dblwr
 {

334 
«me•a˚
 
ªcv
 {

335 
˛ass
 
DBLWR
;

337 
	}
}

341 ˛as†
	cMëad©aRecovî
 {

342 
usög
 
	mPîsi°ítTabÀs
 = 
°d
::
m≠
<

343 
èbÀ_id_t
, 
	mPîsi°ítTabÀMëad©a
 *, 
	m°d
::
Àss
<table_id_t>,

344 
	mut_Æloˇt‹
<
	m°d
::
∑ú
<c⁄° 
èbÀ_id_t
, 
	mPîsi°ítTabÀMëad©a
 *>>>;

346 
	mpublic
:

348 
	$Mëad©aRecovî
(Ë
UNIV_NOTHROW
 {}

351 ~
	`Mëad©aRecovî
();

361 
byã
 *
	`∑r£Mëad©aLog
(
èbÀ_id_t
 
id
, 
uöt64_t
 
vîsi⁄
, byã *
±r
, byã *
íd
);

365 
	`≠∂y
();

369 
	`°‹e
();

373 
boﬁ
 
	$em±y
(Ëc⁄° {  (
m_èbÀs
.
	`em±y
()); 
	}
}

375 
	g¥iv©e
:

380 
Pîsi°ítTabÀMëad©a
 *
gëMëad©a
(
èbÀ_id_t
 
id
);

382 
	g¥iv©e
:

384 
Pîsi°ítTabÀs
 
m_èbÀs
;

388 
	sªcv_sys_t
 {

389 
usög
 
	mPages
 =

390 
°d
::
un‹dîed_m≠
<
∑ge_no_t
, 
	mªcv_addr_t
 *, 
	m°d
::
hash
<page_no_t>,

391 
	m°d
::
equÆ_to
<
∑ge_no_t
>>;

394 
	sS∑˚
 {

397 
ex∂icô
 
S∑˚
(
mem_hóp_t
 *
hóp
Ë: 
m_hóp
(hóp), 
m_∑ges
() {}

400 
S∑˚
(Ë: 
m_hóp
(), 
m_∑ges
() {}

403 
mem_hóp_t
 *
	mm_hóp
;

406 
Pages
 
	mm_∑ges
;

409 
usög
 
	mMissög_Ids
 = 
°d
::
£t
<
•a˚_id_t
>;

411 
usög
 
	mS∑˚s
 = 
°d
::
un‹dîed_m≠
<
•a˚_id_t
, 
	mS∑˚
, 
	m°d
::
hash
<space_id_t>,

412 
	m°d
::
equÆ_to
<
•a˚_id_t
>>;

415 
	sEn¸y±i⁄_Key
 {

417 
•a˚_id_t
 
	m•a˚_id
;

420 
l¢_t
 
	ml¢
;

423 
byã
 *
	m±r
;

426 
byã
 *
	miv
;

429 
usög
 
	mEn¸y±i⁄_Keys
 = 
°d
::
ve˘‹
<
En¸y±i⁄_Key
>;

431 #i‚de‡
UNIV_HOTBACKUP


435 
ib_muãx_t
 
	mmuãx
;

439 
ib_muãx_t
 
	mwrôî_muãx
;

442 
os_evít_t
 
	mÊush_°¨t
;

445 
os_evít_t
 
	mÊush_íd
;

449 
buf_Êush_t
 
	mÊush_ty≥
;

452 
boﬁ
 
	m≠∂y_fûe_›î©i⁄s
;

458 
boﬁ
 
	m≠∂y_log_ªcs
;

461 
boﬁ
 
	m≠∂y_b©ch_⁄
;

464 
byã
 *
	mœ°_block
;

467 
byã
 *
	mœ°_block_buf_°¨t
;

470 
byã
 *
	mbuf
;

473 
size_t
 
	mbuf_Àn
;

476 
ulöt
 
	mÀn
;

481 
l¢_t
 
	m∑r£_°¨t_l¢
;

484 
l¢_t
 
	mcheckpoöt_l¢
;

487 
ulöt
 
	mbyãs_to_ign‹e_bef‹e_checkpoöt
;

490 
l¢_t
 
	msˇ¬ed_l¢
;

494 
ulöt
 
	msˇ¬ed_checkpoöt_no
;

497 
ulöt
 
	mªcovîed_off£t
;

500 
l¢_t
 
	mªcovîed_l¢
;

506 
l¢_t
 
	m¥evious_ªcovîed_l¢
;

511 
uöt32_t
 
	mœ°_block_fú°_ªc_group
;

515 
boﬁ
 
	mfound_c‹ru±_log
;

519 
boﬁ
 
	mfound_c‹ru±_fs
;

522 
boﬁ
 
	mis_˛⁄ed_db
;

525 
boﬁ
 
	mis_meb_ªcovîy
;

530 
boﬁ
 
	mdblwr_°©e
;

533 
S∑˚s
 *
	m•a˚s
;

536 
ulöt
 
	mn_addrs
;

539 
	mdblwr
::
ªcv
::
DBLWR
 *
dblwr
;

543 
Mëad©aRecovî
 *
	mmëad©a_ªcovî
;

546 
En¸y±i⁄_Keys
 *
	mkeys
;

549 
Missög_Ids
 
	mmissög_ids
;

552 
Missög_Ids
 
	mdñëed
;

556 
ªcv_sys_t
 *
ªcv_sys
;

561 vﬁ©ûê
boﬁ
 
ªcv_ªcovîy_⁄
;

572 
boﬁ
 
ªcv_no_ibuf_›î©i⁄s
;

575 
boﬁ
 
ªcv_√eded_ªcovîy
;

580 
boﬁ
 
ªcv_l¢_checks_⁄
;

584 
	#RECV_PARSING_BUF_SIZE
 (2 * 1024 * 1024)

	)

588 
	#RECV_SCAN_SIZE
 (4 * 
UNIV_PAGE_SIZE
)

	)

594 
ulöt
 
ªcv_n_poﬁ_‰ì_‰ames
;

598 
°d
::
li°
<
•a˚_id_t
> 
ªcv_í¸_ts_li°
;

600 
	~"log0ªcv.ic
"

	@log0recv.ic

33 
	~"univ.i
"

37 
UNIV_INLINE


38 
boﬁ
 
	$ªcv_ªcovîy_is_⁄
(Ë{  (
ªcv_ªcovîy_⁄
); 
	}
}

	@log0test.h

40 #i‚de‡
log0ã°_h


41 
	#log0ã°_h


	)

43 
	~"log0ty≥s.h
"

45 #i‚de‡
UNIV_HOTBACKUP


49 ˛as†
	cLog_ã°
 {

50 
	mpublic
:

51 
∑ge_no_t
 
	tKey
;

52 
öt64_t
 
	tVÆue
;

54 
	sPage
 {

55 
Key
 
	mkey
;

56 
VÆue
 
	mvÆue
;

57 
l¢_t
 
	mﬁde°_modifiˇti⁄
;

58 
l¢_t
 
	m√we°_modifiˇti⁄
;

61 
	g°d
::
	tm≠
<
	tKey
, 
	tPage
> 
	tPages
;

63 ˛as†
	cSync_poöt
 {

64 
	gpublic
:

65 
vútuÆ
 
sync
() = 0;

67 
	gvútuÆ
 ~
Sync_poöt
() {}

70 ˛as†
	cO±i⁄s
 {

71 
	gVALIDATE_RECENT_CLOSED
 = 1,

72 
	gVALIDATE_RECENT_WRITTEN
 = 2

75 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, std::
	tunique_±r
<
	tSync_poöt
>> 
	tSync_poöts
;

81 
l¢_t
 
	$ﬁde°_modifiˇti⁄_≠¥ox
() const;

83 
	`add_dúty_∑ge
(c⁄° 
Page
 &
∑ge
);

85 
	`fsync_wrôãn_∑ges
();

87 
	`purge
(
l¢_t
 
max_dúty_∑ge_age
);

89 
byã
 *
	`¸óã_mlog_ªc
(byã *
ªc
, 
Key
 
key
, 
VÆue
 
vÆue
, 
size_t
 
∑ylﬂd
);

91 
byã
 *
	`¸óã_mlog_ªc
(byã *
ªc
, 
Key
 
key
, 
VÆue
 
vÆue
);

93 
byã
 *
	`∑r£_mlog_ªc
(byã *
begö
, byã *
íd
, 
Key
 &
key
, 
VÆue
 &
vÆue
,

94 
l¢_t
 &
°¨t_l¢
,Ü¢_à&
íd_l¢
);

96 
byã
 *
	`∑r£_mlog_ªc
(byã *
begö
, byã *
íd
);

98 c⁄° 
Pages
 &
	$Êushed
() const;

100 c⁄° 
Pages
 &
	$ªcovîed
() const;

102 
	`sync_poöt
(c⁄° 
°d
::
°rög
 &
sync_poöt_«me
);

104 
	`ªgi°î_sync_poöt_h™dÀr
(

105 c⁄° 
°d
::
°rög
 &
sync_poöt_«me
,

106 
°d
::
unique_±r
<
Sync_poöt
> &&
sync_poöt_h™dÀr
);

108 
boﬁ
 
	$íabÀd
(
O±i⁄s
 
›ti⁄
) const;

110 
	`£t_íabÀd
(
O±i⁄s
 
›ti⁄
, 
boﬁ
 
íabÀd
);

112 
	$Êush_evîy
() const;

114 
	`£t_Êush_evîy
(
Êush_evîy
);

116 
	$vîbosôy
() const;

118 
	`£t_vîbosôy
(
Àvñ
);

120 
¥iv©e
:

121 
	`ªcovîed_ª£t
(
Key
 
key
, 
l¢_t
 
ﬁde°_modifiˇti⁄
,

122 
l¢_t
 
√we°_modifiˇti⁄
);

124 
	`ªcovîed_add
(
Key
 
key
, 
VÆue
 
vÆue
, 
l¢_t
 
ﬁde°_modifiˇti⁄
,

125 
l¢_t
 
√we°_modifiˇti⁄
);

127 
muèbÀ
 
°d
::
muãx
 
m_muãx
;

128 
muèbÀ
 
°d
::
muãx
 
m_purge_muãx
;

129 
°d
::
m≠
<
l¢_t
, 
Page
> 
m_buf
;

130 
Pages
 
m_wrôãn
;

131 
Pages
 
m_Êushed
;

132 
Pages
 
m_ªcovîed
;

133 
Sync_poöts
 
m_sync_poöts
;

134 
uöt64_t
 
m_›ti⁄s_íabÀd
 = 0;

135 
m_vîbosôy
 = 0;

136 
m_Êush_evîy
 = 10;

137 
	}
};

	@log0types.h

41 #i‚de‡
log0ty≥s_h


42 
	#log0ty≥s_h


	)

44 
	~<©omic
>

45 
	~<chr⁄o
>

46 
	~<c⁄dôi⁄_v¨übÀ
>

47 
	~<mem‹y
>

48 
	~<muãx
>

49 
	~<°rög
>

51 
	~"my_compûî.h
"

52 
	~"os0evít.h
"

53 
	~"os0fûe.h
"

54 
	~"sync0rw.h
"

55 
	~"univ.i
"

56 
	~"ut0lök_buf.h
"

57 
	~"ut0muãx.h
"

60 
uöt64_t
 
	tl¢_t
;

63 
	#LSN_PF
 
UINT64PF


	)

66 
usög
 
	g©omic_l¢_t
 = 
°d
::
©omic
<
l¢_t
>;

70 
uöt64_t
 
	t¢_t
;

73 
usög
 
	g©omic_¢_t
 = 
°d
::
©omic
<
¢_t
>;

77 
uöt64_t
 
	tcheckpoöt_no_t
;

81 
	g°d
::
	t©omic
<
	töt64_t
> 
	tlog_Êushes_t
;

84 
	g°d
::
	t©omic
<
	tuöt32_t
 (*)(c⁄° 
	tbyã
 *
	tlog_block
)> 
	tlog_checksum_func_t
;

87 
usög
 
Log_˛ock
 = 
°d
::
chr⁄o
::
high_ªsﬁuti⁄_˛ock
;

90 
usög
 
Log_˛ock_poöt
 = 
°d
::
chr⁄o
::
time_poöt
<
Log_˛ock
>;

93 
	elog_hódî_f‹m©_t
 {

96 
LOG_HEADER_FORMAT_5_7_9
 = 1,

100 
LOG_HEADER_FORMAT_8_0_1
 = 2,

104 
LOG_HEADER_FORMAT_8_0_3
 = 3,

107 
LOG_HEADER_FORMAT_8_0_19
 = 4,

111 
LOG_HEADER_FORMAT_CURRENT
 = 
LOG_HEADER_FORMAT_8_0_19


115 ˛as†
	clog_°©e_t
 {

117 
OK
,

119 
CORRUPTED


123 
ªdo_ªcovî_t
;

125 
	sLog_h™dÀ
 {

126 
l¢_t
 
°¨t_l¢
;

128 
l¢_t
 
íd_l¢
;

133 
	$Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
Ë
log_t
 {

142 #i‚de‡
UNIV_HOTBACKUP


144 
os_evít_t
 
¢_lock_evít
;

146 #ifde‡
UNIV_PFS_RWLOCK


148 
PSI_rwlock
 *
pfs_psi
;

150 #ifde‡
UNIV_DEBUG


154 
rw_lock_t
 *
¢_lock_ö°
;

162 
	`MY_COMPILER_DIAGNOSTIC_PUSH
()

163 
	`MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

166 
	`MY_COMPILER_DIAGNOSTIC_PUSH
()

167 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
Ë
©omic_¢_t
 
¢
;

170 
©omic_¢_t
 
¢_locked
;

173 
muèbÀ
 
ib_muãx_t
 
¢_x_lock_muãx
;

177 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

184 
Æig√d_¨øy_poöãr
<
byã
, 
OS_FILE_LOG_BLOCK_SIZE
> 
buf
;

188 
©omic_¢_t
 
buf_size_¢
;

192 
size_t
 
buf_size
;

194 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

198 
Lök_buf
<
l¢_t
> 
ª˚¡_wrôãn
;

202 
°d
::
©omic_boﬁ
 
wrôî_thªads_∑u£d
;

205 
l¢_t
 
cuºít_ªady_waôög_l¢
;

208 
öt64_t
 
cuºít_ªady_waôög_sig_cou¡
;

210 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

214 
Lök_buf
<
l¢_t
> 
ª˚¡_˛o£d
;

216 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

233 
©omic_¢_t
 
buf_limô_¢
;

237 
	`MY_COMPILER_DIAGNOSTIC_PUSH
()

238 
	`MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

241 
	`MY_COMPILER_DIAGNOSTIC_POP
()

242 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
Ë
©omic_l¢_t
 
wrôe_l¢
;

244 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

254 
os_evít_t
 *
wrôe_evíts
;

257 
size_t
 
wrôe_evíts_size
;

260 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

261 
°d
::
©omic
<
uöt64_t
> 
wrôe_to_fûe_ªque°s_tŸÆ
;

266 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

267 
°d
::
©omic
<
uöt64_t
> 
wrôe_to_fûe_ªque°s_öãrvÆ
;

270 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

291 
os_evít_t
 *
Êush_evíts
;

294 
size_t
 
Êush_evíts_size
;

299 
os_evít_t
 
ﬁd_Êush_evít
;

302 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

305 
©omic_l¢_t
 
Êushed_to_disk_l¢
;

308 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

321 
Log_˛ock_poöt
 
œ°_Êush_°¨t_time
;

325 
Log_˛ock_poöt
 
œ°_Êush_íd_time
;

328 
Êush_avg_time
;

331 
muèbÀ
 
ib_muãx_t
 
Êushî_muãx
;

333 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

335 
os_evít_t
 
Êushî_evít
;

339 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

352 
•a˚_id_t
 
fûes_•a˚_id
;

355 
uöt32_t
 
wrôe_ahód_buf_size
;

359 
Æig√d_¨øy_poöãr
<
byã
, 64 * 1024> 
wrôe_ahód_buf
;

363 
uöt64_t
 
wrôe_ahód_íd_off£t
;

366 
Æig√d_¨øy_poöãr
<
byã
, 
OS_FILE_LOG_BLOCK_SIZE
> *
fûe_hódî_bufs
;

370 
l¢_t
 
cuºít_fûe_l¢
;

373 
uöt64_t
 
cuºít_fûe_ªÆ_off£t
;

376 
uöt64_t
 
cuºít_fûe_íd_off£t
;

379 
uöt64_t
 
n_log_ios
;

383 
uöt64_t
 
fûe_size
;

386 
uöt32_t
 
n_fûes
;

390 
uöt64_t
 
fûes_ªÆ_ˇ∑côy
;

396 
l¢_t
 
l¢_ˇ∑côy_f‹_wrôî
;

404 
l¢_t
 
exåa_m¨gö
;

411 
boﬁ
 
c⁄cuºícy_m¨gö_ok
;

415 
l¢_t
 
max_c⁄cuºícy_m¨gö
;

417 #i‚de‡
UNIV_HOTBACKUP


419 
muèbÀ
 
ib_muãx_t
 
wrôî_muãx
;

421 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

423 
os_evít_t
 
wrôî_evít
;

427 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

440 
os_evít_t
 
˛o£r_evít
;

443 
muèbÀ
 
ib_muãx_t
 
˛o£r_muãx
;

447 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

463 
os_evít_t
 
Êush_nŸifõr_evít
;

466 
öt64_t
 
cuºít_Êush_sig_cou¡
;

469 
muèbÀ
 
ib_muãx_t
 
Êush_nŸifõr_muãx
;

472 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

485 
muèbÀ
 
ib_muãx_t
 
wrôe_nŸifõr_muãx
;

487 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

492 
os_evít_t
 
wrôe_nŸifõr_evít
;

494 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

507 
°d
::
©omic_boﬁ
 
should_°›_thªads
;

510 
os_evít_t
 
wrôî_thªads_ªsume_evít
;

513 
©omic_l¢_t
 
wrôe_nŸifõr_ªsume_l¢
;

516 
©omic_l¢_t
 
Êush_nŸifõr_ªsume_l¢
;

520 
muèbÀ
 
uöt64_t
 
n_log_ios_ﬁd
;

523 
muèbÀ
 
time_t
 
œ°_¥ötout_time
;

536 
l¢_t
 
ªcovîed_l¢
;

539 
uöt32_t
 
f‹m©
;

542 
log_°©e_t
 
°©e
;

545 
l¢_t
 
sˇ¬ed_l¢
;

547 #ifde‡
UNIV_DEBUG


551 
boﬁ
 
dißbÀ_ªdo_wrôes
;

557 
l¢_t
 
fú°_block_is_c‹ª˘_f‹_l¢
;

561 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

579 
muèbÀ
 
ib_muãx_t
 
limôs_muãx
;

591 
	`MY_COMPILER_DIAGNOSTIC_PUSH
()

592 
	`MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

595 
	`MY_COMPILER_DIAGNOSTIC_POP
()

596 
l¢_t
 
avaûabÀ_f‹_checkpoöt_l¢
;

604 
l¢_t
 
ªque°ed_checkpoöt_l¢
;

616 
l¢_t
 
di˘_max_Ælowed_checkpoöt_l¢
;

622 
boﬁ
 
≥riodiˇl_checkpoöts_íabÀd
;

637 
©omic_¢_t
 
‰ì_check_limô_¢
;

643 
©omic_¢_t
 
c⁄cuºícy_m¨gö
;

649 
©omic_¢_t
 
di˘_≥rsi°_m¨gö
;

651 
	`Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
)

664 
os_evít_t
 
checkpoöãr_evít
;

669 
muèbÀ
 
ib_muãx_t
 
checkpoöãr_muãx
;

676 
	`MY_COMPILER_DIAGNOSTIC_PUSH
()

677 
	`MY_COMPILER_CLANG_WORKAROUND_REF_DOCBUG
()

680 
	`MY_COMPILER_DIAGNOSTIC_POP
()

681 
©omic_l¢_t
 
œ°_checkpoöt_l¢
;

688 
°d
::
©omic
<
checkpoöt_no_t
> 
√xt_checkpoöt_no
;

692 
Log_˛ock_poöt
 
œ°_checkpoöt_time
;

697 
Æig√d_¨øy_poöãr
<
byã
, 
OS_FILE_LOG_BLOCK_SIZE
> 
checkpoöt_buf
;

712 
l¢_t
 
l¢_ˇ∑côy_f‹_‰ì_check
;

717 
l¢_t
 
l¢_ªÆ_ˇ∑côy
;

721 
l¢_t
 
max_modifõd_age_async
;

725 
l¢_t
 
max_modifõd_age_sync
;

729 
l¢_t
 
max_checkpoöt_age_async
;

734 
boﬁ
 
m_dißbÀ
;

737 
boﬁ
 
m_¸ash_unß„
;

740 
l¢_t
 
m_fú°_fûe_l¢
;

743 
	}
};

	@mach0data.h

34 #i‚de‡
mach0d©a_h


35 
	#mach0d©a_h


	)

37 
	~"må0ty≥s.h
"

38 
	~"univ.i
"

40 #ifde‡
UNIV_HOTBACKUP


41 
	~"ut0byã.h
"

52 
UNIV_INLINE


53 
mach_wrôe_to_1
(
byã
 *
b
, 
ulöt
 
n
);

58 
UNIV_INLINE


59 
uöt8_t
 
	$mach_ªad_‰om_1
(c⁄° 
byã
 *
b
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

65 
UNIV_INLINE


66 
	`mach_wrôe_to_2
(
byã
 *
b
, 
ulöt
 
n
);

72 
UNIV_INLINE


73 
uöt16_t
 
	$mach_ªad_‰om_2
(c⁄° 
byã
 *
b
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

79 
UNIV_INLINE


80 
uöt16_t
 
	`mach_ícode_2
(
ulöt
 
n
);

86 
UNIV_INLINE


87 
ulöt
 
	`mach_decode_2
(
uöt16
 
n
);

93 
UNIV_INLINE


94 
	`mach_wrôe_to_3
(
byã
 *
b
, 
ulöt
 
n
);

100 
UNIV_INLINE


101 
uöt32_t
 
	$mach_ªad_‰om_3
(c⁄° 
byã
 *
b
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

107 
UNIV_INLINE


108 
	`mach_wrôe_to_4
(
byã
 *
b
, 
ulöt
 
n
);

114 
UNIV_INLINE


115 
uöt32_t
 
	$mach_ªad_‰om_4
(c⁄° 
byã
 *
b
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

121 
UNIV_INLINE


122 
ulöt
 
	`mach_wrôe_com¥es£d
(
byã
 *
b
, ulöà
n
);

127 
UNIV_INLINE


128 
uöt32_t
 
	`mach_gë_com¥es£d_size
(
ulöt
 
n
);

134 
UNIV_INLINE


135 
ib_uöt32_t
 
	`mach_ªad_√xt_com¥es£d
(c⁄° 
byã
 **
b
);

141 
UNIV_INLINE


142 
	`mach_wrôe_to_6
(
byã
 *
b
, 
ib_uöt64_t
 
id
);

148 
UNIV_INLINE


149 
ib_uöt64_t
 
	$mach_ªad_‰om_6
(c⁄° 
byã
 *
b
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

155 
UNIV_INLINE


156 
	`mach_wrôe_to_7
(
byã
 *
b
, 
ib_uöt64_t
 
n
);

162 
UNIV_INLINE


163 
ib_uöt64_t
 
	$mach_ªad_‰om_7
(c⁄° 
byã
 *
b
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

169 
UNIV_INLINE


170 
	`mach_wrôe_to_8
(*
b
, 
ib_uöt64_t
 
n
);

176 
UNIV_INLINE


177 
ib_uöt64_t
 
	$mach_ªad_‰om_8
(c⁄° 
byã
 *
b
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

183 
UNIV_INLINE


184 
ulöt
 
	`mach_u64_wrôe_com¥es£d
(
byã
 *
b
, 
ib_uöt64_t
 
n
);

190 
UNIV_INLINE


191 
ib_uöt64_t
 
	`mach_u64_ªad_√xt_com¥es£d
(c⁄° 
byã
 **
b
);

197 
UNIV_INLINE


198 
ulöt
 
	`mach_u64_wrôe_much_com¥es£d
(
byã
 *
b
, 
ib_uöt64_t
 
n
);

203 
UNIV_INLINE


204 
ib_uöt64_t
 
	$mach_u64_ªad_much_com¥es£d
(c⁄° 
byã
 *
b
)

205 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

212 
ib_uöt64_t
 
	`mach_∑r£_u64_much_com¥es£d
(c⁄° 
byã
 **
±r
,

213 c⁄° 
byã
 *
íd_±r
);

220 
ib_uöt32_t
 
	`mach_∑r£_com¥es£d
(c⁄° 
byã
 **
±r
, c⁄° byã *
íd_±r
);

227 
UNIV_INLINE


228 
ib_uöt64_t
 
	`mach_u64_∑r£_com¥es£d
(c⁄° 
byã
 **
±r
, c⁄° byã *
íd_±r
);

232 
UNIV_INLINE


233 
	$mach_doubÀ_ªad
(

234 c⁄° 
byã
 *
b
)

235 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

240 
UNIV_INLINE


241 
	`mach_doubÀ_wrôe
(
byã
 *
b
, 
d
);

245 
UNIV_INLINE


246 
	$mach_Êﬂt_ªad
(

247 c⁄° 
byã
 *
b
)

248 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

253 
UNIV_INLINE


254 
	`mach_Êﬂt_wrôe
(
byã
 *
b
, 
d
);

258 
UNIV_INLINE


259 
ulöt
 
	$mach_ªad_‰om_n_lôée_ídün
(

260 c⁄° 
byã
 *
buf
,

261 
ulöt
 
buf_size
)

262 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

268 
UNIV_INLINE


269 
	`mach_wrôe_to_n_lôée_ídün
(
byã
 *
de°
, 
ulöt
 
de°_size
, ulöà
n
);

273 
UNIV_INLINE


274 
ulöt
 
	$mach_ªad_‰om_2_lôée_ídün
(

275 c⁄° 
byã
 *
buf
)

276 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

281 
UNIV_INLINE


282 
	`mach_wrôe_to_2_lôée_ídün
(
byã
 *
de°
, 
ulöt
 
n
);

290 
UNIV_INLINE


291 
ib_uöt64_t
 
	`mach_ªad_öt_ty≥
(c⁄° 
byã
 *
§c
, 
ulöt
 
Àn
, 
iboﬁ
 
unsig√d_ty≥
);

299 
UNIV_INLINE


300 
	`mach_wrôe_öt_ty≥
(
byã
 *
de°
, c⁄° byã *
§c
, 
ulöt
 
Àn
, 
boﬁ
 
usign
);

308 
UNIV_INLINE


309 
	`mach_wrôe_ul⁄gl⁄g
(
byã
 *
de°
, 
ul⁄gl⁄g
 
§c
, 
ulöt
 
Àn
, 
boﬁ
 
usign
);

315 
UNIV_INLINE


316 
uöt32_t
 
	$mach_ªad_ulöt
(c⁄° 
byã
 *
±r
, 
mlog_id_t
 
ty≥
)

317 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

319 
	~"mach0d©a.ic
"

	@mach0data.ic

34 
	~"må0ty≥s.h
"

35 
	~"ut0byã.h
"

40 
UNIV_INLINE


41 
	$mach_wrôe_to_1
(
byã
 *
b
, 
ulöt
 
n
) {

42 
	`ut_ad
(
b
);

43 
	`ut_ad
((
n
 | 0xFFUL) <= 0xFFUL);

45 
b
[0] = (
byã
)
n
;

46 
	}
}

52 
UNIV_INLINE


53 
	$mach_wrôe_to_2
(
byã
 *
b
, 
ulöt
 
n
) {

54 
	`ut_ad
(
b
);

55 
	`ut_ad
((
n
 | 0xFFFFUL) <= 0xFFFFUL);

57 
b
[0] = (
byã
)(
n
 >> 8);

58 
b
[1] = (
byã
)(
n
);

59 
	}
}

64 
UNIV_INLINE


65 
uöt8_t
 
	$mach_ªad_‰om_1
(c⁄° 
byã
 *
b
) {

66 
	`ut_ad
(
b
);

67  ((
uöt8_t
)(
b
[0]));

68 
	}
}

74 
UNIV_INLINE


75 
uöt16_t
 
	$mach_ªad_‰om_2
(c⁄° 
byã
 *
b
) {

76  (((
ulöt
)(
b
[0]) << 8) | (ulint)(b[1]));

77 
	}
}

83 
UNIV_INLINE


84 
uöt16_t
 
	$mach_ícode_2
(
ulöt
 
n
)

86 
uöt16
 
ªt
;

87 
	`ut_ad
(2 = 
ªt
);

88 
	`mach_wrôe_to_2
((
byã
 *)&
ªt
, 
n
);

89  (
ªt
);

90 
	}
}

95 
UNIV_INLINE


96 
ulöt
 
	$mach_decode_2
(
uöt16
 
n
)

98 
	`ut_ad
(2 = 
n
);

99  (
	`mach_ªad_‰om_2
((c⁄° 
byã
 *)&
n
));

100 
	}
}

106 
UNIV_INLINE


107 
	$mach_wrôe_to_3
(
byã
 *
b
, 
ulöt
 
n
) {

108 
	`ut_ad
(
b
);

109 
	`ut_ad
((
n
 | 0xFFFFFFUL) <= 0xFFFFFFUL);

111 
b
[0] = (
byã
)(
n
 >> 16);

112 
b
[1] = (
byã
)(
n
 >> 8);

113 
b
[2] = (
byã
)(
n
);

114 
	}
}

120 
UNIV_INLINE


121 
uöt32_t
 
	$mach_ªad_‰om_3
(c⁄° 
byã
 *
b
) {

122 
	`ut_ad
(
b
);

123  ((
°©ic_ˇ°
<
uöt32_t
>(
b
[0]) << 16) |

124 (
°©ic_ˇ°
<
uöt32_t
>(
b
[1]) << 8) | static_cast<uint32_t>(b[2]));

125 
	}
}

131 
UNIV_INLINE


132 
	$mach_wrôe_to_4
(
byã
 *
b
, 
ulöt
 
n
) {

133 
	`ut_ad
(
b
);

135 
b
[0] = 
°©ic_ˇ°
<
byã
>(
n
 >> 24);

136 
b
[1] = 
°©ic_ˇ°
<
byã
>(
n
 >> 16);

137 
b
[2] = 
°©ic_ˇ°
<
byã
>(
n
 >> 8);

138 
b
[3] = 
°©ic_ˇ°
<
byã
>(
n
);

139 
	}
}

145 
UNIV_INLINE


146 
uöt32_t
 
	$mach_ªad_‰om_4
(c⁄° 
byã
 *
b
) {

147 
	`ut_ad
(
b
);

148  ((
°©ic_ˇ°
<
uöt32_t
>(
b
[0]) << 24) |

149 (
°©ic_ˇ°
<
uöt32_t
>(
b
[1]) << 16) |

150 (
°©ic_ˇ°
<
uöt32_t
>(
b
[2]) << 8) | static_cast<uint32_t>(b[3]));

151 
	}
}

162 
UNIV_INLINE


163 
ulöt
 
	$mach_wrôe_com¥es£d
(
byã
 *
b
, 
ulöt
 
n
) {

164 
	`ut_ad
(
b
);

166 i‡(
n
 < 0x80) {

168 
	`mach_wrôe_to_1
(
b
, 
n
);

170 } i‡(
n
 < 0x4000) {

172 
	`mach_wrôe_to_2
(
b
, 
n
 | 0x8000);

174 } i‡(
n
 < 0x200000) {

176 
	`mach_wrôe_to_3
(
b
, 
n
 | 0xC00000);

178 } i‡(
n
 < 0x10000000) {

180 
	`mach_wrôe_to_4
(
b
, 
n
 | 0xE0000000);

182 } i‡(
n
 >= 0xFFFFFC00) {

184 
	`mach_wrôe_to_2
(
b
, (
n
 & 0x3FF) | 0xF800);

186 } i‡(
n
 >= 0xFFFE0000) {

188 
	`mach_wrôe_to_3
(
b
, (
n
 & 0x1FFFF) | 0xFC0000);

190 } i‡(
n
 >= 0xFF000000) {

192 
	`mach_wrôe_to_4
(
b
, (
n
 & 0xFFFFFF) | 0xFE000000);

196 
	`mach_wrôe_to_1
(
b
, 0xF0);

197 
	`mach_wrôe_to_4
(
b
 + 1, 
n
);

200 
	}
}

205 
UNIV_INLINE


206 
uöt32_t
 
	$mach_gë_com¥es£d_size
(
ulöt
 
n
) {

207 i‡(
n
 < 0x80) {

210 } i‡(
n
 < 0x4000) {

213 } i‡(
n
 < 0x200000) {

216 } i‡(
n
 < 0x10000000) {

219 } i‡(
n
 >= 0xFFFFFC00) {

222 } i‡(
n
 >= 0xFFFE0000) {

225 } i‡(
n
 >= 0xFF000000) {

232 
	}
}

237 
UNIV_INLINE


238 
ulöt
 
	$mach_ªad_com¥es£d
(c⁄° 
byã
 *
b
) {

239 
ulöt
 
vÆ
;

241 
	`ut_ad
(
b
);

243 
vÆ
 = 
	`mach_ªad_‰om_1
(
b
);

245 i‡(
vÆ
 < 0x80) {

247 } i‡(
vÆ
 < 0xC0) {

249 
vÆ
 = 
	`mach_ªad_‰om_2
(
b
) & 0x3FFF;

250 
	`ut_ad
(
vÆ
 > 0x7F);

251 } i‡(
vÆ
 < 0xE0) {

253 
vÆ
 = 
	`mach_ªad_‰om_3
(
b
) & 0x1FFFFF;

254 
	`ut_ad
(
vÆ
 > 0x3FFF);

255 } i‡(
vÆ
 < 0xF0) {

257 
vÆ
 = 
	`mach_ªad_‰om_4
(
b
) & 0xFFFFFFF;

258 
	`ut_ad
(
vÆ
 > 0x1FFFFF);

259 } i‡(
vÆ
 < 0xF8) {

261 
	`ut_ad
(
vÆ
 == 0xF0);

262 
vÆ
 = 
	`mach_ªad_‰om_4
(
b
 + 1);

264 
	`ut_ad
(
vÆ
 > 0xFFFFFFF);

265 } i‡(
vÆ
 < 0xFC) {

267 
vÆ
 = (
	`mach_ªad_‰om_2
(
b
) & 0x3FF) | 0xFFFFFC00;

268 } i‡(
vÆ
 < 0xFE) {

270 
vÆ
 = (
	`mach_ªad_‰om_3
(
b
) & 0x1FFFF) | 0xFFFE0000;

271 
	`ut_ad
(
vÆ
 < 0xFFFFFC00);

274 
	`ut_ad
(
vÆ
 == 0xFE);

275 
vÆ
 = 
	`mach_ªad_‰om_3
(
b
 + 1) | 0xFF000000;

276 
	`ut_ad
(
vÆ
 < 0xFFFE0000);

279  (
vÆ
);

280 
	}
}

286 
UNIV_INLINE


287 
ib_uöt32_t
 
	$mach_ªad_√xt_com¥es£d
(c⁄° 
byã
 **
b
) {

288 
ulöt
 
vÆ
 = 
	`mach_ªad_‰om_1
(*
b
);

290 i‡(
vÆ
 < 0x80) {

292 ++*
b
;

293 } i‡(
vÆ
 < 0xC0) {

295 
vÆ
 = 
	`mach_ªad_‰om_2
(*
b
) & 0x3FFF;

296 
	`ut_ad
(
vÆ
 > 0x7F);

297 *
b
 += 2;

298 } i‡(
vÆ
 < 0xE0) {

300 
vÆ
 = 
	`mach_ªad_‰om_3
(*
b
) & 0x1FFFFF;

301 
	`ut_ad
(
vÆ
 > 0x3FFF);

302 *
b
 += 3;

303 } i‡(
vÆ
 < 0xF0) {

305 
vÆ
 = 
	`mach_ªad_‰om_4
(*
b
) & 0xFFFFFFF;

306 
	`ut_ad
(
vÆ
 > 0x1FFFFF);

307 *
b
 += 4;

308 } i‡(
vÆ
 < 0xF8) {

310 
	`ut_ad
(
vÆ
 == 0xF0);

311 
vÆ
 = 
	`mach_ªad_‰om_4
(*
b
 + 1);

313 
	`ut_ad
(
vÆ
 > 0xFFFFFFF);

314 *
b
 += 5;

315 } i‡(
vÆ
 < 0xFC) {

317 
vÆ
 = (
	`mach_ªad_‰om_2
(*
b
) & 0x3FF) | 0xFFFFFC00;

318 *
b
 += 2;

319 } i‡(
vÆ
 < 0xFE) {

321 
vÆ
 = (
	`mach_ªad_‰om_3
(*
b
) & 0x1FFFF) | 0xFFFE0000;

322 
	`ut_ad
(
vÆ
 < 0xFFFFFC00);

323 *
b
 += 3;

326 
	`ut_ad
(
vÆ
 == 0xFE);

327 
vÆ
 = 
	`mach_ªad_‰om_3
(*
b
 + 1) | 0xFF000000;

328 
	`ut_ad
(
vÆ
 < 0xFFFE0000);

329 *
b
 += 4;

332  (
°©ic_ˇ°
<
ib_uöt32_t
>(
vÆ
));

333 
	}
}

339 
UNIV_INLINE


340 
	$mach_wrôe_to_8
(*
b
, 
ib_uöt64_t
 
n
) {

341 
	`ut_ad
(
b
);

343 
	`mach_wrôe_to_4
(
°©ic_ˇ°
<
byã
 *>(
b
), (
ulöt
)(
n
 >> 32));

344 
	`mach_wrôe_to_4
(
°©ic_ˇ°
<
byã
 *>(
b
Ë+ 4, (
ulöt
)
n
);

345 
	}
}

351 
UNIV_INLINE


352 
ib_uöt64_t
 
	$mach_ªad_‰om_8
(c⁄° 
byã
 *
b
) {

353 
ib_uöt64_t
 
u64
;

355 
u64
 = 
	`mach_ªad_‰om_4
(
b
);

356 
u64
 <<= 32;

357 
u64
 |
	`mach_ªad_‰om_4
(
b
 + 4);

359  (
u64
);

360 
	}
}

366 
UNIV_INLINE


367 
	$mach_wrôe_to_7
(
byã
 *
b
, 
ib_uöt64_t
 
n
) {

368 
	`ut_ad
(
b
);

370 
	`mach_wrôe_to_3
(
b
, (
ulöt
)(
n
 >> 32));

371 
	`mach_wrôe_to_4
(
b
 + 3, (
ulöt
)
n
);

372 
	}
}

378 
UNIV_INLINE


379 
ib_uöt64_t
 
	$mach_ªad_‰om_7
(c⁄° 
byã
 *
b
) {

380 
	`ut_ad
(
b
);

382  (
	`ut_uŒ_¸óã
(
	`mach_ªad_‰om_3
(
b
), 
	`mach_ªad_‰om_4
(b + 3)));

383 
	}
}

389 
UNIV_INLINE


390 
	$mach_wrôe_to_6
(
byã
 *
b
, 
ib_uöt64_t
 
n
) {

391 
	`ut_ad
(
b
);

393 
	`mach_wrôe_to_2
(
b
, (
ulöt
)(
n
 >> 32));

394 
	`mach_wrôe_to_4
(
b
 + 2, (
ulöt
)
n
);

395 
	}
}

401 
UNIV_INLINE


402 
ib_uöt64_t
 
	$mach_ªad_‰om_6
(c⁄° 
byã
 *
b
) {

403 
	`ut_ad
(
b
);

405  (
	`ut_uŒ_¸óã
(
	`mach_ªad_‰om_2
(
b
), 
	`mach_ªad_‰om_4
(b + 2)));

406 
	}
}

410 
UNIV_INLINE


411 
ulöt
 
	$mach_u64_wrôe_com¥es£d
(

412 
byã
 *
b
,

413 
ib_uöt64_t
 
n
)

415 
ulöt
 
size
;

417 
	`ut_ad
(
b
);

419 
size
 = 
	`mach_wrôe_com¥es£d
(
b
, (
ulöt
)(
n
 >> 32));

420 
	`mach_wrôe_to_4
(
b
 + 
size
, (
ulöt
)
n
);

422  (
size
 + 4);

423 
	}
}

429 
UNIV_INLINE


430 
ib_uöt64_t
 
	$mach_u64_ªad_√xt_com¥es£d
(c⁄° 
byã
 **
b
) {

431 
ib_uöt64_t
 
vÆ
;

433 
vÆ
 = 
	`mach_ªad_√xt_com¥es£d
(
b
);

434 
vÆ
 <<= 32;

435 
vÆ
 |
	`mach_ªad_‰om_4
(*
b
);

436 *
b
 += 4;

437  (
vÆ
);

438 
	}
}

442 
UNIV_INLINE


443 
ulöt
 
	$mach_u64_wrôe_much_com¥es£d
(

444 
byã
 *
b
,

445 
ib_uöt64_t
 
n
)

447 
ulöt
 
size
;

449 
	`ut_ad
(
b
);

451 i‡(!(
n
 >> 32)) {

452  (
	`mach_wrôe_com¥es£d
(
b
, (
ulöt
)
n
));

455 *
b
 = (
byã
)0xFF;

456 
size
 = 1 + 
	`mach_wrôe_com¥es£d
(
b
 + 1, (
ulöt
)(
n
 >> 32));

458 
size
 +
	`mach_wrôe_com¥es£d
(
b
 + size, (
ulöt
)
n
 & 0xFFFFFFFF);

460  (
size
);

461 
	}
}

466 
UNIV_INLINE


467 
ib_uöt64_t
 
	$mach_u64_ªad_much_com¥es£d
(

468 c⁄° 
byã
 *
b
)

470 
ib_uöt64_t
 
n
;

472 i‡(*
b
 != 0xFF) {

473  (
	`mach_ªad_com¥es£d
(
b
));

476 
b
++;

477 
n
 = 
	`mach_ªad_√xt_com¥es£d
(&
b
);

478 
n
 <<= 32;

479 
n
 |
	`mach_ªad_com¥es£d
(
b
);

481  (
n
);

482 
	}
}

488 
UNIV_INLINE


489 
ib_uöt64_t
 
	$mach_ªad_√xt_much_com¥es£d
(c⁄° 
byã
 **
b
) {

490 
ib_uöt64_t
 
vÆ
 = 
	`mach_ªad_‰om_1
(*
b
);

492 i‡(
vÆ
 < 0x80) {

494 ++*
b
;

495 } i‡(
vÆ
 < 0xC0) {

497 
vÆ
 = 
	`mach_ªad_‰om_2
(*
b
) & 0x3FFF;

498 
	`ut_ad
(
vÆ
 > 0x7F);

499 *
b
 += 2;

500 } i‡(
vÆ
 < 0xE0) {

502 
vÆ
 = 
	`mach_ªad_‰om_3
(*
b
) & 0x1FFFFF;

503 
	`ut_ad
(
vÆ
 > 0x3FFF);

504 *
b
 += 3;

505 } i‡(
vÆ
 < 0xF0) {

507 
vÆ
 = 
	`mach_ªad_‰om_4
(*
b
) & 0xFFFFFFF;

508 
	`ut_ad
(
vÆ
 > 0x1FFFFF);

509 *
b
 += 4;

510 } i‡(
vÆ
 < 0xF8) {

512 
	`ut_ad
(
vÆ
 == 0xF0);

513 
vÆ
 = 
	`mach_ªad_‰om_4
(*
b
 + 1);

515 
	`ut_ad
(
vÆ
 > 0xFFFFFFF);

516 *
b
 += 5;

517 } i‡(
vÆ
 < 0xFC) {

519 
vÆ
 = (
	`mach_ªad_‰om_2
(*
b
) & 0x3FF) | 0xFFFFFC00;

520 *
b
 += 2;

521 } i‡(
vÆ
 < 0xFE) {

523 
vÆ
 = (
	`mach_ªad_‰om_3
(*
b
) & 0x1FFFF) | 0xFFFE0000;

524 
	`ut_ad
(
vÆ
 < 0xFFFFFC00);

525 *
b
 += 3;

526 } i‡(
vÆ
 == 0xFE) {

528 
	`ut_ad
(
vÆ
 == 0xFE);

529 
vÆ
 = 
	`mach_ªad_‰om_3
(*
b
 + 1) | 0xFF000000;

530 
	`ut_ad
(
vÆ
 < 0xFFFE0000);

531 *
b
 += 4;

534 
	`ut_ad
(
vÆ
 == 0xFF);

535 ++*
b
;

536 
vÆ
 = 
	`mach_ªad_√xt_com¥es£d
(
b
);

537 
	`ut_ad
(
vÆ
 > 0);

538 
vÆ
 <<= 32;

539 
vÆ
 |
	`mach_ªad_√xt_com¥es£d
(
b
);

542  (
vÆ
);

543 
	}
}

550 
UNIV_INLINE


551 
ib_uöt64_t
 
	$mach_u64_∑r£_com¥es£d
(c⁄° 
byã
 **
±r
, c⁄° byã *
íd_±r
) {

552 
ib_uöt64_t
 
vÆ
 = 0;

554 i‡(
íd_±r
 < *
±r
 + 5) {

555 *
±r
 = 
nuŒ±r
;

556  (
vÆ
);

559 
vÆ
 = 
	`mach_ªad_√xt_com¥es£d
(
±r
);

561 i‡(
íd_±r
 < *
±r
 + 4) {

562 *
±r
 = 
nuŒ±r
;

563  (
vÆ
);

566 
vÆ
 <<= 32;

567 
vÆ
 |
	`mach_ªad_‰om_4
(*
±r
);

568 *
±r
 += 4;

570  (
vÆ
);

571 
	}
}

574 
UNIV_INLINE


575 
	$mach_doubÀ_ªad
(

576 c⁄° 
byã
 *
b
)

578 
d
;

579 
ulöt
 
i
;

580 
byã
 *
±r
;

582 
±r
 = (
byã
 *)&
d
;

584 
i
 = 0; i < (); i++) {

585 #ifde‡
WORDS_BIGENDIAN


586 
±r
[(Ë- 
i
 - 1] = 
b
[i];

588 
±r
[
i
] = 
b
[i];

592  (
d
);

593 
	}
}

596 
UNIV_INLINE


597 
	$mach_doubÀ_wrôe
(
byã
 *
b
,

598 
d
)

600 
ulöt
 
i
;

601 
byã
 *
±r
;

603 
±r
 = (
byã
 *)&
d
;

605 
i
 = 0; i < (); i++) {

606 #ifde‡
WORDS_BIGENDIAN


607 
b
[
i
] = 
±r
[() - i - 1];

609 
b
[
i
] = 
±r
[i];

612 
	}
}

616 
UNIV_INLINE


617 
	$mach_Êﬂt_ªad
(

618 c⁄° 
byã
 *
b
)

620 
d
;

621 
ulöt
 
i
;

622 
byã
 *
±r
;

624 
±r
 = (
byã
 *)&
d
;

626 
i
 = 0; i < (); i++) {

627 #ifde‡
WORDS_BIGENDIAN


628 
±r
[(Ë- 
i
 - 1] = 
b
[i];

630 
±r
[
i
] = 
b
[i];

634  (
d
);

635 
	}
}

638 
UNIV_INLINE


639 
	$mach_Êﬂt_wrôe
(
byã
 *
b
,

640 
d
)

642 
ulöt
 
i
;

643 
byã
 *
±r
;

645 
±r
 = (
byã
 *)&
d
;

647 
i
 = 0; i < (); i++) {

648 #ifde‡
WORDS_BIGENDIAN


649 
b
[
i
] = 
±r
[() - i - 1];

651 
b
[
i
] = 
±r
[i];

654 
	}
}

656 #i‚de‡
UNIV_HOTBACKUP


659 
UNIV_INLINE


660 
ulöt
 
	$mach_ªad_‰om_n_lôée_ídün
(

661 c⁄° 
byã
 *
buf
,

662 
ulöt
 
buf_size
)

664 
ulöt
 
n
 = 0;

665 c⁄° 
byã
 *
±r
;

667 
	`ut_ad
(
buf_size
 > 0);

669 
±r
 = 
buf
 + 
buf_size
;

672 
±r
--;

674 
n
 =Ç << 8;

676 
n
 +(
ulöt
)(*
±r
);

678 i‡(
±r
 =
buf
) {

683  (
n
);

684 
	}
}

687 
UNIV_INLINE


688 
	$mach_wrôe_to_n_lôée_ídün
(

689 
byã
 *
de°
,

690 
ulöt
 
de°_size
,

691 
ulöt
 
n
)

693 
byã
 *
íd
;

695 
	`ut_ad
(
de°_size
 <(
ulöt
));

696 
	`ut_ad
(
de°_size
 > 0);

698 
íd
 = 
de°
 + 
de°_size
;

701 *
de°
 = (
byã
)(
n
 & 0xFF);

703 
n
 =Ç >> 8;

705 
de°
++;

707 i‡(
de°
 =
íd
) {

712 
	`ut_ad
(
n
 == 0);

713 
	}
}

717 
UNIV_INLINE


718 
ulöt
 
	$mach_ªad_‰om_2_lôée_ídün
(

719 c⁄° 
byã
 *
buf
)

721  ((
ulöt
)(
buf
[0]) | ((ulint)(buf[1]) << 8));

722 
	}
}

725 
UNIV_INLINE


726 
	$mach_wrôe_to_2_lôée_ídün
(

727 
byã
 *
de°
,

728 
ulöt
 
n
)

730 
	`ut_ad
(
n
 < 256 * 256);

732 *
de°
 = (
byã
)(
n
 & 0xFFUL);

734 
n
 =Ç >> 8;

735 
de°
++;

737 *
de°
 = (
byã
)(
n
 & 0xFFUL);

738 
	}
}

744 
UNIV_INLINE


745 
ib_uöt64_t
 
	$mach_ªad_öt_ty≥
(

746 c⁄° 
byã
 *
§c
,

747 
ulöt
 
Àn
,

748 
iboﬁ
 
unsig√d_ty≥
)

752 
uötmax_t
 
ªt
;

753 
uöt
 
i
;

755 i‡(
unsig√d_ty≥
 || (
§c
[0] & 0x80)) {

756 
ªt
 = 0x0000000000000000ULL;

758 
ªt
 = 0xFFFFFFFFFFFFFF00ULL;

761 i‡(
unsig√d_ty≥
) {

762 
ªt
 |
§c
[0];

764 
ªt
 |
§c
[0] ^ 0x80;

767 
i
 = 1; i < 
Àn
; i++) {

768 
ªt
 <<= 8;

769 
ªt
 |
§c
[
i
];

772  (
ªt
);

773 
	}
}

774 #i‚de‡
UNIV_HOTBACKUP


776 
UNIV_INLINE


777 
	$mach_sw≠_byã_‹dî
(
byã
 *
de°
,

778 c⁄° 
byã
 *
‰om
,

779 
ulöt
 
Àn
)

781 
	`ut_ad
(
Àn
 > 0);

782 
	`ut_ad
(
Àn
 <= 8);

784 
de°
 +
Àn
;

786 
Àn
 & 0x7) {

788 *--
de°
 = *
‰om
++;

790 *--
de°
 = *
‰om
++;

792 *--
de°
 = *
‰om
++;

794 *--
de°
 = *
‰om
++;

796 *--
de°
 = *
‰om
++;

798 *--
de°
 = *
‰om
++;

800 *--
de°
 = *
‰om
++;

802 *--
de°
 = *
‰om
;

804 
	}
}

809 
UNIV_INLINE


810 
	$mach_wrôe_öt_ty≥
(
byã
 *
de°
,

811 c⁄° 
byã
 *
§c
,

812 
ulöt
 
Àn
,

813 
boﬁ
 
usign
)

815 
	`ut_ad
(
Àn
 >= 1 &&Üen <= 8);

817 #ifde‡
WORDS_BIGENDIAN


818 
	`mem˝y
(
de°
, 
§c
, 
Àn
);

820 
	`mach_sw≠_byã_‹dî
(
de°
, 
§c
, 
Àn
);

823 i‡(!
usign
) {

824 *
de°
 ^= 0x80;

826 
	}
}

831 
UNIV_INLINE


832 
	$mach_wrôe_ul⁄gl⁄g
(
byã
 *
de°
,

833 
ul⁄gl⁄g
 
§c
,

834 
ulöt
 
Àn
,

835 
boﬁ
 
usign
)

837 
byã
 *
±r
 = 
ªöãΩªt_ˇ°
<byã *>(&
§c
);

839 
	`ut_ad
(
Àn
 <(
ul⁄gl⁄g
));

841 #ifde‡
WORDS_BIGENDIAN


842 
	`mem˝y
(
de°
, 
±r
 + ((
§c
Ë- 
Àn
),Üen);

844 
	`mach_sw≠_byã_‹dî
(
de°
, 
ªöãΩªt_ˇ°
<
byã
 *>(
±r
), 
Àn
);

847 i‡(!
usign
) {

848 *
de°
 ^= 0x80;

850 
	}
}

857 
UNIV_INLINE


858 
uöt32_t
 
	$mach_ªad_ulöt
(c⁄° 
byã
 *
±r
, 
mlog_id_t
 
ty≥
) {

859 
ty≥
) {

860 
MLOG_1BYTE
:

861  (
	`mach_ªad_‰om_1
(
±r
));

862 
MLOG_2BYTES
:

863  (
	`mach_ªad_‰om_2
(
±r
));

864 
MLOG_4BYTES
:

865  (
	`mach_ªad_‰om_4
(
±r
));

870 
ut_îr‹
;

871 
	}
}

	@mem0mem.h

33 #i‚de‡
mem0mem_h


34 
	#mem0mem_h


	)

36 
	~"mach0d©a.h
"

37 
	~"univ.i
"

38 
	~"ut0byã.h
"

39 
	~"ut0mem.h
"

40 
	~"ut0∫d.h
"

42 
	~<limôs.h
>

44 
	~<mem‹y
>

50 
mem_block_öfo_t
 
	tmem_block_t
;

53 
mem_block_t
 
	tmem_hóp_t
;

59 
	#MEM_HEAP_DYNAMIC
 0

	)

60 
	#MEM_HEAP_BUFFER
 1

	)

61 
	#MEM_HEAP_BTR_SEARCH
 \

62 2

	)

71 
	#MEM_HEAP_FOR_BTR_SEARCH
 (
MEM_HEAP_BTR_SEARCH
 | 
MEM_HEAP_BUFFER
)

	)

72 
	#MEM_HEAP_FOR_PAGE_HASH
 (
MEM_HEAP_DYNAMIC
)

	)

73 
	#MEM_HEAP_FOR_RECV_SYS
 (
MEM_HEAP_BUFFER
)

	)

74 
	#MEM_HEAP_FOR_LOCK_HEAP
 (
MEM_HEAP_BUFFER
)

	)

81 
	#MEM_BLOCK_START_SIZE
 64

	)

82 
	#MEM_BLOCK_STANDARD_SIZE
 \

83 (
UNIV_PAGE_SIZE
 >16384 ? 8000 : 
MEM_MAX_ALLOC_IN_BUF
)

	)

91 
	#MEM_MAX_ALLOC_IN_BUF
 \

92 ((
UNIV_PAGE_SIZE
 - 
MEM_BLOCK_HEADER_SIZE
 - 2 * 
MEM_NO_MANS_LAND
) & \

93 ~(
UNIV_MEM_ALIGNMENT
 - 1))

	)

100 #ifde‡
UNIV_DEBUG


101 c⁄° 
	gMEM_NO_MANS_LAND
 = 16;

103 c⁄° 
	gMEM_NO_MANS_LAND
 = 0;

107 c⁄° 
byã
 
	gMEM_NO_MANS_LAND_BEFORE_BYTE
 = 0xCE;

109 c⁄° 
byã
 
	gMEM_NO_MANS_LAND_AFTER_BYTE
 = 0xDF;

114 
	#MEM_SPACE_NEEDED
(
N
) \

115 
	`ut_ˇlc_Æign
(
N
 + 2 * 
MEM_NO_MANS_LAND
, 
UNIV_MEM_ALIGNMENT
)

	)

117 #ifde‡
UNIV_DEBUG


120 
	#mem_hóp_¸óã
(
size
) \

121 
	`mem_hóp_¸óã_func
((
size
), 
__FILE__
, 
__LINE__
, 
MEM_HEAP_DYNAMIC
)

	)

126 
	#mem_hóp_¸óã_ty≥d
(
size
, 
ty≥
) \

127 
	`mem_hóp_¸óã_func
((
size
), 
__FILE__
, 
__LINE__
, (
ty≥
))

	)

132 
	#mem_hóp_¸óã
(
size
Ë
	`mem_hóp_¸óã_func
((size), 
MEM_HEAP_DYNAMIC
)

	)

137 
	#mem_hóp_¸óã_ty≥d
(
size
, 
ty≥
Ë
	`mem_hóp_¸óã_func
((size), (ty≥))

	)

146 #ifde‡
UNIV_DEBUG


155 
UNIV_INLINE


156 
mem_hóp_t
 *
mem_hóp_¸óã_func
(
ulöt
 
size
,

157 #ifde‡
UNIV_DEBUG


158 c⁄° *
fûe_«me
, 
ulöt
 
löe
,

160 
ulöt
 
ty≥
);

165 
UNIV_INLINE


166 
mem_hóp_‰ì
(
mem_hóp_t
 *
hóp
);

173 
UNIV_INLINE


174 *
mem_hóp_zÆloc
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n
);

182 
UNIV_INLINE


183 *
mem_hóp_Æloc
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n
);

188 
UNIV_INLINE


189 
byã
 *
mem_hóp_gë_hóp_t›
(
mem_hóp_t
 *
hóp
);

196 
UNIV_INLINE


197 
mem_hóp_‰ì_hóp_t›
(
mem_hóp_t
 *
hóp
, 
byã
 *
ﬁd_t›
);

202 
UNIV_INLINE


203 
mem_hóp_em±y
(
mem_hóp_t
 *
hóp
);

210 
UNIV_INLINE


211 *
mem_hóp_gë_t›
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n
);

220 
UNIV_INLINE


221 
boﬁ
 
	$mem_hóp_is_t›
(
mem_hóp_t
 *
hóp
, c⁄° *
buf
, 
ulöt
 
buf_sz
)

222 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

234 
UNIV_INLINE


235 *
	`mem_hóp_ª∂a˚
(
mem_hóp_t
 *
hóp
, c⁄° *
t›
, 
ulöt
 
t›_sz
,

236 
ulöt
 
√w_sz
);

250 
UNIV_INLINE


251 *
	`mem_hóp_dup_ª∂a˚
(
mem_hóp_t
 *
hóp
, c⁄° *
t›
, 
ulöt
 
t›_sz
,

252 c⁄° *
d©a
, 
ulöt
 
d©a_sz
);

265 
UNIV_INLINE


266 *
	`mem_hóp_°rdup_ª∂a˚
(
mem_hóp_t
 *
hóp
, c⁄° *
t›
, 
ulöt
 
t›_sz
,

267 c⁄° *
°r
);

273 
UNIV_INLINE


274 
	`mem_hóp_‰ì_t›
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n
);

277 
UNIV_INLINE


278 
ulöt
 
	`mem_hóp_gë_size
(
mem_hóp_t
 *
hóp
);

283 
UNIV_INLINE


284 *
	`mem_°rdup
(c⁄° *
°r
);

290 
UNIV_INLINE


291 *
	`mem_°rdu∂
(c⁄° *
°r
, 
ulöt
 
Àn
);

297 *
	`mem_hóp_°rdup
(
mem_hóp_t
 *
hóp
, c⁄° *
°r
);

305 
UNIV_INLINE


306 *
	`mem_hóp_°rdu∂
(
mem_hóp_t
 *
hóp
, c⁄° *
°r
, 
ulöt
 
Àn
);

310 *
	`mem_hóp_°rˇt
(

311 
mem_hóp_t
 *
hóp
,

312 c⁄° *
s1
,

313 c⁄° *
s2
);

317 *
	`mem_hóp_dup
(

318 
mem_hóp_t
 *
hóp
,

319 c⁄° *
d©a
,

320 
ulöt
 
Àn
);

327 *
	$mem_hóp_¥ötf
(
mem_hóp_t
 *
hóp
,

328 c⁄° *
f‹m©
,

329 ...Ë
	`MY_ATTRIBUTE
((
	`f‹m©
(
¥ötf
, 2, 3)));

333 
UNIV_INLINE


334 
	`mem_block_vÆid©e
(c⁄° 
mem_hóp_t
 *
hóp
);

336 #ifde‡
UNIV_DEBUG


342 
	`mem_hóp_vÆid©e
(c⁄° 
mem_hóp_t
 *
hóp
);

349 
	smem_block_öfo_t
 {

350 
uöt64_t
 
magic_n
;

351 #ifde‡
UNIV_DEBUG


352 
fûe_«me
[16];

353 
ulöt
 
löe
;

355 
	`UT_LIST_BASE_NODE_T
(
mem_block_t
)

356 
ba£
;

359 
	`UT_LIST_NODE_T
(
mem_block_t
)

360 
li°
;

364 
ulöt
 
Àn
;

365 
ulöt
 
tŸÆ_size
;

368 
ulöt
 
ty≥
;

370 
ulöt
 
‰ì
;

372 
ulöt
 
°¨t
;

374 *
‰ì_block
;

380 *
buf_block
;

386 
	#MEM_BLOCK_MAGIC_N
 0x445566778899AABB

	)

387 
	#MEM_FREED_BLOCK_MAGIC_N
 0xBBAA998877665544

	)

390 
	#MEM_BLOCK_HEADER_SIZE
 \

391 
	`ut_ˇlc_Æign
((
mem_block_öfo_t
), 
UNIV_MEM_ALIGNMENT
)

	)

393 
	~"mem0mem.ic
"

397 
ãm∂©e
 <
ty≥«me
 
T
>

398 ˛as†
	cmem_hóp_Æloˇt‹
 {

399 
public
:

400 
T
 
	tvÆue_ty≥
;

401 
size_t
 
	tsize_ty≥
;

402 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

403 
T
 *
	tpoöãr
;

404 c⁄° 
	tT
 *
	tc⁄°_poöãr
;

405 
T
 &
	tª„ªn˚
;

406 c⁄° 
	tT
 &
	tc⁄°_ª„ªn˚
;

408 
	$mem_hóp_Æloˇt‹
(
mem_hóp_t
 *
hóp
Ë: 
	$m_hóp
(
hóp
) {}

410 
	$mem_hóp_Æloˇt‹
(c⁄° 
mem_hóp_Æloˇt‹
 &
Ÿhî
Ë: 
	$m_hóp
(
Ÿhî
.
m_hóp
) {

412 
	}
}

414 
ãm∂©e
 <
ty≥«me
 
U
>

415 
mem_hóp_Æloˇt‹
(c⁄° mem_hóp_Æloˇt‹<
U
> &
Ÿhî
)

416 : 
	$m_hóp
(
Ÿhî
.
m_hóp
) {

418 
	}
}

420 ~
	$mem_hóp_Æloˇt‹
(Ë{ 
m_hóp
 = 
nuŒ±r
; 
	}
}

422 
size_ty≥
 
	$max_size
(Ëc⁄° {  (
ULONG_MAX
 / (
T
)); 
	}
}

431 
poöãr
 
	$Æloˇã
(
size_ty≥
 
n
, 
c⁄°_poöãr
 
höt
 = 
nuŒ±r
) {

432  (
ªöãΩªt_ˇ°
<
poöãr
>(
	`mem_hóp_Æloc
(
m_hóp
, 
n
 * (
T
))));

433 
	}
}

435 
	$dóŒoˇã
(
poöãr
 
p
, 
size_ty≥
 
n
Ë{
	}
}

437 
poöãr
 
	$addªss
(
ª„ªn˚
 
r
Ëc⁄° {  (&r); 
	}
}

439 
c⁄°_poöãr
 
	$addªss
(
c⁄°_ª„ªn˚
 
r
Ëc⁄° {  (&r); 
	}
}

441 
	$c⁄°ru˘
(
poöãr
 
p
, 
c⁄°_ª„ªn˚
 
t
) {

442 
	`√w
 (
ªöãΩªt_ˇ°
<*>(
p
)Ë
	`T
(
t
);

443 
	}
}

445 
	$de°roy
(
poöãr
 
p
Ë{ (
ªöãΩªt_ˇ°
<
T
 *>’))->~
	`T
(); 
	}
}

453 
	gãm∂©e
 <
ty≥«me
 
	gU
>

454 
	sªböd
 {

455 
	gmem_hóp_Æloˇt‹
<
	tU
> 
	tŸhî
;

460 
mem_hóp_t
 *
	$gë_mem_hóp
(Ëc⁄° {  (
m_hóp
); 
	}
}

462 
	g¥iv©e
:

463 
mem_hóp_t
 *
m_hóp
;

464 
	gãm∂©e
 <
ty≥«me
 
	gU
>

465 
‰õnd
 
˛ass
 
	gmem_hóp_Æloˇt‹
;

468 
	gãm∂©e
 <
˛ass
 
	gT
>

469 
boﬁ
 
	g›î©‹
==(c⁄° 
mem_hóp_Æloˇt‹
<
T
> &
À·
,

470 c⁄° 
	gmem_hóp_Æloˇt‹
<
	gT
> &
	gright
) {

471  (
	gÀ·
.
gë_mem_hóp
(Ë=
right
.get_mem_heap());

474 
	gãm∂©e
 <
˛ass
 
	gT
>

475 
boﬁ
 
	g›î©‹
!=(c⁄° 
mem_hóp_Æloˇt‹
<
T
> &
À·
,

476 c⁄° 
	gmem_hóp_Æloˇt‹
<
	gT
> &
	gright
) {

477  (
	gÀ·
.
gë_mem_hóp
(Ë!
right
.get_mem_heap());

	@mem0mem.ic

33 
	~"ut0√w.h
"

35 #ifde‡
UNIV_DEBUG


36 
	#mem_hóp_¸óã_block
(
hóp
, 
n
, 
ty≥
, 
fûe_«me
, 
löe
) \

37 
	`mem_hóp_¸óã_block_func
(
hóp
, 
n
, 
fûe_«me
, 
löe
, 
ty≥
)

	)

38 
	#mem_hóp_¸óã_©
(
N
, 
fûe_«me
, 
löe
) \

39 
	`mem_hóp_¸óã_func
(
N
, 
fûe_«me
, 
löe
, 
MEM_HEAP_DYNAMIC
)

	)

41 
	#mem_hóp_¸óã_block
(
hóp
, 
n
, 
ty≥
, 
fûe_«me
, 
löe
) \

42 
	`mem_hóp_¸óã_block_func
(
hóp
, 
n
, 
ty≥
)

	)

43 
	#mem_hóp_¸óã_©
(
N
, 
fûe_«me
, 
löe
) \

44 
	`mem_hóp_¸óã_func
(
N
, 
MEM_HEAP_DYNAMIC
)

	)

49 
mem_block_t
 *
mem_hóp_¸óã_block_func
(

50 
mem_hóp_t
 *
hóp
,

52 
ulöt
 
n
,

53 #ifde‡
UNIV_DEBUG


54 c⁄° *
fûe_«me
,

55 
ulöt
 
löe
,

57 
ulöt
 
ty≥
);

61 
mem_hóp_block_‰ì
(
mem_hóp_t
 *
hóp
,

62 
mem_block_t
 *
block
);

64 #i‚de‡
UNIV_HOTBACKUP


65 #i‚de‡
UNIV_LIBRARY


67 
mem_hóp_‰ì_block_‰ì
(
mem_hóp_t
 *
hóp
);

76 
mem_block_t
 *
mem_hóp_add_block
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n
);

78 
UNIV_INLINE


79 
	$mem_block_£t_Àn
(
mem_block_t
 *
block
, 
ulöt
 
Àn
) {

80 
	`ut_ad
(
Àn
 > 0);

82 
block
->
Àn
 =Üen;

83 
	}
}

85 
UNIV_INLINE


86 
ulöt
 
	$mem_block_gë_Àn
(
mem_block_t
 *
block
Ë{  (block->
Àn
); 
	}
}

88 
UNIV_INLINE


89 
	$mem_block_£t_ty≥
(
mem_block_t
 *
block
, 
ulöt
 
ty≥
) {

90 
	`ut_ad
((
ty≥
 =
MEM_HEAP_DYNAMIC
Ë|| (ty≥ =
MEM_HEAP_BUFFER
) ||

91 (
ty≥
 =
MEM_HEAP_BUFFER
 + 
MEM_HEAP_BTR_SEARCH
));

93 
block
->
ty≥
 =Åype;

94 
	}
}

96 
UNIV_INLINE


97 
ulöt
 
	$mem_block_gë_ty≥
(
mem_block_t
 *
block
Ë{  (block->
ty≥
); 
	}
}

99 
UNIV_INLINE


100 
	$mem_block_£t_‰ì
(
mem_block_t
 *
block
, 
ulöt
 
‰ì
) {

101 
	`ut_ad
(
‰ì
 >
block
->
°¨t
);

102 
	`ut_ad
(
‰ì
 <
	`mem_block_gë_Àn
(
block
));

104 
block
->
‰ì
 = free;

105 
	}
}

107 
UNIV_INLINE


108 
ulöt
 
	$mem_block_gë_‰ì
(
mem_block_t
 *
block
Ë{  (block->
‰ì
); 
	}
}

110 
UNIV_INLINE


111 
	$mem_block_£t_°¨t
(
mem_block_t
 *
block
, 
ulöt
 
°¨t
) {

112 
	`ut_ad
(
°¨t
 > 0);

114 
block
->
°¨t
 = start;

115 
	}
}

117 
UNIV_INLINE


118 
ulöt
 
	$mem_block_gë_°¨t
(
mem_block_t
 *
block
Ë{  (block->
°¨t
); 
	}
}

122 
UNIV_INLINE


123 
	$mem_block_vÆid©e
(c⁄° 
mem_block_t
 *
block
) {

124 i‡(
block
->
magic_n
 !
MEM_BLOCK_MAGIC_N
) {

125 
ib
::
Áèl
 
îr‹
;

126 
îr‹
 << "Memory block is invalid (correctness field value"

128 << 
MEM_BLOCK_MAGIC_N
 << ", buàô i†" << 
block
->
magic_n


129 << "Ëöá block o‡sizê" << 
block
->
Àn
;

130 
	`ut_d
(
îr‹
 << ",áŒoˇãdáà" << 
block
->
fûe_«me
 << ":" << block->
löe
);

132 
	}
}

139 
UNIV_INLINE


140 *
	$mem_hóp_zÆloc
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n
) {

141 
	`ut_ad
(
hóp
);

142 
	`ut_ad
(!(
hóp
->
ty≥
 & 
MEM_HEAP_BTR_SEARCH
));

143  (
	`mem£t
(
	`mem_hóp_Æloc
(
hóp
, 
n
), 0,Ç));

144 
	}
}

152 
UNIV_INLINE


153 *
	$mem_hóp_Æloc
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n
) {

154 
mem_block_t
 *
block
;

155 
byã
 *
buf
;

156 
ulöt
 
‰ì
;

158 
	`ut_d
(
	`mem_block_vÆid©e
(
hóp
));

160 
block
 = 
	`UT_LIST_GET_LAST
(
hóp
->
ba£
);

162 
	`ut_ad
(!(
block
->
ty≥
 & 
MEM_HEAP_BUFFER
Ë|| (
n
 <
MEM_MAX_ALLOC_IN_BUF
));

167 i‡(
	`mem_block_gë_Àn
(
block
) <

168 
	`mem_block_gë_‰ì
(
block
Ë+ 
	`MEM_SPACE_NEEDED
(
n
)) {

169 
block
 = 
	`mem_hóp_add_block
(
hóp
, 
n
);

171 i‡(
block
 =
nuŒ±r
) {

172  (
nuŒ±r
);

176 
‰ì
 = 
	`mem_block_gë_‰ì
(
block
);

178 
buf
 = (
byã
 *)
block
 + 
‰ì
 + 
MEM_NO_MANS_LAND
;

180 
	`mem_block_£t_‰ì
(
block
, 
‰ì
 + 
	`MEM_SPACE_NEEDED
(
n
));

182 
	`ut_ad
(
	`mem_block_gë_Àn
(
block
Ë>
	`mem_block_gë_‰ì
(block));

184 
	`UNIV_MEM_ALLOC
(
buf
 - 
MEM_NO_MANS_LAND
, 
	`MEM_SPACE_NEEDED
(
n
));

186 #ifde‡
UNIV_DEBUG


187 
byã
 *
°¨t_no_m™s_œnd
 = 
buf
 - 
MEM_NO_MANS_LAND
;

188 
byã
 *
íd_no_m™s_œnd
 =

189 
°¨t_no_m™s_œnd
 + 
	`MEM_SPACE_NEEDED
(
n
Ë- 
MEM_NO_MANS_LAND
;

190 
	`mem£t
(
°¨t_no_m™s_œnd
, 
MEM_NO_MANS_LAND_BEFORE_BYTE
, 
MEM_NO_MANS_LAND
);

191 
	`UNIV_MEM_FREE
(
°¨t_no_m™s_œnd
, 
MEM_NO_MANS_LAND
);

193 
	`mem£t
(
íd_no_m™s_œnd
, 
MEM_NO_MANS_LAND_AFTER_BYTE
, 
MEM_NO_MANS_LAND
);

194 
	`UNIV_MEM_FREE
(
íd_no_m™s_œnd
, 
MEM_NO_MANS_LAND
);

197  (
buf
);

198 
	}
}

200 #ifde‡
UNIV_DEBUG


201 
UNIV_INLINE


202 
	$vÆid©e_no_m™s_œnd
(
byã
 *
no_m™s_œnd_begö
,

203 
byã
 
mem_no_m™s_œnd_byã
) {

204 
	`UNIV_MEM_VALID
(
no_m™s_œnd_begö
, 
MEM_NO_MANS_LAND
);

205 
byã
 *
no_m™s_œnd_ô
 = 
no_m™s_œnd_begö
;

206 
no_m™s_œnd_ô
 < 
no_m™s_œnd_begö
 + 
MEM_NO_MANS_LAND
;

207 ++
no_m™s_œnd_ô
) {

208 
	`ut_a
(*
no_m™s_œnd_ô
 =
mem_no_m™s_œnd_byã
);

210 
	}
}

216 
UNIV_INLINE


217 
byã
 *
	$mem_hóp_gë_hóp_t›
(
mem_hóp_t
 *
hóp
) {

218 
mem_block_t
 *
block
;

219 
byã
 *
buf
;

221 
	`ut_d
(
	`mem_block_vÆid©e
(
hóp
));

223 
block
 = 
	`UT_LIST_GET_LAST
(
hóp
->
ba£
);

225 
buf
 = (
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(block);

227  (
buf
);

228 
	}
}

235 
UNIV_INLINE


236 
	$mem_hóp_‰ì_hóp_t›
(
mem_hóp_t
 *
hóp
, 
byã
 *
ﬁd_t›
) {

237 
mem_block_t
 *
block
;

238 
mem_block_t
 *
¥ev_block
;

240 
	`ut_d
(
	`mem_hóp_vÆid©e
(
hóp
));

242 
block
 = 
	`UT_LIST_GET_LAST
(
hóp
->
ba£
);

244 
block
 !
nuŒ±r
) {

245 i‡(((
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(blockË>
ﬁd_t›
) &&

246 ((
byã
 *)
block
 <
ﬁd_t›
)) {

255 
¥ev_block
 = 
	`UT_LIST_GET_PREV
(
li°
, 
block
);

257 
	`mem_hóp_block_‰ì
(
hóp
, 
block
);

259 
block
 = 
¥ev_block
;

262 
	`ut_ad
(
block
);

264 i‡(
ﬁd_t›
 =(
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(block)) {

268 #ifde‡
UNIV_DEBUG


269 
	`vÆid©e_no_m™s_œnd
(
ﬁd_t›
, 
MEM_NO_MANS_LAND_BEFORE_BYTE
);

270 
	`vÆid©e_no_m™s_œnd
(

271 (
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(blockË- 
MEM_NO_MANS_LAND
,

272 
MEM_NO_MANS_LAND_AFTER_BYTE
);

275 
	`mem_block_£t_‰ì
(
block
, 
ﬁd_t›
 - (
byã
 *)block);

277 
	`ut_ad
(
	`mem_block_gë_°¨t
(
block
Ë<
	`mem_block_gë_‰ì
(block));

278 
	`UNIV_MEM_FREE
(
ﬁd_t›
, (
byã
 *)
block
 + block->
Àn
 - old_top);

283 i‡((
hóp
 !
block
) &&

284 (
	`mem_block_gë_‰ì
(
block
Ë=
	`mem_block_gë_°¨t
(block))) {

285 
	`mem_hóp_block_‰ì
(
hóp
, 
block
);

287 
	}
}

292 
UNIV_INLINE


293 
	$mem_hóp_em±y
(
mem_hóp_t
 *
hóp
) {

294 
	`mem_hóp_‰ì_hóp_t›
(
hóp
, (
byã
 *)hó∞+ 
	`mem_block_gë_°¨t
(heap));

295 #i‚de‡
UNIV_HOTBACKUP


296 #i‚de‡
UNIV_LIBRARY


297 i‡(
hóp
->
‰ì_block
) {

298 
	`mem_hóp_‰ì_block_‰ì
(
hóp
);

302 
	}
}

309 
UNIV_INLINE


310 *
	$mem_hóp_gë_t›
(
mem_hóp_t
 *
hóp
, 
ulöt
 
n
) {

311 
mem_block_t
 *
block
;

312 
byã
 *
buf
;

314 
	`ut_d
(
	`mem_block_vÆid©e
(
hóp
));

316 
block
 = 
	`UT_LIST_GET_LAST
(
hóp
->
ba£
);

318 
buf
 = (
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(blockË- 
	`MEM_SPACE_NEEDED
(
n
) +

319 
MEM_NO_MANS_LAND
;

321  ((*)
buf
);

322 
	}
}

331 
UNIV_INLINE


332 
boﬁ
 
	$mem_hóp_is_t›
(
mem_hóp_t
 *
hóp
, c⁄° *
buf
, 
ulöt
 
buf_sz
) {

333 c⁄° 
byã
 *
fú°_‰ì_byã
;

334 c⁄° 
byã
 *
¥esumed_°¨t_of_buf
;

336 
	`ut_d
(
	`mem_block_vÆid©e
(
hóp
));

338 
fú°_‰ì_byã
 = 
	`mem_hóp_gë_hóp_t›
(
hóp
);

340 
¥esumed_°¨t_of_buf
 =

341 
fú°_‰ì_byã
 - 
	`MEM_SPACE_NEEDED
(
buf_sz
Ë+ 
MEM_NO_MANS_LAND
;

343  (
¥esumed_°¨t_of_buf
 =
buf
);

344 
	}
}

353 
UNIV_INLINE


354 *
	$mem_hóp_ª∂a˚
(
mem_hóp_t
 *
hóp
,

355 c⁄° *
t›
,

356 
ulöt
 
t›_sz
,

357 
ulöt
 
√w_sz
)

359 i‡(
	`mem_hóp_is_t›
(
hóp
, 
t›
, 
t›_sz
)) {

360 
	`mem_hóp_‰ì_t›
(
hóp
, 
t›_sz
);

363  (
	`mem_hóp_Æloc
(
hóp
, 
√w_sz
));

364 
	}
}

373 
UNIV_INLINE


374 *
	$mem_hóp_dup_ª∂a˚
(

375 
mem_hóp_t
 *
hóp
,

376 c⁄° *
t›
,

377 
ulöt
 
t›_sz
,

378 c⁄° *
d©a
,

379 
ulöt
 
d©a_sz
)

381 *
p
 = 
	`mem_hóp_ª∂a˚
(
hóp
, 
t›
, 
t›_sz
, 
d©a_sz
);

383 
	`mem˝y
(
p
, 
d©a
, 
d©a_sz
);

385  (
p
);

386 
	}
}

395 
UNIV_INLINE


396 *
	$mem_hóp_°rdup_ª∂a˚
(

397 
mem_hóp_t
 *
hóp
,

398 c⁄° *
t›
,

399 
ulöt
 
t›_sz
,

400 c⁄° *
°r
)

402  (
ªöãΩªt_ˇ°
<*>(

403 
	`mem_hóp_dup_ª∂a˚
(
hóp
, 
t›
, 
t›_sz
, 
°r
, 
	`°æí
(str) + 1)));

404 
	}
}

408 
UNIV_INLINE


409 
	$mem_hóp_‰ì_t›
(
mem_hóp_t
 *
hóp
,

410 
ulöt
 
n
)

412 
mem_block_t
 *
block
;

414 
	`ut_d
(
	`mem_block_vÆid©e
(
hóp
));

416 
block
 = 
	`UT_LIST_GET_LAST
(
hóp
->
ba£
);

419 
	`mem_block_£t_‰ì
(
block
, 
	`mem_block_gë_‰ì
(blockË- 
	`MEM_SPACE_NEEDED
(
n
));

420 
	`UNIV_MEM_ASSERT_W
(

421 (
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(blockË+ 
MEM_NO_MANS_LAND
, 
n
);

422 #ifde‡
UNIV_DEBUG


423 
	`vÆid©e_no_m™s_œnd
((
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(block),

424 
MEM_NO_MANS_LAND_BEFORE_BYTE
);

425 
	`vÆid©e_no_m™s_œnd
((
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(block) +

426 
	`MEM_SPACE_NEEDED
(
n
Ë- 
MEM_NO_MANS_LAND
,

427 
MEM_NO_MANS_LAND_AFTER_BYTE
);

433 i‡((
hóp
 !
block
) &&

434 (
	`mem_block_gë_‰ì
(
block
Ë=
	`mem_block_gë_°¨t
(block))) {

435 
	`mem_hóp_block_‰ì
(
hóp
, 
block
);

437 
	`UNIV_MEM_FREE
((
byã
 *)
block
 + 
	`mem_block_gë_‰ì
(block),

438 
	`MEM_SPACE_NEEDED
(
n
));

440 
	}
}

447 #ifde‡
UNIV_DEBUG


456 
UNIV_INLINE


457 
mem_hóp_t
 *
mem_hóp_¸óã_func
(
ulöt
 
size
,

458 #ifde‡
UNIV_DEBUG


459 c⁄° *
fûe_«me
, 
ulöt
 
löe
,

461 
ulöt
 
ty≥
) {

462 
mem_block_t
 *
	gblock
;

464 i‡(!
	gsize
) {

465 
	gsize
 = 
MEM_BLOCK_START_SIZE
;

468 
	gblock
 = 
mem_hóp_¸óã_block
(
nuŒ±r
, 
size
, 
ty≥
, 
fûe_«me
, 
löe
);

470 i‡(
	gblock
 =
nuŒ±r
) {

471  (
nuŒ±r
);

474 #i‚de‡
UNIV_HOTBACKUP


475 #i‚de‡
UNIV_LIBRARY


478 
ut_ad
(
block
->
buf_block
 =
nuŒ±r
);

482 
UT_LIST_INIT
(
block
->
ba£
, &
mem_block_t
::
li°
);

485 
UT_LIST_ADD_FIRST
(
block
->
ba£
, block);

487  (
	gblock
);

493 
UNIV_INLINE


494 
	$mem_hóp_‰ì
(
mem_hóp_t
 *
hóp
) {

495 
mem_block_t
 *
block
;

496 
mem_block_t
 *
¥ev_block
;

498 
	`ut_d
(
	`mem_block_vÆid©e
(
hóp
));

500 
block
 = 
	`UT_LIST_GET_LAST
(
hóp
->
ba£
);

502 #i‚de‡
UNIV_HOTBACKUP


503 #i‚de‡
UNIV_LIBRARY


504 i‡(
hóp
->
‰ì_block
) {

505 
	`mem_hóp_‰ì_block_‰ì
(
hóp
);

510 
block
 !
nuŒ±r
) {

514 
¥ev_block
 = 
	`UT_LIST_GET_PREV
(
li°
, 
block
);

516 
	`mem_hóp_block_‰ì
(
hóp
, 
block
);

518 
block
 = 
¥ev_block
;

520 
	}
}

523 
UNIV_INLINE


524 
ulöt
 
	$mem_hóp_gë_size
(
mem_hóp_t
 *
hóp
)

526 
ulöt
 
size
 = 0;

528 
	`ut_d
(
	`mem_block_vÆid©e
(
hóp
));

530 
size
 = 
hóp
->
tŸÆ_size
;

532 #i‚de‡
UNIV_LIBRARY


533 i‡(
hóp
->
‰ì_block
) {

534 
size
 +
UNIV_PAGE_SIZE
;

538  (
size
);

539 
	}
}

543 
UNIV_INLINE


544 *
	$mem_°rdup
(c⁄° *
°r
)

546 
ulöt
 
Àn
 = 
	`°æí
(
°r
) + 1;

547  (
°©ic_ˇ°
<*>(
	`mem˝y
(
	`ut_mÆloc_nokey
(
Àn
), 
°r
,Üen)));

548 
	}
}

552 
UNIV_INLINE


553 *
	$mem_°rdu∂
(c⁄° *
°r
,

554 
ulöt
 
Àn
)

556 i‡(
°©ic_ˇ°
<>(
Àn
) < 0) {

557  
nuŒ±r
;

559 *
s
 = 
°©ic_ˇ°
<*>(
	`ut_mÆloc_nokey
(
Àn
 + 1));

560 
s
[
Àn
] = 0;

561 i‡(
Àn
 > 0) {

562 
	`mem˝y
(
s
, 
°r
, 
Àn
);

564  
s
;

565 
	}
}

570 
UNIV_INLINE


571 *
	$mem_hóp_°rdu∂
(

572 
mem_hóp_t
 *
hóp
,

573 c⁄° *
°r
,

574 
ulöt
 
Àn
)

576 *
s
 = (*)
	`mem_hóp_Æloc
(
hóp
, 
Àn
 + 1);

577 
s
[
Àn
] = 0;

578 i‡(
Àn
 > 0) {

579 
	`mem˝y
(
s
, 
°r
, 
Àn
);

581  
s
;

582 
	}
}

	@mtr0log.h

33 #i‚de‡
må0log_h


34 
	#må0log_h


	)

36 
	~"dyn0buf.h
"

37 
	~"må0må.h
"

38 
	~"univ.i
"

41 
	gdi˘_ödex_t
;

45 
mlog_wrôe_ulöt
(

46 
byã
 *
±r
,

47 
ulöt
 
vÆ
,

48 
mlog_id_t
 
ty≥
,

49 
må_t
 *
må
);

53 
mlog_wrôe_uŒ
(
byã
 *
±r
,

54 
ib_uöt64_t
 
vÆ
,

55 
må_t
 *
må
);

58 
mlog_wrôe_°rög
(
byã
 *
±r
,

59 c⁄° 
byã
 *
°r
,

60 
ulöt
 
Àn
,

61 
må_t
 *
må
);

64 
mlog_log_°rög
(
byã
 *
±r
,

65 
ulöt
 
Àn
,

66 
må_t
 *
må
);

69 
mlog_wrôe_öôül_log_ªc‹d
(

70 c⁄° 
byã
 *
±r
,

73 
mlog_id_t
 
ty≥
,

74 
må_t
 *
må
);

80 
UNIV_INLINE


81 
mlog_ˇã«ã_ulöt
(
må_buf_t
 *
dyn_buf
, 
ulöt
 
vÆ
, 
mlog_id_t
 
ty≥
);

87 
UNIV_INLINE


88 
mlog_ˇã«ã_ulöt
(
må_t
 *
må
, 
ulöt
 
vÆ
, 
mlog_id_t
 
ty≥
);

94 
mlog_ˇã«ã_°rög
(
må_t
 *
må
, c⁄° 
byã
 *
°r
, 
ulöt
 
Àn
);

99 
UNIV_INLINE


100 
mlog_ˇã«ã_ulöt_com¥es£d
(
må_t
 *
må
, 
ulöt
 
vÆ
);

105 
UNIV_INLINE


106 
mlog_ˇã«ã_uŒ_com¥es£d
(
må_t
 *
må
, 
ib_uöt64_t
 
vÆ
);

115 
UNIV_INLINE
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
boﬁ
 
mlog_›í
(
må_t
 *
må
,

116 
ulöt
 
size
,

117 
byã
 *&
buf„r
);

127 
UNIV_INLINE
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë
boﬁ
 
mlog_›í_mëad©a
(

128 
må_t
 *
må
, 
ulöt
 
size
, 
byã
 *&
buf„r
);

133 
UNIV_INLINE


134 
mlog_˛o£
(
må_t
 *
må
, 
byã
 *
±r
);

144 
UNIV_INLINE


145 
byã
 *
mlog_wrôe_öôül_di˘_log_ªc‹d
(
mlog_id_t
 
ty≥
, 
èbÀ_id_t
 
id
,

146 
uöt64_t
 
vîsi⁄
, 
byã
 *
log_±r
,

147 
må_t
 *
må
);

156 
UNIV_INLINE


157 
byã
 *
mlog_wrôe_öôül_log_ªc‹d_low
(
mlog_id_t
 
ty≥
, 
•a˚_id_t
 
•a˚_id
,

158 
∑ge_no_t
 
∑ge_no
, 
byã
 *
log_±r
,

159 
må_t
 *
må
);

161 #i‚de‡
UNIV_HOTBACKUP


171 
UNIV_INLINE


172 
byã
 *
mlog_wrôe_öôül_log_ªc‹d_Á°
(c⁄° byã *
±r
, 
mlog_id_t
 
ty≥
,

173 
byã
 *
log_±r
, 
må_t
 *
må
);

175 
	#mlog_wrôe_öôül_log_ªc‹d
(
±r
, 
ty≥
, 
må
Ë(()0)

	)

176 
	#mlog_wrôe_öôül_log_ªc‹d_Á°
(
±r
, 
ty≥
, 
log_±r
, 
må
Ë((
byã
 *)0)

	)

187 
byã
 *
mlog_∑r£_öôül_di˘_log_ªc‹d
(c⁄° byã *
±r
, c⁄° byã *
íd_±r
,

188 
mlog_id_t
 *
ty≥
, 
èbÀ_id_t
 *
id
,

189 
uöt64
 *
vîsi⁄
);

193 
byã
 *
mlog_∑r£_öôül_log_ªc‹d
(

194 c⁄° 
byã
 *
±r
,

195 c⁄° 
byã
 *
íd_±r
,

196 
mlog_id_t
 *
ty≥
,

197 
•a˚_id_t
 *
•a˚
,

198 
∑ge_no_t
 *
∑ge_no
);

201 
byã
 *
mlog_∑r£_nbyãs
(

202 
mlog_id_t
 
ty≥
,

203 c⁄° 
byã
 *
±r
,

204 c⁄° 
byã
 *
íd_±r
,

205 
byã
 *
∑ge
,

207 *
∑ge_zù
);

210 
byã
 *
mlog_∑r£_°rög
(

211 
byã
 *
±r
,

212 
byã
 *
íd_±r
,

213 
byã
 *
∑ge
,

214 *
∑ge_zù
);

229 
boﬁ
 
mlog_›í_™d_wrôe_ödex
(
må_t
 *
må
, c⁄° 
byã
 *
ªc
,

230 c⁄° 
di˘_ödex_t
 *
ödex
, 
mlog_id_t
 
ty≥
,

231 
ulöt
 
size
, 
byã
 *&
log_±r
);

235 
byã
 *
mlog_∑r£_ödex
(byã *
±r
,

236 c⁄° 
byã
 *
íd_±r
,

237 
iboﬁ
 
comp
,

238 
di˘_ödex_t
 **
ödex
);

242 
	#MLOG_BUF_MARGIN
 256

	)

244 
	~"må0log.ic
"

	@mtr0log.ic

33 
	~"buf0dblwr.h
"

34 
	~"f•0ty≥s.h
"

35 
	~"mach0d©a.h
"

36 
	~"åx0ty≥s.h
"

38 
	~"mysqld_îr‹.h
"

40 
UNIV_INLINE


41 
boﬁ
 
	$mlog_›í
(
må_t
 *
må
, 
ulöt
 
size
, 
byã
 *&
buf„r
) {

42 
må
->
	`£t_modifõd
();

43  (
	`mlog_›í_mëad©a
(
må
, 
size
, 
buf„r
));

44 
	}
}

46 
UNIV_INLINE


47 
boﬁ
 
	$mlog_›í_mëad©a
(
må_t
 *
må
, 
ulöt
 
size
, 
byã
 *&
buf„r
) {

48 i‡(
	`må_gë_log_mode
(
må
Ë=
MTR_LOG_NONE
 ||

49 
	`må_gë_log_mode
(
må
Ë=
MTR_LOG_NO_REDO
) {

50 
buf„r
 = 
nuŒ±r
;

51  (
Ál£
);

54 
buf„r
 = 
må
->
	`gë_log
()->
	`›í
(
size
);

55  (
buf„r
 !
nuŒ±r
);

56 
	}
}

59 
UNIV_INLINE


60 
	$mlog_˛o£
(
må_t
 *
må
,

61 
byã
 *
±r
)

63 
	`ut_ad
(
	`må_gë_log_mode
(
må
Ë!
MTR_LOG_NONE
);

64 
	`ut_ad
(
	`må_gë_log_mode
(
må
Ë!
MTR_LOG_NO_REDO
);

66 
må
->
	`gë_log
()->
	`˛o£
(
±r
);

67 
	}
}

70 
UNIV_INLINE


71 
	$mlog_ˇã«ã_ulöt
(
må_buf_t
 *
må_buf
,

72 
ulöt
 
vÆ
,

73 
mlog_id_t
 
ty≥
)

75 
	`ut_ad
(
MLOG_1BYTE
 == 1);

76 
	`ut_ad
(
MLOG_2BYTES
 == 2);

77 
	`ut_ad
(
MLOG_4BYTES
 == 4);

78 
	`ut_ad
(
MLOG_8BYTES
 == 8);

80 
byã
 *
±r
 = 
må_buf
->
push
<byã *>(
ty≥
);

82 
ty≥
) {

83 
MLOG_4BYTES
:

84 
	`mach_wrôe_to_4
(
±r
, 
vÆ
);

86 
MLOG_2BYTES
:

87 
	`mach_wrôe_to_2
(
±r
, 
vÆ
);

89 
MLOG_1BYTE
:

90 
	`mach_wrôe_to_1
(
±r
, 
vÆ
);

93 
ut_îr‹
;

95 
	}
}

98 
UNIV_INLINE


99 
	$mlog_ˇã«ã_ulöt
(

100 
må_t
 *
må
,

101 
ulöt
 
vÆ
,

102 
mlog_id_t
 
ty≥
)

104 i‡(
	`må_gë_log_mode
(
må
Ë=
MTR_LOG_NONE
 ||

105 
	`må_gë_log_mode
(
må
Ë=
MTR_LOG_NO_REDO
) {

109 
	`mlog_ˇã«ã_ulöt
(
må
->
	`gë_log
(), 
vÆ
, 
ty≥
);

110 
	}
}

113 
UNIV_INLINE


114 
	$mlog_ˇã«ã_ulöt_com¥es£d
(
må_t
 *
må
,

115 
ulöt
 
vÆ
)

117 
byã
 *
log_±r
 = 
nuŒ±r
;

120 i‡(!
	`mlog_›í
(
må
, 10, 
log_±r
)) {

124 
log_±r
 +
	`mach_wrôe_com¥es£d
÷og_±r, 
vÆ
);

126 
	`mlog_˛o£
(
må
, 
log_±r
);

127 
	}
}

130 
UNIV_INLINE


131 
	$mlog_ˇã«ã_uŒ_com¥es£d
(
må_t
 *
må
,

132 
ib_uöt64_t
 
vÆ
)

134 
byã
 *
log_±r
 = 
nuŒ±r
;

137 i‡(!
	`mlog_›í
(
må
, 15, 
log_±r
)) {

141 
log_±r
 +
	`mach_u64_wrôe_com¥es£d
÷og_±r, 
vÆ
);

143 
	`mlog_˛o£
(
må
, 
log_±r
);

144 
	}
}

146 
UNIV_INLINE


147 
byã
 *
	$mlog_wrôe_öôül_di˘_log_ªc‹d
(
mlog_id_t
 
ty≥
, 
èbÀ_id_t
 
id
,

148 
uöt64_t
 
vîsi⁄
, 
byã
 *
log_±r
,

149 
må_t
 *
må
) {

150 
	`ut_ad
(
ty≥
 <
MLOG_BIGGEST_TYPE
);

151 
	`ut_ad
(
ty≥
 =
MLOG_TABLE_DYNAMIC_META
);

153 
	`mach_wrôe_to_1
(
log_±r
, 
ty≥
);

154 
log_±r
++;

156 
log_±r
 +
	`mach_u64_wrôe_much_com¥es£d
÷og_±r, 
id
);

157 
log_±r
 +
	`mach_u64_wrôe_much_com¥es£d
÷og_±r, 
vîsi⁄
);

159 
må
->
	`added_ªc
();

160  (
log_±r
);

161 
	}
}

170 
UNIV_INLINE


171 
byã
 *
	$mlog_wrôe_öôül_log_ªc‹d_low
(
mlog_id_t
 
ty≥
, 
•a˚_id_t
 
•a˚_id
,

172 
∑ge_no_t
 
∑ge_no
, 
byã
 *
log_±r
,

173 
må_t
 *
må
) {

174 
	`ut_ad
(
ty≥
 <
MLOG_BIGGEST_TYPE
);

176 
	`mach_wrôe_to_1
(
log_±r
, 
ty≥
);

177 
log_±r
++;

179 
log_±r
 +
	`mach_wrôe_com¥es£d
÷og_±r, 
•a˚_id
);

180 
log_±r
 +
	`mach_wrôe_com¥es£d
÷og_±r, 
∑ge_no
);

182 
må
->
	`added_ªc
();

183  (
log_±r
);

184 
	}
}

186 #i‚de‡
UNIV_HOTBACKUP


191 
UNIV_INLINE


192 
byã
 *
	$mlog_wrôe_öôül_log_ªc‹d_Á°
(

193 c⁄° 
byã
 *
±r
,

196 
mlog_id_t
 
ty≥
,

197 
byã
 *
log_±r
,

199 
må_t
 *
må
)

201 c⁄° 
byã
 *
∑ge
;

202 
•a˚_id_t
 
•a˚
;

203 
∑ge_no_t
 
off£t
;

205 
	`ut_ad
(
log_±r
);

206 
	`ut_d
(
må
->
	`memo_modify_∑ge
(
±r
));

208 
∑ge
 = (c⁄° 
byã
 *)
	`ut_Æign_down
(
±r
, 
UNIV_PAGE_SIZE
);

209 
•a˚
 = 
	`mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID
);

210 
off£t
 = 
	`mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_OFFSET
);

218 i‡(
•a˚
 =
TRX_SYS_SPACE
 && 
off£t
 >
FSP_EXTENT_SIZE
 &&

219 
off£t
 < 3 * 
FSP_EXTENT_SIZE
) {

220  (
log_±r
);

223  (
	`mlog_wrôe_öôül_log_ªc‹d_low
(
ty≥
, 
•a˚
, 
off£t
, 
log_±r
, 
må
));

224 
	}
}

	@mtr0mtr.h

34 #i‚de‡
må0må_h


35 
	#må0må_h


	)

37 
	~<°ddef.h
>

39 
	~"univ.i
"

41 
	~"buf0ty≥s.h
"

42 
	~"dyn0buf.h
"

43 
	~"fû0fû.h
"

44 
	~"log0ty≥s.h
"

45 
	~"må0ty≥s.h
"

46 
	~"§v0§v.h
"

47 
	~"åx0ty≥s.h
"

50 
	#må_°¨t
(
m
Ë(m)->
	`°¨t
()

	)

53 
	#må_°¨t_sync
(
m
Ë(m)->
	`°¨t
(
åue
)

	)

56 
	#må_°¨t_ro
(
m
Ë(m)->
	`°¨t
(
åue
,Årue)

	)

59 
	#må_commô
(
m
Ë(m)->
	`commô
()

	)

63 
	#må_£t_ßvïoöt
(
m
Ë(m)->
	`gë_ßvïoöt
()

	)

67 
	#må_ªÀa£_s_œtch_©_ßvïoöt
(
m
, 
s
, 
l
) \

68 (
m
)->
	`ªÀa£_s_œtch_©_ßvïoöt
((
s
), (
l
))

	)

72 
	#må_gë_log_mode
(
m
Ë(m)->
	`gë_log_mode
()

	)

76 
	#må_£t_log_mode
(
m
, 
d
Ë(m)->
	`£t_log_mode
((d))

	)

80 
	#må_gë_Êush_ob£rvî
(
m
Ë(m)->
	`gë_Êush_ob£rvî
()

	)

83 
	#må_£t_Êush_ob£rvî
(
m
, 
d
Ë(m)->
	`£t_Êush_ob£rvî
((d))

	)

87 
	#må_ªad_ulöt
(
p
, 
t
, 
m
Ë(m)->
	`ªad_ulöt
(’), (t))

	)

91 
	#må_memo_ªÀa£
(
m
, 
o
, 
t
Ë(m)->
	`memo_ªÀa£
((o), (t))

	)

93 #ifde‡
UNIV_DEBUG


97 
	#må_is_block_fix
(
m
, 
o
, 
t
, 
èbÀ
) \

98 (
	`må_memo_c⁄èös
(
m
, 
o
, 
t
Ë|| 
èbÀ
->
	`is_öåösic
())

	)

102 
	#må_is_∑ge_fix
(
m
, 
p
, 
t
, 
èbÀ
) \

103 (
	`må_memo_c⁄èös_∑ge
(
m
, 
p
, 
t
Ë|| 
èbÀ
->
	`is_öåösic
())

	)

107 
	#må_memo_c⁄èös
(
m
, 
o
, 
t
Ë(m)->
	`memo_c⁄èös
((m)->
	`gë_memo
(), (o), (t))

	)

111 
	#må_memo_c⁄èös_∑ge
(
m
, 
p
, 
t
) \

112 (
m
)->
	`memo_c⁄èös_∑ge_Êagged
((
p
), (
t
))

	)

116 
	#må_¥öt
(
m
Ë(m)->
	`¥öt
()

	)

120 
	#må_gë_log
(
m
Ë(m)->
	`gë_log
()

	)

123 
	#må_memo_push
(
m
, 
o
, 
t
Ë(m)->
	`memo_push
(o,Å)

	)

126 
	#må_s_lock
(
l
, 
m
Ë(m)->
	`s_lock
(÷), 
__FILE__
, 
__LINE__
)

	)

129 
	#må_x_lock
(
l
, 
m
Ë(m)->
	`x_lock
(÷), 
__FILE__
, 
__LINE__
)

	)

132 
	#må_x_lock_•a˚
(
s
, 
m
Ë(m)->
	`x_lock_•a˚
((s), 
__FILE__
, 
__LINE__
)

	)

135 
	#må_sx_lock
(
l
, 
m
Ë(m)->
	`sx_lock
(÷), 
__FILE__
, 
__LINE__
)

	)

137 
	#må_memo_c⁄èös_Êagged
(
m
, 
p
, 
l
Ë(m)->
	`memo_c⁄èös_Êagged
(’), (l))

	)

139 
	#må_memo_c⁄èös_∑ge_Êagged
(
m
, 
p
, 
l
) \

140 (
m
)->
	`memo_c⁄èös_∑ge_Êagged
((
p
), (
l
))

	)

142 
	#må_ªÀa£_block_©_ßvïoöt
(
m
, 
s
, 
b
) \

143 (
m
)->
	`ªÀa£_block_©_ßvïoöt
((
s
), (
b
))

	)

145 
	#må_block_sx_œtch_©_ßvïoöt
(
m
, 
s
, 
b
) \

146 (
m
)->
	`sx_œtch_©_ßvïoöt
((
s
), (
b
))

	)

148 
	#må_block_x_œtch_©_ßvïoöt
(
m
, 
s
, 
b
) \

149 (
m
)->
	`x_œtch_©_ßvïoöt
((
s
), (
b
))

	)

154 
	#må_block_dútõd
(
b
Ë
må_t
::
	`is_block_dútõd
((b))

	)

157 
	gfû_•a˚_t
;

160 
	små_memo_¶Ÿ_t
 {

162 *
	mobje˘
;

165 
ulöt
 
	mty≥
;

169 
	små_t
 {

171 
	sIm∂
 {

173 
må_buf_t
 
	mm_memo
;

176 
må_buf_t
 
	mm_log
;

179 
boﬁ
 
	mm_made_dúty
;

182 
boﬁ
 
	mm_öside_ibuf
;

185 
boﬁ
 
	mm_modifiˇti⁄s
;

190 
boﬁ
 
	mm_m¨ked_nﬁog
;

194 
size_t
 
	mm_sh¨d_ödex
;

198 
ib_uöt32_t
 
	mm_n_log_ªcs
;

202 
må_log_t
 
	mm_log_mode
;

205 
må_°©e_t
 
	mm_°©e
;

208 
FlushOb£rvî
 *
	mm_Êush_ob£rvî
;

210 #ifde‡
UNIV_DEBUG


212 
ulöt
 
	mm_magic_n
;

217 
må_t
 *
	mm_må
;

220 #i‚de‡
UNIV_HOTBACKUP


222 ˛as†
	cLoggög
 {

223 
	mpublic
:

231 
Sèã
 : 
uöt32_t
 {

233 
ENABLED
,

237 
	mENABLED_DBLWR
,

241 
	mENABLED_RESTRICT
,

244 
	mDISABLED


248 
öô
() {

249 
	mm_°©e
.
°‹e
(
ENABLED
);

257 
	mm_cou¡_nﬁoggög_må
.
£t_‹dî
(
°d
::
mem‹y_‹dî_£q_c°
);

258 
	mCou¡î
::
˛ór
(
m_cou¡_nﬁoggög_må
);

264 
dißbÀ
(
THD
 *
thd
);

270 
íabÀ
(
THD
 *
thd
);

275 
boﬁ
 
m¨k_må
(
size_t
 
ödex
) {

278 i‡(
is_dißbÀd
()) {

280 
	mCou¡î
::
öc
(
m_cou¡_nﬁoggög_må
, 
ödex
);

285 i‡(
is_dißbÀd
()) {

286  (
	måue
);

288 
	mCou¡î
::
dec
(
m_cou¡_nﬁoggög_må
, 
ödex
);

290  (
	mÁl£
);

294 
unm¨k_må
(
size_t
 
ödex
) {

295 
ut_ad
(!
is_íabÀd
());

296 
ut_ad
(
Cou¡î
::
tŸÆ
(
m_cou¡_nﬁoggög_må
) > 0);

297 
	mCou¡î
::
dec
(
m_cou¡_nﬁoggög_må
, 
ödex
);

301 
uöt32_t
 
gë_nﬁog_Êush_lo›
(Ëc⁄° {  (
	mNOLOG_MAX_FLUSH_LOOP
); }

304 
boﬁ
 
is_íabÀd
(Ëc⁄° {  (
	mm_°©e
.
lﬂd
(Ë=
ENABLED
); }

308 
boﬁ
 
is_dißbÀd
(Ëc⁄° {  (
	mm_°©e
.
lﬂd
(Ë=
DISABLED
); }

311 
boﬁ
 
dblwr_dißbÀd
() const {

312 autÿ
	m°©e
 = 
m_°©e
.
lﬂd
();

313  (
	m°©e
 =
DISABLED
 || 
°©e
 =
ENABLED_RESTRICT
);

319 
c⁄°ex¥
 
uöt32_t
 
	mNOLOG_MAX_FLUSH_LOOP
 = 5;

321 
	m¥iv©e
:

324 
waô_no_log_må
(
THD
 *
thd
);

326 
	m¥iv©e
:

328 
°d
::
©omic
<
Sèã
> 
m_°©e
;

330 
usög
 
	mSh¨ds
 = 
Cou¡î
::
Sh¨ds
<128>;

333 
Sh¨ds
 
	mm_cou¡_nﬁoggög_må
;

338 
check_nﬁog_™d_m¨k
();

342 
check_nﬁog_™d_unm¨k
();

345 
	$må_t
() {

346 
m_im∂
.
m_°©e
 = 
MTR_STATE_INIT
;

347 
m_im∂
.
m_m¨ked_nﬁog
 = 
Ál£
;

348 
m_im∂
.
m_sh¨d_ödex
 = 0;

349 
	}
}

351 ~
	$må_t
() {

352 #ifde‡
UNIV_DEBUG


353 
m_im∂
.
m_°©e
) {

354 
MTR_STATE_ACTIVE
:

355 
	`ut_ad
(
m_im∂
.
m_memo
.
	`size
() == 0);

357 
MTR_STATE_INIT
:

358 
MTR_STATE_COMMITTED
:

360 
MTR_STATE_COMMITTING
:

361 
ut_îr‹
;

364 #i‚de‡
UNIV_HOTBACKUP


366 i‡(
m_im∂
.
m_°©e
 !
MTR_STATE_INIT
) {

367 
	`check_nﬁog_™d_unm¨k
();

370 
	}
}

375 
°¨t
(
boﬁ
 
sync
 = 
åue
, boﬁ 
ªad_⁄ly
 = 
Ál£
);

378 
boﬁ
 
	$is_async
(Ëc⁄° {  (!
m_sync
); 
	}
}

381 
	$£t_sync
(Ë{ 
m_sync
 = 
åue
; 
	}
}

384 
commô
();

388 
ulöt
 
	$gë_ßvïoöt
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

389 
	`ut_ad
(
	`is_a˘ive
());

390 
	`ut_ad
(
m_im∂
.
m_magic_n
 =
MTR_MAGIC_N
);

392  (
m_im∂
.
m_memo
.
	`size
());

393 
	}
}

399 
ölöe
 
ªÀa£_s_œtch_©_ßvïoöt
(
ulöt
 
ßvïoöt
, 
rw_lock_t
 *
lock
);

402 
ölöe
 
ªÀa£_block_©_ßvïoöt
(
ulöt
 
ßvïoöt
, 
buf_block_t
 *
block
);

405 
ölöe
 
sx_œtch_©_ßvïoöt
(
ulöt
 
ßvïoöt
, 
buf_block_t
 *
block
);

408 
ölöe
 
x_œtch_©_ßvïoöt
(
ulöt
 
ßvïoöt
, 
buf_block_t
 *
block
);

412 
ölöe
 
må_log_t
 
	$gë_log_mode
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

417 
må_log_t
 
	`£t_log_mode
(må_log_à
mode
);

423 
ölöe
 
uöt32_t
 
	$ªad_ulöt
(c⁄° 
byã
 *
±r
, 
mlog_id_t
 
ty≥
) const

424 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

431 
ölöe
 
	`s_lock
(
rw_lock_t
 *
lock
, c⁄° *
fûe
, 
ulöt
 
löe
);

438 
ölöe
 
	`x_lock
(
rw_lock_t
 *
lock
, c⁄° *
fûe
, 
ulöt
 
löe
);

445 
ölöe
 
	`sx_lock
(
rw_lock_t
 *
lock
, c⁄° *
fûe
, 
ulöt
 
löe
);

452 
	`x_lock_•a˚
(
fû_•a˚_t
 *
•a˚
, c⁄° *
fûe
, 
ulöt
 
löe
);

457 
	`memo_ªÀa£
(c⁄° *
obje˘
, 
ulöt
 
ty≥
);

462 
	`ªÀa£_∑ge
(c⁄° *
±r
, 
må_memo_ty≥_t
 
ty≥
);

465 
	$£t_modifõd
(Ë{ 
m_im∂
.
m_modifiˇti⁄s
 = 
åue
; 
	}
}

470 
	$disˇrd_modifiˇti⁄s
(Ë{ 
m_im∂
.
m_modifiˇti⁄s
 = 
Ál£
; 
	}
}

476 
l¢_t
 
	$commô_l¢
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

477 
	`ut_ad
(
	`has_commôãd
());

478 
	`ut_ad
(
m_im∂
.
m_log_mode
 =
MTR_LOG_ALL
);

479  (
m_commô_l¢
);

480 
	}
}

483 
	$íãr_ibuf
(Ë{ 
m_im∂
.
m_öside_ibuf
 = 
åue
; 
	}
}

486 
	$exô_ibuf
(Ë{ 
m_im∂
.
m_öside_ibuf
 = 
Ál£
; 
	}
}

489 
boﬁ
 
	$is_öside_ibuf
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

490  (
m_im∂
.
m_öside_ibuf
);

491 
	}
}

495 
boﬁ
 
	$is_a˘ive
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

496  (
m_im∂
.
m_°©e
 =
MTR_STATE_ACTIVE
);

497 
	}
}

501 
FlushOb£rvî
 *
	$gë_Êush_ob£rvî
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

502  (
m_im∂
.
m_Êush_ob£rvî
);

503 
	}
}

507 
	$£t_Êush_ob£rvî
(
FlushOb£rvî
 *
ob£rvî
) {

508 
	`ut_ad
(
ob£rvî
 =
nuŒ±r
 || 
m_im∂
.
m_log_mode
 =
MTR_LOG_NO_REDO
);

510 
m_im∂
.
m_Êush_ob£rvî
 = 
ob£rvî
;

511 
	}
}

513 #ifde‡
UNIV_DEBUG


519 
boﬁ
 
	$memo_c⁄èös
(c⁄° 
må_buf_t
 *
memo
, c⁄° *
obje˘
,

520 
ulöt
 
ty≥
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

527 
boﬁ
 
	$memo_c⁄èös_Êagged
(c⁄° *
±r
, 
ulöt
 
Êags
) const

528 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

536 
buf_block_t
 *
	$memo_c⁄èös_∑ge_Êagged
(c⁄° 
byã
 *
±r
, 
ulöt
 
Êags
) const

537 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

541 
	`memo_modify_∑ge
(c⁄° 
byã
 *
±r
);

544 
	$¥öt
() const;

547 
boﬁ
 
	$has_commôãd
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

548  (
m_im∂
.
m_°©e
 =
MTR_STATE_COMMITTED
);

549 
	}
}

552 
boﬁ
 
	$is_commôtög
() const {

553  (
m_im∂
.
m_°©e
 =
MTR_STATE_COMMITTING
);

554 
	}
}

557 
boﬁ
 
	$has_modifiˇti⁄s
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

558  (
m_im∂
.
m_modifiˇti⁄s
);

559 
	}
}

566 
boﬁ
 
	$c⁄Êi˘s_wôh
(c⁄° 
må_t
 *
må2
) const

567 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

570 c⁄° 
må_buf_t
 *
	$gë_memo
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

571  (&
m_im∂
.
m_memo
);

572 
	}
}

575 
må_buf_t
 *
	$gë_memo
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

576  (&
m_im∂
.
m_memo
);

577 
	}
}

583 
size_t
 
	$gë_ex≥˘ed_log_size
() const {

584  (
m_im∂
.
m_log
.
	`size
(Ë+ (m_im∂.
m_n_log_ªcs
 > 1 ? 1 : 0));

585 
	}
}

587 
waô_f‹_Êush
();

591 
boﬁ
 
	$is_dúty
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

592  (
m_im∂
.
m_made_dúty
);

593 
	}
}

596 
	$added_ªc
(Ë{ ++
m_im∂
.
m_n_log_ªcs
; 
	}
}

600 c⁄° 
må_buf_t
 *
	$gë_log
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

601 
	`ut_ad
(
m_im∂
.
m_magic_n
 =
MTR_MAGIC_N
);

603  (&
m_im∂
.
m_log
);

604 
	}
}

608 
må_buf_t
 *
	$gë_log
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

609 
	`ut_ad
(
m_im∂
.
m_magic_n
 =
MTR_MAGIC_N
);

611  (&
m_im∂
.
m_log
);

612 
	}
}

617 
ölöe
 
memo_push
(*
obje˘
, 
må_memo_ty≥_t
 
ty≥
);

622 
boﬁ
 
	$is_block_dútõd
(c⁄° 
buf_block_t
 *
block
)

623 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

626 
boﬁ
 
s_mode_upd©e
[
MTR_LOG_MODE_MAX
][MTR_LOG_MODE_MAX];

628 #ifde‡
UNIV_DEBUG


630 
boﬁ
 
s_mode_upd©e_vÆid
[
MTR_LOG_MODE_MAX
][MTR_LOG_MODE_MAX];

633 #i‚de‡
UNIV_HOTBACKUP


635 
Loggög
 
s_loggög
;

638 
¥iv©e
:

639 
Im∂
 
m_im∂
;

642 
l¢_t
 
m_commô_l¢
;

645 
boﬁ
 
m_sync
;

647 
˛ass
 
Comm™d
;

649 
‰õnd
 
˛ass
 
Comm™d
;

650 
	}
};

652 #i‚de‡
UNIV_HOTBACKUP


653 #ifde‡
UNIV_DEBUG


660 
l¢_t
 
må_commô_mlog_ã°
(
log_t
 &
log
, 
size_t
 
∑ylﬂd
 = 0);

671 
må_commô_mlog_ã°_fûlög_block
(
log_t
 &
log
, 
size_t
 
•a˚_À·
 = 0);

676 
	~"må0må.ic
"

	@mtr0mtr.ic

33 
	~"buf0buf.h
"

37 
	gmå_t
::
	$memo_push
(*
obje˘
, 
må_memo_ty≥_t
 
ty≥
) {

38 
	`ut_ad
(
	`is_a˘ive
());

39 
	`ut_ad
(
obje˘
 !
nuŒ±r
);

40 
	`ut_ad
(
ty≥
 >
MTR_MEMO_PAGE_S_FIX
);

41 
	`ut_ad
(
ty≥
 <
MTR_MEMO_SX_LOCK
);

42 
	`ut_ad
(
m_im∂
.
m_magic_n
 =
MTR_MAGIC_N
);

43 
	`ut_ad
(
	`ut_is_2pow
(
ty≥
));

49 i‡((
ty≥
 =
MTR_MEMO_PAGE_X_FIX
 ||Åy≥ =
MTR_MEMO_PAGE_SX_FIX
) &&

50 !
m_im∂
.
m_made_dúty
) {

51 
m_im∂
.
m_made_dúty
 =

52 
	`is_block_dútõd
(
ªöãΩªt_ˇ°
<c⁄° 
buf_block_t
 *>(
obje˘
));

53 } i‡(
ty≥
 =
MTR_MEMO_BUF_FIX
 && !
m_im∂
.
m_made_dúty
) {

54 i‡(
ªöãΩªt_ˇ°
<c⁄° 
buf_block_t
 *>(
obje˘
)

55 ->
made_dúty_wôh_no_œtch
) {

56 
m_im∂
.
m_made_dúty
 = 
åue
;

60 
må_memo_¶Ÿ_t
 *
¶Ÿ
;

62 
¶Ÿ
 = 
m_im∂
.
m_memo
.
push
<
må_memo_¶Ÿ_t
 *>((*slot));

64 
¶Ÿ
->
ty≥
 =Åype;

65 
¶Ÿ
->
obje˘
 = object;

66 
	}
}

71 
	gmå_t
::
	$ªÀa£_s_œtch_©_ßvïoöt
(
ulöt
 
ßvïoöt
, 
rw_lock_t
 *
lock
) {

72 #i‚de‡
UNIV_HOTBACKUP


73 
	`ut_ad
(
	`is_a˘ive
());

74 
	`ut_ad
(
m_im∂
.
m_magic_n
 =
MTR_MAGIC_N
);

76 
	`ut_ad
(
m_im∂
.
m_memo
.
	`size
(Ë> 
ßvïoöt
);

78 
må_memo_¶Ÿ_t
 *
¶Ÿ
 = 
m_im∂
.
m_memo
.
©
<må_memo_¶Ÿ_à*>(
ßvïoöt
);

80 
	`ut_ad
(
¶Ÿ
->
obje˘
 =
lock
);

81 
	`ut_ad
(
¶Ÿ
->
ty≥
 =
MTR_MEMO_S_LOCK
);

83 
	`rw_lock_s_u∆ock
(
lock
);

85 
¶Ÿ
->
obje˘
 = 
nuŒ±r
;

87 
	`UT_NOT_USED
(
ßvïoöt
);

88 
	`UT_NOT_USED
(
lock
);

90 
	}
}

92 #i‚de‡
UNIV_HOTBACKUP


96 
	gmå_t
::
	$sx_œtch_©_ßvïoöt
(
ulöt
 
ßvïoöt
, 
buf_block_t
 *
block
) {

97 
	`ut_ad
(
	`is_a˘ive
());

98 
	`ut_ad
(
m_im∂
.
m_magic_n
 =
MTR_MAGIC_N
);

99 
	`ut_ad
(
m_im∂
.
m_memo
.
	`size
(Ë> 
ßvïoöt
);

101 
	`ut_ad
(!
	`memo_c⁄èös_Êagged
(

102 
block
, 
MTR_MEMO_PAGE_S_FIX
 | 
MTR_MEMO_PAGE_X_FIX
 | 
MTR_MEMO_PAGE_SX_FIX
));

104 
må_memo_¶Ÿ_t
 *
¶Ÿ
;

106 
¶Ÿ
 = 
m_im∂
.
m_memo
.
©
<
må_memo_¶Ÿ_t
 *>(
ßvïoöt
);

108 
	`ut_ad
(
¶Ÿ
->
obje˘
 =
block
);

111 
	`ut_a
(
¶Ÿ
->
ty≥
 =
MTR_MEMO_BUF_FIX
);

113 
	`rw_lock_sx_lock
(&
block
->
lock
);

115 i‡(!
m_im∂
.
m_made_dúty
) {

116 
m_im∂
.
m_made_dúty
 = 
	`is_block_dútõd
(
block
);

119 
¶Ÿ
->
ty≥
 = 
MTR_MEMO_PAGE_SX_FIX
;

120 
	}
}

125 
	gmå_t
::
	$x_œtch_©_ßvïoöt
(
ulöt
 
ßvïoöt
, 
buf_block_t
 *
block
) {

126 
	`ut_ad
(
	`is_a˘ive
());

127 
	`ut_ad
(
m_im∂
.
m_magic_n
 =
MTR_MAGIC_N
);

128 
	`ut_ad
(
m_im∂
.
m_memo
.
	`size
(Ë> 
ßvïoöt
);

130 
	`ut_ad
(!
	`memo_c⁄èös_Êagged
(

131 
block
, 
MTR_MEMO_PAGE_S_FIX
 | 
MTR_MEMO_PAGE_X_FIX
 | 
MTR_MEMO_PAGE_SX_FIX
));

133 
må_memo_¶Ÿ_t
 *
¶Ÿ
;

135 
¶Ÿ
 = 
m_im∂
.
m_memo
.
©
<
må_memo_¶Ÿ_t
 *>(
ßvïoöt
);

137 
	`ut_ad
(
¶Ÿ
->
obje˘
 =
block
);

140 
	`ut_a
(
¶Ÿ
->
ty≥
 =
MTR_MEMO_BUF_FIX
);

142 
	`rw_lock_x_lock
(&
block
->
lock
);

144 i‡(!
m_im∂
.
m_made_dúty
) {

145 
m_im∂
.
m_made_dúty
 = 
	`is_block_dútõd
(
block
);

148 
¶Ÿ
->
ty≥
 = 
MTR_MEMO_PAGE_X_FIX
;

149 
	}
}

154 
	gmå_t
::
	$ªÀa£_block_©_ßvïoöt
(
ulöt
 
ßvïoöt
, 
buf_block_t
 *
block
) {

155 
	`ut_ad
(
	`is_a˘ive
());

156 
	`ut_ad
(
m_im∂
.
m_magic_n
 =
MTR_MAGIC_N
);

158 
må_memo_¶Ÿ_t
 *
¶Ÿ
;

160 
¶Ÿ
 = 
m_im∂
.
m_memo
.
©
<
må_memo_¶Ÿ_t
 *>(
ßvïoöt
);

162 
	`ut_a
(
¶Ÿ
->
obje˘
 =
block
);

164 
	`buf_∑ge_ªÀa£_œtch
(
block
, 
¶Ÿ
->
ty≥
);

165 
	`buf_block_unfix
(
block
);

167 
¶Ÿ
->
obje˘
 = 
nuŒ±r
;

168 
	}
}

175 
må_log_t
 
	gmå_t
::
	$gë_log_mode
() const {

176 
	`ut_ad
(
m_im∂
.
m_log_mode
 >
MTR_LOG_ALL
);

177 
	`ut_ad
(
m_im∂
.
m_log_mode
 <
MTR_LOG_SHORT_INSERTS
);

179  (
m_im∂
.
m_log_mode
);

180 
	}
}

182 #i‚de‡
UNIV_HOTBACKUP


186 
	gmå_t
::
	$s_lock
(
rw_lock_t
 *
lock
, c⁄° *
fûe
, 
ulöt
 
löe
) {

187 
	`rw_lock_s_lock_ölöe
(
lock
, 0, 
fûe
, 
löe
);

189 
	`memo_push
(
lock
, 
MTR_MEMO_S_LOCK
);

190 
	}
}

195 
	gmå_t
::
	$x_lock
(
rw_lock_t
 *
lock
, c⁄° *
fûe
, 
ulöt
 
löe
) {

196 
	`rw_lock_x_lock_ölöe
(
lock
, 0, 
fûe
, 
löe
);

198 
	`memo_push
(
lock
, 
MTR_MEMO_X_LOCK
);

199 
	}
}

204 
	gmå_t
::
	$sx_lock
(
rw_lock_t
 *
lock
, c⁄° *
fûe
, 
ulöt
 
löe
) {

205 
	`rw_lock_sx_lock_ölöe
(
lock
, 0, 
fûe
, 
löe
);

207 
	`memo_push
(
lock
, 
MTR_MEMO_SX_LOCK
);

208 
	}
}

215 
uöt32_t
 
	gmå_t
::
	$ªad_ulöt
(c⁄° 
byã
 *
±r
, 
mlog_id_t
 
ty≥
) const {

216 
	`ut_ad
(
	`is_a˘ive
());

218 
	`ut_ad
(
	`memo_c⁄èös_∑ge_Êagged
(

219 
±r
, 
MTR_MEMO_PAGE_S_FIX
 | 
MTR_MEMO_PAGE_X_FIX
 | 
MTR_MEMO_PAGE_SX_FIX
));

221  (
	`mach_ªad_ulöt
(
±r
, 
ty≥
));

222 
	}
}

	@mtr0types.h

33 #i‚de‡
må0ty≥s_h


34 
	#må0ty≥s_h


	)

36 
	~"sync0rw.h
"

38 
	gmå_t
;

41 
	emå_log_t
 {

43 
	mMTR_LOG_ALL
 = 0,

46 
	mMTR_LOG_NONE
 = 1,

49 
	mMTR_LOG_NO_REDO
 = 2,

52 
	mMTR_LOG_SHORT_INSERTS
 = 3,

55 
	mMTR_LOG_MODE_MAX
 = 4

62 
	emlog_id_t
 {

66 
	mMLOG_SINGLE_REC_FLAG
 = 128,

69 
	mMLOG_1BYTE
 = 1,

72 
	mMLOG_2BYTES
 = 2,

75 
	mMLOG_4BYTES
 = 4,

78 
	mMLOG_8BYTES
 = 8,

81 
	mMLOG_REC_INSERT
 = 9,

84 
	mMLOG_REC_CLUST_DELETE_MARK
 = 10,

87 
	mMLOG_REC_SEC_DELETE_MARK
 = 11,

90 
	mMLOG_REC_UPDATE_IN_PLACE
 = 13,

93 
	mMLOG_REC_DELETE
 = 14,

96 
	mMLOG_LIST_END_DELETE
 = 15,

99 
	mMLOG_LIST_START_DELETE
 = 16,

102 
	mMLOG_LIST_END_COPY_CREATED
 = 17,

105 
	mMLOG_PAGE_REORGANIZE
 = 18,

108 
	mMLOG_PAGE_CREATE
 = 19,

111 
	mMLOG_UNDO_INSERT
 = 20,

114 
	mMLOG_UNDO_ERASE_END
 = 21,

117 
	mMLOG_UNDO_INIT
 = 22,

120 
	mMLOG_UNDO_HDR_REUSE
 = 24,

123 
	mMLOG_UNDO_HDR_CREATE
 = 25,

126 
	mMLOG_REC_MIN_MARK
 = 26,

129 
	mMLOG_IBUF_BITMAP_INIT
 = 27,

131 #ifde‡
UNIV_LOG_LSN_DEBUG


133 
	mMLOG_LSN
 = 28,

142 
	mMLOG_INIT_FILE_PAGE
 = 29,

145 
	mMLOG_WRITE_STRING
 = 30,

149 
	mMLOG_MULTI_REC_END
 = 31,

152 
	mMLOG_DUMMY_RECORD
 = 32,

155 
	mMLOG_FILE_CREATE
 = 33,

158 
	mMLOG_FILE_RENAME
 = 34,

161 
	mMLOG_FILE_DELETE
 = 35,

164 
	mMLOG_COMP_REC_MIN_MARK
 = 36,

167 
	mMLOG_COMP_PAGE_CREATE
 = 37,

170 
	mMLOG_COMP_REC_INSERT
 = 38,

173 
	mMLOG_COMP_REC_CLUST_DELETE_MARK
 = 39,

178 
	mMLOG_COMP_REC_SEC_DELETE_MARK
 = 40,

181 
	mMLOG_COMP_REC_UPDATE_IN_PLACE
 = 41,

184 
	mMLOG_COMP_REC_DELETE
 = 42,

187 
	mMLOG_COMP_LIST_END_DELETE
 = 43,

190 
	mMLOG_COMP_LIST_START_DELETE
 = 44,

193 
	mMLOG_COMP_LIST_END_COPY_CREATED
 = 45,

196 
	mMLOG_COMP_PAGE_REORGANIZE
 = 46,

200 
	mMLOG_ZIP_WRITE_NODE_PTR
 = 48,

204 
	mMLOG_ZIP_WRITE_BLOB_PTR
 = 49,

207 
	mMLOG_ZIP_WRITE_HEADER
 = 50,

210 
	mMLOG_ZIP_PAGE_COMPRESS
 = 51,

213 
	mMLOG_ZIP_PAGE_COMPRESS_NO_DATA
 = 52,

216 
	mMLOG_ZIP_PAGE_REORGANIZE
 = 53,

219 
	mMLOG_PAGE_CREATE_RTREE
 = 57,

222 
	mMLOG_COMP_PAGE_CREATE_RTREE
 = 58,

226 
	mMLOG_INIT_FILE_PAGE2
 = 59,

233 
	mMLOG_INDEX_LOAD
 = 61,

236 
	mMLOG_TABLE_DYNAMIC_META
 = 62,

239 
	mMLOG_PAGE_CREATE_SDI
 = 63,

242 
	mMLOG_COMP_PAGE_CREATE_SDI
 = 64,

245 
	mMLOG_FILE_EXTEND
 = 65,

247 #ifde‡
J3VM


249 
	mMLOG_REC_CLUST_TOGGLE_MARK
 = 66,

252 
	mMLOG_COMP_REC_CLUST_TOGGLE_MARK
 = 67,

255 
	mMLOG_TEST
 = 68,

258 
	mMLOG_TEST
 = 66,

262 
	mMLOG_BIGGEST_TYPE
 = 
MLOG_TEST


269 
	emå_memo_ty≥_t
 {

270 
	mMTR_MEMO_PAGE_S_FIX
 = 
RW_S_LATCH
,

272 
	mMTR_MEMO_PAGE_X_FIX
 = 
RW_X_LATCH
,

274 
	mMTR_MEMO_PAGE_SX_FIX
 = 
RW_SX_LATCH
,

276 
	mMTR_MEMO_BUF_FIX
 = 
RW_NO_LATCH
,

278 #ifde‡
UNIV_DEBUG


279 
	mMTR_MEMO_MODIFY
 = 32,

282 
	mMTR_MEMO_S_LOCK
 = 64,

284 
	mMTR_MEMO_X_LOCK
 = 128,

286 
	mMTR_MEMO_SX_LOCK
 = 256

289 #ifde‡
UNIV_DEBUG


290 
	#MTR_MAGIC_N
 54551

	)

293 
	emå_°©e_t
 {

294 
	mMTR_STATE_INIT
 = 0,

295 
	mMTR_STATE_ACTIVE
 = 12231,

296 
	mMTR_STATE_COMMITTING
 = 56456,

297 
	mMTR_STATE_COMMITTED
 = 34676

	@os0atomic.h

39 #i‚de‡
os0©omic_h


40 
	#os0©omic_h


	)

42 
	~"univ.i
"

44 
	tlock_w‹d_t
;

47 #ifde‡
HAVE_IB_GCC_ATOMIC_THREAD_FENCE


48 
	#HAVE_MEMORY_BARRIER


	)

49 
	#os_rmb
 
	`__©omic_thªad_„n˚
(
__ATOMIC_ACQUIRE
)

	)

50 
	#os_wmb
 
	`__©omic_thªad_„n˚
(
__ATOMIC_RELEASE
)

	)

51 
	#IB_MEMORY_BARRIER_STARTUP_MSG
 \

52 "GCC buûtö __©omic_thªad_„n˚(Ëi†u£d f‹ mem‹y b¨rõr"

	)

54 #ñi‡
deföed
(
HAVE_IB_GCC_SYNC_SYNCHRONISE
)

55 
	#HAVE_MEMORY_BARRIER


	)

56 
	#os_rmb
 
	`__sync_synchr⁄ize
()

	)

57 
	#os_wmb
 
	`__sync_synchr⁄ize
()

	)

58 
	#IB_MEMORY_BARRIER_STARTUP_MSG
 \

59 "GCC buûtö __sync_synchr⁄ize(Ëi†u£d f‹ mem‹y b¨rõr"

	)

61 #ñi‡
deföed
(
HAVE_IB_MACHINE_BARRIER_SOLARIS
)

62 
	#HAVE_MEMORY_BARRIER


	)

63 
	~<mb¨rõr.h
>

64 
	#os_rmb
 
	`__machöe_r_b¨rõr
()

	)

65 
	#os_wmb
 
	`__machöe_w_b¨rõr
()

	)

66 
	#IB_MEMORY_BARRIER_STARTUP_MSG
 \

67 "Sﬁ¨i†mem‹y ordîög fun˘i⁄†¨êu£d f‹ mem‹y b¨rõr"

	)

69 #ñi‡
deföed
(
HAVE_WINDOWS_MM_FENCE
Ë&& deföed(
_WIN64
)

70 
	#HAVE_MEMORY_BARRIER


	)

71 
	~<mmöåö.h
>

72 
	#os_rmb
 
	`_mm_l„n˚
()

	)

73 
	#os_wmb
 
	`_mm_s„n˚
()

	)

74 
	#IB_MEMORY_BARRIER_STARTUP_MSG
 \

75 "_mm_l„n˚(Ë™d _mm_s„n˚(Ë¨êu£d f‹ mem‹y b¨rõr"

	)

78 
	#os_rmb


	)

79 
	#os_wmb


	)

80 
	#IB_MEMORY_BARRIER_STARTUP_MSG
 "Mem‹y b¨rõ∏i†nŸ u£d"

	)

	@os0enc.h

30 #i‚de‡
os0íc_h


31 
	#os0íc_h


	)

33 
	~"univ.i
"

36 
˛ass
 
	gIOReque°
;

39 ˛as†
	cEn¸y±i⁄
 {

40 
	mpublic
:

42 
	eTy≥
 {

45 
NONE
 = 0,

48 
	mAES
 = 1,

52 
	eVîsi⁄
 {

55 
	gVERSION_1
 = 0,

58 
	gVERSION_2
 = 1,

61 
	gVERSION_3
 = 2,

66 
c⁄°ex¥
 
	gKEY_MAGIC_V1
[] = "lCA";

70 
c⁄°ex¥
 
	gKEY_MAGIC_V2
[] = "lCB";

74 
c⁄°ex¥
 
	gKEY_MAGIC_V3
[] = "lCC";

77 
c⁄°ex¥
 
	gMASTER_KEY_PREFIX
[] = "INNODBKey";

80 
c⁄°ex¥
 
	gDEFAULT_MASTER_KEY
[] = "DefaultMasterKey";

83 
c⁄°ex¥
 
size_t
 
	gKEY_LEN
 = 32;

86 
c⁄°ex¥
 
size_t
 
	gMAGIC_SIZE
 = 3;

89 
c⁄°ex¥
 
size_t
 
	gMASTER_KEY_PRIFIX_LEN
 = 9;

92 
c⁄°ex¥
 
size_t
 
	gMASTER_KEY_NAME_MAX_LEN
 = 100;

95 
c⁄°ex¥
 
size_t
 
	gSERVER_UUID_LEN
 = 36;

99 
c⁄°ex¥
 
size_t
 
	gINFO_SIZE
 =

100 (
MAGIC_SIZE
 + (
uöt32
Ë+ (
KEY_LEN
 * 2Ë+ 
SERVER_UUID_LEN
 +

101 (
uöt32
));

105 
c⁄°ex¥
 
size_t
 
	gINFO_MAX_SIZE
 = 
INFO_SIZE
 + (
uöt32
);

108 
c⁄°ex¥
 
uöt32_t
 
	gDEFAULT_MASTER_KEY_ID
 = 0;

111 
c⁄°ex¥
 
size_t
 
	gOPERATION_INFO_SIZE
 = 1;

114 
c⁄°ex¥
 
size_t
 
	gPROGRESS_INFO_SIZE
 = (
uöt
);

117 
c⁄°ex¥
 
size_t
 
	gENCRYPT_IN_PROGRESS
 = 1 << 0;

120 
c⁄°ex¥
 
size_t
 
	gDECRYPT_IN_PROGRESS
 = 1 << 1;

123 
	$En¸y±i⁄
(Ë
n€x˚±
 : 
	$m_ty≥
(
NONE
Ë{
	}
}

127 
ex∂icô
 
	$En¸y±i⁄
(
Ty≥
 
ty≥
Ë
n€x˚±
 : 
	$m_ty≥
(
ty≥
) {

128 #ifde‡
UNIV_DEBUG


129 
m_ty≥
) {

130 
NONE
:

131 
AES
:

134 
ut_îr‹
;

137 
	}
}

140 
	$En¸y±i⁄
(c⁄° 
En¸y±i⁄
 &
Ÿhî
Ë
n€x˚±


141 : 
	`m_ty≥
(
Ÿhî
.
m_ty≥
),

142 
	`m_key
(
Ÿhî
.
m_key
),

143 
	`m_kÀn
(
Ÿhî
.
m_kÀn
),

144 
	$m_iv
(
Ÿhî
.
m_iv
Ë{
	}
}

146 
	gEn¸y±i⁄
 &
	g›î©‹
=(c⁄° 
En¸y±i⁄
 &) = ;

151 
boﬁ
 
	$is_í¸y±ed_∑ge
(c⁄° 
byã
 *
∑ge
Ë
n€x˚±


152 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

157 
boﬁ
 
	$is_í¸y±ed_log
(c⁄° 
byã
 *
block
Ë
n€x˚±


158 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

164 
dbîr_t
 
	$£t_Æg‹ôhm
(c⁄° *
›ti⁄
, 
En¸y±i⁄
 *
ty≥
Ë
n€x˚±


165 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

170 
dbîr_t
 
	$vÆid©e
(c⁄° *
›ti⁄
Ë
n€x˚±


171 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

176 c⁄° *
	$to_°rög
(
Ty≥
 
ty≥
Ë
n€x˚±


177 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

182 
boﬁ
 
	$is_n⁄e
(c⁄° *
Æg‹ôhm
Ë
n€x˚±


183 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

187 
	$øndom_vÆue
(
byã
 *
vÆue
Ë
n€x˚±
;

191 
	$¸óã_ma°î_key
(
byã
 **
ma°î_key
Ë
n€x˚±
;

197 
	$gë_ma°î_key
(
uöt32_t
 
ma°î_key_id
, *
§v_uuid
,

198 
byã
 **
ma°î_key
Ë
n€x˚±
;

203 
	$gë_ma°î_key
(
uöt32_t
 *
ma°î_key_id
,

204 
byã
 **
ma°î_key
Ë
n€x˚±
;

213 
boﬁ
 
	$fûl_í¸y±i⁄_öfo
(
byã
 *
key
, byã *
iv
, byã *
í¸y±_öfo
,

214 
boﬁ
 
is_boŸ
, boﬁ 
í¸y±_key
Ë
n€x˚±
;

224 
byã
 *
	$gë_ma°î_key_‰om_öfo
(
byã
 *
í¸y±_öfo
, 
Vîsi⁄
 
vîsi⁄
,

225 
uöt32_t
 *
m_key_id
, *
§v_uuid
,

226 
byã
 **
ma°î_key
Ë
n€x˚±
;

234 
boﬁ
 
	$decode_í¸y±i⁄_öfo
(
byã
 *
key
, byã *
iv
, byã *
í¸y±i⁄_öfo
,

235 
boﬁ
 
de¸y±_key
Ë
n€x˚±
;

242 
boﬁ
 
	$í¸y±_log_block
(c⁄° 
IOReque°
 &
ty≥
, 
byã
 *
§c_±r
,

243 
byã
 *
d°_±r
Ë
n€x˚±
;

252 
byã
 *
	$í¸y±_log
(c⁄° 
IOReque°
 &
ty≥
, 
byã
 *
§c
, 
ulöt
 
§c_Àn
, byã *
d°
,

253 
ulöt
 *
d°_Àn
Ë
n€x˚±
;

264 
byã
 *
	$í¸y±
(c⁄° 
IOReque°
 &
ty≥
, 
byã
 *
§c
, 
ulöt
 
§c_Àn
, byã *
d°
,

265 
ulöt
 *
d°_Àn
Ë
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

273 
dbîr_t
 
	$de¸y±_log_block
(c⁄° 
IOReque°
 &
ty≥
, 
byã
 *
§c
,

274 
byã
 *
d°
Ë
n€x˚±
;

284 
dbîr_t
 
	$de¸y±_log
(c⁄° 
IOReque°
 &
ty≥
, 
byã
 *
§c
, 
ulöt
 
§c_Àn
,

285 
byã
 *
d°
, 
ulöt
 
d°_Àn
Ë
n€x˚±
;

298 
dbîr_t
 
	$de¸y±
(c⁄° 
IOReque°
 &
ty≥
, 
byã
 *
§c
, 
ulöt
 
§c_Àn
, byã *
d°
,

299 
ulöt
 
d°_Àn
Ë
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

302 
boﬁ
 
	$check_keyrög
(Ë
n€x˚±
;

306 
Ty≥
 
	$gë_ty≥
() const;

310 
boﬁ
 
	$is_n⁄e
(Ëc⁄° 
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

311  
m_ty≥
 =
NONE
;

312 
	}
}

316 
£t_ty≥
(
Ty≥
 
ty≥
);

320 
byã
 *
	$gë_key
() const;

324 
	`£t_key
(
byã
 *
key
);

328 
ulöt
 
	$gë_key_Àngth
() const;

332 
	`£t_key_Àngth
(
ulöt
 
kÀn
);

336 
byã
 *
	$gë_öôül_ve˘‹
() const;

340 
	`£t_öôül_ve˘‹
(
byã
 *
iv
);

344 
uöt32_t
 
	`gë_ma°î_key_id
();

346 
¥iv©e
:

355 
boﬁ
 
	$í¸y±_low
(
byã
 *
§c
, 
ulöt
 
§c_Àn
, byã *
d°
, ulöà*
d°_Àn
Ë
n€x˚±


356 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

359 
Ty≥
 
m_ty≥
;

362 
byã
 *
m_key
;

365 
ulöt
 
m_kÀn
;

368 
byã
 *
m_iv
;

371 
uöt32_t
 
s_ma°î_key_id
;

374 
s_uuid
[
SERVER_UUID_LEN
 + 1];

375 
	}
};

	@os0event.h

32 #i‚de‡
os0evít_h


33 
	#os0evít_h


	)

35 
	~<sys/ty≥s.h
>

37 
	~"univ.i
"

40 
	gos_evít
;

41 
os_evít
 *
	tos_evít_t
;

44 
	#OS_SYNC_INFINITE_TIME
 
ULINT_UNDEFINED


	)

47 
	#OS_SYNC_TIME_EXCEEDED
 1

	)

49 #i‚de‡
UNIV_HOTBACKUP


55 
os_evít_t
 
os_evít_¸óã
();

60 
os_evít_£t
(
os_evít_t
 
evít
);

62 
boﬁ
 
os_evít_åy_£t
(
os_evít_t
 
evít
);

67 
boﬁ
 
os_evít_is_£t
(c⁄° 
os_evít_t
 
evít
);

76 
öt64_t
 
os_evít_ª£t
(
os_evít_t
 
evít
);

80 
os_evít_de°roy
(
os_evít_t
 &
evít
);

99 
os_evít_waô_low
(
os_evít_t
 
evít
,

100 
öt64_t
 
ª£t_sig_cou¡
);

106 
	#os_evít_waô
(
e
Ë
	`os_evít_waô_low
(”), 0)

	)

112 
ulöt
 
os_evít_waô_time_low
(

113 
os_evít_t
 
evít
,

114 
ulöt
 
time_ö_u£c
,

117 
öt64_t
 
ª£t_sig_cou¡
);

124 
	#os_evít_waô_time
(
e
, 
t
Ë
	`os_evít_waô_time_low
(”), (t), 0)

	)

126 
	~"os0evít.ic
"

130 
os_evít_globÆ_öô
();

135 
os_evít_globÆ_de°roy
();

	@os0event.ic

56 
	gãm∂©e
 <
ty≥«me
 
	gC⁄dôi⁄
>

57 
ölöe
 
Waô_°©s
 
os_evít_waô_f‹
(
os_evít_t
 &
evít
,

58 
uöt64_t
 
•ös_limô
,

59 
uöt64_t
 
timeout
,

60 
C⁄dôi⁄
 
c⁄dôi⁄
 = {}) {

61 #ifde‡
_WIN32


62 
uöt32_t
 
√xt_Àvñ
 = 64;

64 
uöt32_t
 
	g√xt_Àvñ
 = 4;

66 
uöt32_t
 
	gwaôs
 = 0;

68 
c⁄°ex¥
 
uöt64_t
 
	gMIN_TIMEOUT_US
 = 1;

69 
c⁄°ex¥
 
uöt64_t
 
	gMAX_TIMEOUT_US
 = 100 * 1000;

71 
	gåue
) {

74 c⁄° 
boﬁ
 
	gwaô
 = 
•ös_limô
 == 0;

76 c⁄° 
öt64_t
 
	gsig_cou¡
 = !
waô
 ? 0 : 
os_evít_ª£t
(
evít
);

83 i‡(
c⁄dôi⁄
(
waô
)) {

84  (
	gWaô_°©s
{
	gwaôs
});

87 i‡(!
	gwaô
) {

89 --
	g•ös_limô
;

91 
UT_RELAX_CPU
();

95 ++
	gwaôs
;

96 i‡(
	gtimeout
 < 
	gMIN_TIMEOUT_US
) {

112 
	gtimeout
 = 
MIN_TIMEOUT_US
;

115 i‡(
	gwaôs
 =
√xt_Àvñ
) {

116 
timeout
 = 
°d
::
mö
—imeouà* 2, 
MAX_TIMEOUT_US
);

118 #ifde‡
_WIN32


128 
	g√xt_Àvñ
 += 64;

130 
	g√xt_Àvñ
 += 4;

135 
os_evít_waô_time_low
(
evít
, 
timeout
, 
sig_cou¡
);

	@os0file.h

41 #i‚de‡
os0fûe_h


42 
	#os0fûe_h


	)

44 
	~"my_dbug.h
"

45 
	~"my_io.h
"

47 
	~"os/fûe.h
"

48 
	~"os0©omic.h
"

49 
	~"os0íc.h
"

51 #i‚de‡
_WIN32


52 
	~<dúít.h
>

53 
	~<sys/°©.h
>

54 
	~<sys/°©vfs.h
>

55 
	~<time.h
>

57 
	~<Såß„.h
>

58 
	~<loˇÀ
>

59 
	~<°rög
>

62 
	~<fun˘i⁄Æ
>

63 
	~<°ack
>

67 
	#OS_FILE_PREFIX
 "#"

	)

70 
	gfû_node_t
;

72 
boﬁ
 
os_has_ßid_disk_fuŒ
;

75 
°d
::
©omic
<
ulöt
> 
os_n_≥ndög_ªads
;

77 
°d
::
©omic
<
ulöt
> 
os_n_≥ndög_wrôes
;

80 
os_fsync_thªshﬁd
;

83 
ib_uöt64_t
 
	tos_off£t_t
;

85 
«me•a˚
 
	gfûe
 {

88 
	sBlock
 {

90 
Block
(Ë
	gn€x˚±
 : 
m_±r
(
nuŒ±r
), 
m_ö_u£
() {}

94 
‰ì
(
fûe
::
Block
 *
obj
Ë
n€x˚±
;

97 
byã
 *
	gm_±r
;

102 
byã
 
	g∑d
[
ut
::
INNODB_CACHE_LINE_SIZE
];

103 
	g°d
::
©omic
<
boﬁ
> 
m_ö_u£
;

107 #ifde‡
_WIN32


109 
HANDLE
 
	tos_fûe_dú_t
;

113 
	#WIN_ASYNC_IO


	)

116 
	#UNIV_NON_BUFFERED_IO


	)

119 
	#os_fûe_t
 
HANDLE


	)

124 
	#OS_FILE_FROM_FD
(
fd
Ë(
HANDLE
Ë
	`_gë_osfh™dÀ
(fd)

	)

129 
	#OS_FD_FROM_FILE
(
fûe
Ë
	`_›í_osfh™dÀ
((
öçå_t
)fûe, 
_O_RDONLY
)

	)

134 
	#OS_FILE_CLOSE_FD
(
fd
Ë
	`_˛o£
(fd)

	)

139 
	tos_fûe_t
;

144 
	#OS_FILE_FROM_FD
(
fd
Ë
	)
fd

149 
	#OS_FD_FROM_FILE
(
fûe
Ë
	)
file

154 
	#OS_FILE_CLOSE_FD
(
fd
Ë(
	`os_fûe_˛o£
(fdË? 0 : -1)

	)

160 
	spfs_os_fûe_t
 {

161 #ifde‡
UNIV_PFS_IO


162 
PSI_fûe
 *
	mm_psi
;

164 
	mpfs_os_fûe_t
 &
	m›î©‹
=(
os_fûe_t
 
fûe
) {

165 
m_fûe
 = 
fûe
;

166  (*
	mthis
);

170 
os_fûe_t
 
	mm_fûe
;

173 c⁄° 
os_fûe_t
 
	gOS_FILE_CLOSED
 = os_file_t(~0);

182 
	#OS_FILE_LOG_BLOCK_SIZE
 512

	)

185 
	eos_fûe_¸óã_t
 {

186 
	mOS_FILE_OPEN
 = 51,

188 
	mOS_FILE_CREATE
,

190 
	mOS_FILE_OPEN_RAW
,

192 
	mOS_FILE_CREATE_PATH
,

193 
	mOS_FILE_OPEN_RETRY
,

198 
	mOS_FILE_ON_ERROR_NO_EXIT
 = 128,

199 
	mOS_FILE_ON_ERROR_SILENT
 = 256

205 c⁄° 
ulöt
 
	gOS_FILE_READ_ONLY
 = 333;

206 c⁄° 
ulöt
 
	gOS_FILE_READ_WRITE
 = 444;

209 c⁄° 
ulöt
 
	gOS_FILE_READ_ALLOW_DELETE
 = 555;

212 c⁄° 
ulöt
 
	gOS_FILE_AIO
 = 61;

213 c⁄° 
ulöt
 
	gOS_FILE_NORMAL
 = 62;

217 c⁄° 
ulöt
 
	gOS_DATA_FILE
 = 100;

218 c⁄° 
ulöt
 
	gOS_LOG_FILE
 = 101;

223 c⁄° 
ulöt
 
	gOS_BUFFERED_FILE
 = 102;

225 c⁄° 
ulöt
 
	gOS_CLONE_DATA_FILE
 = 103;

226 c⁄° 
ulöt
 
	gOS_CLONE_LOG_FILE
 = 104;

229 c⁄° 
ulöt
 
	gOS_DBLWR_FILE
 = 105;

232 c⁄° 
ulöt
 
	gOS_REDO_LOG_ARCHIVE_FILE
 = 105;

236 c⁄° 
ulöt
 
	gOS_FILE_NOT_FOUND
 = 71;

237 c⁄° 
ulöt
 
	gOS_FILE_DISK_FULL
 = 72;

238 c⁄° 
ulöt
 
	gOS_FILE_ALREADY_EXISTS
 = 73;

239 c⁄° 
ulöt
 
	gOS_FILE_PATH_ERROR
 = 74;

242 c⁄° 
ulöt
 
	gOS_FILE_AIO_RESOURCES_RESERVED
 = 75;

244 c⁄° 
ulöt
 
	gOS_FILE_SHARING_VIOLATION
 = 76;

245 c⁄° 
ulöt
 
	gOS_FILE_ERROR_NOT_SPECIFIED
 = 77;

246 c⁄° 
ulöt
 
	gOS_FILE_INSUFFICIENT_RESOURCE
 = 78;

247 c⁄° 
ulöt
 
	gOS_FILE_AIO_INTERRUPTED
 = 79;

248 c⁄° 
ulöt
 
	gOS_FILE_OPERATION_ABORTED
 = 80;

249 c⁄° 
ulöt
 
	gOS_FILE_ACCESS_VIOLATION
 = 81;

250 c⁄° 
ulöt
 
	gOS_FILE_NAME_TOO_LONG
 = 82;

251 c⁄° 
ulöt
 
	gOS_FILE_ERROR_MAX
 = 100;

257 
	#IOReque°Ród
 
	`IOReque°
(
IOReque°
::
READ
)

	)

258 
	#IOReque°Wrôe
 
	`IOReque°
(
IOReque°
::
WRITE
)

	)

259 
	#IOReque°LogRód
 
	`IOReque°
(
IOReque°
::
LOG
 | IOReque°::
READ
)

	)

260 
	#IOReque°LogWrôe
 
	`IOReque°
(
IOReque°
::
LOG
 | IOReque°::
WRITE
)

	)

264 ˛as†
	cIOReque°
 {

265 
	mpublic
:

268 
UNSET
 = 0,

269 
	mREAD
 = 1,

270 
	mWRITE
 = 2,

273 
	mDBLWR
 = 4,

278 
	mDATA_FILE
 = 8,

281 
	mLOG
 = 16,

284 
	mDISABLE_PARTIAL_IO_WARNINGS
 = 32,

293 
	mDO_NOT_WAKE
 = 64,

296 
	mIGNORE_MISSING
 = 128,

300 
	mPUNCH_HOLE
 = 256,

306 
	mNO_COMPRESSION
 = 512,

311 
	mDISABLE_PUNCH_HOLE_OPTIMISATION
 = 1024

315 
	$IOReque°
()

316 : 
	`m_block_size
(
UNIV_SECTOR_SIZE
),

317 
	`m_ty≥
(
READ
),

318 
	`m_com¥essi⁄
(),

319 
	`m_í¸y±i⁄
(),

320 
	`m_eblock
(
nuŒ±r
),

321 
	$m_ñí
(0) {

323 
	}
}

328 
ex∂icô
 
	$IOReque°
(
ulöt
 
ty≥
)

329 : 
	`m_block_size
(
UNIV_SECTOR_SIZE
),

330 
	`m_ty≥
(
°©ic_ˇ°
<
uöt16_t
>(
ty≥
)),

331 
	`m_com¥essi⁄
(),

332 
	`m_í¸y±i⁄
(),

333 
	`m_eblock
(
nuŒ±r
),

334 
	$m_ñí
(0) {

335 i‡(
	`is_log
()) {

336 
	`dißbÀ_com¥essi⁄
();

339 i‡(!
	`is_punch_hﬁe_suµ‹ãd
()) {

340 
	`˛ór_punch_hﬁe
();

342 
	}
}

345 
boﬁ
 
	$ign‹e_missög
(
ulöt
 
ty≥
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

346  ((
ty≥
 & 
IGNORE_MISSING
) == IGNORE_MISSING);

347 
	}
}

350 
boﬁ
 
	$is_ªad
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

351  ((
m_ty≥
 & 
READ
) == READ);

352 
	}
}

355 
boﬁ
 
	$is_wrôe
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

356  ((
m_ty≥
 & 
WRITE
) == WRITE);

357 
	}
}

360 
boﬁ
 
	$is_log
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

361  ((
m_ty≥
 & 
LOG
) == LOG);

362 
	}
}

365 
boﬁ
 
	$is_wake
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

366  ((
m_ty≥
 & 
DO_NOT_WAKE
) == 0);

367 
	}
}

370 
boﬁ
 
	$is_∑πül_io_w¨nög_dißbÀd
() const

371 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

372  ((
m_ty≥
 & 
DISABLE_PARTIAL_IO_WARNINGS
) ==

373 
DISABLE_PARTIAL_IO_WARNINGS
);

374 
	}
}

377 
	$dißbÀ_∑πül_io_w¨nögs
(Ë{ 
m_ty≥
 |
DISABLE_PARTIAL_IO_WARNINGS
; 
	}
}

380 
boﬁ
 
	$ign‹e_missög
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

381  (
	`ign‹e_missög
(
m_ty≥
));

382 
	}
}

385 
boﬁ
 
	$punch_hﬁe
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

386  ((
m_ty≥
 & 
PUNCH_HOLE
) == PUNCH_HOLE);

387 
	}
}

391 
boﬁ
 
	$is_punch_hﬁe_›timißti⁄_dißbÀd
() const

392 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

393 
	`ut_ad
(
	`is_com¥es£d
(Ë&& 
	`punch_hﬁe
());

395  (
m_ty≥
 & 
DISABLE_PUNCH_HOLE_OPTIMISATION
) ==

396 
DISABLE_PUNCH_HOLE_OPTIMISATION
;

397 
	}
}

400 
boﬁ
 
	$vÆid©e
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

401 
	`ut_ad
(
	`is_ªad
(Ë^ 
	`is_wrôe
());

403  (!
	`is_ªad
(Ë|| !
	`punch_hﬁe
());

404 
	}
}

407 
	$£t_punch_hﬁe
() {

408 i‡(
	`is_punch_hﬁe_suµ‹ãd
()) {

409 
m_ty≥
 |
PUNCH_HOLE
;

411 
	}
}

414 
	$dißbÀ_punch_hﬁe_›timißti⁄
() {

415 i‡(
	`is_punch_hﬁe_suµ‹ãd
()) {

416 
m_ty≥
 |
DISABLE_PUNCH_HOLE_OPTIMISATION
;

418 
	}
}

421 
	$˛ór_do_nŸ_wake
(Ë{ 
m_ty≥
 &~
DO_NOT_WAKE
; 
	}
}

424 
	$˛ór_punch_hﬁe
(Ë{ 
m_ty≥
 &~
PUNCH_HOLE
; 
	}
}

427 
ulöt
 
	$block_size
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

428  (
m_block_size
);

429 
	}
}

433 
	$block_size
(
ulöt
 
block_size
) {

434 
m_block_size
 = 
°©ic_ˇ°
<
uöt32_t
>(
block_size
);

435 
	}
}

438 
	$˛ór_com¥es£d
() {

439 
	`˛ór_punch_hﬁe
();

441 
m_com¥essi⁄
.
m_ty≥
 = 
Com¥essi⁄
::
NONE
;

442 
	}
}

446 
boﬁ
 
	g›î©‹
==(c⁄° 
IOReque°
 &
rhs
Ëc⁄° {  (
m_ty≥
 ==Ñhs.m_type); }

450 
	$com¥essi⁄_Æg‹ôhm
(
Com¥essi⁄
::
Ty≥
 
ty≥
) {

451 i‡(
ty≥
 =
Com¥essi⁄
::
NONE
) {

455 
	`£t_punch_hﬁe
();

457 
m_com¥essi⁄
.
m_ty≥
 = 
ty≥
;

458 
	}
}

462 
Com¥essi⁄
 
	$com¥essi⁄_Æg‹ôhm
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

463  (
m_com¥essi⁄
);

464 
	}
}

467 
boﬁ
 
	$is_com¥es£d
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

468  (
	`com¥essi⁄_Æg‹ôhm
().
m_ty≥
 !
Com¥essi⁄
::
NONE
);

469 
	}
}

472 
boﬁ
 
	$is_com¥essi⁄_íabÀd
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

473  ((
m_ty≥
 & 
NO_COMPRESSION
) == 0);

474 
	}
}

477 
	$dißbÀ_com¥essi⁄
(Ë{ 
m_ty≥
 |
NO_COMPRESSION
; 
	}
}

481 
	$í¸y±i⁄_Æg‹ôhm
(
En¸y±i⁄
::
Ty≥
 
ty≥
) {

482 i‡(
ty≥
 =
En¸y±i⁄
::
NONE
) {

486 
m_í¸y±i⁄
.
	`£t_ty≥
(
ty≥
);

487 
	}
}

493 
	$í¸y±i⁄_key
(
byã
 *
key
, 
ulöt
 
key_Àn
, byã *
iv
) {

494 
m_í¸y±i⁄
.
	`£t_key
(
key
);

495 
m_í¸y±i⁄
.
	`£t_key_Àngth
(
key_Àn
);

496 
m_í¸y±i⁄
.
	`£t_öôül_ve˘‹
(
iv
);

497 
	}
}

501 
En¸y±i⁄
 
	$í¸y±i⁄_Æg‹ôhm
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

502  (
m_í¸y±i⁄
);

503 
	}
}

506 
boﬁ
 
	$is_í¸y±ed
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

507  (
m_í¸y±i⁄
.
	`gë_ty≥
(Ë!
En¸y±i⁄
::
NONE
);

508 
	}
}

511 
	$˛ór_í¸y±ed
() {

512 
m_í¸y±i⁄
.
	`£t_key
(
nuŒ±r
);

513 
m_í¸y±i⁄
.
	`£t_key_Àngth
(0);

514 
m_í¸y±i⁄
.
	`£t_öôül_ve˘‹
(
nuŒ±r
);

515 
m_í¸y±i⁄
.
	`£t_ty≥
(
En¸y±i⁄
::
NONE
);

516 
	}
}

519 
	$dblwr
(Ë{ 
m_ty≥
 |
DBLWR
; 
	}
}

522 
boﬁ
 
	$is_dblwr
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

523  ((
m_ty≥
 & 
DBLWR
) == DBLWR);

524 
	}
}

527 
boﬁ
 
	$is_punch_hﬁe_suµ‹ãd
() {

531 
	`DBUG_EXECUTE_IF
("ign‹e_punch_hﬁe",  (
åue
););

533 #i‡
	`deföed
(
HAVE_FALLOC_PUNCH_HOLE_AND_KEEP_SIZE
Ë|| deföed(
_WIN32
)

534  (
åue
);

536  (
Ál£
);

538 
	}
}

541 
	g°d
::
°rög
 
	$to_°rög
() const {

542 
°d
::
o°rög°ªam
 
os
;

544 
os
 << "bs: " << 
m_block_size
 << " flags:";

546 i‡(
m_ty≥
 & 
READ
) {

547 
os
 << " READ";

548 } i‡(
m_ty≥
 & 
WRITE
) {

549 
os
 << " WRITE";

550 } i‡(
m_ty≥
 & 
DBLWR
) {

551 
os
 << " DBLWR";

557 i‡(
m_ty≥
 & 
DATA_FILE
) {

558 
os
 << " | DATA_FILE";

561 i‡(
m_ty≥
 & 
LOG
) {

562 
os
 << " | LOG";

565 i‡(
m_ty≥
 & 
DISABLE_PARTIAL_IO_WARNINGS
) {

566 
os
 << " | DISABLE_PARTIAL_IO_WARNINGS";

569 i‡(
m_ty≥
 & 
DO_NOT_WAKE
) {

570 
os
 << " | IGNORE_MISSING";

573 i‡(
m_ty≥
 & 
PUNCH_HOLE
) {

574 
os
 << " | PUNCH_HOLE";

577 i‡(
m_ty≥
 & 
NO_COMPRESSION
) {

578 
os
 << " | NO_COMPRESSION";

581 
os
 << ", comp: " << 
m_com¥essi⁄
.
	`to_°rög
();

582 
os
 << ",Énc: " << 
m_í¸y±i⁄
.
	`to_°rög
(m_í¸y±i⁄.
	`gë_ty≥
());

584  (
os
.
	`°r
());

585 
	}
}

589 
	gEn¸y±i⁄
 &
	$gë_í¸y±i⁄_öfo
(Ë
n€x˚±


590 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

591  
m_í¸y±i⁄
;

592 
	}
}

596 
	$£t_í¸y±ed_block
(c⁄° 
fûe
::
Block
 *
eblock
Ë
n€x˚±
 {

597 
m_eblock
 = 
eblock
;

598 
	}
}

602 c⁄° 
	gfûe
::
Block
 *
	$gë_í¸y±ed_block
(Ëc⁄° 
n€x˚±


603 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

604  
m_eblock
;

605 
	}
}

607 
	g¥iv©e
:

609 
uöt32_t
 
m_block_size
{};

612 
uöt16_t
 
	gm_ty≥
{};

615 
Com¥essi⁄
 
	gm_com¥essi⁄
{};

618 
En¸y±i⁄
 
	gm_í¸y±i⁄
{};

621 c⁄° 
	gfûe
::
Block
 *
m_eblock
{};

624 
uöt32_t
 
	gm_ñí
{};

630 
	sos_fûe_size_t
 {

632 
os_off£t_t
 
	mm_tŸÆ_size
;

636 
os_off£t_t
 
	mm_Æloc_size
;

640 c⁄° 
ulöt
 
	gOS_AIO_N_PENDING_IOS_PER_THREAD
 = 32;

643 ˛as†
	cAIO_mode
 : 
size_t
 {

645 
NORMAL
 = 21,

648 
	mIBUF
 = 22,

651 
	mLOG
 = 23,

659 
	mSYNC
 = 24

663 
ulöt
 
os_n_fûe_ªads
;

664 
ulöt
 
os_n_fûe_wrôes
;

665 
ulöt
 
os_n_fsyncs
;

669 
	eos_fûe_ty≥_t
 {

671 
	mOS_FILE_TYPE_FAILED
,

674 
	mOS_FILE_TYPE_NAME_TOO_LONG
,

677 
	mOS_FILE_PERMISSION_ERROR
,

680 
	mOS_FILE_TYPE_MISSING
,

683 
	mOS_FILE_TYPE_UNKNOWN
,

686 
	mOS_FILE_TYPE_FILE
,

689 
	mOS_FILE_TYPE_DIR
,

692 
	mOS_FILE_TYPE_LINK
,

695 
	mOS_FILE_TYPE_BLOCK


703 
	#OS_FILE_MAX_PATH
 4000

	)

704 #i‡(
FN_REFLEN_SE
 < 
OS_FILE_MAX_PATH
)

709 
	sos_fûe_°©_t
 {

710 
	m«me
[
OS_FILE_MAX_PATH
];

711 
os_fûe_ty≥_t
 
	mty≥
;

712 
os_off£t_t
 
	msize
;

713 
os_off£t_t
 
	mÆloc_size
;

715 
uöt32_t
 
	mblock_size
;

717 
time_t
 
	m˘ime
;

718 
time_t
 
	mmtime
;

719 
time_t
 
	m©ime
;

720 
boﬁ
 
	mrw_≥rm
;

725 #i‚de‡
UNIV_HOTBACKUP


732 
FILE
 *
os_fûe_¸óã_tmpfûe
(c⁄° *
∑th
);

745 
boﬁ
 
os_fûe_¸óã_dúe˘‹y
(c⁄° *
∑th«me
, boﬁ 
Áû_if_exi°s
);

751 (*
	tos_dú_cbk_t
)(c⁄° *
	t∑th
, c⁄° *
	t«me
);

759 
boﬁ
 
	`os_fûe_sˇn_dúe˘‹y
(c⁄° *
∑th
, 
os_dú_cbk_t
 
sˇn_cbk
,

760 
boﬁ
 
is_dr›
);

773 
os_fûe_t
 
	`os_fûe_¸óã_sim∂e_func
(c⁄° *
«me
, 
ulöt
 
¸óã_mode
,

774 
ulöt
 
ac˚ss_ty≥
, 
boﬁ
 
ªad_⁄ly
,

775 
boﬁ
 *
suc˚ss
);

790 
pfs_os_fûe_t
 
	$os_fûe_¸óã_sim∂e_no_îr‹_h™dlög_func
(

791 c⁄° *
«me
, 
ulöt
 
¸óã_mode
, ulöà
ac˚ss_ty≥
, 
boﬁ
 
ªad_⁄ly
,

792 
boﬁ
 *
suc˚ss
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

799 
	`os_fûe_£t_noˇche
(
fd
, c⁄° *
fûe_«me
,

800 c⁄° *
›î©i⁄_«me
);

819 
pfs_os_fûe_t
 
	$os_fûe_¸óã_func
(c⁄° *
«me
, 
ulöt
 
¸óã_mode
,

820 
ulöt
 
puΩo£
, ulöà
ty≥
, 
boﬁ
 
ªad_⁄ly
,

821 
boﬁ
 *
suc˚ss
)

822 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

827 
boﬁ
 
	`os_fûe_dñëe_func
(c⁄° *
«me
);

833 
boﬁ
 
	`os_fûe_dñëe_if_exi°s_func
(c⁄° *
«me
, boﬁ *
exi°
);

842 
boﬁ
 
	`os_fûe_ª«me_func
(c⁄° *
ﬁd∑th
, c⁄° *
√w∑th
);

850 
boﬁ
 
	`os_fûe_˛o£_func
(
os_fûe_t
 
fûe
);

852 #ifde‡
UNIV_PFS_IO


855 
mysql_pfs_key_t
 
önodb_log_fûe_key
;

856 
mysql_pfs_key_t
 
önodb_ãmp_fûe_key
;

857 
mysql_pfs_key_t
 
önodb_dblwr_fûe_key
;

858 
mysql_pfs_key_t
 
önodb_¨ch_fûe_key
;

859 
mysql_pfs_key_t
 
önodb_˛⁄e_fûe_key
;

860 
mysql_pfs_key_t
 
önodb_d©a_fûe_key
;

861 
mysql_pfs_key_t
 
önodb_èbÀ•a˚_›í_fûe_key
;

873 
	#ªgi°î_pfs_fûe_›í_begö
(
°©e
, 
lockî
, 
key
, 
›
, 
«me
, 
§c_fûe
, \

874 
§c_löe
) \

876 
lockî
 = 
	`PSI_FILE_CALL
(
gë_thªad_fûe_«me_lockî
)(
°©e
, 
key
.
m_vÆue
, \

877 
›
, 
«me
, &
lockî
); \

878 i‡(
lockî
 !
nuŒ±r
) { \

879 
	`PSI_FILE_CALL
(
°¨t_fûe_›í_waô
) \

880 (
lockî
, 
§c_fûe
, 
°©ic_ˇ°
<
uöt
>(
§c_löe
)); \

882 
	}
} 0)

	)

884 
	#ªgi°î_pfs_fûe_›í_íd
(
lockî
, 
fûe
, 
ªsu…
) \

886 i‡(
lockî
 !
nuŒ±r
) { \

887 
fûe
.
m_psi
 = 
	`PSI_FILE_CALL
(
íd_fûe_›í_waô
)(
lockî
, 
ªsu…
); \

889 } 0)

	)

891 
	#ªgi°î_pfs_fûe_ª«me_begö
(
°©e
, 
lockî
, 
key
, 
›
, 
‰om
, 
to
, \

892 
§c_fûe
, 
§c_löe
) \

894 
lockî
 = 
	`PSI_FILE_CALL
(
gë_thªad_fûe_«me_lockî
)(
°©e
, 
key
.
m_vÆue
, \

895 
›
, 
‰om
, &
lockî
); \

896 i‡(
lockî
 !
nuŒ±r
) { \

897 
	`PSI_FILE_CALL
(
°¨t_fûe_ª«me_waô
) \

898 (
lockî
, (
size_t
)0, 
‰om
, 
to
, 
§c_fûe
, 
°©ic_ˇ°
<
uöt
>(
§c_löe
)); \

900 } 0)

	)

902 
	#ªgi°î_pfs_fûe_ª«me_íd
(
lockî
, 
‰om
, 
to
, 
ªsu…
) \

904 i‡(
lockî
 !
nuŒ±r
) { \

905 
	`PSI_FILE_CALL
(
íd_fûe_ª«me_waô
)(
lockî
, 
‰om
, 
to
, 
ªsu…
); \

907 } 0)

	)

909 
	#ªgi°î_pfs_fûe_˛o£_begö
(
°©e
, 
lockî
, 
key
, 
›
, 
«me
, 
§c_fûe
, \

910 
§c_löe
) \

912 
lockî
 = 
	`PSI_FILE_CALL
(
gë_thªad_fûe_«me_lockî
)(
°©e
, 
key
.
m_vÆue
, \

913 
›
, 
«me
, &
lockî
); \

914 i‡(
lockî
 !
nuŒ±r
) { \

915 
	`PSI_FILE_CALL
(
°¨t_fûe_˛o£_waô
) \

916 (
lockî
, 
§c_fûe
, 
°©ic_ˇ°
<
uöt
>(
§c_löe
)); \

918 } 0)

	)

920 
	#ªgi°î_pfs_fûe_˛o£_íd
(
lockî
, 
ªsu…
) \

922 i‡(
lockî
 !
nuŒ±r
) { \

923 
	`PSI_FILE_CALL
(
íd_fûe_˛o£_waô
)(
lockî
, 
ªsu…
); \

925 } 0)

	)

927 
	#ªgi°î_pfs_fûe_io_begö
(
°©e
, 
lockî
, 
fûe
, 
cou¡
, 
›
, 
§c_fûe
, \

928 
§c_löe
) \

930 
lockî
 = \

931 
	`PSI_FILE_CALL
(
gë_thªad_fûe_°ªam_lockî
)(
°©e
, 
fûe
.
m_psi
, 
›
); \

932 i‡(
lockî
 !
nuŒ±r
) { \

933 
	`PSI_FILE_CALL
(
°¨t_fûe_waô
) \

934 (
lockî
, 
cou¡
, 
§c_fûe
, 
°©ic_ˇ°
<
uöt
>(
§c_löe
)); \

936 } 0)

	)

938 
	#ªgi°î_pfs_fûe_io_íd
(
lockî
, 
cou¡
) \

940 i‡(
lockî
 !
nuŒ±r
) { \

941 
	`PSI_FILE_CALL
(
íd_fûe_waô
)(
lockî
, 
cou¡
); \

943 } 0)

	)

962 
	#os_fûe_¸óã
(
key
, 
«me
, 
¸óã
, 
puΩo£
, 
ty≥
, 
ªad_⁄ly
, 
suc˚ss
) \

963 
	`pfs_os_fûe_¸óã_func
(
key
, 
«me
, 
¸óã
, 
puΩo£
, 
ty≥
, 
ªad_⁄ly
, \

964 
suc˚ss
, 
__FILE__
, 
__LINE__
)

	)

966 
	#os_fûe_¸óã_sim∂e
(
key
, 
«me
, 
¸óã
, 
ac˚ss
, 
ªad_⁄ly
, 
suc˚ss
) \

967 
	`pfs_os_fûe_¸óã_sim∂e_func
(
key
, 
«me
, 
¸óã
, 
ac˚ss
, 
ªad_⁄ly
, \

968 
suc˚ss
, 
__FILE__
, 
__LINE__
)

	)

970 
	#os_fûe_¸óã_sim∂e_no_îr‹_h™dlög
(
key
, 
«me
, 
¸óã_mode
, \

971 
ac˚ss
, 
ªad_⁄ly
, 
suc˚ss
) \

972 
	`pfs_os_fûe_¸óã_sim∂e_no_îr‹_h™dlög_func
( \

973 
key
, 
«me
, 
¸óã_mode
, 
ac˚ss
, 
ªad_⁄ly
, 
suc˚ss
, 
__FILE__
, 
__LINE__
)

	)

975 
	#os_fûe_˛o£_pfs
(
fûe
Ë
	`pfs_os_fûe_˛o£_func
(fûe, 
__FILE__
, 
__LINE__
)

	)

977 
	#os_aio
(
ty≥
, 
mode
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
ªad_⁄ly
, 
mesßge1
, \

978 
mesßge2
) \

979 
	`pfs_os_aio_func
(
ty≥
, 
mode
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
ªad_⁄ly
, 
mesßge1
, \

980 
mesßge2
, 
__FILE__
, 
__LINE__
)

	)

982 
	#os_fûe_ªad_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

983 
	`pfs_os_fûe_ªad_func
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
__FILE__
, \

984 
__LINE__
)

	)

986 
	#os_fûe_ªad_fú°_∑ge_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
n
) \

987 
	`pfs_os_fûe_ªad_fú°_∑ge_func
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
n
, 
__FILE__
, \

988 
__LINE__
)

	)

990 
	#os_fûe_c›y_pfs
(
§c
, 
§c_off£t
, 
de°
, 
de°_off£t
, 
size
) \

991 
	`pfs_os_fûe_c›y_func
(
§c
, 
§c_off£t
, 
de°
, 
de°_off£t
, 
size
, 
__FILE__
, \

992 
__LINE__
)

	)

994 
	#os_fûe_ªad_no_îr‹_h™dlög_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, \

995 
n
, 
o
) \

996 
	`pfs_os_fûe_ªad_no_îr‹_h™dlög_func
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, \

997 
n
, 
o
, 
__FILE__
, 
__LINE__
)

	)

999 
	#os_fûe_ªad_no_îr‹_h™dlög_öt_fd
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, \

1000 
off£t
, 
n
, 
o
) \

1001 
	`pfs_os_fûe_ªad_no_îr‹_h™dlög_öt_fd_func
( \

1002 
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
o
, 
__FILE__
, 
__LINE__
)

	)

1004 
	#os_fûe_wrôe_pfs
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1005 
	`pfs_os_fûe_wrôe_func
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
__FILE__
, 
__LINE__
)

	)

1007 
	#os_fûe_wrôe_öt_fd
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1008 
	`pfs_os_fûe_wrôe_öt_fd_func
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
__FILE__
, \

1009 
__LINE__
)

	)

1011 
	#os_fûe_Êush_pfs
(
fûe
Ë
	`pfs_os_fûe_Êush_func
(fûe, 
__FILE__
, 
__LINE__
)

	)

1013 
	#os_fûe_ª«me
(
key
, 
ﬁd∑th
, 
√w∑th
) \

1014 
	`pfs_os_fûe_ª«me_func
(
key
, 
ﬁd∑th
, 
√w∑th
, 
__FILE__
, 
__LINE__
)

	)

1016 
	#os_fûe_dñëe
(
key
, 
«me
) \

1017 
	`pfs_os_fûe_dñëe_func
(
key
, 
«me
, 
__FILE__
, 
__LINE__
)

	)

1019 
	#os_fûe_dñëe_if_exi°s
(
key
, 
«me
, 
exi°
) \

1020 
	`pfs_os_fûe_dñëe_if_exi°s_func
(
key
, 
«me
, 
exi°
, 
__FILE__
, 
__LINE__
)

	)

1037 
UNIV_INLINE


1038 
pfs_os_fûe_t
 
	$pfs_os_fûe_¸óã_sim∂e_func
(

1039 
mysql_pfs_key_t
 
key
, c⁄° *
«me
, 
ulöt
 
¸óã_mode
, ulöà
ac˚ss_ty≥
,

1040 
boﬁ
 
ªad_⁄ly
, boﬁ *
suc˚ss
, c⁄° *
§c_fûe
, 
uöt
 
§c_löe
)

1041 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1061 
UNIV_INLINE


1062 
pfs_os_fûe_t
 
	$pfs_os_fûe_¸óã_sim∂e_no_îr‹_h™dlög_func
(

1063 
mysql_pfs_key_t
 
key
, c⁄° *
«me
, 
ulöt
 
¸óã_mode
, ulöà
ac˚ss_ty≥
,

1064 
boﬁ
 
ªad_⁄ly
, boﬁ *
suc˚ss
, c⁄° *
§c_fûe
, 
uöt
 
§c_löe
)

1065 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1088 
UNIV_INLINE


1089 
pfs_os_fûe_t
 
	$pfs_os_fûe_¸óã_func
(
mysql_pfs_key_t
 
key
, c⁄° *
«me
,

1090 
ulöt
 
¸óã_mode
, ulöà
puΩo£
,

1091 
ulöt
 
ty≥
, 
boﬁ
 
ªad_⁄ly
, boﬁ *
suc˚ss
,

1092 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
)

1093 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1102 
UNIV_INLINE


1103 
boﬁ
 
	`pfs_os_fûe_˛o£_func
(
pfs_os_fûe_t
 
fûe
, c⁄° *
§c_fûe
,

1104 
uöt
 
§c_löe
);

1119 
UNIV_INLINE


1120 
dbîr_t
 
	`pfs_os_fûe_ªad_func
(
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
,

1121 
pfs_os_fûe_t
 
fûe
, *
buf
, 
os_off£t_t
 
off£t
,

1122 
ulöt
 
n
, c⁄° *
§c_fûe
, 
uöt
 
§c_löe
);

1137 
UNIV_INLINE


1138 
dbîr_t
 
	`pfs_os_fûe_ªad_fú°_∑ge_func
(
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
,

1139 
pfs_os_fûe_t
 
fûe
, *
buf
, 
ulöt
 
n
,

1140 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
);

1152 
UNIV_INLINE


1153 
dbîr_t
 
	`pfs_os_fûe_c›y_func
(
pfs_os_fûe_t
 
§c
, 
os_off£t_t
 
§c_off£t
,

1154 
pfs_os_fûe_t
 
de°
, 
os_off£t_t
 
de°_off£t
,

1155 
uöt
 
size
, c⁄° *
§c_fûe
, uöà
§c_löe
);

1172 
UNIV_INLINE


1173 
dbîr_t
 
	`pfs_os_fûe_ªad_no_îr‹_h™dlög_func
(

1174 
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
, 
pfs_os_fûe_t
 
fûe
, *
buf
,

1175 
os_off£t_t
 
off£t
, 
ulöt
 
n
, ulöà*
o
, c⁄° *
§c_fûe
, 
uöt
 
§c_löe
);

1193 
UNIV_INLINE


1194 
dbîr_t
 
	`pfs_os_fûe_ªad_no_îr‹_h™dlög_öt_fd_func
(

1195 
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
, 
fûe
, *
buf
,

1196 
os_off£t_t
 
off£t
, 
ulöt
 
n
, ulöà*
o
, c⁄° *
§c_fûe
,

1197 
ulöt
 
§c_löe
);

1221 
UNIV_INLINE


1222 
dbîr_t
 
	`pfs_os_aio_func
(
IOReque°
 &
ty≥
, 
AIO_mode
 
mode
, c⁄° *
«me
,

1223 
pfs_os_fûe_t
 
fûe
, *
buf
, 
os_off£t_t
 
off£t
,

1224 
ulöt
 
n
, 
boﬁ
 
ªad_⁄ly
, 
fû_node_t
 *
m1
, *
m2
,

1225 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
);

1241 
UNIV_INLINE


1242 
dbîr_t
 
	`pfs_os_fûe_wrôe_func
(
IOReque°
 &
ty≥
, c⁄° *
«me
,

1243 
pfs_os_fûe_t
 
fûe
, c⁄° *
buf
,

1244 
os_off£t_t
 
off£t
, 
ulöt
 
n
,

1245 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
);

1262 
UNIV_INLINE


1263 
dbîr_t
 
	`pfs_os_fûe_wrôe_öt_fd_func
(
IOReque°
 &
ty≥
, c⁄° *
«me
,

1264 
fûe
, c⁄° *
buf
,

1265 
os_off£t_t
 
off£t
, 
ulöt
 
n
,

1266 c⁄° *
§c_fûe
, 
ulöt
 
§c_löe
);

1277 
UNIV_INLINE


1278 
boﬁ
 
	`pfs_os_fûe_Êush_func
(
pfs_os_fûe_t
 
fûe
, c⁄° *
§c_fûe
,

1279 
uöt
 
§c_löe
);

1291 
UNIV_INLINE


1292 
boﬁ
 
	`pfs_os_fûe_ª«me_func
(
mysql_pfs_key_t
 
key
, c⁄° *
ﬁd∑th
,

1293 c⁄° *
√w∑th
, c⁄° *
§c_fûe
,

1294 
uöt
 
§c_löe
);

1306 
UNIV_INLINE


1307 
boﬁ
 
	`pfs_os_fûe_dñëe_func
(
mysql_pfs_key_t
 
key
, c⁄° *
«me
,

1308 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
);

1321 
UNIV_INLINE


1322 
boﬁ
 
	`pfs_os_fûe_dñëe_if_exi°s_func
(
mysql_pfs_key_t
 
key
, c⁄° *
«me
,

1323 
boﬁ
 *
exi°
, c⁄° *
§c_fûe
,

1324 
uöt
 
§c_löe
);

1330 
	#os_fûe_¸óã
(
key
, 
«me
, 
¸óã
, 
puΩo£
, 
ty≥
, 
ªad_⁄ly
, 
suc˚ss
) \

1331 
	`os_fûe_¸óã_func
(
«me
, 
¸óã
, 
puΩo£
, 
ty≥
, 
ªad_⁄ly
, 
suc˚ss
)

	)

1333 
	#os_fûe_¸óã_sim∂e
(
key
, 
«me
, 
¸óã_mode
, 
ac˚ss
, 
ªad_⁄ly
, \

1334 
suc˚ss
) \

1335 
	`os_fûe_¸óã_sim∂e_func
(
«me
, 
¸óã_mode
, 
ac˚ss
, 
ªad_⁄ly
, 
suc˚ss
)

	)

1337 
	#os_fûe_¸óã_sim∂e_no_îr‹_h™dlög
(
key
, 
«me
, 
¸óã_mode
, \

1338 
ac˚ss
, 
ªad_⁄ly
, 
suc˚ss
) \

1339 
	`os_fûe_¸óã_sim∂e_no_îr‹_h™dlög_func
(
«me
, 
¸óã_mode
, 
ac˚ss
, \

1340 
ªad_⁄ly
, 
suc˚ss
)

	)

1342 
	#os_fûe_˛o£_pfs
(
fûe
Ë
	`os_fûe_˛o£_func
(fûe)

	)

1344 
	#os_aio
(
ty≥
, 
mode
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
ªad_⁄ly
, 
mesßge1
, \

1345 
mesßge2
) \

1346 
	`os_aio_func
(
ty≥
, 
mode
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
ªad_⁄ly
, 
mesßge1
, \

1347 
mesßge2
)

	)

1349 
	#os_fûe_ªad_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1350 
	`os_fûe_ªad_func
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
)

	)

1352 
	#os_fûe_ªad_fú°_∑ge_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
n
) \

1353 
	`os_fûe_ªad_fú°_∑ge_func
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
n
)

	)

1355 
	#os_fûe_c›y_pfs
(
§c
, 
§c_off£t
, 
de°
, 
de°_off£t
, 
size
) \

1356 
	`os_fûe_c›y_func
(
§c
, 
§c_off£t
, 
de°
, 
de°_off£t
, 
size
)

	)

1358 
	#os_fûe_ªad_no_îr‹_h™dlög_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, \

1359 
n
, 
o
) \

1360 
	`os_fûe_ªad_no_îr‹_h™dlög_func
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
o
)

	)

1362 
	#os_fûe_ªad_no_îr‹_h™dlög_öt_fd
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, \

1363 
off£t
, 
n
, 
o
) \

1364 
	`os_fûe_ªad_no_îr‹_h™dlög_func
(
ty≥
, 
fûe_«me
, 
	`OS_FILE_FROM_FD
(
fûe
), \

1365 
buf
, 
off£t
, 
n
, 
o
)

	)

1367 
	#os_fûe_wrôe_pfs
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1368 
	`os_fûe_wrôe_func
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
)

	)

1370 
	#os_fûe_wrôe_öt_fd
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1371 
	`os_fûe_wrôe_func
(
ty≥
, 
«me
, 
	`OS_FILE_FROM_FD
(
fûe
), 
buf
, 
off£t
, 
n
)

	)

1373 
	#os_fûe_Êush_pfs
(
fûe
Ë
	`os_fûe_Êush_func
(fûe)

	)

1375 
	#os_fûe_ª«me
(
key
, 
ﬁd∑th
, 
√w∑th
) \

1376 
	`os_fûe_ª«me_func
(
ﬁd∑th
, 
√w∑th
)

	)

1378 
	#os_fûe_dñëe
(
key
, 
«me
Ë
	`os_fûe_dñëe_func
“ame)

	)

1380 
	#os_fûe_dñëe_if_exi°s
(
key
, 
«me
, 
exi°
) \

1381 
	`os_fûe_dñëe_if_exi°s_func
(
«me
, 
exi°
)

	)

1385 #ifde‡
UNIV_PFS_IO


1386 
	#os_fûe_˛o£
(
fûe
Ë
	`os_fûe_˛o£_pfs
(fûe)

	)

1388 
	#os_fûe_˛o£
(
fûe
Ë
	`os_fûe_˛o£_pfs
((fûe).
m_fûe
)

	)

1391 #ifde‡
UNIV_PFS_IO


1392 
	#os_fûe_ªad
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1393 
	`os_fûe_ªad_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
)

	)

1395 
	#os_fûe_ªad
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1396 
	`os_fûe_ªad_pfs
(
ty≥
, 
fûe_«me
, 
fûe
.
m_fûe
, 
buf
, 
off£t
, 
n
)

	)

1399 #ifde‡
UNIV_PFS_IO


1400 
	#os_fûe_ªad_fú°_∑ge
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
n
) \

1401 
	`os_fûe_ªad_fú°_∑ge_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
n
)

	)

1403 
	#os_fûe_ªad_fú°_∑ge
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
n
) \

1404 
	`os_fûe_ªad_fú°_∑ge_pfs
(
ty≥
, 
fûe_«me
, 
fûe
.
m_fûe
, 
buf
, 
n
)

	)

1407 #ifde‡
UNIV_PFS_IO


1408 
	#os_fûe_Êush
(
fûe
Ë
	`os_fûe_Êush_pfs
(fûe)

	)

1410 
	#os_fûe_Êush
(
fûe
Ë
	`os_fûe_Êush_pfs
(fûe.
m_fûe
)

	)

1413 #ifde‡
UNIV_PFS_IO


1414 
	#os_fûe_wrôe
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1415 
	`os_fûe_wrôe_pfs
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
)

	)

1417 
	#os_fûe_wrôe
(
ty≥
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
) \

1418 
	`os_fûe_wrôe_pfs
(
ty≥
, 
«me
, 
fûe
.
m_fûe
, 
buf
, 
off£t
, 
n
)

	)

1421 #ifde‡
UNIV_PFS_IO


1422 
	#os_fûe_c›y
(
§c
, 
§c_off£t
, 
de°
, 
de°_off£t
, 
size
) \

1423 
	`os_fûe_c›y_pfs
(
§c
, 
§c_off£t
, 
de°
, 
de°_off£t
, 
size
)

	)

1425 
	#os_fûe_c›y
(
§c
, 
§c_off£t
, 
de°
, 
de°_off£t
, 
size
) \

1426 
	`os_fûe_c›y_pfs
(
§c
.
m_fûe
, 
§c_off£t
, 
de°
.m_fûe, 
de°_off£t
, 
size
)

	)

1429 #ifde‡
UNIV_PFS_IO


1430 
	#os_fûe_ªad_no_îr‹_h™dlög
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
, \

1431 
o
) \

1432 
	`os_fûe_ªad_no_îr‹_h™dlög_pfs
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
, 
o
)

	)

1434 
	#os_fûe_ªad_no_îr‹_h™dlög
(
ty≥
, 
fûe_«me
, 
fûe
, 
buf
, 
off£t
, 
n
, \

1435 
o
) \

1436 
	`os_fûe_ªad_no_îr‹_h™dlög_pfs
(
ty≥
, 
fûe_«me
, 
fûe
.
m_fûe
, 
buf
, \

1437 
off£t
, 
n
, 
o
)

	)

1440 #ifde‡
UNIV_HOTBACKUP


1444 
boﬁ
 
	`os_fûe_˛o£_no_îr‹_h™dlög
(
os_fûe_t
 
fûe
);

1451 
os_fûe_size_t
 
	$os_fûe_gë_size
(c⁄° *
fûíame
)

1452 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1457 
os_off£t_t
 
	$os_fûe_gë_size
(
pfs_os_fûe_t
 
fûe
)

1458 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1470 
boﬁ
 
	$os_fûe_£t_size_Á°
(c⁄° *
«me
, 
pfs_os_fûe_t
 
fûe
,

1471 
os_off£t_t
 
off£t
, os_off£t_à
size
, 
boﬁ
 
ªad_⁄ly
,

1472 
boﬁ
 
Êush
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1483 
boﬁ
 
	$os_fûe_£t_size
(c⁄° *
«me
, 
pfs_os_fûe_t
 
fûe
, 
os_off£t_t
 
off£t
,

1484 
os_off£t_t
 
size
, 
boﬁ
 
ªad_⁄ly
, boﬁ 
Êush
)

1485 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1490 
boﬁ
 
	`os_fûe_£t_eof
(
FILE
 *
fûe
);

1499 
boﬁ
 
	`os_fûe_åunˇã
(c⁄° *
∑th«me
, 
pfs_os_fûe_t
 
fûe
,

1500 
os_off£t_t
 
size
);

1507 
boﬁ
 
	`os_fûe_£ek
(c⁄° *
∑th«me
, 
os_fûe_t
 
fûe
, 
os_off£t_t
 
off£t
);

1514 
boﬁ
 
	`os_fûe_Êush_func
(
os_fûe_t
 
fûe
);

1523 
ulöt
 
	`os_fûe_gë_œ°_îr‹
(
boﬁ
 
ªp‹t_Æl_îr‹s
);

1535 
dbîr_t
 
	$os_fûe_ªad_func
(
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
,

1536 
os_fûe_t
 
fûe
, *
buf
, 
os_off£t_t
 
off£t
,

1537 
ulöt
 
n
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1548 
dbîr_t
 
	$os_fûe_ªad_fú°_∑ge_func
(
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
,

1549 
os_fûe_t
 
fûe
, *
buf
, 
ulöt
 
n
)

1550 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1560 
dbîr_t
 
	$os_fûe_c›y_func
(
os_fûe_t
 
§c_fûe
, 
os_off£t_t
 
§c_off£t
,

1561 
os_fûe_t
 
de°_fûe
, 
os_off£t_t
 
de°_off£t
,

1562 
uöt
 
size
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1570 
	`os_fûe_ªad_°rög
(
FILE
 *
fûe
, *
°r
, 
ulöt
 
size
);

1584 
dbîr_t
 
	$os_fûe_ªad_no_îr‹_h™dlög_func
(

1585 
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
, 
os_fûe_t
 
fûe
, *
buf
,

1586 
os_off£t_t
 
off£t
, 
ulöt
 
n
, ulöà*
o
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1599 
dbîr_t
 
	$os_fûe_wrôe_func
(
IOReque°
 &
ty≥
, c⁄° *
«me
, 
os_fûe_t
 
fûe
,

1600 c⁄° *
buf
, 
os_off£t_t
 
off£t
, 
ulöt
 
n
)

1601 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1608 
boﬁ
 
	`os_fûe_°©us
(c⁄° *
∑th
, boﬁ *
exi°s
, 
os_fûe_ty≥_t
 *
ty≥
);

1615 
boﬁ
 
	`os_fûe_exi°s
(c⁄° *
∑th
);

1619 
dbîr_t
 
	`os_fûe_¸óã_subdús_if_√eded
(c⁄° *
∑th
);

1621 #ifde‡
UNIV_ENABLE_UNIT_TEST_GET_PARENT_DIR


1623 
	`unô_ã°_os_fûe_gë_∑ª¡_dú
();

1626 #ifde‡
UNIV_HOTBACKUP


1628 
	`meb_‰ì_block_ˇche
();

1639 
	`os_¸óã_block_ˇche
();

1650 
boﬁ
 
	`os_aio_öô
(
ulöt
 
n_ªadîs
, ulöà
n_wrôîs
, ulöà
n_¶Ÿs_sync
);

1654 
	`os_aio_‰ì
();

1675 
dbîr_t
 
	`os_aio_func
(
IOReque°
 &
ty≥
, 
AIO_mode
 
aio_mode
, c⁄° *
«me
,

1676 
pfs_os_fûe_t
 
fûe
, *
buf
, 
os_off£t_t
 
off£t
, 
ulöt
 
n
,

1677 
boﬁ
 
ªad_⁄ly
, 
fû_node_t
 *
m1
, *
m2
);

1681 
	`os_aio_wake_Æl_thªads_©_shutdown
();

1685 
	`os_aio_waô_u¡û_no_≥ndög_wrôes
();

1688 
	`os_aio_simuœãd_wake_h™dÀr_thªads
();

1694 
	`os_aio_simuœãd_put_ªad_thªads_to_¶ìp
();

1716 
dbîr_t
 
	`os_aio_h™dÀr
(
ulöt
 
£gmít
, 
fû_node_t
 **
m1
, **
m2
,

1717 
IOReque°
 *
ªque°
);

1721 
	`os_aio_¥öt
(
FILE
 *
fûe
);

1724 
	`os_aio_ª‰esh_°©s
();

1728 
boﬁ
 
	`os_aio_Æl_¶Ÿs_‰ì
();

1730 #ifde‡
UNIV_DEBUG


1734 
	`os_aio_¥öt_≥ndög_io
(
FILE
 *
fûe
);

1742 
dbîr_t
 
	`os_gë_‰ì_•a˚
(c⁄° *
∑th
, 
uöt64_t
 &
‰ì_•a˚
);

1751 
dbîr_t
 
	`os_fûe_gë_°©us
(c⁄° *
∑th
, 
os_fûe_°©_t
 *
°©_öfo
,

1752 
boﬁ
 
check_rw_≥rm
, boﬁ 
ªad_⁄ly
);

1754 #i‚de‡
UNIV_HOTBACKUP


1757 *
	`önoba£_mysql_tmpdú
();

1763 
	`önoba£_mysql_tmpfûe
(c⁄° *
∑th
);

1771 
ulöt
 
	`os_fûe_com¥es£d_∑ge_size
(c⁄° 
byã
 *
buf
);

1777 
ulöt
 
	`os_fûe_‹igöÆ_∑ge_size
(c⁄° 
byã
 *
buf
);

1781 
	`os_fûe_£t_umask
(
ulöt
 
umask
);

1785 
ulöt
 
	`os_fûe_gë_umask
();

1792 
dbîr_t
 
	$os_fûe_punch_hﬁe
(
os_fûe_t
 
fh
, 
os_off£t_t
 
off
, os_off£t_à
Àn
)

1793 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1806 
boﬁ
 
	$os_is_•¨£_fûe_suµ‹ãd
(c⁄° *
∑th
, 
pfs_os_fûe_t
 
fh
)

1807 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1819 
dbîr_t
 
	$os_fûe_decom¥ess_∑ge
(
boﬁ
 
dblwr_ªad
, 
byã
 *
§c
, byã *
d°
,

1820 
ulöt
 
d°_Àn
)

1821 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1831 
byã
 *
	`os_fûe_com¥ess_∑ge
(
Com¥essi⁄
 
com¥essi⁄
, 
ulöt
 
block_size
,

1832 
byã
 *
§c
, 
ulöt
 
§c_Àn
, byã *
d°
,

1833 
ulöt
 *
d°_Àn
);

1838 
boﬁ
 
	$os_is_o_dúe˘_suµ‹ãd
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1849 
dbîr_t
 
	$os_fûe_wrôe_zîos
(
pfs_os_fûe_t
 
fûe
, c⁄° *
«me
,

1850 
ulöt
 
∑ge_size
, 
os_off£t_t
 
°¨t
, ulöà
Àn
,

1851 
boﬁ
 
ªad_⁄ly_mode
)

1852 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1854 #i‚de‡
UNIV_NONINL


1856 ˛as†
	cDú_WÆkî
 {

1857 
public
:

1858 
usög
 
P©h
 = 
°d
::
°rög
;

1863 
boﬁ
 
	`is_dúe˘‹y
(c⁄° 
P©h
 &
∑th
);

1869 
ãm∂©e
 <
ty≥«me
 
F
>

1870 
	$wÆk
(c⁄° 
P©h
 &
ba£dú
, 
boﬁ
 
ªcursive
, 
F
 &&
f
) {

1871 #ifde‡
_WIN32


1872 
	`wÆk_wö32
(
ba£dú
, 
ªcursive
,

1873 [&](c⁄° 
P©h
 &
∑th
, 
size_t
 
dïth
Ë{ 
	`f
(path); });

1875 
	`wÆk_posix
(
ba£dú
, 
ªcursive
,

1876 [&](c⁄° 
P©h
 &
∑th
, 
size_t
 
dïth
Ë{ 
	`f
(path); });

1880 
¥iv©e
:

1882 
	sE¡ry
 {

1887 
	`E¡ry
(c⁄° 
P©h
 &
∑th
, 
size_t
 
dïth
Ë: 
	`m_∑th
’©h), 
	`m_dïth
(depth) {}

1890 
P©h
 
m_∑th
;

1893 
size_t
 
m_dïth
;

1894 
	}
};

1896 
usög
 
	gFun˘i⁄
 = 
°d
::
fun˘i⁄
<(c⁄° 
P©h
 &, 
	gsize_t
)>;

1902 #ifde‡
_WIN32


1903 
wÆk_wö32
(c⁄° 
P©h
 &
ba£dú
, 
boﬁ
 
ªcursive
, 
Fun˘i⁄
 &&
f
);

1905 
wÆk_posix
(c⁄° 
P©h
 &
ba£dú
, 
boﬁ
 
ªcursive
, 
Fun˘i⁄
 &&
f
);

1911 
	gfûe
::
Block
 *
	$os_Æloc_block
(Ë
n€x˚±
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1916 
byã
 *
	$os_block_gë_‰ame
(c⁄° 
fûe
::
Block
 *
block
Ë
n€x˚±


1917 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

1921 
	$os_‰ì_block
(
fûe
::
Block
 *
block
Ë
n€x˚±
;

1923 
ölöe
 
fûe
::
Block
::
	$‰ì
(
fûe
::
Block
 *
obj
Ë
n€x˚±
 { 
	`os_‰ì_block
(obj); 
	}
}

1931 
	gfûe
::
Block
 *
os_fûe_í¸y±_∑ge
(c⁄° 
IOReque°
 &
ty≥
, *&
buf
, 
ulöt
 *
n
);

1940 
	gfûe
::
Block
 *
os_fûe_com¥ess_∑ge
(
IOReque°
 &
ty≥
, *&
buf
, 
ulöt
 *
n
);

1953 
dbîr_t
 
os_fûe_wrôe_ªåy
(
IOReque°
 &
ty≥
, c⁄° *
«me
,

1954 
pfs_os_fûe_t
 
fûe
, c⁄° *
buf
,

1955 
os_off£t_t
 
off£t
, 
ulöt
 
n
);

1957 
	~"os0fûe.ic
"

	@os0file.ic

33 
	~"univ.i
"

35 #ifde‡
UNIV_PFS_IO


51 
UNIV_INLINE


52 
pfs_os_fûe_t
 
	$pfs_os_fûe_¸óã_sim∂e_func
(

53 
mysql_pfs_key_t
 
key
, c⁄° *
«me
, 
ulöt
 
¸óã_mode
, ulöà
ac˚ss_ty≥
,

54 
boﬁ
 
ªad_⁄ly
, boﬁ *
suc˚ss
, c⁄° *
§c_fûe
, 
uöt
 
§c_löe
) {

55 
PSI_fûe_lockî_°©e
 
°©e
;

56 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

57 
pfs_os_fûe_t
 
fûe
;

60 
	`ªgi°î_pfs_fûe_›í_begö
(

61 &
°©e
, 
lockî
, 
key
,

62 (
¸óã_mode
 =
OS_FILE_CREATE
Ë? 
PSI_FILE_CREATE
 : 
PSI_FILE_OPEN
, 
«me
,

63 
§c_fûe
, 
§c_löe
);

65 
fûe
.
m_fûe
 = 
	`os_fûe_¸óã_sim∂e_func
(
«me
, 
¸óã_mode
, 
ac˚ss_ty≥
,

66 
ªad_⁄ly
, 
suc˚ss
);

67 
fûe
.
m_psi
 = 
nuŒ±r
;

70 
	`ªgi°î_pfs_fûe_›í_íd
(
lockî
, 
fûe
,

71 (*
suc˚ss
 =
TRUE
 ? suc˚s†: 
nuŒ±r
));

73  (
fûe
);

74 
	}
}

94 
UNIV_INLINE


95 
pfs_os_fûe_t
 
	$pfs_os_fûe_¸óã_sim∂e_no_îr‹_h™dlög_func
(

96 
mysql_pfs_key_t
 
key
, c⁄° *
«me
, 
ulöt
 
¸óã_mode
, ulöà
ac˚ss_ty≥
,

97 
boﬁ
 
ªad_⁄ly
, boﬁ *
suc˚ss
, c⁄° *
§c_fûe
, 
uöt
 
§c_löe
) {

98 
PSI_fûe_lockî_°©e
 
°©e
;

99 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

100 
pfs_os_fûe_t
 
fûe
;

103 
	`ªgi°î_pfs_fûe_›í_begö
(

104 &
°©e
, 
lockî
, 
key
,

105 
¸óã_mode
 =
OS_FILE_CREATE
 ? 
PSI_FILE_CREATE
 : 
PSI_FILE_OPEN
, 
«me
,

106 
§c_fûe
, 
§c_löe
);

108 
fûe
 = 
	`os_fûe_¸óã_sim∂e_no_îr‹_h™dlög_func
(

109 
«me
, 
¸óã_mode
, 
ac˚ss_ty≥
, 
ªad_⁄ly
, 
suc˚ss
);

111 
fûe
.
m_psi
 = 
nuŒ±r
;

112 
	`ªgi°î_pfs_fûe_›í_íd
(
lockî
, 
fûe
,

113 (*
suc˚ss
 =
TRUE
 ? suc˚s†: 
nuŒ±r
));

115  (
fûe
);

116 
	}
}

139 
UNIV_INLINE


140 
pfs_os_fûe_t
 
	$pfs_os_fûe_¸óã_func
(
mysql_pfs_key_t
 
key
, c⁄° *
«me
,

141 
ulöt
 
¸óã_mode
, ulöà
puΩo£
,

142 
ulöt
 
ty≥
, 
boﬁ
 
ªad_⁄ly
, boﬁ *
suc˚ss
,

143 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
) {

144 
PSI_fûe_lockî_°©e
 
°©e
;

145 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

146 
pfs_os_fûe_t
 
fûe
;

149 
	`ªgi°î_pfs_fûe_›í_begö
(

150 &
°©e
, 
lockî
, 
key
,

151 
¸óã_mode
 =
OS_FILE_CREATE
 ? 
PSI_FILE_CREATE
 : 
PSI_FILE_OPEN
, 
«me
,

152 
§c_fûe
, 
§c_löe
);

154 
fûe
 =

155 
	`os_fûe_¸óã_func
(
«me
, 
¸óã_mode
, 
puΩo£
, 
ty≥
, 
ªad_⁄ly
, 
suc˚ss
);

157 
fûe
.
m_psi
 = 
nuŒ±r
;

158 
	`ªgi°î_pfs_fûe_›í_íd
(
lockî
, 
fûe
,

159 (*
suc˚ss
 =
TRUE
 ? suc˚s†: 
nuŒ±r
));

161  (
fûe
);

162 
	}
}

171 
UNIV_INLINE


172 
boﬁ
 
	$pfs_os_fûe_˛o£_func
(
pfs_os_fûe_t
 
fûe
, c⁄° *
§c_fûe
,

173 
uöt
 
§c_löe
) {

174 
PSI_fûe_lockî_°©e
 
°©e
;

175 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

178 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e
, 
lockî
, 
fûe
, 0, 
PSI_FILE_CLOSE
, 
§c_fûe
,

179 
§c_löe
);

181 
boﬁ
 
ªsu…
 = 
	`os_fûe_˛o£_func
(
fûe
.
m_fûe
);

183 
	`ªgi°î_pfs_fûe_io_íd
(
lockî
, 0);

185  (
ªsu…
);

186 
	}
}

188 #i‚de‡
UNIV_HOTBACKUP


211 
UNIV_INLINE


212 
dbîr_t
 
	$pfs_os_aio_func
(
IOReque°
 &
ty≥
, 
AIO_mode
 
aio_mode
, c⁄° *
«me
,

213 
pfs_os_fûe_t
 
fûe
, *
buf
, 
os_off£t_t
 
off£t
,

214 
ulöt
 
n
, 
boﬁ
 
ªad_⁄ly
, 
fû_node_t
 *
m1
, *
m2
,

215 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
) {

216 
PSI_fûe_lockî_°©e
 
°©e
;

217 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

219 
	`ut_ad
(
ty≥
.
	`vÆid©e
());

222 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e
, 
lockî
, 
fûe
, 
n
,

223 
ty≥
.
	`is_wrôe
(Ë? 
PSI_FILE_WRITE
 : 
PSI_FILE_READ
,

224 
§c_fûe
, 
§c_löe
);

226 
dbîr_t
 
ªsu…
 = 
	`os_aio_func
(
ty≥
, 
aio_mode
, 
«me
, 
fûe
, 
buf
, 
off£t
, 
n
,

227 
ªad_⁄ly
, 
m1
, 
m2
);

229 
	`ªgi°î_pfs_fûe_io_íd
(
lockî
, 
n
);

231  (
ªsu…
);

232 
	}
}

248 
UNIV_INLINE


249 
dbîr_t
 
	$pfs_os_fûe_ªad_func
(
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
,

250 
pfs_os_fûe_t
 
fûe
, *
buf
, 
os_off£t_t
 
off£t
,

251 
ulöt
 
n
, c⁄° *
§c_fûe
, 
uöt
 
§c_löe
) {

252 
PSI_fûe_lockî_°©e
 
°©e
;

253 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

255 
	`ut_ad
(
ty≥
.
	`vÆid©e
());

257 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e
, 
lockî
, 
fûe
, 
n
, 
PSI_FILE_READ
, 
§c_fûe
,

258 
§c_löe
);

260 
dbîr_t
 
ªsu…
;

262 
ªsu…
 = 
	`os_fûe_ªad_func
(
ty≥
, 
fûe_«me
, 
fûe
.
m_fûe
, 
buf
, 
off£t
, 
n
);

264 
	`ªgi°î_pfs_fûe_io_íd
(
lockî
, 
n
);

266  (
ªsu…
);

267 
	}
}

281 
UNIV_INLINE


282 
dbîr_t
 
	$pfs_os_fûe_ªad_fú°_∑ge_func
(
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
,

283 
pfs_os_fûe_t
 
fûe
, *
buf
, 
ulöt
 
n
,

284 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
) {

285 
PSI_fûe_lockî_°©e
 
°©e
;

286 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

288 
	`ut_ad
(
ty≥
.
	`vÆid©e
());

290 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e
, 
lockî
, 
fûe
, 
n
, 
PSI_FILE_READ
, 
§c_fûe
,

291 
§c_löe
);

293 
dbîr_t
 
ªsu…
;

295 
ªsu…
 = 
	`os_fûe_ªad_fú°_∑ge_func
(
ty≥
, 
fûe_«me
, 
fûe
.
m_fûe
, 
buf
, 
n
);

297 
	`ªgi°î_pfs_fûe_io_íd
(
lockî
, 
n
);

299  (
ªsu…
);

300 
	}
}

312 
UNIV_INLINE


313 
dbîr_t
 
	$pfs_os_fûe_c›y_func
(
pfs_os_fûe_t
 
§c
, 
os_off£t_t
 
§c_off£t
,

314 
pfs_os_fûe_t
 
de°
, 
os_off£t_t
 
de°_off£t
,

315 
uöt
 
size
, c⁄° *
§c_fûe
, uöà
§c_löe
) {

316 
dbîr_t
 
ªsu…
;

318 
PSI_fûe_lockî_°©e
 
°©e_ªad
;

319 
PSI_fûe_lockî_°©e
 
°©e_wrôe
;

321 
PSI_fûe_lockî
 *
lockî_ªad
 = 
nuŒ±r
;

322 
PSI_fûe_lockî
 *
lockî_wrôe
 = 
nuŒ±r
;

324 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e_ªad
, 
lockî_ªad
, 
§c
, 
size
, 
PSI_FILE_READ
,

325 
§c_fûe
, 
§c_löe
);

327 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e_wrôe
, 
lockî_wrôe
, 
de°
, 
size
,

328 
PSI_FILE_WRITE
, 
§c_fûe
, 
§c_löe
);

330 
ªsu…
 =

331 
	`os_fûe_c›y_func
(
§c
.
m_fûe
, 
§c_off£t
, 
de°
.m_fûe, 
de°_off£t
, 
size
);

333 
	`ªgi°î_pfs_fûe_io_íd
(
lockî_wrôe
, 
size
);

334 
	`ªgi°î_pfs_fûe_io_íd
(
lockî_ªad
, 
size
);

336  (
ªsu…
);

337 
	}
}

354 
UNIV_INLINE


355 
dbîr_t
 
	$pfs_os_fûe_ªad_no_îr‹_h™dlög_func
(
IOReque°
 &
ty≥
,

356 c⁄° *
fûe_«me
,

357 
pfs_os_fûe_t
 
fûe
, *
buf
,

358 
os_off£t_t
 
off£t
, 
ulöt
 
n
,

359 
ulöt
 *
o
, c⁄° *
§c_fûe
,

360 
uöt
 
§c_löe
) {

361 
PSI_fûe_lockî_°©e
 
°©e
;

362 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

364 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e
, 
lockî
, 
fûe
, 
n
, 
PSI_FILE_READ
, 
§c_fûe
,

365 
§c_löe
);

367 
dbîr_t
 
ªsu…
 = 
	`os_fûe_ªad_no_îr‹_h™dlög_func
(

368 
ty≥
, 
fûe_«me
, 
fûe
.
m_fûe
, 
buf
, 
off£t
, 
n
, 
o
);

370 
	`ªgi°î_pfs_fûe_io_íd
(
lockî
, 
n
);

372  (
ªsu…
);

373 
	}
}

391 
UNIV_INLINE


392 
dbîr_t
 
	$pfs_os_fûe_ªad_no_îr‹_h™dlög_öt_fd_func
(

393 
IOReque°
 &
ty≥
, c⁄° *
fûe_«me
, 
fûe
, *
buf
,

394 
os_off£t_t
 
off£t
, 
ulöt
 
n
, ulöà*
o
, c⁄° *
§c_fûe
,

395 
ulöt
 
§c_löe
) {

396 
PSI_fûe_lockî_°©e
 
°©e
;

397 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

399 
lockî
 = 
	`PSI_FILE_CALL
(
gë_thªad_fûe_des¸ùt‹_lockî
)(&
°©e
, 
fûe
,

400 
PSI_FILE_READ
);

401 i‡(
lockî
 !
nuŒ±r
) {

402 
	`PSI_FILE_CALL
(
°¨t_fûe_waô
)(
lockî
, 
n
, 
__FILE__
, 
__LINE__
);

404 
dbîr_t
 
ªsu…
 = 
	`os_fûe_ªad_no_îr‹_h™dlög_func
(

405 
ty≥
, 
fûe_«me
, 
	`OS_FILE_FROM_FD
(
fûe
), 
buf
, 
off£t
, 
n
, 
o
);

407 i‡(
lockî
 !
nuŒ±r
) {

408 
	`PSI_FILE_CALL
(
íd_fûe_waô
)(
lockî
, 
n
);

411  (
ªsu…
);

412 
	}
}

428 
UNIV_INLINE


429 
dbîr_t
 
	$pfs_os_fûe_wrôe_func
(
IOReque°
 &
ty≥
, c⁄° *
«me
,

430 
pfs_os_fûe_t
 
fûe
, c⁄° *
buf
,

431 
os_off£t_t
 
off£t
, 
ulöt
 
n
,

432 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
) {

433 
PSI_fûe_lockî_°©e
 
°©e
;

434 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

436 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e
, 
lockî
, 
fûe
, 
n
, 
PSI_FILE_WRITE
, 
§c_fûe
,

437 
§c_löe
);

439 
dbîr_t
 
ªsu…
;

441 
ªsu…
 = 
	`os_fûe_wrôe_func
(
ty≥
, 
«me
, 
fûe
.
m_fûe
, 
buf
, 
off£t
, 
n
);

443 
	`ªgi°î_pfs_fûe_io_íd
(
lockî
, 
n
);

445  (
ªsu…
);

446 
	}
}

462 
UNIV_INLINE


463 
dbîr_t
 
	$pfs_os_fûe_wrôe_öt_fd_func
(
IOReque°
 &
ty≥
, c⁄° *
«me
,

464 
fûe
, c⁄° *
buf
,

465 
os_off£t_t
 
off£t
, 
ulöt
 
n
,

466 c⁄° *
§c_fûe
, 
ulöt
 
§c_löe
) {

467 
PSI_fûe_lockî_°©e
 
°©e
;

468 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

470 
lockî
 = 
	`PSI_FILE_CALL
(
gë_thªad_fûe_des¸ùt‹_lockî
)(&
°©e
, 
fûe
,

471 
PSI_FILE_WRITE
);

472 i‡(
lockî
 !
nuŒ±r
) {

473 
	`PSI_FILE_CALL
(
°¨t_fûe_waô
)(
lockî
, 
n
, 
__FILE__
, 
__LINE__
);

475 
dbîr_t
 
ªsu…
 =

476 
	`os_fûe_wrôe_func
(
ty≥
, 
«me
, 
	`OS_FILE_FROM_FD
(
fûe
), 
buf
, 
off£t
, 
n
);

478 i‡(
lockî
 !
nuŒ±r
) {

479 
	`PSI_FILE_CALL
(
íd_fûe_waô
)(
lockî
, 
n
);

482  (
ªsu…
);

483 
	}
}

495 
UNIV_INLINE


496 
boﬁ
 
	$pfs_os_fûe_Êush_func
(
pfs_os_fûe_t
 
fûe
, c⁄° *
§c_fûe
,

497 
uöt
 
§c_löe
) {

498 
PSI_fûe_lockî_°©e
 
°©e
;

499 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

501 
	`ªgi°î_pfs_fûe_io_begö
(&
°©e
, 
lockî
, 
fûe
, 0, 
PSI_FILE_SYNC
, 
§c_fûe
,

502 
§c_löe
);

504 
boﬁ
 
ªsu…
 = 
	`os_fûe_Êush_func
(
fûe
.
m_fûe
);

506 
	`ªgi°î_pfs_fûe_io_íd
(
lockî
, 0);

508  (
ªsu…
);

509 
	}
}

521 
UNIV_INLINE


522 
boﬁ
 
	$pfs_os_fûe_ª«me_func
(
mysql_pfs_key_t
 
key
, c⁄° *
ﬁd∑th
,

523 c⁄° *
√w∑th
, c⁄° *
§c_fûe
,

524 
uöt
 
§c_löe
)

527 
PSI_fûe_lockî_°©e
 
°©e
;

528 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

530 
	`ªgi°î_pfs_fûe_ª«me_begö
(&
°©e
, 
lockî
, 
key
, 
PSI_FILE_RENAME
, 
ﬁd∑th
,

531 
√w∑th
, 
§c_fûe
, 
§c_löe
);

533 
boﬁ
 
ªsu…
 = 
	`os_fûe_ª«me_func
(
ﬁd∑th
, 
√w∑th
);

535 
	`ªgi°î_pfs_fûe_ª«me_íd
(
lockî
, 
ﬁd∑th
, 
√w∑th
, !
ªsu…
);

537  (
ªsu…
);

538 
	}
}

549 
UNIV_INLINE


550 
boﬁ
 
	$pfs_os_fûe_dñëe_func
(
mysql_pfs_key_t
 
key
, c⁄° *
«me
,

551 c⁄° *
§c_fûe
, 
uöt
 
§c_löe
) {

552 
PSI_fûe_lockî_°©e
 
°©e
;

553 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

555 
	`ªgi°î_pfs_fûe_˛o£_begö
(&
°©e
, 
lockî
, 
key
, 
PSI_FILE_DELETE
, 
«me
,

556 
§c_fûe
, 
§c_löe
);

558 
boﬁ
 
ªsu…
 = 
	`os_fûe_dñëe_func
(
«me
);

560 
	`ªgi°î_pfs_fûe_˛o£_íd
(
lockî
, 0);

562  (
ªsu…
);

563 
	}
}

576 
UNIV_INLINE


577 
boﬁ
 
	$pfs_os_fûe_dñëe_if_exi°s_func
(
mysql_pfs_key_t
 
key
, c⁄° *
«me
,

578 
boﬁ
 *
exi°
, c⁄° *
§c_fûe
,

579 
uöt
 
§c_löe
) {

580 
PSI_fûe_lockî_°©e
 
°©e
;

581 
PSI_fûe_lockî
 *
lockî
 = 
nuŒ±r
;

583 
	`ªgi°î_pfs_fûe_˛o£_begö
(&
°©e
, 
lockî
, 
key
, 
PSI_FILE_DELETE
, 
«me
,

584 
§c_fûe
, 
§c_löe
);

586 
boﬁ
 
ªsu…
 = 
	`os_fûe_dñëe_if_exi°s_func
(
«me
, 
exi°
);

588 
	`ªgi°î_pfs_fûe_˛o£_íd
(
lockî
, 0);

590  (
ªsu…
);

591 
	}
}

	@os0numa.h

41 #i‚de‡
os0numa_h


42 
	#os0numa_h


	)

44 
	~"univ.i
"

46 #ifde‡
HAVE_LIBNUMA


47 
	~<numa.h
>

50 #ifde‡
HAVE_SCHED_GETCPU


51 
	~<utmpx.h
>

54 #ifde‡
_WIN32


58 
	#_WIN32_WINNT
 0x0601

	)

59 
	~<WöBa£.h
>

61 
	#HAVE_WINNUMA


	)

69 
ölöe
 
	$os_numa_avaûabÀ
() {

70 #i‡
	`deföed
(
HAVE_LIBNUMA
)

71  (
	`numa_avaûabÀ
());

72 #ñi‡
	`deföed
(
HAVE_WINNUMA
)

77 
ULONG
 
highe°_node
;

79 i‡(!
	`GëNumaHighe°NodeNumbî
(&
highe°_node
)) {

83 i‡(
highe°_node
 > 0) {

91 
	}
}

95 
ölöe
 
	$os_numa_num_c⁄figuªd_˝us
() {

96 #i‡
	`deföed
(
HAVE_LIBNUMA
)

97  (
	`numa_num_c⁄figuªd_˝us
());

98 #ñi‡
	`deföed
(
HAVE_WINNUMA
)

99 
SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
 *
buf
;

100 
DWORD
 
buf_byãs
 = 0;

102 i‡(
	`GëLogiˇlPro˚ss‹Inf‹m©i⁄Ex
(
Rñ©i⁄Group
, 
NULL
, &
buf_byãs
)) {

107 i‡(
	`GëLa°Eº‹
(Ë!
ERROR_INSUFFICIENT_BUFFER
) {

115 
buf
 = 
ªöãΩªt_ˇ°
<
SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
 *>(

116 
	`LoˇlAŒoc
(
LMEM_FIXED
, 
buf_byãs
));

118 i‡(
buf
 =
NULL
) {

122 i‡(!
	`GëLogiˇlPro˚ss‹Inf‹m©i⁄Ex
(
Rñ©i⁄Group
, 
buf
, &
buf_byãs
)) {

124 
	`LoˇlFªe
(
buf
);

128 
n_˝us
 = 0;

129 
SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
 *
buf_‹ig
 = 
buf
;

136 
DWORD
 
off£t
 = 0; off£à< 
buf_byãs
;) {

137 
WORD
 
i
 = 0; i < 
buf
->
Group
.
A˘iveGroupCou¡
; i++) {

138 
n_˝us
 +
buf
->
Group
.
GroupInfo
[
i
].
A˘ivePro˚ss‹Cou¡
;

141 
off£t
 +
buf
->
Size
;

142 
buf
 = 
ªöãΩªt_ˇ°
<
SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
 *>(

143 
ªöãΩªt_ˇ°
<*>(
buf
Ë+ buf->
Size
);

146 
	`LoˇlFªe
(
buf_‹ig
);

148  (
n_˝us
);

153 
ut_îr‹
;

156 
	}
}

162 
ölöe
 
	$os_numa_node_of_˝u
(
˝u
) {

163 #i‡
	`deföed
(
HAVE_LIBNUMA
)

164  (
	`numa_node_of_˝u
(
˝u
));

165 #ñi‡
	`deföed
(
HAVE_WINNUMA
)

166 
PROCESSOR_NUMBER
 
p
;

167 
USHORT
 
node
;

169 
p
.
Group
 = 
˝u
 >> 6;

170 
p
.
Numbî
 = 
˝u
 & 63;

172 i‡(
	`GëNumaPro˚ss‹NodeEx
(&
p
, &
node
)) {

173  (
°©ic_ˇ°
<>(
node
));

178 
ut_îr‹
;

181 
	}
}

187 
ölöe
 *
	$os_numa_Æloc_⁄node
(
size_t
 
size
, 
node
) {

188 #i‡
	`deföed
(
HAVE_LIBNUMA
)

189  (
	`numa_Æloc_⁄node
(
size
, 
node
));

190 #ñi‡
	`deföed
(
HAVE_WINNUMA
)

191  (
	`VútuÆAŒocExNuma
(
	`GëCuºítPro˚ss
(), 
NULL
, 
size
,

192 
MEM_COMMIT
 | 
MEM_RESERVE
, 
PAGE_READWRITE
, 
node
));

194 
ut_îr‹
;

195  (
NULL
);

197 
	}
}

202 
ölöe
 
	$os_numa_‰ì
(*
±r
, 
size_t
 
size
) {

203 #i‡
	`deföed
(
HAVE_LIBNUMA
)

204 
	`numa_‰ì
(
±r
, 
size
);

205 #ñi‡
	`deföed
(
HAVE_WINNUMA
)

206 
	`VútuÆFªeEx
(
	`GëCuºítPro˚ss
(), 
±r
, 0, 
MEM_DECOMMIT
 | 
MEM_RELEASE
);

208 
ut_îr‹
;

210 
	}
}

212 #i‡
deföed
(
HAVE_SCHED_GETCPU
Ë|| deföed(
HAVE_WINNUMA
)

214 
	#HAVE_OS_GETCPU


	)

218 
ölöe
 
	$os_gë˝u
() {

219 #i‡
	`deföed
(
HAVE_SCHED_GETCPU
)

220  (
	`sched_gë˝u
());

221 #ñi‡
	`deföed
(
HAVE_WINNUMA
)

222 
PROCESSOR_NUMBER
 
p
;

224 
	`GëCuºítPro˚ss‹NumbîEx
(&
p
);

226  (
°©ic_ˇ°
<>(
p
.
Group
 << 6 |Ö.
Numbî
));

228 
	}
}

	@os0once.h

34 #i‚de‡
os0⁄˚_h


35 
	#os0⁄˚_h


	)

37 
	~"univ.i
"

39 
	~"os0©omic.h
"

40 
	~"ut0ut.h
"

63 ˛as†
	cos_⁄˚
 {

64 
	mpublic
:

66 
ib_uöt32_t
 
	t°©e_t
;

69 c⁄° 
°©e_t
 
	mNEVER_DONE
 = 0;

72 c⁄° 
°©e_t
 
	mIN_PROGRESS
 = 1;

75 c⁄° 
°©e_t
 
	mDONE
 = 2;

82 
do_‹_waô_f‹_d⁄e
(
°d
::
©omic
<
°©e_t
> *
°©e
,

83 (*
do_func
)(*), *
do_func_¨g
) {

85 i‡(*
°©e
 =
DONE
) {

89 
°©e_t
 
√vî_d⁄e
 = 
NEVER_DONE
;

90 i‡(
°©e
->
	`com∑ª_exch™ge_°r⁄g
(
√vî_d⁄e
, 
IN_PROGRESS
)) {

93 
	`do_func
(
do_func_¨g
);

95 
°©e_t
 
ö_¥ogªss
 = 
IN_PROGRESS
;

96 c⁄° 
boﬁ
 
sw≠≥d
 = 
°©e
->
	`com∑ª_exch™ge_°r⁄g
(
ö_¥ogªss
, 
DONE
);

98 
	`ut_a
(
sw≠≥d
);

105 c⁄° 
°©e_t
 
s
 = *
°©e
;

107 
s
) {

108 
DONE
:

110 
IN_PROGRESS
:

112 
NEVER_DONE
:

115 
ut_îr‹
;

118 #i‚de‡
UNIV_HOTBACKUP


119 
	`UT_RELAX_CPU
();

124 
	}
};

	@os0proc.h

34 #i‚de‡
os0¥oc_h


35 
	#os0¥oc_h


	)

37 
	~"univ.i
"

39 #ifde‡
UNIV_LINUX


40 
	~<sys/ùc.h
>

41 
	~<sys/shm.h
>

44 *
	tos_¥o˚ss_t
;

45 
	tos_¥o˚ss_id_t
;

49 
°d
::
©omic
<
ulöt
> 
os_tŸÆ_œrge_mem_Æloˇãd
;

52 
boﬁ
 
os_u£_œrge_∑ges
;

55 
uöt
 
os_œrge_∑ge_size
;

59 
ulöt
 
os_¥oc_gë_numbî
();

64 *
os_mem_Æloc_œrge
(
ulöt
 *
n
);

69 
os_mem_‰ì_œrge
(*
±r
, 
ulöt
 
size
);

	@os0thread-create.h

33 #i‚de‡
os0thªad_¸óã_h


34 
	#os0thªad_¸óã_h


	)

36 
	~<my_thªad.h
>

38 
	~"univ.i
"

40 
	~"os0thªad.h
"

42 
	~<©omic
>

43 
	~<fun˘i⁄Æ
>

46 
uöt32_t
 
§v_max_n_thªads
;

49 
°d
::
©omic_öt
 
os_thªad_cou¡
;

52 
ölöe
 
	$os_thªad_›í
() {

53 
	}
}

57 
ölöe
 
boﬁ
 
	$os_thªad_™y_a˘ive
() {

58  (
os_thªad_cou¡
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
) > 0);

59 
	}
}

62 
ölöe
 
	$os_thªad_˛o£
() {

63 i‡(
	`os_thªad_™y_a˘ive
()) {

64 
ib
::
	`w¨n
(
ER_IB_MSG_1274
, 
os_thªad_cou¡
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

66 
	}
}

71 ˛as†
	cRu¬abÀ
 {

72 
	mpublic
:

73 #ifde‡
UNIV_PFS_THREAD


76 
ex∂icô
 
	$Ru¬abÀ
(
mysql_pfs_key_t
 
pfs_key
Ë: 
	$m_pfs_key
(
pfs_key
Ë{ 
	`öô
(); }

80 
ex∂icô
 
	$Ru¬abÀ
(
mysql_pfs_key_t
Ë{ 
	`öô
(); 
	}
}

83 
	gpublic
:

87 
ãm∂©e
 <
ty≥«me
 
F
, 
	gty≥«me
... 
	gArgs
>

88 
	$›î©‹
()(
F
 &&
f
, 
Args
 &&... 
¨gs
) {

89 
m_thªad
.
	`°©e
(Ë=
IB_thªad
::
Sèã
::
NOT_STARTED
) {

90 
	`UT_RELAX_CPU
();

93 
	`ut_a
(
m_thªad
.
	`°©e
(Ë=
IB_thªad
::
Sèã
::
ALLOWED_TO_START
);

95 
	`¥ómbÀ
();

97 
m_thªad
.
	`£t_°©e
(
IB_thªad
::
Sèã
::
STARTED
);

99 autÿ
èsk
 = 
°d
::
	`böd
(°d::
f‹w¨d
<
F
>(
f
), std::f‹w¨d<
Args
>(
¨gs
)...);

101 
	`èsk
();

103 
	`ïûogue
();

105 
m_thªad
.
	`£t_°©e
(
IB_thªad
::
Sèã
::
STOPPED
);

106 
	}
}

108 
IB_thªad
 
	$thªad
(Ëc⁄° {  (
m_thªad
); 
	}
}

110 
	g¥iv©e
:

112 
	$¥ómbÀ
() {

113 
	`my_thªad_öô
();

115 #i‡
	`deföed
(
UNIV_PFS_THREAD
Ë&& !deföed(
UNIV_HOTBACKUP
)

116 i‡(
m_pfs_key
.
m_vÆue
 !
PFS_NOT_INSTRUMENTED
.m_value) {

117 
PSI_thªad
 *
psi
;

119 
psi
 = 
	`PSI_THREAD_CALL
(
√w_thªad
)(
m_pfs_key
.
m_vÆue
, 
nuŒ±r
, 0);

121 
	`PSI_THREAD_CALL
(
£t_thªad_os_id
)(
psi
);

122 
	`PSI_THREAD_CALL
(
£t_thªad
)(
psi
);

126 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_ªÀa£
);

128 
ﬁd
;

130 
ﬁd
 = 
os_thªad_cou¡
.
	`„tch_add
(1, 
°d
::
mem‹y_‹dî_ªœxed
);

132 
	`ut_a
(
ﬁd
 <
°©ic_ˇ°
<>(
§v_max_n_thªads
) - 1);

133 
	}
}

136 
	$ïûogue
() {

137 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_ªÀa£
);

139 
ﬁd
;

141 
ﬁd
 = 
os_thªad_cou¡
.
	`„tch_sub
(1, 
°d
::
mem‹y_‹dî_ªœxed
);

142 
	`ut_a
(
ﬁd
 > 0);

144 
	`my_thªad_íd
();

146 #i‡
	`deföed
(
UNIV_PFS_THREAD
Ë&& !deföed(
UNIV_HOTBACKUP
)

147 i‡(
m_pfs_key
.
m_vÆue
 !
PFS_NOT_INSTRUMENTED
.m_value) {

148 
	`PSI_THREAD_CALL
(
dñëe_cuºít_thªad
)();

152 
m_¥omi£
.
	`£t_vÆue
();

153 
	}
}

155 
	g¥iv©e
:

156 #ifde‡
UNIV_PFS_THREAD


158 c⁄° 
mysql_pfs_key_t
 
m_pfs_key
;

162 
	g°d
::
¥omi£
<> 
m_¥omi£
;

166 
muèbÀ
 
IB_thªad
 
	gm_thªad
;

170 
	$öô
(Ë{ 
m_thªad
.
	`öô
(
m_¥omi£
); 
	}
}

176 
ölöe
 
boﬁ
 
	$thªad_is_°›≥d
(c⁄° 
IB_thªad
 &
thªad
) {

177  (
thªad
.
	`°©e
(Ë=
IB_thªad
::
Sèã
::
STOPPED
);

178 
	}
}

183 
ölöe
 
boﬁ
 
	$thªad_is_a˘ive
(c⁄° 
IB_thªad
 &
thªad
) {

184 
thªad
.
	`°©e
()) {

185 
IB_thªad
::
Sèã
::
NOT_STARTED
:

187  (
Ál£
);

189 
IB_thªad
::
Sèã
::
ALLOWED_TO_START
:

196  (
åue
);

198 
IB_thªad
::
Sèã
::
STARTED
:

202  (
åue
);

204 
IB_thªad
::
Sèã
::
STOPPED
:

206  (
Ál£
);

208 
IB_thªad
::
Sèã
::
INVALID
:

211  (
Ál£
);

220 
	}
}

232 
	gãm∂©e
 <
ty≥«me
 
	gF
, 
	gty≥«me
... 
	gArgs
>

233 
IB_thªad
 
	$¸óã_dëached_thªad
(
mysql_pfs_key_t
 
pfs_key
, 
F
 &&
f
,

234 
Args
 &&... 
¨gs
) {

235 
Ru¬abÀ
 
ru¬abÀ
{
pfs_key
};

237 autÿ
thªad
 = 
ru¬abÀ
.
	`thªad
();

239 
°d
::
thªad
 
	`t
(°d::
	`move
(
ru¬abÀ
), 
f
, 
¨gs
...);

240 
t
.
	`dëach
();

245 
	`ut_a
(
thªad
.
	`°©e
(Ë=
IB_thªad
::
Sèã
::
NOT_STARTED
);

247  (
thªad
);

248 
	}
}

250 #ifde‡
UNIV_PFS_THREAD


251 
	#os_thªad_¸óã
(...Ë
	`¸óã_dëached_thªad
(
__VA_ARGS__
)

	)

253 
	#os_thªad_¸óã
(
k
, ...Ë
	`¸óã_dëached_thªad
(0, 
__VA_ARGS__
)

	)

262 
	gãm∂©e
 <
ty≥«me
 
	gC⁄èöî
,Åy≥«mê
	gF
, 
	gty≥«me
... 
	gArgs
>

263 
	$∑r_f‹
(
mysql_pfs_key_t
 
pfs_key
, c⁄° 
C⁄èöî
 &
c
, 
size_t
 
n
, 
F
 &&
f
,

264 
Args
 &&... 
¨gs
) {

265 i‡(
c
.
	`em±y
()) {

269 
size_t
 
¶i˚
 = (
n
 > 0Ë? 
c
.
	`size
() /Ç : 0;

271 
usög
 
W‹kîs
 = 
°d
::
ve˘‹
<
IB_thªad
>;

273 
W‹kîs
 
w‹kîs
;

275 
w‹kîs
.
	`ª£rve
(
n
);

277 
size_t
 
i
 = 0; i < 
n
; ++i) {

278 autÿ
b
 = 
c
.
	`begö
(Ë+ (
i
 * 
¶i˚
);

279 autÿ
e
 = 
b
 + 
¶i˚
;

281 autÿ
w‹kî
 = 
	`os_thªad_¸óã
(
pfs_key
, 
f
, 
b
, 
e
, 
i
, 
¨gs
...);

282 
w‹kî
.
	`°¨t
();

284 
w‹kîs
.
	`push_back
(
°d
::
	`move
(
w‹kî
));

287 
	`f
(
c
.
	`begö
(Ë+ (
n
 * 
¶i˚
), c.
	`íd
(),Ç, 
¨gs
...);

289 autÿ&
w‹kî
 : 
w‹kîs
) {

290 
w‹kî
.
	`joö
();

292 
	}
}

294 #i‡
deföed
(
UNIV_PFS_THREAD
Ë&& !deföed(
UNIV_HOTBACKUP
)

295 
	#∑r_f‹
(...Ë
	`∑r_f‹
(
__VA_ARGS__
)

	)

297 
	#∑r_f‹
(
k
, ...Ë
	`∑r_f‹
(0, 
__VA_ARGS__
)

	)

	@os0thread.h

34 #i‚de‡
os0thªad_h


35 
	#os0thªad_h


	)

37 
	~<©omic
>

38 
	~<futuª
>

39 
	~<thªad
>

41 ˛as†
	cIB_thªad
 {

42 
	mpublic
:

43 ˛as†
	cSèã
 { 
INVALID
, 
	mNOT_STARTED
, 
	mALLOWED_TO_START
, 
	mSTARTED
, 
	mSTOPPED
 };

45 
Sèã
 
	$°©e
() const {

46  (
m_°©e
 =
nuŒ±r
 ? 
Sèã
::
INVALID
 : m_°©e->
	`lﬂd
());

47 
	}
}

49 
°¨t
();

50 
waô
(
Sèã
 
°©e_to_waô_f‹
 = Sèã::
STOPPED
);

51 
joö
();

53 
	g¥iv©e
:

54 
°d
::
sh¨ed_futuª
<> 
m_sh¨ed_futuª
;

55 
	g°d
::
sh¨ed_±r
<
°d
::
©omic
<
Sèã
>> 
m_°©e
;

57 
‰õnd
 
˛ass
 
	gRu¬abÀ
;

59 
öô
(
°d
::
¥omi£
<> &promise);

60 
£t_°©e
(
Sèã
 
°©e
);

64 
usög
 
	gos_thªad_id_t
 = 
°d
::
thªad
::
«tive_h™dÀ_ty≥
;

69 
os_thªad_id_t
 
os_thªad_gë_cuº_id
();

71 
boﬁ
 
os_thªad_£t_¥i‹ôy
(
¥i‹ôy
);

73 
os_thªad_£t_¥i‹ôy
(
¥i‹ôy
, c⁄° *
thªad_«me
);

78 
	#os_thªad_h™dÀ
(Ë((
uöt64_t
)(
	`os_thªad_gë_cuº_id
()))

	)

84 
	#os_thªad_eq
(
lhs
, 
rhs
Ë(÷hsË=‘hs))

	)

87 
	#os_thªad_yõld
() \

89 
°d
::
this_thªad
::
	`yõld
(); \

90 } 
Ál£
)

	)

94 
	#os_thªad_¶ìp
(
u£cs
) \

96 
°d
::
this_thªad
::
	`¶ìp_f‹
(°d::
chr⁄o
::
	`mi¸o£c⁄ds
(
u£cs
)); \

97 } 
Ál£
)

	)

	@page0cur.h

33 #i‚de‡
∑ge0cur_h


34 
	#∑ge0cur_h


	)

36 
	~"univ.i
"

38 
	~"buf0ty≥s.h
"

39 
	~"d©a0d©a.h
"

40 
	~"gis0ty≥.h
"

41 
	~"må0må.h
"

42 
	~"∑ge0∑ge.h
"

43 
	~"ªm0ªc.h
"

45 
	#PAGE_CUR_ADAPT


	)

47 #ifde‡
UNIV_DEBUG


50 
UNIV_INLINE


51 
∑ge_t
 *
∑ge_cur_gë_∑ge
(
∑ge_cur_t
 *
cur
);

54 
UNIV_INLINE


55 
buf_block_t
 *
∑ge_cur_gë_block
(
∑ge_cur_t
 *
cur
);

58 
UNIV_INLINE


59 
∑ge_zù_des_t
 *
∑ge_cur_gë_∑ge_zù
(
∑ge_cur_t
 *
cur
);

62 
UNIV_INLINE


63 
ªc_t
 *
∑ge_cur_gë_ªc
(
∑ge_cur_t
 *
cur
);

65 
	#∑ge_cur_gë_∑ge
(
cur
Ë
	`∑ge_Æign
((cur)->
ªc
)

	)

66 
	#∑ge_cur_gë_block
(
cur
Ë(cur)->
block


	)

67 
	#∑ge_cur_gë_∑ge_zù
(
cur
Ë
	`buf_block_gë_∑ge_zù
((cur)->
block
)

	)

68 
	#∑ge_cur_gë_ªc
(
cur
Ë(cur)->
ªc


	)

74 
UNIV_INLINE


75 
∑ge_cur_£t_bef‹e_fú°
(c⁄° 
buf_block_t
 *
block
, 
∑ge_cur_t
 *
cur
);

80 
UNIV_INLINE


81 
∑ge_cur_£t_a·î_œ°
(c⁄° 
buf_block_t
 *
block
, 
∑ge_cur_t
 *
cur
);

85 
UNIV_INLINE


86 
iboﬁ
 
∑ge_cur_is_bef‹e_fú°
(c⁄° 
∑ge_cur_t
 *
cur
);

89 
UNIV_INLINE


90 
iboﬁ
 
∑ge_cur_is_a·î_œ°
(c⁄° 
∑ge_cur_t
 *
cur
);

96 
UNIV_INLINE


97 
∑ge_cur_posôi⁄
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
buf_block_t
 *
block
,

98 
∑ge_cur_t
 *
cur
);

101 
UNIV_INLINE


102 
∑ge_cur_move_to_√xt
(

103 
∑ge_cur_t
 *
cur
);

105 
UNIV_INLINE


106 
∑ge_cur_move_to_¥ev
(

107 
∑ge_cur_t
 *
cur
);

119 
UNIV_INLINE


120 
ªc_t
 *
	$∑ge_cur_tu∂e_ö£π
(

121 
∑ge_cur_t
 *
curs‹
,

122 c⁄° 
dtu∂e_t
 *
tu∂e
,

123 
di˘_ödex_t
 *
ödex
,

124 
ulöt
 **
off£ts
,

125 
mem_hóp_t
 **
hóp
,

126 
må_t
 *
må
,

127 
boﬁ
 
u£_ˇche
 = 
Ál£
)

130 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

148 
UNIV_INLINE


149 
ªc_t
 *
	`∑ge_cur_ªc_ö£π
(
∑ge_cur_t
 *
curs‹
, c⁄°Ñec_à*
ªc
,

150 
di˘_ödex_t
 *
ödex
, 
ulöt
 *
off£ts
, 
må_t
 *
må
);

156 
ªc_t
 *
	$∑ge_cur_ö£π_ªc_low
(

157 
ªc_t
 *
cuºít_ªc
,

159 
di˘_ödex_t
 *
ödex
,

160 c⁄° 
ªc_t
 *
ªc
,

161 
ulöt
 *
off£ts
,

162 
må_t
 *
må
)

163 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

173 
ªc_t
 *
	`∑ge_cur_dúe˘_ö£π_ªc_low
‘ec_à*
cuºít_ªc
, 
di˘_ödex_t
 *
ödex
,

174 c⁄° 
dtu∂e_t
 *
tu∂e
, 
må_t
 *
må
);

187 
ªc_t
 *
	$∑ge_cur_ö£π_ªc_zù
(

188 
∑ge_cur_t
 *
curs‹
,

189 
di˘_ödex_t
 *
ödex
,

190 c⁄° 
ªc_t
 *
ªc
,

191 
ulöt
 *
off£ts
,

192 
må_t
 *
må
)

193 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

201 
	`∑ge_c›y_ªc_li°_íd_to_¸óãd_∑ge
(

202 
∑ge_t
 *
√w_∑ge
,

203 
ªc_t
 *
ªc
,

204 
di˘_ödex_t
 *
ödex
,

205 
må_t
 *
må
);

208 
	`∑ge_cur_dñëe_ªc
(

209 
∑ge_cur_t
 *
curs‹
,

210 c⁄° 
di˘_ödex_t
 *
ödex
,

211 c⁄° 
ulöt
 *
off£ts
,

213 
må_t
 *
må
);

221 
UNIV_INLINE


222 
ulöt
 
	`∑ge_cur_£¨ch
(c⁄° 
buf_block_t
 *
block
, c⁄° 
di˘_ödex_t
 *
ödex
,

223 c⁄° 
dtu∂e_t
 *
tu∂e
, 
∑ge_cur_mode_t
 
mode
,

224 
∑ge_cur_t
 *
curs‹
);

232 
UNIV_INLINE


233 
ulöt
 
	`∑ge_cur_£¨ch
(c⁄° 
buf_block_t
 *
block
, c⁄° 
di˘_ödex_t
 *
ödex
,

234 c⁄° 
dtu∂e_t
 *
tu∂e
, 
∑ge_cur_t
 *
curs‹
);

245 
	`∑ge_cur_£¨ch_wôh_m©ch
(c⁄° 
buf_block_t
 *
block
,

246 c⁄° 
di˘_ödex_t
 *
ödex
,

247 c⁄° 
dtu∂e_t
 *
tu∂e
, 
∑ge_cur_mode_t
 
mode
,

248 
ulöt
 *
iup_m©ched_fõlds
,

250 
ulöt
 *
ûow_m©ched_fõlds
,

252 
∑ge_cur_t
 *
curs‹
, 
πr_öfo_t
 *
πr_öfo
);

268 
	`∑ge_cur_£¨ch_wôh_m©ch_byãs
(

269 c⁄° 
buf_block_t
 *
block
, c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
dtu∂e_t
 *
tu∂e
,

270 
∑ge_cur_mode_t
 
mode
, 
ulöt
 *
iup_m©ched_fõlds
, ulöà*
iup_m©ched_byãs
,

271 
ulöt
 *
ûow_m©ched_fõlds
, ulöà*
ûow_m©ched_byãs
, 
∑ge_cur_t
 *
curs‹
);

274 
	`∑ge_cur_›í_⁄_∫d_u£r_ªc
(
buf_block_t
 *
block
,

275 
∑ge_cur_t
 *
curs‹
);

278 
byã
 *
	`∑ge_cur_∑r£_ö£π_ªc
(

279 
iboﬁ
 
is_sh‹t
,

280 c⁄° 
byã
 *
±r
,

281 c⁄° 
byã
 *
íd_±r
,

282 
buf_block_t
 *
block
,

283 
di˘_ödex_t
 *
ödex
,

284 
må_t
 *
må
);

287 
byã
 *
	`∑ge_∑r£_c›y_ªc_li°_to_¸óãd_∑ge
(

288 
byã
 *
±r
,

289 
byã
 *
íd_±r
,

290 
buf_block_t
 *
block
,

291 
di˘_ödex_t
 *
ödex
,

292 
må_t
 *
må
);

295 
byã
 *
	`∑ge_cur_∑r£_dñëe_ªc
(

296 
byã
 *
±r
,

297 
byã
 *
íd_±r
,

298 
buf_block_t
 *
block
,

299 
di˘_ödex_t
 *
ödex
,

300 
må_t
 *
må
);

304 
boﬁ
 
	`∑ge_dñëe_ªc
(

305 c⁄° 
di˘_ödex_t
 *
ödex
,

307 
∑ge_cur_t
 *
pcur
,

309 
∑ge_zù_des_t
 *
∑ge_zù
,

310 c⁄° 
ulöt
 *
off£ts
);

314 
	s∑ge_cur_t
 {

315 c⁄° 
di˘_ödex_t
 *
ödex
{
nuŒ±r
};

316 
ªc_t
 *
ªc
{
nuŒ±r
};

317 
ulöt
 *
off£ts
{
nuŒ±r
};

318 
buf_block_t
 *
block
{
nuŒ±r
};

321 
	~"∑ge0cur.ic
"

	@page0cur.ic

33 
	~"buf0ty≥s.h
"

34 
	~"∑ge0∑ge.h
"

36 #ifde‡
UNIV_DEBUG


37 #i‚de‡
UNIV_HOTBACKUP


38 
	~"ªm0cmp.h
"

43 
UNIV_INLINE


44 
∑ge_t
 *
	$∑ge_cur_gë_∑ge
(
∑ge_cur_t
 *
cur
)

46 
	`ut_ad
(
cur
);

47 
	`ut_ad
(
	`∑ge_Æign
(
cur
->
ªc
Ë=cur->
block
->
‰ame
);

49  (
	`∑ge_Æign
(
cur
->
ªc
));

50 
	}
}

54 
UNIV_INLINE


55 
buf_block_t
 *
	$∑ge_cur_gë_block
(
∑ge_cur_t
 *
cur
)

57 
	`ut_ad
(
cur
);

58 
	`ut_ad
(
	`∑ge_Æign
(
cur
->
ªc
Ë=cur->
block
->
‰ame
);

59  (
cur
->
block
);

60 
	}
}

64 
UNIV_INLINE


65 
∑ge_zù_des_t
 *
	$∑ge_cur_gë_∑ge_zù
(
∑ge_cur_t
 *
cur
)

67  (
	`buf_block_gë_∑ge_zù
(
	`∑ge_cur_gë_block
(
cur
)));

68 
	}
}

72 
UNIV_INLINE


73 
ªc_t
 *
	$∑ge_cur_gë_ªc
(
∑ge_cur_t
 *
cur
)

75 
	`ut_ad
(
cur
);

76 
	`ut_ad
(
	`∑ge_Æign
(
cur
->
ªc
Ë=cur->
block
->
‰ame
);

78  (
cur
->
ªc
);

79 
	}
}

84 
UNIV_INLINE


85 
	$∑ge_cur_£t_bef‹e_fú°
(c⁄° 
buf_block_t
 *
block
,

86 
∑ge_cur_t
 *
cur
)

88 
cur
->
block
 = (
buf_block_t
 *)block;

89 
cur
->
ªc
 = 
	`∑ge_gë_öfimum_ªc
(
	`buf_block_gë_‰ame
(cur->
block
));

90 
	}
}

94 
UNIV_INLINE


95 
	$∑ge_cur_£t_a·î_œ°
(c⁄° 
buf_block_t
 *
block
,

96 
∑ge_cur_t
 *
cur
)

98 
cur
->
block
 = (
buf_block_t
 *)block;

99 
cur
->
ªc
 = 
	`∑ge_gë_su¥emum_ªc
(
	`buf_block_gë_‰ame
(cur->
block
));

100 
	}
}

104 
UNIV_INLINE


105 
iboﬁ
 
	$∑ge_cur_is_bef‹e_fú°
(c⁄° 
∑ge_cur_t
 *
cur
)

107 
	`ut_ad
(
cur
);

108 
	`ut_ad
(
	`∑ge_Æign
(
cur
->
ªc
Ë=cur->
block
->
‰ame
);

109  (
	`∑ge_ªc_is_öfimum
(
cur
->
ªc
));

110 
	}
}

114 
UNIV_INLINE


115 
iboﬁ
 
	$∑ge_cur_is_a·î_œ°
(c⁄° 
∑ge_cur_t
 *
cur
)

117 
	`ut_ad
(
cur
);

118 
	`ut_ad
(
	`∑ge_Æign
(
cur
->
ªc
Ë=cur->
block
->
‰ame
);

119  (
	`∑ge_ªc_is_su¥emum
(
cur
->
ªc
));

120 
	}
}

123 
UNIV_INLINE


124 
	$∑ge_cur_posôi⁄
(c⁄° 
ªc_t
 *
ªc
,

125 c⁄° 
buf_block_t
 *
block
,

127 
∑ge_cur_t
 *
cur
)

129 
	`ut_ad
(
ªc
 && 
block
 && 
cur
);

130 
	`ut_ad
(
	`∑ge_Æign
(
ªc
Ë=
block
->
‰ame
);

132 
cur
->
ªc
 = (
ªc_t
 *)rec;

133 
cur
->
block
 = (
buf_block_t
 *)block;

134 
	}
}

137 
UNIV_INLINE


138 
	$∑ge_cur_move_to_√xt
(

139 
∑ge_cur_t
 *
cur
)

141 
	`ut_ad
(!
	`∑ge_cur_is_a·î_œ°
(
cur
));

143 
cur
->
ªc
 = 
	`∑ge_ªc_gë_√xt
(cur->rec);

144 
	}
}

147 
UNIV_INLINE


148 
	$∑ge_cur_move_to_¥ev
(

149 
∑ge_cur_t
 *
cur
)

151 
	`ut_ad
(!
	`∑ge_cur_is_bef‹e_fú°
(
cur
));

153 
cur
->
ªc
 = 
	`∑ge_ªc_gë_¥ev
(cur->rec);

154 
	}
}

156 #i‚de‡
UNIV_HOTBACKUP


164 
UNIV_INLINE


165 
ulöt
 
	$∑ge_cur_£¨ch
(c⁄° 
buf_block_t
 *
block
, c⁄° 
di˘_ödex_t
 *
ödex
,

166 c⁄° 
dtu∂e_t
 *
tu∂e
, 
∑ge_cur_mode_t
 
mode
,

167 
∑ge_cur_t
 *
curs‹
) {

168 
ulöt
 
low_m©ch
 = 0;

169 
ulöt
 
up_m©ch
 = 0;

171 
	`ut_ad
(
	`dtu∂e_check_ty≥d
(
tu∂e
));

173 
	`∑ge_cur_£¨ch_wôh_m©ch
(
block
, 
ödex
, 
tu∂e
, 
mode
, &
up_m©ch
, &
low_m©ch
,

174 
curs‹
, 
nuŒ±r
);

175  (
low_m©ch
);

176 
	}
}

184 
UNIV_INLINE


185 
ulöt
 
	$∑ge_cur_£¨ch
(c⁄° 
buf_block_t
 *
block
, c⁄° 
di˘_ödex_t
 *
ödex
,

186 c⁄° 
dtu∂e_t
 *
tu∂e
, 
∑ge_cur_t
 *
curs‹
) {

187  (
	`∑ge_cur_£¨ch
(
block
, 
ödex
, 
tu∂e
, 
PAGE_CUR_LE
, 
curs‹
));

188 
	}
}

201 
UNIV_INLINE


202 
ªc_t
 *
	$∑ge_cur_tu∂e_ö£π
(

203 
∑ge_cur_t
 *
curs‹
,

204 c⁄° 
dtu∂e_t
 *
tu∂e
,

205 
di˘_ödex_t
 *
ödex
,

206 
ulöt
 **
off£ts
,

207 
mem_hóp_t
 **
hóp
,

208 
må_t
 *
må
,

209 
boﬁ
 
u£_ˇche
)

213 
ªc_t
 *
ªc
;

214 
ªc_t
 *
ö£π_ªc
;

216 #ifde‡
J3VM


217 
ulöt
 
size
;

218 i‡(
	`ªc_is_u£r_ªc
(
tu∂e
, 
ödex
)) {

219 
size
 = 
	`ªc_gë_c⁄vîãd_size
(
ödex
, 
tu∂e
Ë* 2 + 
REC_PLEAF_EXTRA_SIZE
;

221 
size
 = 
	`ªc_gë_c⁄vîãd_size
(
ödex
, 
tu∂e
);

224 
ulöt
 
size
 = 
	`ªc_gë_c⁄vîãd_size
(
ödex
, 
tu∂e
);

226 i‡(!*
hóp
) {

227 *
hóp
 = 
	`mem_hóp_¸óã
(

228 
size
 + (4 + 
REC_OFFS_HEADER_SIZE
 + 
	`dtu∂e_gë_n_fõlds
(
tu∂e
)) *

229  **
off£ts
);

232 
ªc
 = 
	`ªc_c⁄vît_dtu∂e_to_ªc
((
byã
 *)
	`mem_hóp_Æloc
(*
hóp
, 
size
), 
ödex
,

233 
tu∂e
);

235 *
off£ts
 = 
	`ªc_gë_off£ts
(
ªc
, 
ödex
, *off£ts, 
ULINT_UNDEFINED
, 
hóp
);

237 
	`ut_ad
(
	`cmp_dtu∂e_ªc
(
tu∂e
, 
ªc
, 
ödex
, *
off£ts
) == 0);

239 i‡(
	`buf_block_gë_∑ge_zù
(
curs‹
->
block
)) {

240 
ö£π_ªc
 = 
	`∑ge_cur_ö£π_ªc_zù
(
curs‹
, 
ödex
, 
ªc
, *
off£ts
, 
må
);

242 
ö£π_ªc
 =

243 
	`∑ge_cur_ö£π_ªc_low
(
curs‹
->
ªc
, 
ödex
,Ñec, *
off£ts
, 
må
);

246 #ifde‡
UNIV_DEBUG


247 i‡(
ö£π_ªc
 !
nuŒ±r
) {

248 i‡(
	`cmp_dtu∂e_ªc
(
tu∂e
, 
ö£π_ªc
, 
ödex
, *
off£ts
) != 0) {

249 
°d
::
˚º
 << "tu∂e=" << 
	`ªc_¥öãr
(
tu∂e
).
	`°r
(Ë<< std::
ídl
;

250 
°d
::
˚º
 << "ªc=" << 
	`ªc_¥öãr
(
ö£π_ªc
, *
off£ts
).
	`°r
()

251 << 
°d
::
ídl
;

254 
	`ut_ad
(!
ö£π_ªc
 || !
	`cmp_dtu∂e_ªc
(
tu∂e
, in£π_ªc, 
ödex
, *
off£ts
));

257  (
ö£π_ªc
);

258 
	}
}

269 
UNIV_INLINE


270 
ªc_t
 *
	$∑ge_cur_tu∂e_dúe˘_ö£π
(
∑ge_cur_t
 *
curs‹
, c⁄° 
dtu∂e_t
 *
tu∂e
,

271 
di˘_ödex_t
 *
ödex
, 
må_t
 *
må
) {

272 
ªc_t
 *
ªc
;

274 
	`ut_ad
(
ödex
->
èbÀ
->
	`is_öåösic
());

276 
ªc
 = 
	`∑ge_cur_dúe˘_ö£π_ªc_low
(
curs‹
->ªc, 
ödex
, 
tu∂e
, 
må
);

278  (
ªc
);

279 
	}
}

293 
UNIV_INLINE


294 
ªc_t
 *
	$∑ge_cur_ªc_ö£π
(

295 
∑ge_cur_t
 *
curs‹
,

296 c⁄° 
ªc_t
 *
ªc
,

297 
di˘_ödex_t
 *
ödex
,

298 
ulöt
 *
off£ts
,

299 
må_t
 *
må
)

301 i‡(
	`buf_block_gë_∑ge_zù
(
curs‹
->
block
)) {

302  (
	`∑ge_cur_ö£π_ªc_zù
(
curs‹
, 
ödex
, 
ªc
, 
off£ts
, 
må
));

304  (
	`∑ge_cur_ö£π_ªc_low
(
curs‹
->
ªc
, 
ödex
,Ñec, 
off£ts
, 
må
));

306 
	}
}

	@page0page.h

27 
	~<°ddef.h
>

28 
	~<sys/ty≥s.h
>

36 #i‚de‡
∑ge0∑ge_h


37 
	#∑ge0∑ge_h


	)

39 
	~"univ.i
"

41 
	~"buf0buf.h
"

42 
	~"d©a0d©a.h
"

43 
	~"di˘0di˘.h
"

44 
	~"fû0fû.h
"

45 
	~"f•0f•.h
"

46 
	~"må0må.h
"

47 
	~"∑ge0ty≥s.h
"

48 
	~"ªm0ªc.h
"

50 #ifde‡
UNIV_MATERIALIZE


51 #unde‡
UNIV_INLINE


52 
	#UNIV_INLINE


	)

59 
byã
 
	t∑ge_dú_¶Ÿ_t
;

60 
∑ge_dú_¶Ÿ_t
 
	t∑ge_dú_t
;

65 
	#PAGE_DIR
 
FIL_PAGE_DATA_END


	)

68 
	#PAGE_DIR_SLOT_SIZE
 2

	)

72 
	#PAGE_EMPTY_DIR_START
 (
PAGE_DIR
 + 2 * 
PAGE_DIR_SLOT_SIZE
)

	)

77 
	#PAGE_DIR_SLOT_MAX_N_OWNED
 8

	)

78 
	#PAGE_DIR_SLOT_MIN_N_OWNED
 4

	)

84 c⁄° 
byã
 
	göfimum_exåa
[] = {

90 c⁄° 
byã
 
	göfimum_d©a
[] = {

94 c⁄° 
byã
 
	gsu¥emum_exåa_d©a
[] = {

113 
UNIV_INLINE


114 
∑ge_t
 *
∑ge_Æign
(c⁄° *
±r
);

119 
UNIV_INLINE


120 
ulöt
 
∑ge_off£t
(c⁄° *
±r
);

123 
UNIV_INLINE


124 
åx_id_t
 
∑ge_gë_max_åx_id
(c⁄° 
∑ge_t
 *
∑ge
);

131 
∑ge_£t_max_åx_id
(
buf_block_t
 *
block
, 
∑ge_zù_des_t
 *
∑ge_zù
,

132 
åx_id_t
 
åx_id
, 
må_t
 *
må
);

141 
UNIV_INLINE


142 
∑ge_upd©e_max_åx_id
(
buf_block_t
 *
block
, 
∑ge_zù_des_t
 *
∑ge_zù
,

143 
åx_id_t
 
åx_id
, 
må_t
 *
må
);

148 
UNIV_INLINE


149 
node_£q_t
 
∑ge_gë_s¢_id
(c⁄° 
∑ge_t
 *
∑ge
);

157 
UNIV_INLINE


158 
∑ge_£t_s¢_id
(
buf_block_t
 *
block
, 
∑ge_zù_des_t
 *
∑ge_zù
,

159 
node_£q_t
 
s¢_id
, 
må_t
 *
må
);

164 
UNIV_INLINE


165 
ulöt
 
∑ge_hódî_gë_fõld
(c⁄° 
∑ge_t
 *
∑ge
, ulöà
fõld
);

173 
UNIV_INLINE


174 
∑ge_hódî_£t_fõld
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
fõld
,

175 
ulöt
 
vÆ
);

179 
UNIV_INLINE


180 
ulöt
 
	$∑ge_hódî_gë_offs
(c⁄° 
∑ge_t
 *
∑ge
,

181 
ulöt
 
fõld
)

182 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

185 
	#∑ge_hódî_gë_±r
(
∑ge
, 
fõld
) \

186 (
	`∑ge_hódî_gë_offs
(
∑ge
, 
fõld
) \

187 ? 
∑ge
 + 
	`∑ge_hódî_gë_offs
’age, 
fõld
) \

188 : 
NULL
)

	)

196 
UNIV_INLINE


197 
	`∑ge_hódî_£t_±r
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
fõld
,

198 c⁄° 
byã
 *
±r
);

199 #i‚de‡
UNIV_HOTBACKUP


207 
UNIV_INLINE


208 
	`∑ge_hódî_ª£t_œ°_ö£π
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
,

209 
må_t
 *
må
);

214 
UNIV_INLINE


215 
ulöt
 
	`∑ge_gë_öfimum_off£t
(

216 c⁄° 
∑ge_t
 *
∑ge
);

219 
UNIV_INLINE


220 
ulöt
 
	`∑ge_gë_su¥emum_off£t
(

221 c⁄° 
∑ge_t
 *
∑ge
);

222 
	#∑ge_gë_öfimum_ªc
(
∑ge
Ë(’ageË+ 
	`∑ge_gë_öfimum_off£t
’age))

	)

223 
	#∑ge_gë_su¥emum_ªc
(
∑ge
Ë(’ageË+ 
	`∑ge_gë_su¥emum_off£t
’age))

	)

228 c⁄° 
ªc_t
 *
	$∑ge_ªc_gë_¡h_c⁄°
(c⁄° 
∑ge_t
 *
∑ge
,

229 
ulöt
 
¡h
)

230 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

237 
UNIV_INLINE


238 
ªc_t
 *
	$∑ge_ªc_gë_¡h
(
∑ge_t
 *
∑ge
, 
ulöt
 
¡h
)

239 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

241 #i‚de‡
UNIV_HOTBACKUP


246 
UNIV_INLINE


247 
ªc_t
 *
	$∑ge_gë_middÀ_ªc
(
∑ge_t
 *
∑ge
)

248 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

252 
UNIV_INLINE


253 
∑ge_no_t
 
	`∑ge_gë_∑ge_no
(c⁄° 
∑ge_t
 *
∑ge
);

256 
UNIV_INLINE


257 
•a˚_id_t
 
	`∑ge_gë_•a˚_id
(c⁄° 
∑ge_t
 *
∑ge
);

261 
UNIV_INLINE


262 
∑ge_id_t
 
	`∑ge_gë_∑ge_id
(c⁄° 
∑ge_t
 *
∑ge
);

267 
UNIV_INLINE


268 
ulöt
 
	`∑ge_gë_n_ªcs
(c⁄° 
∑ge_t
 *
∑ge
);

273 
ulöt
 
	`∑ge_ªc_gë_n_ªcs_bef‹e
(

274 c⁄° 
ªc_t
 *
ªc
);

277 
UNIV_INLINE


278 
ulöt
 
	`∑ge_dú_gë_n_hóp
(c⁄° 
∑ge_t
 *
∑ge
);

287 
UNIV_INLINE


288 
	`∑ge_dú_£t_n_hóp
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
n_hóp
);

292 
UNIV_INLINE


293 
ulöt
 
	`∑ge_dú_gë_n_¶Ÿs
(c⁄° 
∑ge_t
 *
∑ge
);

300 
UNIV_INLINE


301 
	`∑ge_dú_£t_n_¶Ÿs
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
,

302 
ulöt
 
n_¶Ÿs
);

304 #ifde‡
UNIV_DEBUG


309 
UNIV_INLINE


310 
∑ge_dú_¶Ÿ_t
 *
	`∑ge_dú_gë_¡h_¶Ÿ
(c⁄° 
∑ge_t
 *
∑ge
, 
ulöt
 
n
);

312 
	#∑ge_dú_gë_¡h_¶Ÿ
(
∑ge
, 
n
) \

313 ((
∑ge
Ë+ (
UNIV_PAGE_SIZE
 - 
PAGE_DIR
 - (
n
 + 1Ë* 
PAGE_DIR_SLOT_SIZE
))

	)

318 
UNIV_INLINE


319 
iboﬁ
 
	`∑ge_ªc_check
(c⁄° 
ªc_t
 *
ªc
);

322 
UNIV_INLINE


323 c⁄° 
ªc_t
 *
	`∑ge_dú_¶Ÿ_gë_ªc
(

324 c⁄° 
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
);

329 
UNIV_INLINE


330 
	`∑ge_dú_¶Ÿ_£t_ªc
(
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
, 
ªc_t
 *
ªc
);

334 
UNIV_INLINE


335 
ulöt
 
	`∑ge_dú_¶Ÿ_gë_n_ow√d
(

336 c⁄° 
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
);

342 
UNIV_INLINE


343 
	`∑ge_dú_¶Ÿ_£t_n_ow√d
(
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
, 
∑ge_zù_des_t
 *
∑ge_zù
,

344 
ulöt
 
n
);

350 
UNIV_INLINE


351 
ulöt
 
	`∑ge_dú_ˇlc_ª£rved_•a˚
(ulöà
n_ªcs
);

354 
ulöt
 
	`∑ge_dú_föd_ow√r_¶Ÿ
(

355 c⁄° 
ªc_t
 *
ªc
);

359 
UNIV_INLINE


360 
ulöt
 
	`∑ge_is_comp
(c⁄° 
∑ge_t
 *
∑ge
);

363 
UNIV_INLINE


364 
ulöt
 
	`∑ge_ªc_is_comp
(c⁄° 
ªc_t
 *
ªc
);

367 
UNIV_INLINE


368 
ulöt
 
	`∑ge_ªc_gë_hóp_no
(c⁄° 
ªc_t
 *
ªc
);

371 
UNIV_INLINE


372 
boﬁ
 
	$∑ge_is_Àaf
(c⁄° 
∑ge_t
 *
∑ge
)

373 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

376 
UNIV_INLINE


377 
boﬁ
 
	$∑ge_is_em±y
(c⁄° 
∑ge_t
 *
∑ge
)

378 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

382 
UNIV_INLINE


383 
boﬁ
 
	$∑ge_is_roŸ
(c⁄° 
∑ge_t
 *
∑ge
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

386 
UNIV_INLINE


387 
boﬁ
 
	$∑ge_has_g¨bage
(c⁄° 
∑ge_t
 *
∑ge
)

388 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

394 
UNIV_INLINE


395 c⁄° 
ªc_t
 *
	`∑ge_ªc_gë_√xt_low
(c⁄°Ñec_à*
ªc
, 
ulöt
 
comp
);

399 
UNIV_INLINE


400 
ªc_t
 *
	`∑ge_ªc_gë_√xt
‘ec_à*
ªc
);

403 
UNIV_INLINE


404 c⁄° 
ªc_t
 *
	`∑ge_ªc_gë_√xt_c⁄°
(

405 c⁄° 
ªc_t
 *
ªc
);

410 
UNIV_INLINE


411 c⁄° 
ªc_t
 *
	`∑ge_ªc_gë_√xt_n⁄_dñ_m¨ked
(

412 c⁄° 
ªc_t
 *
ªc
);

417 
UNIV_INLINE


418 
	`∑ge_ªc_£t_√xt
(
ªc_t
 *
ªc
, c⁄°Ñec_à*
√xt
);

422 
UNIV_INLINE


423 c⁄° 
ªc_t
 *
	`∑ge_ªc_gë_¥ev_c⁄°
(

424 c⁄° 
ªc_t
 *
ªc
);

428 
UNIV_INLINE


429 
ªc_t
 *
	`∑ge_ªc_gë_¥ev
‘ec_à*
ªc
);

434 
UNIV_INLINE


435 
iboﬁ
 
	`∑ge_ªc_is_u£r_ªc_low
(
ulöt
 
off£t
);

440 
UNIV_INLINE


441 
iboﬁ
 
	`∑ge_ªc_is_su¥emum_low
(
ulöt
 
off£t
);

446 
UNIV_INLINE


447 
iboﬁ
 
	`∑ge_ªc_is_öfimum_low
(
ulöt
 
off£t
);

451 
UNIV_INLINE


452 
iboﬁ
 
	$∑ge_ªc_is_u£r_ªc
(c⁄° 
ªc_t
 *
ªc
)

453 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

456 
UNIV_INLINE


457 
iboﬁ
 
	$∑ge_ªc_is_su¥emum
(c⁄° 
ªc_t
 *
ªc
)

458 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

462 
UNIV_INLINE


463 
iboﬁ
 
	$∑ge_ªc_is_öfimum
(c⁄° 
ªc_t
 *
ªc
)

464 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

468 
UNIV_INLINE


469 
boﬁ
 
	$∑ge_ªc_is_fú°
(c⁄° 
ªc_t
 *
ªc
,

470 c⁄° 
∑ge_t
 *
∑ge
)

471 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

475 
UNIV_INLINE


476 
boﬁ
 
	$∑ge_ªc_is_£c⁄d
(c⁄° 
ªc_t
 *
ªc
,

477 c⁄° 
∑ge_t
 *
∑ge
)

478 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

482 
UNIV_INLINE


483 
boﬁ
 
	$∑ge_ªc_is_œ°
(c⁄° 
ªc_t
 *
ªc
,

484 c⁄° 
∑ge_t
 *
∑ge
)

485 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

493 
UNIV_INLINE


494 
boﬁ
 
	$∑ge_ªc_di°™˚_is_©_mo°
(c⁄° 
ªc_t
 *
À·_ªc
, c⁄°Ñec_à*
right_ªc
,

495 
ulöt
 
vÆ
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

499 
UNIV_INLINE


500 
boﬁ
 
	$∑ge_ªc_is_£c⁄d_œ°
(c⁄° 
ªc_t
 *
ªc
,

501 c⁄° 
∑ge_t
 *
∑ge
)

502 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

506 
UNIV_INLINE


507 
ªc_t
 *
	`∑ge_ªc_föd_ow√r_ªc
‘ec_à*
ªc
);

508 #i‚de‡
UNIV_HOTBACKUP


515 
UNIV_INLINE


516 
	`∑ge_ªc_wrôe_fõld
(
ªc_t
 *
ªc
, 
ulöt
 
i
, ulöà
vÆ
, 
må_t
 *
må
);

524 
UNIV_INLINE


525 
ulöt
 
	`∑ge_gë_max_ö£π_size
(c⁄° 
∑ge_t
 *
∑ge
, ulöà
n_ªcs
);

532 
UNIV_INLINE


533 
ulöt
 
	`∑ge_gë_max_ö£π_size_a·î_ª‹g™ize
(c⁄° 
∑ge_t
 *
∑ge
,

534 
ulöt
 
n_ªcs
);

539 
UNIV_INLINE


540 
ulöt
 
	`∑ge_gë_‰ì_•a˚_of_em±y
(ulöà
comp
);

545 
UNIV_INLINE


546 
ulöt
 
	`∑ge_ªc_gë_ba£_exåa_size
(

547 c⁄° 
ªc_t
 *
ªc
);

551 
UNIV_INLINE


552 
ulöt
 
	`∑ge_gë_d©a_size
(c⁄° 
∑ge_t
 *
∑ge
);

562 
UNIV_INLINE


563 
	`∑ge_mem_Æloc_‰ì
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
,

564 
ªc_t
 *
√xt_ªc
, 
ulöt
 
√ed
);

568 
byã
 *
	`∑ge_mem_Æloc_hóp
(

569 
∑ge_t
 *
∑ge
,

570 
∑ge_zù_des_t
 *
∑ge_zù
,

573 
ulöt
 
√ed
,

574 
ulöt
 *
hóp_no
);

584 
UNIV_INLINE


585 
	`∑ge_mem_‰ì
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ªc_t
 *
ªc
,

586 c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
ulöt
 *
off£ts
);

594 
∑ge_t
 *
	`∑ge_¸óã
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
ulöt
 
comp
,

595 
∑ge_ty≥_t
 
∑ge_ty≥
);

607 
∑ge_t
 *
	`∑ge_¸óã_zù
(
buf_block_t
 *
block
, 
di˘_ödex_t
 *
ödex
, 
ulöt
 
Àvñ
,

608 
åx_id_t
 
max_åx_id
, 
må_t
 *
må
, 
∑ge_ty≥_t
 
∑ge_ty≥
);

614 
	`∑ge_¸óã_em±y
(
buf_block_t
 *
block
, 
di˘_ödex_t
 *
ödex
, 
må_t
 *
må
);

623 
	`∑ge_c›y_ªc_li°_íd_no_locks
(

624 
buf_block_t
 *
√w_block
,

625 
buf_block_t
 *
block
,

626 
ªc_t
 *
ªc
,

627 
di˘_ödex_t
 *
ödex
,

628 
må_t
 *
må
);

640 
ªc_t
 *
	`∑ge_c›y_ªc_li°_íd
(

641 
buf_block_t
 *
√w_block
,

642 
buf_block_t
 *
block
,

643 
ªc_t
 *
ªc
,

644 
di˘_ödex_t
 *
ödex
,

645 
må_t
 *
må
);

657 
ªc_t
 *
	`∑ge_c›y_ªc_li°_°¨t
(

658 
buf_block_t
 *
√w_block
,

659 
buf_block_t
 *
block
,

660 
ªc_t
 *
ªc
,

661 
di˘_ödex_t
 *
ödex
,

662 
må_t
 *
må
);

665 
	`∑ge_dñëe_ªc_li°_íd
(

666 
ªc_t
 *
ªc
,

667 
buf_block_t
 *
block
,

668 
di˘_ödex_t
 *
ödex
,

669 
ulöt
 
n_ªcs
,

671 
ulöt
 
size
,

674 
må_t
 *
må
);

677 
	`∑ge_dñëe_ªc_li°_°¨t
(

678 
ªc_t
 *
ªc
,

679 
buf_block_t
 *
block
,

680 
di˘_ödex_t
 *
ödex
,

681 
må_t
 *
må
);

692 
iboﬁ
 
	`∑ge_move_ªc_li°_íd
(

693 
buf_block_t
 *
√w_block
,

694 
buf_block_t
 *
block
,

695 
ªc_t
 *
•lô_ªc
,

696 
di˘_ödex_t
 *
ödex
,

697 
må_t
 *
må
);

707 
iboﬁ
 
	`∑ge_move_ªc_li°_°¨t
(

708 
buf_block_t
 *
√w_block
,

709 
buf_block_t
 *
block
,

710 
ªc_t
 *
•lô_ªc
,

711 
di˘_ödex_t
 *
ödex
,

712 
må_t
 *
må
);

719 
	`∑ge_dú_•lô_¶Ÿ
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
¶Ÿ_no
);

727 
	`∑ge_dú_bÆ™˚_¶Ÿ
(
∑ge_t
 *
∑ge
, 
∑ge_zù_des_t
 *
∑ge_zù
,

728 
ulöt
 
¶Ÿ_no
);

732 
byã
 *
	`∑ge_∑r£_dñëe_ªc_li°
(

733 
mlog_id_t
 
ty≥
,

737 
byã
 *
±r
,

738 
byã
 *
íd_±r
,

739 
buf_block_t
 *
block
,

740 
di˘_ödex_t
 *
ödex
,

741 
må_t
 *
må
);

748 
	`∑ge_∑r£_¸óã
(
buf_block_t
 *
block
, 
ulöt
 
comp
, 
∑ge_ty≥_t
 
∑ge_ty≥
);

750 #i‚de‡
UNIV_HOTBACKUP


755 
	`∑ge_ªc_¥öt
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
);

756 #ifde‡
UNIV_BTR_PRINT


759 
	`∑ge_dú_¥öt
(
∑ge_t
 *
∑ge
,

760 
ulöt
 
¥_n
);

763 
	`∑ge_¥öt_li°
(

764 
buf_block_t
 *
block
,

765 
di˘_ödex_t
 *
ödex
,

766 
ulöt
 
¥_n
);

768 
	`∑ge_hódî_¥öt
(c⁄° 
∑ge_t
 *
∑ge
);

771 
	`∑ge_¥öt
(
buf_block_t
 *
block
,

772 
di˘_ödex_t
 *
ödex
,

773 
ulöt
 
dn
,

775 
ulöt
 
∫
);

783 
iboﬁ
 
	`∑ge_ªc_vÆid©e
(

784 c⁄° 
ªc_t
 *
ªc
,

785 c⁄° 
ulöt
 *
off£ts
);

786 #ifde‡
UNIV_DEBUG


790 
	`∑ge_check_dú
(c⁄° 
∑ge_t
 *
∑ge
);

796 
iboﬁ
 
	`∑ge_sim∂e_vÆid©e_ﬁd
(

797 c⁄° 
∑ge_t
 *
∑ge
);

802 
iboﬁ
 
	`∑ge_sim∂e_vÆid©e_√w
(

803 c⁄° 
∑ge_t
 *
∑ge
);

806 
iboﬁ
 
	`∑ge_vÆid©e
(

807 c⁄° 
∑ge_t
 *
∑ge
,

808 
di˘_ödex_t
 *
ödex
);

812 c⁄° 
ªc_t
 *
	`∑ge_föd_ªc_wôh_hóp_no
(

813 c⁄° 
∑ge_t
 *
∑ge
,

814 
ulöt
 
hóp_no
);

819 c⁄° 
ªc_t
 *
	`∑ge_föd_ªc_œ°_nŸ_dñëed
(c⁄° 
∑ge_t
 *
∑ge
);

826 
	`∑ge_w¨n_°ri˘_checksum
(
§v_checksum_Æg‹ôhm_t
 
cuº_Ægo
,

827 
§v_checksum_Æg‹ôhm_t
 
∑ge_checksum
,

828 c⁄° 
∑ge_id_t
 &
∑ge_id
);

835 
ölöe
 
ul⁄g
 
	`∑ge_size_vÆid©e
(ul⁄g 
∑ge_size
);

842 
boﬁ
 
	`∑ge_is_•©ül_n⁄_Àaf
(c⁄° 
ªc_t
 *
ªc
, 
di˘_ödex_t
 *
ödex
);

844 #ifde‡
UNIV_MATERIALIZE


845 #unde‡
UNIV_INLINE


846 
	#UNIV_INLINE
 
UNIV_INLINE_ORIGINAL


	)

849 
	~"∑ge0∑ge.ic
"

	@page0page.ic

33 
	~"mach0d©a.h
"

34 #ifde‡
UNIV_DEBUG


35 
	~"log0ªcv.h
"

37 #i‚de‡
UNIV_HOTBACKUP


38 
	~"ªm0cmp.h
"

40 
	~"må0log.h
"

41 
	~"∑ge0zù.h
"

43 #ifde‡
UNIV_MATERIALIZE


44 #unde‡
UNIV_INLINE


45 
	#UNIV_INLINE


	)

50 
UNIV_INLINE


51 
∑ge_t
 *
	$∑ge_Æign
(c⁄° *
±r
)

53  ((
∑ge_t
 *)
	`ut_Æign_down
(
±r
, 
UNIV_PAGE_SIZE
));

54 
	}
}

57 
UNIV_INLINE


58 
ulöt
 
	$∑ge_off£t
(c⁄° *
±r
)

60  (
	`ut_Æign_off£t
(
±r
, 
UNIV_PAGE_SIZE
));

61 
	}
}

63 
UNIV_INLINE


64 
åx_id_t
 
	$∑ge_gë_max_åx_id
(c⁄° 
∑ge_t
 *
∑ge
)

66 
	`ut_ad
(
∑ge
);

68  (
	`mach_ªad_‰om_8
(
∑ge
 + 
PAGE_HEADER
 + 
PAGE_MAX_TRX_ID
));

69 
	}
}

73 
UNIV_INLINE


74 
	$∑ge_upd©e_max_åx_id
(

75 
buf_block_t
 *
block
,

76 
∑ge_zù_des_t
 *
∑ge_zù
,

78 
åx_id_t
 
åx_id
,

79 
må_t
 *
må
)

81 
	`ut_ad
(
block
);

82 #i‚de‡
UNIV_HOTBACKUP


83 
	`ut_ad
(
	`må_memo_c⁄èös
(
må
, 
block
, 
MTR_MEMO_PAGE_X_FIX
));

91 
	`ut_ad
(
åx_id
 || 
	`ªcv_ªcovîy_is_⁄
());

92 
	`ut_ad
(
	`∑ge_is_Àaf
(
	`buf_block_gë_‰ame
(
block
)));

94 i‡(
	`∑ge_gë_max_åx_id
(
	`buf_block_gë_‰ame
(
block
)Ë< 
åx_id
) {

95 
	`∑ge_£t_max_åx_id
(
block
, 
∑ge_zù
, 
åx_id
, 
må
);

97 
	}
}

102 
UNIV_INLINE


103 
node_£q_t
 
	$∑ge_gë_s¢_id
(c⁄° 
∑ge_t
 *
∑ge
) {

104 
	`ut_ad
(
∑ge
);

106  (
°©ic_ˇ°
<
node_£q_t
>(

107 
	`mach_ªad_‰om_8
(
∑ge
 + 
FIL_RTREE_SPLIT_SEQ_NUM
)));

108 
	}
}

116 
UNIV_INLINE


117 
	$∑ge_£t_s¢_id
(
buf_block_t
 *
block
, 
∑ge_zù_des_t
 *
∑ge_zù
,

118 
node_£q_t
 
s¢_id
, 
må_t
 *
må
) {

119 
∑ge_t
 *
∑ge
 = 
	`buf_block_gë_‰ame
(
block
);

120 #i‚de‡
UNIV_HOTBACKUP


121 
	`ut_ad
(!
må
 || 
	`må_memo_c⁄èös
(må, 
block
, 
MTR_MEMO_PAGE_SX_FIX
) ||

122 
	`må_memo_c⁄èös
(
må
, 
block
, 
MTR_MEMO_PAGE_X_FIX
));

125 i‡(
∑ge_zù
) {

126 
	`mach_wrôe_to_8
(
∑ge
 + 
FIL_RTREE_SPLIT_SEQ_NUM
, 
s¢_id
);

127 
	`∑ge_zù_wrôe_hódî
(
∑ge_zù
, 
∑ge
 + 
FIL_RTREE_SPLIT_SEQ_NUM
, 8, 
må
);

128 #i‚de‡
UNIV_HOTBACKUP


129 } i‡(
må
) {

130 
	`mlog_wrôe_uŒ
(
∑ge
 + 
FIL_RTREE_SPLIT_SEQ_NUM
, 
s¢_id
, 
må
);

133 
	`mach_wrôe_to_8
(
∑ge
 + 
FIL_RTREE_SPLIT_SEQ_NUM
, 
s¢_id
);

135 
	}
}

138 
UNIV_INLINE


139 
	$∑ge_hódî_£t_fõld
(

140 
∑ge_t
 *
∑ge
,

141 
∑ge_zù_des_t
 *
∑ge_zù
,

143 
ulöt
 
fõld
,

144 
ulöt
 
vÆ
)

146 
	`ut_ad
(
∑ge
);

147 
	`ut_ad
(
fõld
 <
PAGE_N_RECS
);

148 
	`ut_ad
(
fõld
 =
PAGE_N_HEAP
 || 
vÆ
 < 
UNIV_PAGE_SIZE
);

149 
	`ut_ad
(
fõld
 !
PAGE_N_HEAP
 || (
vÆ
 & 0x7fffË< 
UNIV_PAGE_SIZE
);

151 
	`mach_wrôe_to_2
(
∑ge
 + 
PAGE_HEADER
 + 
fõld
, 
vÆ
);

152 i‡(
∑ge_zù
) {

153 
	`∑ge_zù_wrôe_hódî
(
∑ge_zù
, 
∑ge
 + 
PAGE_HEADER
 + 
fõld
, 2, 
nuŒ±r
);

155 
	}
}

159 
UNIV_INLINE


160 
ulöt
 
	$∑ge_hódî_gë_offs
(c⁄° 
∑ge_t
 *
∑ge
,

161 
ulöt
 
fõld
)

163 
ulöt
 
offs
;

165 
	`ut_ad
(
∑ge
);

166 
	`ut_ad
((
fõld
 =
PAGE_FREE
Ë|| (fõld =
PAGE_LAST_INSERT
) ||

167 (
fõld
 =
PAGE_HEAP_TOP
));

169 
offs
 = 
	`∑ge_hódî_gë_fõld
(
∑ge
, 
fõld
);

171 
	`ut_ad
((
fõld
 !
PAGE_HEAP_TOP
Ë|| 
offs
);

173  (
offs
);

174 
	}
}

177 
UNIV_INLINE


178 
	$∑ge_hódî_£t_±r
(

179 
∑ge_t
 *
∑ge
,

180 
∑ge_zù_des_t
 *
∑ge_zù
,

182 
ulöt
 
fõld
,

183 c⁄° 
byã
 *
±r
)

185 
ulöt
 
offs
;

187 
	`ut_ad
(
∑ge
);

188 
	`ut_ad
((
fõld
 =
PAGE_FREE
Ë|| (fõld =
PAGE_LAST_INSERT
) ||

189 (
fõld
 =
PAGE_HEAP_TOP
));

191 i‡(
±r
 =
nuŒ±r
) {

192 
offs
 = 0;

194 
offs
 = 
±r
 - 
∑ge
;

197 
	`ut_ad
((
fõld
 !
PAGE_HEAP_TOP
Ë|| 
offs
);

199 
	`∑ge_hódî_£t_fõld
(
∑ge
, 
∑ge_zù
, 
fõld
, 
offs
);

200 
	}
}

202 #i‚de‡
UNIV_HOTBACKUP


205 
UNIV_INLINE


206 
	$∑ge_hódî_ª£t_œ°_ö£π
(

207 
∑ge_t
 *
∑ge
,

208 
∑ge_zù_des_t
 *
∑ge_zù
,

210 
må_t
 *
må
)

212 
	`ut_ad
(
∑ge
 !
nuŒ±r
);

213 
	`ut_ad
(
må
 !
nuŒ±r
);

215 i‡(
∑ge_zù
) {

216 
	`mach_wrôe_to_2
(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_LAST_INSERT
), 0);

217 
	`∑ge_zù_wrôe_hódî
(
∑ge_zù
, 
∑ge
 + (
PAGE_HEADER
 + 
PAGE_LAST_INSERT
), 2,

218 
må
);

220 
	`mlog_wrôe_ulöt
(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_LAST_INSERT
), 0, 
MLOG_2BYTES
,

221 
må
);

223 
	}
}

229 
UNIV_INLINE


230 
ulöt
 
	$∑ge_is_comp
(c⁄° 
∑ge_t
 *
∑ge
)

232  (
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_N_HEAP
) & 0x8000);

233 
	}
}

237 
UNIV_INLINE


238 
ulöt
 
	$∑ge_ªc_is_comp
(c⁄° 
ªc_t
 *
ªc
)

240  (
	`∑ge_is_comp
(
	`∑ge_Æign
(
ªc
)));

241 
	}
}

245 
UNIV_INLINE


246 
ulöt
 
	$∑ge_ªc_gë_hóp_no
(c⁄° 
ªc_t
 *
ªc
)

248 i‡(
	`∑ge_ªc_is_comp
(
ªc
)) {

249  (
	`ªc_gë_hóp_no_√w
(
ªc
));

251  (
	`ªc_gë_hóp_no_ﬁd
(
ªc
));

253 
	}
}

257 
UNIV_INLINE


258 
boﬁ
 
	$∑ge_is_Àaf
(c⁄° 
∑ge_t
 *
∑ge
)

260  (!*(c⁄° 
uöt16
 *)(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_LEVEL
)));

261 
	}
}

265 
UNIV_INLINE


266 
boﬁ
 
	$∑ge_is_em±y
(c⁄° 
∑ge_t
 *
∑ge
)

268  (!*(c⁄° 
uöt16
 *)(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_N_RECS
)));

269 
	}
}

274 
UNIV_INLINE


275 
boﬁ
 
	$∑ge_is_roŸ
(c⁄° 
∑ge_t
 *
∑ge
) {

276 #i‡
FIL_PAGE_PREV
 % 8

277 #îr‹ 
FIL_PAGE_PREV
 
mu°
 
be
 64-
bô
 
Æig√d


279 #i‡
FIL_PAGE_NEXT
 !
FIL_PAGE_PREV
 + 4

280 #îr‹ 
FIL_PAGE_NEXT
 
mu°
 
be
 
adja˚¡
 
to
 
FIL_PAGE_PREV


283 
	`°©ic_as£π
(
FIL_NULL
 == 0xffffffff, "FIL_NULL != 0xffffffff");

288  (
	`fû_∑ge_ödex_∑ge_check
(
∑ge
) &&

289 *
ªöãΩªt_ˇ°
<c⁄° 
ib_uöt64_t
 *>(
∑ge
 + 
FIL_PAGE_PREV
) ==

290 
IB_UINT64_MAX
);

291 
	}
}

295 
UNIV_INLINE


296 
boﬁ
 
	$∑ge_has_g¨bage
(c⁄° 
∑ge_t
 *
∑ge
)

298  (!!*(c⁄° 
uöt16
 *)(
∑ge
 + (
PAGE_HEADER
 + 
PAGE_GARBAGE
)));

299 
	}
}

303 
UNIV_INLINE


304 
ulöt
 
	$∑ge_gë_öfimum_off£t
(

305 c⁄° 
∑ge_t
 *
∑ge
)

307 
	`ut_ad
(
∑ge
);

308 
	`ut_ad
(!
	`∑ge_off£t
(
∑ge
));

310 i‡(
	`∑ge_is_comp
(
∑ge
)) {

311  (
PAGE_NEW_INFIMUM
);

313  (
PAGE_OLD_INFIMUM
);

315 
	}
}

319 
UNIV_INLINE


320 
ulöt
 
	$∑ge_gë_su¥emum_off£t
(

321 c⁄° 
∑ge_t
 *
∑ge
)

323 
	`ut_ad
(
∑ge
);

324 
	`ut_ad
(!
	`∑ge_off£t
(
∑ge
));

326 i‡(
	`∑ge_is_comp
(
∑ge
)) {

327  (
PAGE_NEW_SUPREMUM
);

329  (
PAGE_OLD_SUPREMUM
);

331 
	}
}

335 
UNIV_INLINE


336 
iboﬁ
 
	$∑ge_ªc_is_u£r_ªc_low
(
ulöt
 
off£t
)

338 
	`ut_ad
(
off£t
 >
PAGE_NEW_INFIMUM
);

340 
	`°©ic_as£π
(
PAGE_OLD_INFIMUM
 >
PAGE_NEW_INFIMUM
,

343 
	`°©ic_as£π
(
PAGE_OLD_SUPREMUM
 >
PAGE_NEW_SUPREMUM
,

346 
	`°©ic_as£π
(
PAGE_NEW_INFIMUM
 <
PAGE_OLD_SUPREMUM
,

349 
	`°©ic_as£π
(
PAGE_OLD_INFIMUM
 <
PAGE_NEW_SUPREMUM
,

352 
	`°©ic_as£π
(
PAGE_NEW_SUPREMUM
 <
PAGE_OLD_SUPREMUM_END
,

355 
	`°©ic_as£π
(
PAGE_OLD_SUPREMUM
 <
PAGE_NEW_SUPREMUM_END
,

358 
	`ut_ad
(
off£t
 <
UNIV_PAGE_SIZE
 - 
PAGE_EMPTY_DIR_START
);

360  (
off£t
 !
PAGE_NEW_SUPREMUM
 && off£à!
PAGE_NEW_INFIMUM
 &&

361 
off£t
 !
PAGE_OLD_INFIMUM
 && off£à!
PAGE_OLD_SUPREMUM
);

362 
	}
}

366 
UNIV_INLINE


367 
iboﬁ
 
	$∑ge_ªc_is_su¥emum_low
(
ulöt
 
off£t
)

369 
	`ut_ad
(
off£t
 >
PAGE_NEW_INFIMUM
);

370 
	`ut_ad
(
off£t
 <
UNIV_PAGE_SIZE
 - 
PAGE_EMPTY_DIR_START
);

372  (
off£t
 =
PAGE_NEW_SUPREMUM
 || off£à=
PAGE_OLD_SUPREMUM
);

373 
	}
}

377 
UNIV_INLINE


378 
iboﬁ
 
	$∑ge_ªc_is_öfimum_low
(
ulöt
 
off£t
)

380 
	`ut_ad
(
off£t
 >
PAGE_NEW_INFIMUM
);

381 
	`ut_ad
(
off£t
 <
UNIV_PAGE_SIZE
 - 
PAGE_EMPTY_DIR_START
);

383  (
off£t
 =
PAGE_NEW_INFIMUM
 || off£à=
PAGE_OLD_INFIMUM
);

384 
	}
}

388 
UNIV_INLINE


389 
iboﬁ
 
	$∑ge_ªc_is_u£r_ªc
(c⁄° 
ªc_t
 *
ªc
)

391 
	`ut_ad
(
	`∑ge_ªc_check
(
ªc
));

393  (
	`∑ge_ªc_is_u£r_ªc_low
(
	`∑ge_off£t
(
ªc
)));

394 
	}
}

398 
UNIV_INLINE


399 
iboﬁ
 
	$∑ge_ªc_is_su¥emum
(c⁄° 
ªc_t
 *
ªc
)

401 
	`ut_ad
(
	`∑ge_ªc_check
(
ªc
));

403  (
	`∑ge_ªc_is_su¥emum_low
(
	`∑ge_off£t
(
ªc
)));

404 
	}
}

408 
UNIV_INLINE


409 
iboﬁ
 
	$∑ge_ªc_is_öfimum
(c⁄° 
ªc_t
 *
ªc
)

411 
	`ut_ad
(
	`∑ge_ªc_check
(
ªc
));

413  (
	`∑ge_ªc_is_öfimum_low
(
	`∑ge_off£t
(
ªc
)));

414 
	}
}

418 
UNIV_INLINE


419 
boﬁ
 
	$∑ge_ªc_is_fú°
(c⁄° 
ªc_t
 *
ªc
,

420 c⁄° 
∑ge_t
 *
∑ge
)

422 
	`ut_ad
(
	`∑ge_gë_n_ªcs
(
∑ge
) > 0);

424  (
	`∑ge_ªc_gë_√xt_c⁄°
(
	`∑ge_gë_öfimum_ªc
(
∑ge
)Ë=
ªc
);

425 
	}
}

429 
UNIV_INLINE


430 
boﬁ
 
	$∑ge_ªc_is_£c⁄d
(c⁄° 
ªc_t
 *
ªc
,

431 c⁄° 
∑ge_t
 *
∑ge
)

433 
	`ut_ad
(
	`∑ge_gë_n_ªcs
(
∑ge
) > 1);

435  (
	`∑ge_ªc_gë_√xt_c⁄°
(

436 
	`∑ge_ªc_gë_√xt_c⁄°
(
	`∑ge_gë_öfimum_ªc
(
∑ge
))Ë=
ªc
);

437 
	}
}

441 
UNIV_INLINE


442 
boﬁ
 
	$∑ge_ªc_is_œ°
(c⁄° 
ªc_t
 *
ªc
,

443 c⁄° 
∑ge_t
 *
∑ge
)

445 
	`ut_ad
(
	`∑ge_gë_n_ªcs
(
∑ge
) > 0);

447  (
	`∑ge_ªc_gë_√xt_c⁄°
(
ªc
Ë=
	`∑ge_gë_su¥emum_ªc
(
∑ge
));

448 
	}
}

450 
UNIV_INLINE


451 
boﬁ
 
	$∑ge_ªc_di°™˚_is_©_mo°
(c⁄° 
ªc_t
 *
À·_ªc
, c⁄°Ñec_à*
right_ªc
,

452 
ulöt
 
vÆ
) {

453 
ulöt
 
i
 = 0; i <
vÆ
; i++) {

454 i‡(
À·_ªc
 =
right_ªc
) {

455  (
åue
);

457 
À·_ªc
 = 
	`∑ge_ªc_gë_√xt_c⁄°
(left_rec);

459  (
Ál£
);

460 
	}
}

464 
UNIV_INLINE


465 
boﬁ
 
	$∑ge_ªc_is_£c⁄d_œ°
(c⁄° 
ªc_t
 *
ªc
,

466 c⁄° 
∑ge_t
 *
∑ge
)

468 
	`ut_ad
(
	`∑ge_gë_n_ªcs
(
∑ge
) > 1);

469 
	`ut_ad
(!
	`∑ge_ªc_is_œ°
(
ªc
, 
∑ge
));

471  (
	`∑ge_ªc_gë_√xt_c⁄°
’age_ªc_gë_√xt_c⁄°(
ªc
)) ==

472 
	`∑ge_gë_su¥emum_ªc
(
∑ge
));

473 
	}
}

478 
UNIV_INLINE


479 
ªc_t
 *
	$∑ge_ªc_gë_¡h
(
∑ge_t
 *
∑ge
,

480 
ulöt
 
¡h
)

482  ((
ªc_t
 *)
	`∑ge_ªc_gë_¡h_c⁄°
(
∑ge
, 
¡h
));

483 
	}
}

485 #i‚de‡
UNIV_HOTBACKUP


490 
UNIV_INLINE


491 
ªc_t
 *
	$∑ge_gë_middÀ_ªc
(
∑ge_t
 *
∑ge
)

493 
ulöt
 
middÀ
 = (
	`∑ge_gë_n_ªcs
(
∑ge
Ë+ 
PAGE_HEAP_NO_USER_LOW
) / 2;

495  (
	`∑ge_ªc_gë_¡h
(
∑ge
, 
middÀ
));

496 
	}
}

501 
UNIV_INLINE


502 
∑ge_no_t
 
	$∑ge_gë_∑ge_no
(c⁄° 
∑ge_t
 *
∑ge
)

504 
	`ut_ad
(
∑ge
 =
	`∑ge_Æign
((
∑ge_t
 *)page));

505  (
	`mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_OFFSET
));

506 
	}
}

510 
UNIV_INLINE


511 
•a˚_id_t
 
	$∑ge_gë_•a˚_id
(c⁄° 
∑ge_t
 *
∑ge
)

513 
	`ut_ad
(
∑ge
 =
	`∑ge_Æign
((
∑ge_t
 *)page));

514  (
	`mach_ªad_‰om_4
(
∑ge
 + 
FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID
));

515 
	}
}

517 
UNIV_INLINE


518 
∑ge_id_t
 
	$∑ge_gë_∑ge_id
(c⁄° 
∑ge_t
 *
∑ge
) {

519  
∑ge_id_t
{
	`∑ge_gë_•a˚_id
(
∑ge
), 
	`∑ge_gë_∑ge_no
(page)};

520 
	}
}

525 
UNIV_INLINE


526 
ulöt
 
	$∑ge_gë_n_ªcs
(c⁄° 
∑ge_t
 *
∑ge
)

528  (
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_N_RECS
));

529 
	}
}

533 
UNIV_INLINE


534 
ulöt
 
	$∑ge_dú_gë_n_¶Ÿs
(c⁄° 
∑ge_t
 *
∑ge
)

536  (
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_N_DIR_SLOTS
));

537 
	}
}

539 
UNIV_INLINE


540 
	$∑ge_dú_£t_n_¶Ÿs
(

541 
∑ge_t
 *
∑ge
,

542 
∑ge_zù_des_t
 *
∑ge_zù
,

544 
ulöt
 
n_¶Ÿs
)

546 
	`∑ge_hódî_£t_fõld
(
∑ge
, 
∑ge_zù
, 
PAGE_N_DIR_SLOTS
, 
n_¶Ÿs
);

547 
	}
}

550 
UNIV_INLINE


551 
	$∑ge_dú_£t_n_hóp
(

552 
∑ge_t
 *
∑ge
,

553 
∑ge_zù_des_t
 *
∑ge_zù
,

558 
ulöt
 
n_hóp
)

560 
	`ut_ad
(
n_hóp
 < 0x8000);

561 
	`ut_ad
(!
∑ge_zù
 ||

562 
n_hóp
 =(
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_N_HEAP
) & 0x7fff) + 1);

564 
	`∑ge_hódî_£t_fõld
(

565 
∑ge
, 
∑ge_zù
, 
PAGE_N_HEAP
,

566 
n_hóp
 | (0x8000 & 
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_N_HEAP
)));

567 
	}
}

569 #ifde‡
UNIV_DEBUG


572 
UNIV_INLINE


573 
∑ge_dú_¶Ÿ_t
 *
	$∑ge_dú_gë_¡h_¶Ÿ
(

574 c⁄° 
∑ge_t
 *
∑ge
,

575 
ulöt
 
n
)

577 
	`ut_ad
(
	`∑ge_dú_gë_n_¶Ÿs
(
∑ge
Ë> 
n
);

579  ((
∑ge_dú_¶Ÿ_t
 *)
∑ge
 + 
UNIV_PAGE_SIZE
 - 
PAGE_DIR
 -

580 (
n
 + 1Ë* 
PAGE_DIR_SLOT_SIZE
);

581 
	}
}

586 
UNIV_INLINE


587 
iboﬁ
 
	$∑ge_ªc_check
(c⁄° 
ªc_t
 *
ªc
)

589 c⁄° 
∑ge_t
 *
∑ge
 = 
	`∑ge_Æign
(
ªc
);

591 
	`ut_a
(
ªc
);

593 
	`ut_a
(
	`∑ge_off£t
(
ªc
Ë<
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_HEAP_TOP
));

594 
	`ut_a
(
	`∑ge_off£t
(
ªc
Ë>
PAGE_DATA
);

596  (
TRUE
);

597 
	}
}

601 
UNIV_INLINE


602 c⁄° 
ªc_t
 *
	$∑ge_dú_¶Ÿ_gë_ªc
(

603 c⁄° 
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
)

605  (
	`∑ge_Æign
(
¶Ÿ
Ë+ 
	`mach_ªad_‰om_2
(slot));

606 
	}
}

609 
UNIV_INLINE


610 
	$∑ge_dú_¶Ÿ_£t_ªc
(
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
,

611 
ªc_t
 *
ªc
)

613 
	`ut_ad
(
	`∑ge_ªc_check
(
ªc
));

615 
	`mach_wrôe_to_2
(
¶Ÿ
, 
	`∑ge_off£t
(
ªc
));

616 
	}
}

620 
UNIV_INLINE


621 
ulöt
 
	$∑ge_dú_¶Ÿ_gë_n_ow√d
(

622 c⁄° 
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
)

624 c⁄° 
ªc_t
 *
ªc
 = 
	`∑ge_dú_¶Ÿ_gë_ªc
(
¶Ÿ
);

625 i‡(
	`∑ge_ªc_is_comp
(
¶Ÿ
)) {

626  (
	`ªc_gë_n_ow√d_√w
(
ªc
));

628  (
	`ªc_gë_n_ow√d_ﬁd
(
ªc
));

630 
	}
}

633 
UNIV_INLINE


634 
	$∑ge_dú_¶Ÿ_£t_n_ow√d
(

635 
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
,

636 
∑ge_zù_des_t
 *
∑ge_zù
,

637 
ulöt
 
n
)

639 
ªc_t
 *
ªc
 = (ªc_à*)
	`∑ge_dú_¶Ÿ_gë_ªc
(
¶Ÿ
);

640 i‡(
	`∑ge_ªc_is_comp
(
¶Ÿ
)) {

641 
	`ªc_£t_n_ow√d_√w
(
ªc
, 
∑ge_zù
, 
n
);

643 
	`ut_ad
(!
∑ge_zù
);

644 
	`ªc_£t_n_ow√d_ﬁd
(
ªc
, 
n
);

646 
	}
}

651 
UNIV_INLINE


652 
ulöt
 
	$∑ge_dú_ˇlc_ª£rved_•a˚
(
ulöt
 
n_ªcs
)

654  ((
PAGE_DIR_SLOT_SIZE
 * 
n_ªcs
 + 
PAGE_DIR_SLOT_MIN_N_OWNED
 - 1) /

655 
PAGE_DIR_SLOT_MIN_N_OWNED
);

656 
	}
}

660 
UNIV_INLINE


661 c⁄° 
ªc_t
 *
	$∑ge_ªc_gë_√xt_low
(

662 c⁄° 
ªc_t
 *
ªc
,

663 
ulöt
 
comp
)

665 
ulöt
 
offs
;

666 c⁄° 
∑ge_t
 *
∑ge
;

668 
	`ut_ad
(
	`∑ge_ªc_check
(
ªc
));

670 
∑ge
 = 
	`∑ge_Æign
(
ªc
);

672 
offs
 = 
	`ªc_gë_√xt_offs
(
ªc
, 
comp
);

674 i‡(
offs
 >
UNIV_PAGE_SIZE
) {

675 
	`Ârötf
(
°dîr
,

679 (
ul⁄g
)
offs
, (ul⁄g)
	`∑ge_off£t
(
ªc
), (*)rec,

680 (
ul⁄g
)
	`∑ge_gë_•a˚_id
(
∑ge
), (ul⁄g)
	`∑ge_gë_∑ge_no
(page));

681 
ut_îr‹
;

682 } i‡(
offs
 == 0) {

683  (
nuŒ±r
);

686  (
∑ge
 + 
offs
);

687 
	}
}

691 
UNIV_INLINE


692 
ªc_t
 *
	$∑ge_ªc_gë_√xt
(
ªc_t
 *
ªc
)

694  ((
ªc_t
 *)
	`∑ge_ªc_gë_√xt_low
(
ªc
, 
	`∑ge_ªc_is_comp
(rec)));

695 
	}
}

699 
UNIV_INLINE


700 c⁄° 
ªc_t
 *
	$∑ge_ªc_gë_√xt_c⁄°
(

701 c⁄° 
ªc_t
 *
ªc
)

703  (
	`∑ge_ªc_gë_√xt_low
(
ªc
, 
	`∑ge_ªc_is_comp
(rec)));

704 
	}
}

710 
UNIV_INLINE


711 c⁄° 
ªc_t
 *
	$∑ge_ªc_gë_√xt_n⁄_dñ_m¨ked
(

712 c⁄° 
ªc_t
 *
ªc
)

714 c⁄° 
ªc_t
 *
r
;

715 
ulöt
 
∑ge_is_com∑˘
 = 
	`∑ge_ªc_is_comp
(
ªc
);

717 
r
 = 
	`∑ge_ªc_gë_√xt_c⁄°
(
ªc
);

718 !
	`∑ge_ªc_is_su¥emum
(
r
Ë&& 
	`ªc_gë_dñëed_Êag
‘, 
∑ge_is_com∑˘
);

719 
r
 = 
	`∑ge_ªc_gë_√xt_c⁄°
(r)) {

723  (
r
);

724 
	}
}

727 
UNIV_INLINE


728 
	$∑ge_ªc_£t_√xt
(
ªc_t
 *
ªc
,

730 c⁄° 
ªc_t
 *
√xt
)

733 
ulöt
 
offs
;

735 
	`ut_ad
(
	`∑ge_ªc_check
(
ªc
));

736 
	`ut_ad
(!
	`∑ge_ªc_is_su¥emum
(
ªc
));

737 
	`ut_ad
(
ªc
 !
√xt
);

739 
	`ut_ad
(!
√xt
 || !
	`∑ge_ªc_is_öfimum
(next));

740 
	`ut_ad
(!
√xt
 || 
	`∑ge_Æign
(
ªc
) ==Öage_align(next));

742 
offs
 = 
√xt
 !
nuŒ±r
 ? 
	`∑ge_off£t
(next) : 0;

744 i‡(
	`∑ge_ªc_is_comp
(
ªc
)) {

745 
	`ªc_£t_√xt_offs_√w
(
ªc
, 
offs
);

747 
	`ªc_£t_√xt_offs_ﬁd
(
ªc
, 
offs
);

749 
	}
}

753 
UNIV_INLINE


754 c⁄° 
ªc_t
 *
	$∑ge_ªc_gë_¥ev_c⁄°
(

755 c⁄° 
ªc_t
 *
ªc
)

758 c⁄° 
∑ge_dú_¶Ÿ_t
 *
¶Ÿ
;

759 
ulöt
 
¶Ÿ_no
;

760 c⁄° 
ªc_t
 *
ªc2
;

761 c⁄° 
ªc_t
 *
¥ev_ªc
 = 
nuŒ±r
;

762 c⁄° 
∑ge_t
 *
∑ge
;

764 
	`ut_ad
(
	`∑ge_ªc_check
(
ªc
));

766 
∑ge
 = 
	`∑ge_Æign
(
ªc
);

768 
	`ut_ad
(!
	`∑ge_ªc_is_öfimum
(
ªc
));

770 
¶Ÿ_no
 = 
	`∑ge_dú_föd_ow√r_¶Ÿ
(
ªc
);

772 
	`ut_a
(
¶Ÿ_no
 != 0);

774 
¶Ÿ
 = 
	`∑ge_dú_gë_¡h_¶Ÿ
(
∑ge
, 
¶Ÿ_no
 - 1);

776 
ªc2
 = 
	`∑ge_dú_¶Ÿ_gë_ªc
(
¶Ÿ
);

778 i‡(
	`∑ge_is_comp
(
∑ge
)) {

779 
ªc
 !
ªc2
) {

780 
¥ev_ªc
 = 
ªc2
;

781 
ªc2
 = 
	`∑ge_ªc_gë_√xt_low
‘ec2, 
TRUE
);

784 
ªc
 !
ªc2
) {

785 
¥ev_ªc
 = 
ªc2
;

786 
ªc2
 = 
	`∑ge_ªc_gë_√xt_low
‘ec2, 
FALSE
);

790 
	`ut_a
(
¥ev_ªc
);

792  (
¥ev_ªc
);

793 
	}
}

797 
UNIV_INLINE


798 
ªc_t
 *
	$∑ge_ªc_gë_¥ev
(
ªc_t
 *
ªc
)

801  ((
ªc_t
 *)
	`∑ge_ªc_gë_¥ev_c⁄°
(
ªc
));

802 
	}
}

806 
UNIV_INLINE


807 
ªc_t
 *
	$∑ge_ªc_föd_ow√r_ªc
(
ªc_t
 *
ªc
)

809 
	`ut_ad
(
	`∑ge_ªc_check
(
ªc
));

811 i‡(
	`∑ge_ªc_is_comp
(
ªc
)) {

812 
	`ªc_gë_n_ow√d_√w
(
ªc
) == 0) {

813 
ªc
 = 
	`∑ge_ªc_gë_√xt
(rec);

816 
	`ªc_gë_n_ow√d_ﬁd
(
ªc
) == 0) {

817 
ªc
 = 
	`∑ge_ªc_gë_√xt
(rec);

821  (
ªc
);

822 
	}
}

827 
UNIV_INLINE


828 
ulöt
 
	$∑ge_ªc_gë_ba£_exåa_size
(c⁄° 
ªc_t
 *
ªc
)

830 #i‡
REC_N_NEW_EXTRA_BYTES
 + 1 !
REC_N_OLD_EXTRA_BYTES


833  (
REC_N_NEW_EXTRA_BYTES
 + (
ulöt
)!
	`∑ge_ªc_is_comp
(
ªc
));

834 
	}
}

839 
UNIV_INLINE


840 
ulöt
 
	$∑ge_gë_d©a_size
(c⁄° 
∑ge_t
 *
∑ge
)

842 
ulöt
 
ªt
;

844 
ªt
 = (
ulöt
)(

845 
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_HEAP_TOP
) -

846 (
	`∑ge_is_comp
(
∑ge
Ë? 
PAGE_NEW_SUPREMUM_END
 : 
PAGE_OLD_SUPREMUM_END
) -

847 
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_GARBAGE
));

849 
	`ut_ad
(
ªt
 < 
UNIV_PAGE_SIZE
);

851  (
ªt
);

852 
	}
}

855 
UNIV_INLINE


856 
	$∑ge_mem_Æloc_‰ì
(

857 
∑ge_t
 *
∑ge
,

858 
∑ge_zù_des_t
 *
∑ge_zù
,

861 
ªc_t
 *
√xt_ªc
,

863 
ulöt
 
√ed
)

865 
ulöt
 
g¨bage
;

867 #ifde‡
UNIV_DEBUG


868 c⁄° 
ªc_t
 *
ﬁd_ªc
 = 
	`∑ge_hódî_gë_±r
(
∑ge
, 
PAGE_FREE
);

869 
ulöt
 
√xt_offs
;

871 
	`ut_ad
(
ﬁd_ªc
);

872 
√xt_offs
 = 
	`ªc_gë_√xt_offs
(
ﬁd_ªc
, 
	`∑ge_is_comp
(
∑ge
));

873 
	`ut_ad
(
√xt_ªc
 =(
√xt_offs
 ? 
∑ge
 +Çext_off†: 
nuŒ±r
));

876 
	`∑ge_hódî_£t_±r
(
∑ge
, 
∑ge_zù
, 
PAGE_FREE
, 
√xt_ªc
);

878 
g¨bage
 = 
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_GARBAGE
);

879 
	`ut_ad
(
g¨bage
 >
√ed
);

881 
	`∑ge_hódî_£t_fõld
(
∑ge
, 
∑ge_zù
, 
PAGE_GARBAGE
, 
g¨bage
 - 
√ed
);

882 
	}
}

886 
UNIV_INLINE


887 
ulöt
 
	$∑ge_gë_‰ì_•a˚_of_em±y
(

888 
ulöt
 
comp
)

890 i‡(
comp
) {

891  ((
ulöt
)(
UNIV_PAGE_SIZE
 - 
PAGE_NEW_SUPREMUM_END
 - 
PAGE_DIR
 -

892 2 * 
PAGE_DIR_SLOT_SIZE
));

895  ((
ulöt
)(
UNIV_PAGE_SIZE
 - 
PAGE_OLD_SUPREMUM_END
 - 
PAGE_DIR
 -

896 2 * 
PAGE_DIR_SLOT_SIZE
));

897 
	}
}

899 #i‚de‡
UNIV_HOTBACKUP


901 
UNIV_INLINE


902 
	$∑ge_ªc_wrôe_fõld
(
ªc_t
 *
ªc
,

903 
ulöt
 
i
,

904 
ulöt
 
vÆ
,

905 
må_t
 *
må
)

907 
byã
 *
d©a
;

908 
ulöt
 
Àn
;

910 
d©a
 = 
	`ªc_gë_¡h_fõld_ﬁd
(
ªc
, 
i
, &
Àn
);

912 
	`ut_ad
(
Àn
 == 4);

914 
	`mlog_wrôe_ulöt
(
d©a
, 
vÆ
, 
MLOG_4BYTES
, 
må
);

915 
	}
}

925 
UNIV_INLINE


926 
ulöt
 
	$∑ge_gë_max_ö£π_size
(c⁄° 
∑ge_t
 *
∑ge
,

927 
ulöt
 
n_ªcs
)

929 
ulöt
 
occupõd
;

930 
ulöt
 
‰ì_•a˚
;

932 i‡(
	`∑ge_is_comp
(
∑ge
)) {

933 
occupõd
 =

934 
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_HEAP_TOP
Ë- 
PAGE_NEW_SUPREMUM_END
 +

935 
	`∑ge_dú_ˇlc_ª£rved_•a˚
(
n_ªcs
 + 
	`∑ge_dú_gë_n_hóp
(
∑ge
) - 2);

937 
‰ì_•a˚
 = 
	`∑ge_gë_‰ì_•a˚_of_em±y
(
TRUE
);

939 
occupõd
 =

940 
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_HEAP_TOP
Ë- 
PAGE_OLD_SUPREMUM_END
 +

941 
	`∑ge_dú_ˇlc_ª£rved_•a˚
(
n_ªcs
 + 
	`∑ge_dú_gë_n_hóp
(
∑ge
) - 2);

943 
‰ì_•a˚
 = 
	`∑ge_gë_‰ì_•a˚_of_em±y
(
FALSE
);

950 i‡(
occupõd
 > 
‰ì_•a˚
) {

954  (
‰ì_•a˚
 - 
occupõd
);

955 
	}
}

960 
UNIV_INLINE


961 
ulöt
 
	$∑ge_gë_max_ö£π_size_a·î_ª‹g™ize
(

962 c⁄° 
∑ge_t
 *
∑ge
,

963 
ulöt
 
n_ªcs
)

965 
ulöt
 
occupõd
;

966 
ulöt
 
‰ì_•a˚
;

968 
occupõd
 = 
	`∑ge_gë_d©a_size
(
∑ge
) +

969 
	`∑ge_dú_ˇlc_ª£rved_•a˚
(
n_ªcs
 + 
	`∑ge_gë_n_ªcs
(
∑ge
));

971 
‰ì_•a˚
 = 
	`∑ge_gë_‰ì_•a˚_of_em±y
(
	`∑ge_is_comp
(
∑ge
));

973 i‡(
occupõd
 > 
‰ì_•a˚
) {

977  (
‰ì_•a˚
 - 
occupõd
);

978 
	}
}

981 
UNIV_INLINE


982 
	$∑ge_mem_‰ì
(
∑ge_t
 *
∑ge
,

983 
∑ge_zù_des_t
 *
∑ge_zù
,

985 
ªc_t
 *
ªc
,

987 c⁄° 
di˘_ödex_t
 *
ödex
,

988 c⁄° 
ulöt
 *
off£ts
)

991 
ªc_t
 *
‰ì
;

992 
ulöt
 
g¨bage
;

994 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
ödex
, 
off£ts
));

995 
‰ì
 = 
	`∑ge_hódî_gë_±r
(
∑ge
, 
PAGE_FREE
);

997 
	`∑ge_ªc_£t_√xt
(
ªc
, 
‰ì
);

998 
	`∑ge_hódî_£t_±r
(
∑ge
, 
∑ge_zù
, 
PAGE_FREE
, 
ªc
);

1000 
g¨bage
 = 
	`∑ge_hódî_gë_fõld
(
∑ge
, 
PAGE_GARBAGE
);

1002 
	`∑ge_hódî_£t_fõld
(
∑ge
, 
∑ge_zù
, 
PAGE_GARBAGE
,

1003 
g¨bage
 + 
	`ªc_offs_size
(
off£ts
));

1005 i‡(
∑ge_zù
) {

1006 
	`∑ge_zù_dú_dñëe
(
∑ge_zù
, 
ªc
, 
ödex
, 
off£ts
, 
‰ì
);

1008 
	`∑ge_hódî_£t_fõld
(
∑ge
, 
∑ge_zù
, 
PAGE_N_RECS
,

1009 
	`∑ge_gë_n_ªcs
(
∑ge
) - 1);

1011 
	}
}

1018 
ölöe
 
ul⁄g
 
	$∑ge_size_vÆid©e
(
ul⁄g
 
∑ge_size
) {

1019 
ul⁄g
 
n
 = 
UNIV_PAGE_SIZE_SHIFT_MIN
;Ç <
UNIV_PAGE_SIZE_SHIFT_MAX
;Ç++) {

1020 i‡(
∑ge_size
 =
°©ic_ˇ°
<
ul⁄g
>(1 << 
n
)) {

1021  (
n
);

1025 
	}
}

1027 #ifde‡
UNIV_MATERIALIZE


1028 #unde‡
UNIV_INLINE


1029 
	#UNIV_INLINE
 
UNIV_INLINE_ORIGINAL


	)

	@page0size.h

33 #i‚de‡
∑ge0size_t


34 
	#∑ge0size_t


	)

36 
	~"f•0ty≥s.h
"

38 
c⁄°ex¥
 
size_t
 
	gFIELD_REF_SIZE
 = 20;

43 c⁄° 
byã
 
fõld_ªf_zîo
[
FIELD_REF_SIZE
];

45 
c⁄°ex¥
 
size_t
 
	gPAGE_SIZE_T_SIZE_BITS
 = 17;

49 ˛as†
	c∑ge_size_t
 {

50 
	mpublic
:

55 
	$∑ge_size_t
(
uöt32_t
 
physiˇl
, uöt32_à
logiˇl
, 
boﬁ
 
is_com¥es£d
) {

56 i‡(
physiˇl
 == 0) {

57 
physiˇl
 = 
UNIV_PAGE_SIZE_ORIG
;

59 i‡(
logiˇl
 == 0) {

60 
logiˇl
 = 
UNIV_PAGE_SIZE_ORIG
;

63 
m_physiˇl
 = 
°©ic_ˇ°
<>(
physiˇl
);

64 
m_logiˇl
 = 
°©ic_ˇ°
<>(
logiˇl
);

65 
m_is_com¥es£d
 = 
°©ic_ˇ°
<>(
is_com¥es£d
);

67 
	`ut_ad
(
physiˇl
 <(1 << 
PAGE_SIZE_T_SIZE_BITS
));

68 
	`ut_ad
(
logiˇl
 <(1 << 
PAGE_SIZE_T_SIZE_BITS
));

70 
	`ut_ad
(
	`ut_is_2pow
(
physiˇl
));

71 
	`ut_ad
(
	`ut_is_2pow
(
logiˇl
));

73 
	`ut_ad
(
logiˇl
 <
UNIV_PAGE_SIZE_MAX
);

74 
	`ut_ad
(
logiˇl
 >
physiˇl
);

75 
	`ut_ad
(!
is_com¥es£d
 || 
physiˇl
 <
UNIV_ZIP_SIZE_MAX
);

80 
ex∂icô
 
	$∑ge_size_t
(
uöt32_t
 
f•_Êags
) {

81 
uöt32_t
 
ssize
 = 
	`FSP_FLAGS_GET_PAGE_SSIZE
(
f•_Êags
);

85 
ssize
 = (0 =ssizeË? 
UNIV_PAGE_SSIZE_ORIG
 : ssize;

88 c⁄° 
ulöt
 
size
 = ((
UNIV_ZIP_SIZE_MIN
 >> 1Ë<< 
ssize
);

90 
	`ut_ad
(
size
 <
UNIV_PAGE_SIZE_MAX
);

91 
	`ut_ad
(
size
 <(1 << 
PAGE_SIZE_T_SIZE_BITS
));

93 
m_logiˇl
 = 
size
;

95 
ssize
 = 
	`FSP_FLAGS_GET_ZIP_SSIZE
(
f•_Êags
);

101 i‡(
ssize
 == 0) {

102 
m_is_com¥es£d
 = 
Ál£
;

103 
m_physiˇl
 = 
m_logiˇl
;

105 
m_is_com¥es£d
 = 
åue
;

109 c⁄° 
ulöt
 
phy
 = ((
UNIV_ZIP_SIZE_MIN
 >> 1Ë<< 
ssize
);

111 
	`ut_ad
(
phy
 <
UNIV_ZIP_SIZE_MAX
);

112 
	`ut_ad
(
phy
 <(1 << 
PAGE_SIZE_T_SIZE_BITS
));

114 
m_physiˇl
 = 
phy
;

116 
	}
}

120 
ölöe
 
size_t
 
	$physiˇl
() const {

121 
	`ut_ad
(
m_physiˇl
 > 0);

123  (
m_physiˇl
);

124 
	}
}

128 
ölöe
 
size_t
 
	$logiˇl
() const {

129 
	`ut_ad
(
m_logiˇl
 > 0);

130  (
m_logiˇl
);

131 
	}
}

133 
∑ge_no_t
 
	$exã¡_size
() const {

134 
∑ge_no_t
 
size
 = 0;

135 
m_physiˇl
) {

137 
size
 = 256;

140 
size
 = 128;

145 
size
 = 64;

148 
	`ut_ad
(0);

150  (
size
);

151 
	}
}

153 
size_t
 
	$exã¡s_≥r_xdes
(Ëc⁄° {  (
m_physiˇl
 / 
	`exã¡_size
()); 
	}
}

157 
ölöe
 
boﬁ
 
	$is_com¥es£d
(Ëc⁄° {  (
m_is_com¥es£d
); 
	}
}

161 
ölöe
 
	$c›y_‰om
(c⁄° 
∑ge_size_t
 &
§c
) {

162 
m_physiˇl
 = 
§c
.
	`physiˇl
();

163 
m_logiˇl
 = 
§c
.
	`logiˇl
();

164 
m_is_com¥es£d
 = 
§c
.
	`is_com¥es£d
();

165 
	}
}

170 
ölöe
 
boﬁ
 
	$equÆs_to
(c⁄° 
∑ge_size_t
 &
a
) const {

171  (
a
.
	`physiˇl
(Ë=
m_physiˇl
 &&á.
	`logiˇl
(Ë=
m_logiˇl
 &&

172 
a
.
	`is_com¥es£d
(Ë=
m_is_com¥es£d
);

173 
	}
}

175 
ölöe
 
	$£t_Êag
(
uöt32_t
 
f•_Êags
) {

176 
uöt32_t
 
ssize
 = 
	`FSP_FLAGS_GET_PAGE_SSIZE
(
f•_Êags
);

180 
ssize
 = (0 =ssizeË? 
UNIV_PAGE_SSIZE_ORIG
 : ssize;

183 c⁄° 
uöt32_t
 
size
 = ((
UNIV_ZIP_SIZE_MIN
 >> 1Ë<< 
ssize
);

185 
	`ut_ad
(
size
 <
UNIV_PAGE_SIZE_MAX
);

186 
	`ut_ad
(
size
 <(1 << 
PAGE_SIZE_T_SIZE_BITS
));

188 
m_logiˇl
 = 
size
;

190 
ssize
 = 
	`FSP_FLAGS_GET_ZIP_SSIZE
(
f•_Êags
);

196 i‡(
ssize
 == 0) {

197 
m_is_com¥es£d
 = 
Ál£
;

198 
m_physiˇl
 = 
m_logiˇl
;

200 
m_is_com¥es£d
 = 
åue
;

204 c⁄° 
ulöt
 
phy
 = ((
UNIV_ZIP_SIZE_MIN
 >> 1Ë<< 
ssize
);

206 
	`ut_ad
(
phy
 <
UNIV_ZIP_SIZE_MAX
);

207 
	`ut_ad
(
phy
 <(1 << 
PAGE_SIZE_T_SIZE_BITS
));

209 
m_physiˇl
 = 
phy
;

211 
	}
}

214 
	g›î©‹
=(c⁄° 
∑ge_size_t
 &Ë
dñëe
;

216 
∑ge_size_t
(constÖage_size_t &) = ;

218 
	g¥iv©e
:

230 
m_physiˇl
 : 
PAGE_SIZE_T_SIZE_BITS
;

233 
	gm_logiˇl
 : 
PAGE_SIZE_T_SIZE_BITS
;

237 
	gm_is_com¥es£d
 : 1;

245 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	g∑ge_size_t
 &
	gobj
) {

246 
	gout
 << "[∑gêsize:Öhysiˇl=" << 
	gobj
.
physiˇl
()

247 << ",Üogiˇl=" << 
	gobj
.
logiˇl
(Ë<< ", com¥es£d=" << obj.
is_com¥es£d
()

249  (
	gout
);

252 
∑ge_size_t
 
univ_∑ge_size
;

	@page0types.h

33 #i‚de‡
∑ge0ty≥s_h


34 
	#∑ge0ty≥s_h


	)

36 
	~"di˘0ty≥s.h
"

37 
	~"må0ty≥s.h
"

38 
	~"univ.i
"

39 
	~"ut0√w.h
"

41 
	~<m≠
>

48 
byã
 
	t∑ge_hódî_t
;

50 
	#PAGE_HEADER
 \

51 
FSEG_PAGE_DATA


	)

54 
	#PAGE_N_DIR_SLOTS
 0

	)

55 
	#PAGE_HEAP_TOP
 2

	)

56 
	#PAGE_N_HEAP
 \

57 4

	)

59 
	#PAGE_FREE
 6

	)

60 
	#PAGE_GARBAGE
 8

	)

61 
	#PAGE_LAST_INSERT
 \

62 10

	)

65 
	#PAGE_DIRECTION
 12

	)

66 
	#PAGE_N_DIRECTION
 \

67 14

	)

69 
	#PAGE_N_RECS
 16

	)

70 
	#PAGE_MAX_TRX_ID
 \

71 18

	)

75 
	#PAGE_HEADER_PRIV_END
 \

76 26

	)

79 
	#PAGE_LEVEL
 \

80 26

	)

83 
	#PAGE_INDEX_ID
 \

84 28

	)

88 
	#PAGE_BTR_SEG_LEAF
 \

89 36

	)

92 
	#PAGE_BTR_IBUF_FREE_LIST
 
PAGE_BTR_SEG_LEAF


	)

93 
	#PAGE_BTR_IBUF_FREE_LIST_NODE
 
PAGE_BTR_SEG_LEAF


	)

99 
	#PAGE_BTR_SEG_TOP
 (36 + 
FSEG_HEADER_SIZE
)

	)

105 
	#PAGE_DATA
 (
PAGE_HEADER
 + 36 + 2 * 
FSEG_HEADER_SIZE
)

	)

108 
	#PAGE_OLD_INFIMUM
 (
PAGE_DATA
 + 1 + 
REC_N_OLD_EXTRA_BYTES
)

	)

111 
	#PAGE_OLD_SUPREMUM
 (
PAGE_DATA
 + 2 + 2 * 
REC_N_OLD_EXTRA_BYTES
 + 8)

	)

114 
	#PAGE_OLD_SUPREMUM_END
 (
PAGE_OLD_SUPREMUM
 + 9)

	)

117 
	#PAGE_NEW_INFIMUM
 (
PAGE_DATA
 + 
REC_N_NEW_EXTRA_BYTES
)

	)

120 
	#PAGE_NEW_SUPREMUM
 (
PAGE_DATA
 + 2 * 
REC_N_NEW_EXTRA_BYTES
 + 8)

	)

123 
	#PAGE_NEW_SUPREMUM_END
 (
PAGE_NEW_SUPREMUM
 + 8)

	)

130 
c⁄°ex¥
 
ulöt
 
	gPAGE_HEAP_NO_INFIMUM
 = 0;

132 
c⁄°ex¥
 
ulöt
 
	gPAGE_HEAP_NO_SUPREMUM
 = 1;

136 
c⁄°ex¥
 
ulöt
 
	gPAGE_HEAP_NO_USER_LOW
 = 2;

139 
	#PAGE_LEFT
 1

	)

140 
	#PAGE_RIGHT
 2

	)

141 
	#PAGE_SAME_REC
 3

	)

142 
	#PAGE_SAME_PAGE
 4

	)

143 
	#PAGE_NO_DIRECTION
 5

	)

146 
	#∑ge_t
 
ib_∑ge_t


	)

148 
byã
 
	t∑ge_t
;

150 
	g∑ge_cur_t
;

153 
byã
 
	t∑ge_zù_t
;

160 
	#PAGE_ZIP_SSIZE_BITS
 3

	)

163 
	#PAGE_ZIP_SSIZE_MAX
 \

164 (
UNIV_ZIP_SIZE_SHIFT_MAX
 - 
UNIV_ZIP_SIZE_SHIFT_MIN
 + 1)

	)

168 #i‡
PAGE_ZIP_SSIZE_MAX
 >(1 << 
PAGE_ZIP_SSIZE_BITS
)

173 
	e∑ge_cur_mode_t
 {

174 
	mPAGE_CUR_UNSUPP
 = 0,

175 
	mPAGE_CUR_G
 = 1,

176 
	mPAGE_CUR_GE
 = 2,

177 
	mPAGE_CUR_L
 = 3,

178 
	mPAGE_CUR_LE
 = 4,

186 
	mPAGE_CUR_CONTAIN
 = 7,

187 
	mPAGE_CUR_INTERSECT
 = 8,

188 
	mPAGE_CUR_WITHIN
 = 9,

189 
	mPAGE_CUR_DISJOINT
 = 10,

190 
	mPAGE_CUR_MBR_EQUAL
 = 11,

191 
	mPAGE_CUR_RTREE_INSERT
 = 12,

192 
	mPAGE_CUR_RTREE_LOCATE
 = 13,

193 
	mPAGE_CUR_RTREE_GET_FATHER
 = 14

197 
	s∑ge_zù_des_t
 {

199 
∑ge_zù_t
 *
	md©a
;

201 #ifde‡
UNIV_DEBUG


203 
uöt16_t
 
	mm_°¨t
;

205 
boﬁ
 
	mm_exã∫Æ
;

209 
uöt16_t
 
	mm_íd
;

213 
uöt16_t
 
	mn_blobs
;

216 
boﬁ
 
	mm_n⁄em±y
;

220 
uöt8_t
 
	mssize
;

224 
	s∑ge_zù_°©_t
 {

226 
ulöt
 
	mcom¥es£d
;

228 
ulöt
 
	mcom¥es£d_ok
;

230 
ulöt
 
	mdecom¥es£d
;

232 
ib_uöt64_t
 
	mcom¥es£d_u£c
;

234 
ib_uöt64_t
 
	mdecom¥es£d_u£c
;

235 
∑ge_zù_°©_t
()

239 
com¥es£d
(0),

240 
com¥es£d_ok
(0),

241 
decom¥es£d
(0),

242 
com¥es£d_u£c
(0),

243 
decom¥es£d_u£c
(0) {}

247 
	g°d
::
	tm≠
<
	tödex_id_t
, 
	t∑ge_zù_°©_t
, 
	t°d
::
	tÀss
<index_id_t>,

248 
	tut_Æloˇt‹
<
	t°d
::
	t∑ú
<c⁄° 
	tödex_id_t
, 
	t∑ge_zù_°©_t
>>>

249 
	t∑ge_zù_°©_≥r_ödex_t
;

252 
∑ge_zù_°©_t
 
∑ge_zù_°©
[
PAGE_ZIP_SSIZE_MAX
];

254 
∑ge_zù_°©_≥r_ödex_t
 
∑ge_zù_°©_≥r_ödex
;

258 
∑ge_zù_ªc_£t_dñëed
(

259 
∑ge_zù_des_t
 *
∑ge_zù
,

260 c⁄° 
byã
 *
ªc
,

261 
ulöt
 
Êag
);

268 
∑ge_zù_ªc_£t_ow√d
(
∑ge_zù_des_t
 *
∑ge_zù
, c⁄° 
byã
 *
ªc
,

269 
ulöt
 
Êag
);

277 
∑ge_zù_dú_dñëe
(
∑ge_zù_des_t
 *
∑ge_zù
, 
byã
 *
ªc
,

278 
di˘_ödex_t
 *
ödex
, c⁄° 
ulöt
 *
off£ts
,

279 c⁄° 
byã
 *
‰ì
);

284 
∑ge_zù_dú_add_¶Ÿ
(
∑ge_zù_des_t
 *
∑ge_zù
, 
boﬁ
 
is_˛u°îed
);

	@page0zip.h

34 #i‚de‡
∑ge0zù_h


35 
	#∑ge0zù_h


	)

37 #ifde‡
UNIV_MATERIALIZE


38 #unde‡
UNIV_INLINE


39 
	#UNIV_INLINE


	)

42 
	~<sys/ty≥s.h
>

43 
	~<zlib.h
>

45 
	~"buf0buf.h
"

46 
	~"buf0checksum.h
"

47 
	~"buf0ty≥s.h
"

48 
	~"di˘0ty≥s.h
"

49 
	~"mach0d©a.h
"

50 
	~"mem0mem.h
"

51 
	~"må0ty≥s.h
"

52 
	~"∑ge/zùdecom¥ess.h
"

53 
	~"∑ge0ty≥s.h
"

54 
	~"§v0§v.h
"

55 
	~"åx0ty≥s.h
"

56 
	~"univ.i
"

57 
	~"ut0¸c32.h
"

60 
uöt
 
∑ge_zù_Àvñ
;

63 
	#DEFAULT_COMPRESSION_LEVEL
 6

	)

65 
	#PAGE_ZIP_START
 
PAGE_NEW_SUPREMUM_END


	)

67 
	#PAGE_ZIP_DIR_SLOT_SIZE
 2

	)

69 
	#PAGE_ZIP_CLUST_LEAF_SLOT_SIZE
 \

70 (
PAGE_ZIP_DIR_SLOT_SIZE
 + 
DATA_TRX_ID_LEN
 + 
DATA_ROLL_PTR_LEN
)

	)

72 
	#PAGE_ZIP_DIR_SLOT_MASK
 0x3fff

	)

74 
	#PAGE_ZIP_DIR_SLOT_OWNED
 0x4000

	)

76 
	#PAGE_ZIP_DIR_SLOT_DEL
 0x8000

	)

80 
boﬁ
 
∑ge_zù_log_∑ges
;

85 
UNIV_INLINE


86 
∑ge_zù_£t_size
(
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
size
);

95 
UNIV_INLINE


96 
iboﬁ
 
	$∑ge_zù_ªc_√eds_ext
(
ulöt
 
ªc_size
, ulöà
comp
, ulöà
n_fõlds
,

97 c⁄° 
∑ge_size_t
 &
∑ge_size
)

98 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

104 
ulöt
 
	`∑ge_zù_em±y_size
(ulöà
n_fõlds
, ulöà
zù_size
);

106 #i‚de‡
UNIV_HOTBACKUP


111 
boﬁ
 
	`∑ge_zù_is_too_big
(c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
dtu∂e_t
 *
íåy
);

115 
UNIV_INLINE


116 
	`∑ge_zù_des_öô
(
∑ge_zù_des_t
 *
∑ge_zù
);

122 
	`∑ge_zù_£t_Æloc
(*
°ªam
, 
mem_hóp_t
 *
hóp
);

127 
iboﬁ
 
	`∑ge_zù_com¥ess
(
∑ge_zù_des_t
 *
∑ge_zù
,

130 c⁄° 
∑ge_t
 *
∑ge
,

131 
di˘_ödex_t
 *
ödex
,

132 
ulöt
 
Àvñ
,

133 
må_t
 *
må
);

138 
ulöt
 
	`∑ge_zù_fõlds_ícode
(

139 
ulöt
 
n
,

141 c⁄° 
di˘_ödex_t
 *
ödex
,

143 
ulöt
 
åx_id_pos
,

147 
byã
 *
buf
);

153 
iboﬁ
 
	`∑ge_zù_decom¥ess
(

154 
∑ge_zù_des_t
 *
∑ge_zù
,

156 
∑ge_t
 *
∑ge
,

157 
iboﬁ
 
Æl
);

162 #ifde‡
UNIV_ZIP_DEBUG


165 
iboﬁ
 
	`∑ge_zù_vÆid©e_low
(

166 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
,

167 c⁄° 
∑ge_t
 *
∑ge
,

168 c⁄° 
di˘_ödex_t
 *
ödex
,

169 
iboﬁ
 
¶›py
);

172 
iboﬁ
 
	`∑ge_zù_vÆid©e
(

173 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
,

174 c⁄° 
∑ge_t
 *
∑ge
,

175 c⁄° 
di˘_ödex_t
 *
ödex
);

181 
UNIV_INLINE


182 
löt
 
	$∑ge_zù_max_ös_size
(

183 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
,

184 
iboﬁ
 
is_˛u°
)

185 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

189 
UNIV_INLINE


190 
iboﬁ
 
	$∑ge_zù_avaûabÀ
(

191 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
,

192 
boﬁ
 
is_˛u°
,

193 
ulöt
 
Àngth
,

194 
ulöt
 
¸óã
)

196 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

206 
UNIV_INLINE


207 
	`∑ge_zù_wrôe_hódî
(
∑ge_zù_des_t
 *
∑ge_zù
, c⁄° 
byã
 *
°r
,

208 
ulöt
 
Àngth
, 
må_t
 *
må
);

212 
	`∑ge_zù_wrôe_ªc
(

213 
∑ge_zù_des_t
 *
∑ge_zù
,

214 c⁄° 
byã
 *
ªc
,

215 c⁄° 
di˘_ödex_t
 *
ödex
,

216 c⁄° 
ulöt
 *
off£ts
,

217 
ulöt
 
¸óã
);

221 
byã
 *
	`∑ge_zù_∑r£_wrôe_blob_±r
(

222 
byã
 *
±r
,

223 
byã
 *
íd_±r
,

224 
∑ge_t
 *
∑ge
,

225 
∑ge_zù_des_t
 *
∑ge_zù
);

229 
	`∑ge_zù_wrôe_blob_±r
(

230 
∑ge_zù_des_t
 *
∑ge_zù
,

231 c⁄° 
byã
 *
ªc
,

233 c⁄° 
di˘_ödex_t
 *
ödex
,

234 c⁄° 
ulöt
 *
off£ts
,

235 
ulöt
 
n
,

236 
må_t
 *
må
);

241 
byã
 *
	`∑ge_zù_∑r£_wrôe_node_±r
(

242 
byã
 *
±r
,

243 
byã
 *
íd_±r
,

244 
∑ge_t
 *
∑ge
,

245 
∑ge_zù_des_t
 *
∑ge_zù
);

253 
	`∑ge_zù_wrôe_node_±r
(
∑ge_zù_des_t
 *
∑ge_zù
, 
byã
 *
ªc
, 
ulöt
 
size
,

254 
ulöt
 
±r
, 
må_t
 *
må
);

263 
	`∑ge_zù_wrôe_åx_id_™d_rﬁl_±r
(
∑ge_zù_des_t
 *
∑ge_zù
, 
byã
 *
ªc
,

264 c⁄° 
ulöt
 *
off£ts
, ulöà
åx_id_cﬁ
,

265 
åx_id_t
 
åx_id
, 
rﬁl_±r_t
 
rﬁl_±r
);

269 
	`∑ge_zù_ªc_£t_dñëed
(

270 
∑ge_zù_des_t
 *
∑ge_zù
,

271 c⁄° 
byã
 *
ªc
,

272 
ulöt
 
Êag
);

279 
	`∑ge_zù_ªc_£t_ow√d
(
∑ge_zù_des_t
 *
∑ge_zù
, c⁄° 
byã
 *
ªc
,

280 
ulöt
 
Êag
);

287 
	`∑ge_zù_dú_ö£π
(
∑ge_zù_des_t
 *
∑ge_zù
, c⁄° 
byã
 *
¥ev_ªc
,

288 c⁄° 
byã
 *
‰ì_ªc
, byã *
ªc
);

297 
	`∑ge_zù_dú_dñëe
(
∑ge_zù_des_t
 *
∑ge_zù
, 
byã
 *
ªc
,

298 c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
ulöt
 *
off£ts
,

299 c⁄° 
byã
 *
‰ì
);

304 
	`∑ge_zù_dú_add_¶Ÿ
(
∑ge_zù_des_t
 *
∑ge_zù
, 
boﬁ
 
is_˛u°îed
);

308 
byã
 *
	`∑ge_zù_∑r£_wrôe_hódî
(

309 
byã
 *
±r
,

310 
byã
 *
íd_±r
,

311 
∑ge_t
 *
∑ge
,

312 
∑ge_zù_des_t
 *
∑ge_zù
);

324 
iboﬁ
 
	`∑ge_zù_ª‹g™ize
(

325 
buf_block_t
 *
block
,

329 
di˘_ödex_t
 *
ödex
,

330 
må_t
 *
må
);

335 
	`∑ge_zù_c›y_ªcs
(

336 
∑ge_zù_des_t
 *
∑ge_zù
,

339 
∑ge_t
 *
∑ge
,

340 c⁄° 
∑ge_zù_des_t
 *
§c_zù
,

341 c⁄° 
∑ge_t
 *
§c
,

342 
di˘_ödex_t
 *
ödex
,

343 
må_t
 *
må
);

344 #i‚de‡
UNIV_HOTBACKUP


349 
byã
 *
	`∑ge_zù_∑r£_com¥ess
(

350 
byã
 *
±r
,

351 
byã
 *
íd_±r
,

352 
∑ge_t
 *
∑ge
,

353 
∑ge_zù_des_t
 *
∑ge_zù
);

361 
UNIV_INLINE


362 
	`∑ge_zù_com¥ess_wrôe_log_no_d©a
(
ulöt
 
Àvñ
, c⁄° 
∑ge_t
 *
∑ge
,

363 
di˘_ödex_t
 *
ödex
, 
må_t
 *
må
);

372 
UNIV_INLINE


373 
byã
 *
	`∑ge_zù_∑r£_com¥ess_no_d©a
(byã *
±r
, byã *
íd_±r
, 
∑ge_t
 *
∑ge
,

374 
∑ge_zù_des_t
 *
∑ge_zù
,

375 
di˘_ödex_t
 *
ödex
);

377 #i‚de‡
UNIV_HOTBACKUP


380 
UNIV_INLINE


381 
	`∑ge_zù_ª£t_°©_≥r_ödex
();

383 #ifde‡
UNIV_MATERIALIZE


384 #unde‡
UNIV_INLINE


385 
	#UNIV_INLINE
 
UNIV_INLINE_ORIGINAL


	)

389 
	~"∑ge0zù.ic
"

	@page0zip.ic

34 #ifde‡
UNIV_MATERIALIZE


35 #unde‡
UNIV_INLINE


36 
	#UNIV_INLINE


	)

39 
	~"må0log.h
"

40 
	~"∑ge0∑ge.h
"

41 
	~"∑ge0zù.h
"

42 
	~"§v0§v.h
"

112 
UNIV_INLINE


113 
	$∑ge_zù_£t_size
(
∑ge_zù_des_t
 *
∑ge_zù
,

114 
ulöt
 
size
)

116 i‡(
size
) {

117 
ssize
;

119 
	`ut_ad
(
	`ut_is_2pow
(
size
));

121 
ssize
 = 1; 
size
 > (
ulöt
)(512 << ssize); ssize++) {

124 
∑ge_zù
->
ssize
 = ssize;

126 
∑ge_zù
->
ssize
 = 0;

129 
	`ut_ad
(
	`∑ge_zù_gë_size
(
∑ge_zù
Ë=
size
);

130 
	}
}

132 #i‚de‡
UNIV_HOTBACKUP


140 
UNIV_INLINE


141 
iboﬁ
 
	$∑ge_zù_ªc_√eds_ext
(
ulöt
 
ªc_size
, ulöà
comp
, ulöà
n_fõlds
,

142 c⁄° 
∑ge_size_t
 &
∑ge_size
) {

143 
	`ut_ad
(
ªc_size
 > (
comp
 ? 
REC_N_NEW_EXTRA_BYTES
 : 
REC_N_OLD_EXTRA_BYTES
));

144 
	`ut_ad
(
comp
 || !
∑ge_size
.
	`is_com¥es£d
());

146 i‡(
UNIV_PAGE_SIZE_MAX
 > 
REC_MAX_DATA_SIZE
 && 
ªc_size
 >= REC_MAX_DATA_SIZE) {

147  (
TRUE
);

150 i‡(
∑ge_size
.
	`is_com¥es£d
()) {

151 
	`ut_ad
(
comp
);

158  (
ªc_size
 - (
REC_N_NEW_EXTRA_BYTES
 - 2 - 1) >=

159 
	`∑ge_zù_em±y_size
(
n_fõlds
, 
∑ge_size
.
	`physiˇl
()) ||

160 
ªc_size
 >
	`∑ge_gë_‰ì_•a˚_of_em±y
(
TRUE
) / 2);

163  (
ªc_size
 >
	`∑ge_gë_‰ì_•a˚_of_em±y
(
comp
) / 2);

164 
	}
}

170 
UNIV_INLINE


171 
iboﬁ
 
	$∑ge_zù_gë_åaûî_Àn
(

172 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
,

173 
boﬁ
 
is_˛u°
)

175 
ulöt
 
uncom¥es£d_size
;

177 
	`ut_ad
(
	`∑ge_zù_sim∂e_vÆid©e
(
∑ge_zù
));

178 
	`UNIV_MEM_ASSERT_RW
(
∑ge_zù
->
d©a
, 
	`∑ge_zù_gë_size
(page_zip));

180 i‡(!
	`∑ge_is_Àaf
(
∑ge_zù
->
d©a
)) {

181 
uncom¥es£d_size
 = 
PAGE_ZIP_DIR_SLOT_SIZE
 + 
REC_NODE_PTR_SIZE
;

182 
	`ut_ad
(!
∑ge_zù
->
n_blobs
);

183 } i‡(
is_˛u°
) {

184 
uncom¥es£d_size
 =

185 
PAGE_ZIP_DIR_SLOT_SIZE
 + 
DATA_TRX_ID_LEN
 + 
DATA_ROLL_PTR_LEN
;

187 
uncom¥es£d_size
 = 
PAGE_ZIP_DIR_SLOT_SIZE
;

188 
	`ut_ad
(!
∑ge_zù
->
n_blobs
);

191  ((
	`∑ge_dú_gë_n_hóp
(
∑ge_zù
->
d©a
Ë- 2Ë* 
uncom¥es£d_size
 +

192 
∑ge_zù
->
n_blobs
 * 
BTR_EXTERN_FIELD_REF_SIZE
);

193 
	}
}

198 
UNIV_INLINE


199 
löt
 
	$∑ge_zù_max_ös_size
(

200 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
,

201 
iboﬁ
 
is_˛u°
)

203 
ulöt
 
åaûî_Àn
;

205 
åaûî_Àn
 = 
	`∑ge_zù_gë_åaûî_Àn
(
∑ge_zù
, 
is_˛u°
);

214 
åaûî_Àn
 +
PAGE_ZIP_DIR_SLOT_SIZE
;

216  ((
löt
)
	`∑ge_zù_gë_size
(
∑ge_zù
Ë- 
åaûî_Àn
 -Öage_zù->
m_íd
 -

217 (
REC_N_NEW_EXTRA_BYTES
 - 2));

218 
	}
}

222 
UNIV_INLINE


223 
iboﬁ
 
	$∑ge_zù_avaûabÀ
(

224 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
,

225 
boﬁ
 
is_˛u°
,

226 
ulöt
 
Àngth
,

227 
ulöt
 
¸óã
)

230 
ulöt
 
åaûî_Àn
;

232 
	`ut_ad
(
Àngth
 > 
REC_N_NEW_EXTRA_BYTES
);

234 
åaûî_Àn
 = 
	`∑ge_zù_gë_åaûî_Àn
(
∑ge_zù
, 
is_˛u°
);

238 
Àngth
 -
REC_N_NEW_EXTRA_BYTES
 - 2;

240 i‡(
¸óã
 > 0) {

248 
åaûî_Àn
 +
PAGE_ZIP_DIR_SLOT_SIZE
;

251  (
Àngth
 + 
åaûî_Àn
 + 
∑ge_zù
->
m_íd
 < 
	`∑ge_zù_gë_size
(page_zip));

252 
	}
}

255 
UNIV_INLINE


256 
	$∑ge_zù_des_öô
(
∑ge_zù_des_t
 *
∑ge_zù
)

259 
	`mem£t
(
∑ge_zù
, 0,  *page_zip);

260 
	}
}

264 
∑ge_zù_wrôe_hódî_log
(

265 c⁄° 
byã
 *
d©a
,

266 
ulöt
 
Àngth
,

267 
må_t
 *
må
);

275 
UNIV_INLINE


276 
	$∑ge_zù_wrôe_hódî
(
∑ge_zù_des_t
 *
∑ge_zù
, c⁄° 
byã
 *
°r
,

277 
ulöt
 
Àngth
, 
må_t
 *
må
) {

278 
ulöt
 
pos
;

280 
	`ut_ad
(
	`∑ge_zù_sim∂e_vÆid©e
(
∑ge_zù
));

281 
	`UNIV_MEM_ASSERT_RW
(
∑ge_zù
->
d©a
, 
	`∑ge_zù_gë_size
(page_zip));

283 
pos
 = 
	`∑ge_off£t
(
°r
);

285 
	`ut_ad
(
pos
 < 
PAGE_DATA
);

287 
	`mem˝y
(
∑ge_zù
->
d©a
 + 
pos
, 
°r
, 
Àngth
);

292 i‡(
må
) {

293 #i‚de‡
UNIV_HOTBACKUP


294 
	`∑ge_zù_wrôe_hódî_log
(
°r
, 
Àngth
, 
må
);

297 
	}
}

302 
UNIV_INLINE


303 
	$∑ge_zù_com¥ess_wrôe_log_no_d©a
(

304 
ulöt
 
Àvñ
,

305 c⁄° 
∑ge_t
 *
∑ge
,

306 
di˘_ödex_t
 *
ödex
,

307 
må_t
 *
må
)

309 #i‚de‡
UNIV_HOTBACKUP


311 
byã
 *
log_±r
 = 
nuŒ±r
;

312 i‡(!
	`mlog_›í_™d_wrôe_ödex
(
må
, 
∑ge
, 
ödex
,

313 
MLOG_ZIP_PAGE_COMPRESS_NO_DATA
, 1, 
log_±r
)) {

317 
	`mach_wrôe_to_1
(
log_±r
, 
Àvñ
);

318 
	`mlog_˛o£
(
må
, 
log_±r
 + 1);

321 
	}
}

325 
UNIV_INLINE


326 
byã
 *
	$∑ge_zù_∑r£_com¥ess_no_d©a
(

327 
byã
 *
±r
,

328 
byã
 *
íd_±r
,

329 
∑ge_t
 *
∑ge
,

330 
∑ge_zù_des_t
 *
∑ge_zù
,

331 
di˘_ödex_t
 *
ödex
)

333 
ulöt
 
Àvñ
;

334 i‡(
íd_±r
 =
±r
) {

335  (
nuŒ±r
);

338 
Àvñ
 = 
	`mach_ªad_‰om_1
(
±r
);

344 i‡(
∑ge
 && !
	`∑ge_zù_com¥ess
(
∑ge_zù
,Öage, 
ödex
, 
Àvñ
, 
nuŒ±r
)) {

345 
ut_îr‹
;

348  (
±r
 + 1);

349 
	}
}

351 #i‚de‡
UNIV_HOTBACKUP


354 
UNIV_INLINE


355 
	$∑ge_zù_ª£t_°©_≥r_ödex
() {

356 
	`muãx_íãr
(&
∑ge_zù_°©_≥r_ödex_muãx
);

358 
∑ge_zù_°©_≥r_ödex
.
	`îa£
’age_zù_°©_≥r_ödex.
	`begö
(),

359 
∑ge_zù_°©_≥r_ödex
.
	`íd
());

361 
	`muãx_exô
(&
∑ge_zù_°©_≥r_ödex_muãx
);

362 
	}
}

367 
UNIV_INLINE


368 
byã
 *
	$∑ge_zù_dú_föd_low
(
byã
 *
¶Ÿ
,

369 
byã
 *
íd
,

370 
ulöt
 
off£t
)

372 
	`ut_ad
(
¶Ÿ
 <
íd
);

374 ; 
¶Ÿ
 < 
íd
; slŸ +
PAGE_ZIP_DIR_SLOT_SIZE
) {

375 i‡((
	`mach_ªad_‰om_2
(
¶Ÿ
Ë& 
PAGE_ZIP_DIR_SLOT_MASK
Ë=
off£t
) {

376  (
¶Ÿ
);

380  (
nuŒ±r
);

381 
	}
}

386 
UNIV_INLINE


387 
ulöt
 
	$∑ge_zù_dú_u£r_size
(

388 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
)

390 
ulöt
 
size
 = 
PAGE_ZIP_DIR_SLOT_SIZE
 * 
	`∑ge_gë_n_ªcs
(
∑ge_zù
->
d©a
);

391 
	`ut_ad
(
size
 <
	`∑ge_zù_dú_size
(
∑ge_zù
));

392  (
size
);

393 
	}
}

397 
UNIV_INLINE


398 
byã
 *
	$∑ge_zù_dú_föd_‰ì
(

399 
∑ge_zù_des_t
 *
∑ge_zù
,

400 
ulöt
 
off£t
)

402 
byã
 *
íd
 = 
∑ge_zù
->
d©a
 + 
	`∑ge_zù_gë_size
(page_zip);

404 
	`ut_ad
(
	`∑ge_zù_sim∂e_vÆid©e
(
∑ge_zù
));

406  (
	`∑ge_zù_dú_föd_low
(
íd
 - 
	`∑ge_zù_dú_size
(
∑ge_zù
),

407 
íd
 - 
	`∑ge_zù_dú_u£r_size
(
∑ge_zù
),

408 
off£t
));

409 
	}
}

414 
UNIV_INLINE


415 
ulöt
 
	$∑ge_zù_dú_°¨t_offs
(

416 c⁄° 
∑ge_zù_des_t
 *
∑ge_zù
,

417 
ulöt
 
n_dí£
)

419 
	`ut_ad
(
n_dí£
 * 
PAGE_ZIP_DIR_SLOT_SIZE
 < 
	`∑ge_zù_gë_size
(
∑ge_zù
));

421  (
	`∑ge_zù_gë_size
(
∑ge_zù
Ë- 
n_dí£
 * 
PAGE_ZIP_DIR_SLOT_SIZE
);

422 
	}
}

424 #ifde‡
UNIV_MATERIALIZE


425 #unde‡
UNIV_INLINE


426 
	#UNIV_INLINE
 
UNIV_INLINE_ORIGINAL


	)

	@pars0grm.h

33 #i‚de‡
YY_YY_PARS0GRM_TAB_H_INCLUDED


34 
	#YY_YY_PARS0GRM_TAB_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
yydebug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥
 {

47 
	mPARS_INT_LIT
 = 258,

48 
	mPARS_FLOAT_LIT
 = 259,

49 
	mPARS_STR_LIT
 = 260,

50 
	mPARS_FIXBINARY_LIT
 = 261,

51 
	mPARS_BLOB_LIT
 = 262,

52 
	mPARS_NULL_LIT
 = 263,

53 
	mPARS_ID_TOKEN
 = 264,

54 
	mPARS_AND_TOKEN
 = 265,

55 
	mPARS_OR_TOKEN
 = 266,

56 
	mPARS_NOT_TOKEN
 = 267,

57 
	mPARS_GE_TOKEN
 = 268,

58 
	mPARS_LE_TOKEN
 = 269,

59 
	mPARS_NE_TOKEN
 = 270,

60 
	mPARS_PROCEDURE_TOKEN
 = 271,

61 
	mPARS_IN_TOKEN
 = 272,

62 
	mPARS_OUT_TOKEN
 = 273,

63 
	mPARS_BINARY_TOKEN
 = 274,

64 
	mPARS_BLOB_TOKEN
 = 275,

65 
	mPARS_INT_TOKEN
 = 276,

66 
	mPARS_INTEGER_TOKEN
 = 277,

67 
	mPARS_FLOAT_TOKEN
 = 278,

68 
	mPARS_CHAR_TOKEN
 = 279,

69 
	mPARS_IS_TOKEN
 = 280,

70 
	mPARS_BEGIN_TOKEN
 = 281,

71 
	mPARS_END_TOKEN
 = 282,

72 
	mPARS_IF_TOKEN
 = 283,

73 
	mPARS_THEN_TOKEN
 = 284,

74 
	mPARS_ELSE_TOKEN
 = 285,

75 
	mPARS_ELSIF_TOKEN
 = 286,

76 
	mPARS_LOOP_TOKEN
 = 287,

77 
	mPARS_WHILE_TOKEN
 = 288,

78 
	mPARS_RETURN_TOKEN
 = 289,

79 
	mPARS_SELECT_TOKEN
 = 290,

80 
	mPARS_SUM_TOKEN
 = 291,

81 
	mPARS_COUNT_TOKEN
 = 292,

82 
	mPARS_DISTINCT_TOKEN
 = 293,

83 
	mPARS_FROM_TOKEN
 = 294,

84 
	mPARS_WHERE_TOKEN
 = 295,

85 
	mPARS_FOR_TOKEN
 = 296,

86 
	mPARS_DDOT_TOKEN
 = 297,

87 
	mPARS_READ_TOKEN
 = 298,

88 
	mPARS_ORDER_TOKEN
 = 299,

89 
	mPARS_BY_TOKEN
 = 300,

90 
	mPARS_ASC_TOKEN
 = 301,

91 
	mPARS_DESC_TOKEN
 = 302,

92 
	mPARS_INSERT_TOKEN
 = 303,

93 
	mPARS_INTO_TOKEN
 = 304,

94 
	mPARS_VALUES_TOKEN
 = 305,

95 
	mPARS_UPDATE_TOKEN
 = 306,

96 
	mPARS_SET_TOKEN
 = 307,

97 
	mPARS_DELETE_TOKEN
 = 308,

98 
	mPARS_CURRENT_TOKEN
 = 309,

99 
	mPARS_OF_TOKEN
 = 310,

100 
	mPARS_CREATE_TOKEN
 = 311,

101 
	mPARS_TABLE_TOKEN
 = 312,

102 
	mPARS_INDEX_TOKEN
 = 313,

103 
	mPARS_UNIQUE_TOKEN
 = 314,

104 
	mPARS_CLUSTERED_TOKEN
 = 315,

105 
	mPARS_DOES_NOT_FIT_IN_MEM_TOKEN
 = 316,

106 
	mPARS_ON_TOKEN
 = 317,

107 
	mPARS_ASSIGN_TOKEN
 = 318,

108 
	mPARS_DECLARE_TOKEN
 = 319,

109 
	mPARS_CURSOR_TOKEN
 = 320,

110 
	mPARS_SQL_TOKEN
 = 321,

111 
	mPARS_OPEN_TOKEN
 = 322,

112 
	mPARS_FETCH_TOKEN
 = 323,

113 
	mPARS_CLOSE_TOKEN
 = 324,

114 
	mPARS_NOTFOUND_TOKEN
 = 325,

115 
	mPARS_TO_BINARY_TOKEN
 = 326,

116 
	mPARS_SUBSTR_TOKEN
 = 327,

117 
	mPARS_CONCAT_TOKEN
 = 328,

118 
	mPARS_INSTR_TOKEN
 = 329,

119 
	mPARS_LENGTH_TOKEN
 = 330,

120 
	mPARS_COMMIT_TOKEN
 = 331,

121 
	mPARS_ROLLBACK_TOKEN
 = 332,

122 
	mPARS_WORK_TOKEN
 = 333,

123 
	mPARS_UNSIGNED_TOKEN
 = 334,

124 
	mPARS_EXIT_TOKEN
 = 335,

125 
	mPARS_FUNCTION_TOKEN
 = 336,

126 
	mPARS_LOCK_TOKEN
 = 337,

127 
	mPARS_SHARE_TOKEN
 = 338,

128 
	mPARS_MODE_TOKEN
 = 339,

129 
	mPARS_LIKE_TOKEN
 = 340,

130 
	mPARS_LIKE_TOKEN_EXACT
 = 341,

131 
	mPARS_LIKE_TOKEN_PREFIX
 = 342,

132 
	mPARS_LIKE_TOKEN_SUFFIX
 = 343,

133 
	mPARS_LIKE_TOKEN_SUBSTR
 = 344,

134 
	mPARS_TABLE_NAME_TOKEN
 = 345,

135 
	mPARS_COMPACT_TOKEN
 = 346,

136 
	mPARS_BLOCK_SIZE_TOKEN
 = 347,

137 
	mPARS_BIGINT_TOKEN
 = 348,

138 
	mNEG
 = 349

143 #i‡!
deföed
 
YYSTYPE
 && !deföed 
YYSTYPE_IS_DECLARED


144 
	tYYSTYPE
;

145 
	#YYSTYPE_IS_TRIVIAL
 1

	)

146 
	#YYSTYPE_IS_DECLARED
 1

	)

149 
YYSTYPE
 
yylvÆ
;

151 
yy∑r£
();

	@pars0opt.h

33 #i‚de‡
∑rs0›t_h


34 
	#∑rs0›t_h


	)

36 
	~"di˘0ty≥s.h
"

37 
	~"∑rs0sym.h
"

38 
	~"que0ty≥s.h
"

39 
	~"row0£l.h
"

40 
	~"univ.i
"

41 
	~"u§0ty≥s.h
"

46 
›t_£¨ch_∂™
(
£l_node_t
 *
£l_node
);

53 
›t_föd_Æl_cﬁs
(

54 
iboﬁ
 
c›y_vÆ
,

56 
di˘_ödex_t
 *
ödex
,

57 
sym_node_li°_t
 *
cﬁ_li°
,

59 
∂™_t
 *
∂™
,

60 
que_node_t
 *
exp
);

	@pars0pars.h

33 #i‚de‡
∑rs0∑rs_h


34 
	#∑rs0∑rs_h


	)

36 
	~"∑rs0ty≥s.h
"

37 
	~"que0ty≥s.h
"

38 
	~"row0mysql.h
"

39 
	~"row0ty≥s.h
"

40 
	~"åx0ty≥s.h
"

41 
	~"univ.i
"

42 
	~"u§0ty≥s.h
"

43 
	~"ut0vec.h
"

49 
	$iboﬁ
 (*
	t∑rs_u£r_func_cb_t
)(*
	t¨g
, *
	tu£r_¨g
);

53 
yydebug
;

57 
sym_èb_t
 *
∑rs_sym_èb_globÆ
;

60 
ib_muãx_t
 
∑rs_muãx
;

62 
∑rs_ªs_w‹d_t
 
∑rs_to_bö¨y_tokí
;

63 
∑rs_ªs_w‹d_t
 
∑rs_sub°r_tokí
;

64 
∑rs_ªs_w‹d_t
 
∑rs_c⁄ˇt_tokí
;

65 
∑rs_ªs_w‹d_t
 
∑rs_Àngth_tokí
;

66 
∑rs_ªs_w‹d_t
 
∑rs_ö°r_tokí
;

67 
∑rs_ªs_w‹d_t
 
∑rs_cou¡_tokí
;

68 
∑rs_ªs_w‹d_t
 
∑rs_sum_tokí
;

69 
∑rs_ªs_w‹d_t
 
∑rs_di°ö˘_tokí
;

70 
∑rs_ªs_w‹d_t
 
∑rs_bö¨y_tokí
;

71 
∑rs_ªs_w‹d_t
 
∑rs_blob_tokí
;

72 
∑rs_ªs_w‹d_t
 
∑rs_öt_tokí
;

73 
∑rs_ªs_w‹d_t
 
∑rs_bigöt_tokí
;

74 
∑rs_ªs_w‹d_t
 
∑rs_ch¨_tokí
;

75 
∑rs_ªs_w‹d_t
 
∑rs_Êﬂt_tokí
;

76 
∑rs_ªs_w‹d_t
 
∑rs_upd©e_tokí
;

77 
∑rs_ªs_w‹d_t
 
∑rs_asc_tokí
;

78 
∑rs_ªs_w‹d_t
 
∑rs_desc_tokí
;

79 
∑rs_ªs_w‹d_t
 
∑rs_›í_tokí
;

80 
∑rs_ªs_w‹d_t
 
∑rs_˛o£_tokí
;

81 
∑rs_ªs_w‹d_t
 
∑rs_sh¨e_tokí
;

82 
∑rs_ªs_w‹d_t
 
∑rs_unique_tokí
;

83 
∑rs_ªs_w‹d_t
 
∑rs_˛u°îed_tokí
;

85 
ulöt
 
∑rs_°¨_díŸî
;

88 
	#PARS_INPUT
 0

	)

89 
	#PARS_OUTPUT
 1

	)

90 
	#PARS_NOT_PARAM
 2

	)

92 
	`yy∑r£
();

95 
	`∑rs_öô
();

98 
	`∑rs_˛o£
();

102 
que_t
 *
	`∑rs_sql
(
∑rs_öfo_t
 *
öfo
,

103 c⁄° *
°r
);

110 
	`∑rs_gë_Àx_ch¨s
(*
buf
, 
size_t
 
max_size
);

113 
	`yyîr‹
(c⁄° *
s
);

116 
sym_node_t
 *
	`∑rs_v¨übÀ_de˛¨©i⁄
(

117 
sym_node_t
 *
node
,

119 
∑rs_ªs_w‹d_t
 *
ty≥
);

122 
func_node_t
 *
	`∑rs_func
(

123 
que_node_t
 *
ªs_w‹d
,

124 
que_node_t
 *
¨g
);

129 
	`∑rs_like_ªböd
(
sym_node_t
 *
node
,

130 c⁄° 
byã
 *
±r
,

131 
ulöt
 
Àn
);

134 
func_node_t
 *
	`∑rs_›
(
func
,

135 
que_node_t
 *
¨g1
,

136 
que_node_t
 *
¨g2
);

140 
‹dî_node_t
 *
	`∑rs_‹dî_by
(

141 
sym_node_t
 *
cﬁumn
,

142 
∑rs_ªs_w‹d_t
 *
asc
);

146 
£l_node_t
 *
	`∑rs_£À˘_li°
(

147 
que_node_t
 *
£À˘_li°
,

148 
sym_node_t
 *
öto_li°
);

151 
que_node_t
 *
	`∑rs_curs‹_de˛¨©i⁄
(

152 
sym_node_t
 *
sym_node
,

154 
£l_node_t
 *
£À˘_node
);

157 
que_node_t
 *
	`∑rs_fun˘i⁄_de˛¨©i⁄
(

158 
sym_node_t
 *
sym_node
);

162 
£l_node_t
 *
	`∑rs_£À˘_°©emít
(

163 
£l_node_t
 *
£À˘_node
,

165 
sym_node_t
 *
èbÀ_li°
,

166 
que_node_t
 *
£¨ch_c⁄d
,

167 
∑rs_ªs_w‹d_t
 *
f‹_upd©e
,

168 
∑rs_ªs_w‹d_t
 *
c⁄si°ít_ªad
,

170 
‹dî_node_t
 *
‹dî_by
);

173 
cﬁ_assign_node_t
 *
	`∑rs_cﬁumn_assignmít
(

174 
sym_node_t
 *
cﬁumn
,

175 
que_node_t
 *
exp
);

178 
upd_node_t
 *
	`∑rs_upd©e_°©emít_°¨t
(

179 
iboﬁ
 
is_dñëe
,

180 
sym_node_t
 *
èbÀ_sym
,

181 
cﬁ_assign_node_t
 *
cﬁ_assign_li°
);

185 
upd_node_t
 *
	`∑rs_upd©e_°©emít
(

186 
upd_node_t
 *
node
,

187 
sym_node_t
 *
curs‹_sym
,

189 
que_node_t
 *
£¨ch_c⁄d
);

192 
ös_node_t
 *
	`∑rs_ö£π_°©emít
(

193 
sym_node_t
 *
èbÀ_sym
,

194 
que_node_t
 *
vÆues_li°
,

195 
£l_node_t
 *
£À˘
);

198 
sym_node_t
 *
	`∑rs_∑ømëî_de˛¨©i⁄
(

199 
sym_node_t
 *
node
,

201 
ulöt
 
∑øm_ty≥
,

203 
∑rs_ªs_w‹d_t
 *
ty≥
);

206 
ñsif_node_t
 *
	`∑rs_ñsif_ñemít
(

207 
que_node_t
 *
c⁄d
,

208 
que_node_t
 *
°©_li°
);

211 
if_node_t
 *
	`∑rs_if_°©emít
(

212 
que_node_t
 *
c⁄d
,

213 
que_node_t
 *
°©_li°
,

214 
que_node_t
 *
ñ£_∑π
);

217 
f‹_node_t
 *
	`∑rs_f‹_°©emít
(

218 
sym_node_t
 *
lo›_v¨
,

219 
que_node_t
 *
lo›_°¨t_limô
,

220 
que_node_t
 *
lo›_íd_limô
,

221 
que_node_t
 *
°©_li°
);

224 
whûe_node_t
 *
	`∑rs_whûe_°©emít
(

225 
que_node_t
 *
c⁄d
,

226 
que_node_t
 *
°©_li°
);

229 
exô_node_t
 *
	`∑rs_exô_°©emít
();

232 
ªtu∫_node_t
 *
	`∑rs_ªtu∫_°©emít
();

235 
assign_node_t
 *
	`∑rs_assignmít_°©emít
(

236 
sym_node_t
 *
v¨
,

237 
que_node_t
 *
vÆ
);

241 
„tch_node_t
 *
	`∑rs_„tch_°©emít
(

242 
sym_node_t
 *
curs‹
,

243 
sym_node_t
 *
öto_li°
,

244 
sym_node_t
 *
u£r_func
);

247 
›í_node_t
 *
	`∑rs_›í_°©emít
(
ulöt
 
ty≥
,

249 
sym_node_t
 *
curs‹
);

252 
commô_node_t
 *
	`∑rs_commô_°©emít
();

255 
rﬁl_node_t
 *
	`∑rs_rﬁlback_°©emít
();

258 
sym_node_t
 *
	`∑rs_cﬁumn_def
(sym_node_à*
sym_node
,

260 
∑rs_ªs_w‹d_t
 *
ty≥
,

261 
sym_node_t
 *
Àn
,

263 *
is_unsig√d
,

265 *
is_nŸ_nuŒ
);

283 
èb_node_t
 *
	`∑rs_¸óã_èbÀ
(
sym_node_t
 *
èbÀ_sym
, sym_node_à*
cﬁumn_defs
,

284 
sym_node_t
 *
com∑˘
, sym_node_à*
block_size
,

285 *
nŸ_fô_ö_mem‹y
);

289 
öd_node_t
 *
	`∑rs_¸óã_ödex
(

290 
∑rs_ªs_w‹d_t
 *
unique_def
,

291 
∑rs_ªs_w‹d_t
 *
˛u°îed_def
,

292 
sym_node_t
 *
ödex_sym
,

294 
sym_node_t
 *
èbÀ_sym
,

296 
sym_node_t
 *
cﬁumn_li°
);

299 
que_f‹k_t
 *
	`∑rs_¥o˚duª_deföôi⁄
(

300 
sym_node_t
 *
sym_node
,

302 
sym_node_t
 *
∑øm_li°
,

303 
que_node_t
 *
°©_li°
);

314 
que_thr_t
 *
	$∑rs_com∂ëe_gøph_f‹_exec
(
que_node_t
 *
node
, 
åx_t
 *
åx
,

315 
mem_hóp_t
 *
hóp
,

316 
row_¥ebuût_t
 *
¥ebuût
)

317 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

321 
∑rs_öfo_t
 *
	`∑rs_öfo_¸óã
();

324 
	`∑rs_öfo_‰ì
(
∑rs_öfo_t
 *
öfo
);

333 
	`∑rs_öfo_add_lôîÆ
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
,

334 c⁄° *
addªss
, 
ulöt
 
Àngth
, ulöà
ty≥
,

335 
ulöt
 
¥ty≥
);

342 
	`∑rs_öfo_add_°r_lôîÆ
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
,

343 c⁄° *
°r
);

348 
	`∑rs_öfo_böd_lôîÆ
(
∑rs_öfo_t
 *
öfo
,

349 c⁄° *
«me
,

350 c⁄° *
addªss
,

351 
ulöt
 
Àngth
,

352 
ulöt
 
ty≥
,

353 
ulöt
 
¥ty≥
);

361 
	`∑rs_öfo_böd_v¨ch¨_lôîÆ
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
,

362 c⁄° 
byã
 *
°r
, 
ulöt
 
°r_Àn
);

369 
	`∑rs_öfo_böd_öt4_lôîÆ
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
,

370 c⁄° 
ib_uöt32_t
 *
vÆ
);

377 
	`∑rs_öfo_böd_öt8_lôîÆ
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
,

378 c⁄° 
ib_uöt64_t
 *
vÆ
);

385 
	`∑rs_öfo_böd_fun˘i⁄
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
,

386 
∑rs_u£r_func_cb_t
 
func
, *
¨g
);

393 
	`∑rs_öfo_böd_id
(
∑rs_öfo_t
 *
öfo
, 
iboﬁ
 
c›y_«me
, c⁄° *
«me
,

394 c⁄° *
id
);

404 
	`∑rs_öfo_add_öt4_lôîÆ
(
∑rs_öfo_t
 *
öfo
,

405 c⁄° *
«me
,

406 
löt
 
vÆ
);

416 
	`∑rs_öfo_add_uŒ_lôîÆ
(
∑rs_öfo_t
 *
öfo
,

417 c⁄° *
«me
,

418 
ib_uöt64_t
 
vÆ
);

425 
	`∑rs_öfo_böd_uŒ_lôîÆ
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
,

426 c⁄° 
ib_uöt64_t
 *
vÆ
);

432 
	`∑rs_öfo_add_id
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
, c⁄° *
id
);

436 
∑rs_bound_lô_t
 *
	`∑rs_öfo_gë_bound_lô
(

437 
∑rs_öfo_t
 *
öfo
,

438 c⁄° *
«me
);

444 
∑rs_bound_id_t
 *
	`∑rs_öfo_gë_bound_id
(
∑rs_öfo_t
 *
öfo
, c⁄° *
«me
);

447 
	`∑rs_Àxî_˛o£
();

450 
	s∑rs_öfo_t
 {

451 
mem_hóp_t
 *
hóp
;

453 
ib_ve˘‹_t
 *
funcs
;

455 
ib_ve˘‹_t
 *
bound_lôs
;

457 
ib_ve˘‹_t
 *
bound_ids
;

460 
iboﬁ
 
gøph_owns_us
;

465 
	s∑rs_u£r_func_t
 {

466 c⁄° *
«me
;

467 
∑rs_u£r_func_cb_t
 
func
;

468 *
¨g
;

472 
	s∑rs_bound_lô_t
 {

473 c⁄° *
«me
;

474 c⁄° *
addªss
;

475 
ulöt
 
Àngth
;

476 
ulöt
 
ty≥
;

477 
ulöt
 
¥ty≥
;

478 
sym_node_t
 *
node
;

482 
	s∑rs_bound_id_t
 {

483 c⁄° *
«me
;

484 c⁄° *
id
;

488 
	s∑rs_ªs_w‹d_t
 {

489 
code
;

495 
	sfunc_node_t
 {

496 
que_comm⁄_t
 
comm⁄
;

497 
func
;

498 
ulöt
 
f˛ass
;

499 
que_node_t
 *
¨gs
;

500 
	`UT_LIST_NODE_T
(
func_node_t
Ë
c⁄d_li°
;

504 
	`UT_LIST_NODE_T
(
func_node_t
Ë
func_node_li°
;

510 
	s‹dî_node_t
 {

511 
que_comm⁄_t
 
comm⁄
;

512 
sym_node_t
 *
cﬁumn
;

513 
iboﬁ
 
asc
;

517 
	s¥oc_node_t
 {

518 
que_comm⁄_t
 
comm⁄
;

519 
sym_node_t
 *
¥oc_id
;

521 
sym_node_t
 *
∑øm_li°
;

522 
que_node_t
 *
°©_li°
;

523 
sym_èb_t
 *
sym_èb
;

527 
	sñsif_node_t
 {

528 
que_comm⁄_t
 
comm⁄
;

529 
que_node_t
 *
c⁄d
;

530 
que_node_t
 *
°©_li°
;

534 
	sif_node_t
 {

535 
que_comm⁄_t
 
comm⁄
;

536 
que_node_t
 *
c⁄d
;

537 
que_node_t
 *
°©_li°
;

538 
que_node_t
 *
ñ£_∑π
;

539 
ñsif_node_t
 *
ñsif_li°
;

543 
	swhûe_node_t
 {

544 
que_comm⁄_t
 
comm⁄
;

545 
que_node_t
 *
c⁄d
;

546 
que_node_t
 *
°©_li°
;

550 
	sf‹_node_t
 {

551 
que_comm⁄_t
 
comm⁄
;

552 
sym_node_t
 *
lo›_v¨
;

557 
que_node_t
 *
lo›_°¨t_limô
;

558 
que_node_t
 *
lo›_íd_limô
;

559 
löt
 
lo›_íd_vÆue
;

563 
que_node_t
 *
°©_li°
;

567 
	sexô_node_t
 {

568 
que_comm⁄_t
 
comm⁄
;

572 
	sªtu∫_node_t
 {

573 
que_comm⁄_t
 
comm⁄
;

577 
	sassign_node_t
 {

578 
que_comm⁄_t
 
comm⁄
;

579 
sym_node_t
 *
v¨
;

580 
que_node_t
 *
vÆ
;

584 
	scﬁ_assign_node_t
 {

585 
que_comm⁄_t
 
comm⁄
;

586 
sym_node_t
 *
cﬁ
;

587 
que_node_t
 *
vÆ
;

592 
	#PARS_FUNC_ARITH
 1

	)

593 
	#PARS_FUNC_LOGICAL
 2

	)

594 
	#PARS_FUNC_CMP
 3

	)

595 
	#PARS_FUNC_PREDEFINED
 4

	)

596 
	#PARS_FUNC_AGGREGATE
 5

	)

597 
	#PARS_FUNC_OTHER
 \

598 6

	)

602 
	~"∑rs0∑rs.ic
"

	@pars0pars.ic

	@pars0sym.h

33 #i‚de‡
∑rs0sym_h


34 
	#∑rs0sym_h


	)

36 
	~"di˘0ty≥s.h
"

37 
	~"∑rs0ty≥s.h
"

38 
	~"que0ty≥s.h
"

39 
	~"row0ty≥s.h
"

40 
	~"univ.i
"

41 
	~"u§0ty≥s.h
"

45 
sym_èb_t
 *
sym_èb_¸óã
(

46 
mem_hóp_t
 *
hóp
);

50 
sym_èb_‰ì_¥iv©e
(
sym_èb_t
 *
sym_èb
);

53 
sym_node_t
 *
sym_èb_add_öt_lô
(
sym_èb_t
 *
sym_èb
,

54 
ulöt
 
vÆ
);

57 
sym_node_t
 *
sym_èb_add_°r_lô
(
sym_èb_t
 *
sym_èb
,

58 c⁄° 
byã
 *
°r
,

60 
ulöt
 
Àn
);

63 
sym_node_t
 *
sym_èb_add_bound_lô
(

64 
sym_èb_t
 *
sym_èb
,

65 c⁄° *
«me
,

66 
ulöt
 *
lô_ty≥
);

69 
sym_node_t
 *
sym_èb_ªböd_lô
(

71 
sym_node_t
 *
node
,

72 c⁄° *
addªss
,

73 
ulöt
 
Àngth
);

76 
sym_node_t
 *
sym_èb_add_nuŒ_lô
(
sym_èb_t
 *
sym_èb
);

79 
sym_node_t
 *
sym_èb_add_id
(
sym_èb_t
 *
sym_èb
,

80 
byã
 *
«me
,

81 
ulöt
 
Àn
);

85 
sym_node_t
 *
sym_èb_add_bound_id
(
sym_èb_t
 *
sym_èb
,

86 c⁄° *
«me
);

89 
	#SYM_CLUST_FIELD_NO
 0

	)

91 
	#SYM_SEC_FIELD_NO
 1

	)

94 
	esym_èb_íåy
 {

95 
	mSYM_UNSET
,

96 
	mSYM_VAR
 = 91,

98 
	mSYM_IMPLICIT_VAR
,

100 
	mSYM_LIT
,

101 
	mSYM_TABLE_REF_COUNTED
,

103 
	mSYM_TABLE
,

104 
	mSYM_COLUMN
,

105 
	mSYM_CURSOR
,

106 
	mSYM_PROCEDURE_NAME
,

107 
	mSYM_INDEX
,

108 
	mSYM_FUNCTION


112 
	ssym_node_t
 {

113 
que_comm⁄_t
 
	mcomm⁄
;

133 
sym_node_t
 *
	mödúe˘i⁄
;

138 
sym_node_t
 *
	mÆüs
;

143 
UT_LIST_NODE_T
(
sym_node_t
)

144 
	mcﬁ_v¨_li°
;

148 
iboﬁ
 
	mc›y_vÆ
;

152 
ulöt
 
	mfõld_nos
[2];

164 
iboﬁ
 
	mªsﬁved
;

169 
sym_èb_íåy
 
	mtokí_ty≥
;

171 c⁄° *
	m«me
;

172 
ulöt
 
	m«me_Àn
;

173 
di˘_èbÀ_t
 *
	mèbÀ
;

176 
ulöt
 
	mcﬁ_no
;

178 
£l_buf_t
 *
	m¥e„tch_buf
;

182 
£l_node_t
 *
	mcurs‹_def
;

185 
ulöt
 
	m∑øm_ty≥
;

189 
sym_èb_t
 *
	msym_èbÀ
;

191 
UT_LIST_NODE_T
(
sym_node_t
)

192 
	msym_li°
;

194 
sym_node_t
 *
	mlike_node
;

196 
MDL_tickë
 *
	mmdl
;

200 
	ssym_èb_t
 {

201 
que_t
 *
	mquîy_gøph
;

204 c⁄° *
	msql_°rög
;

206 
size_t
 
	m°rög_Àn
;

208 
	m√xt_ch¨_pos
;

212 
∑rs_öfo_t
 *
	möfo
;

213 
sym_node_li°_t
 
	msym_li°
;

216 
UT_LIST_BASE_NODE_T
(
func_node_t
)

217 
	mfunc_node_li°
;

220 
mem_hóp_t
 *
	mhóp
;

	@pars0types.h

33 #i‚de‡
∑rs0ty≥s_h


34 
	#∑rs0ty≥s_h


	)

36 
	~"univ.i
"

38 
	g∑rs_öfo_t
;

39 
	g∑rs_u£r_func_t
;

40 
	g∑rs_bound_lô_t
;

41 
	g∑rs_bound_id_t
;

42 
	gsym_node_t
;

43 
	gsym_èb_t
;

44 
	g∑rs_ªs_w‹d_t
;

45 
	gfunc_node_t
;

46 
	g‹dî_node_t
;

47 
	g¥oc_node_t
;

48 
	gñsif_node_t
;

49 
	gif_node_t
;

50 
	gwhûe_node_t
;

51 
	gf‹_node_t
;

52 
	gexô_node_t
;

53 
	gªtu∫_node_t
;

54 
	gassign_node_t
;

55 
	gcﬁ_assign_node_t
;

57 
	$UT_LIST_BASE_NODE_T
(
	tsym_node_t
Ë
	tsym_node_li°_t
;

	@pleaf.h

15 #i‚de‡
PLEAF_H


16 
	#PLEAF_H


	)

19 
	#PLEAF_NORMAL
 (0)

	)

20 
	#PLEAF_SWITCH
 (1)

	)

21 
	#PLEAF_RESET
 (2)

	)

24 
PLófLookupTu∂e
(

25 
uöt64
 
off£t
,

26 
S«pshŸ
 
¢≠shŸ
,

27 
Size
 
tu∂e_size
,

28 ** 
ªt_vÆue
);

30 
boﬁ


31 
PLófIsLe·Lookup
(

32 
uöt64
 
À·_off£t
,

33 
uöt64
 
right_off£t
,

34 
Tønß˘i⁄Id
 
xid_bound
,

35 
S«pshŸ
 
¢≠shŸ
);

38 
PLófAµídTu∂e
(

39 
uöt64
 
off£t
,

40 
uöt64
* 
ªt_off£t
,

41 
Tønß˘i⁄Id
 
xmö
,

42 
Tønß˘i⁄Id
 
xmax
,

43 
Size
 
tu∂e_size
,

44 c⁄° * 
tu∂e
,

45 
LWLock
* 
rwlock
);

47 
boﬁ


48 
PLófIsLe·Upd©e
(

49 
uöt64
 
À·_off£t
,

50 
uöt64
 
right_off£t
,

51 * 
ªt_°©us
);

54 
J3VMShmemInô
();

56 
Size


57 
J3VMShmemSize
();

	@pleaf_buf.h

14 #i‚de‡
PLEAF_BUF_H


15 
	#PLEAF_BUF_H


	)

17 
	#PLEAF_INIT_FILE_SIZE
 (
PLEAF_PAGE_SIZE
 * 1024)

	)

19 
	#NPLófPoﬁs
 (2)

	)

21 
	#LEFT_POOL
 (0)

	)

22 
	#RIGHT_POOL
 (1)

	)

24 
	#InvÆidGid
 ((
PLófGíNumbî
)(-1))

	)

29 
	s∂ó·ag


31 
PLófPageId
 
	m∑ge_id
;

32 
PLófGíNumbî
 
	mgí_no
;

33 
öt16_t
 
	m∑d
;

34 } 
	tPLófTag
;

36 
	#CLEAR_PLEAFTAG
(
a
) \

38 (
a
).
∑ge_id
 = 0, \

39 (
a
).
gí_no
 = 0, \

40 (
a
).
∑d
 = 0 \

41 )

	)

43 
	#INIT_PLEAF_TAG
(
a
, 
xx_∑ge_id
, 
xx_gí_no
) \

45 (
a
).
∑ge_id
 = 
xx_∑ge_id
, \

46 (
a
).
gí_no
 = 
xx_gí_no
 \

47 )

	)

49 
	#PLEAFTAGS_EQUAL
(
a
, 
b
) \

51 (
a
).
∑ge_id
 =(
b
).page_id && \

52 (
a
).
gí_no
 =(
b
).gen_no \

53 )

	)

55 
	sPLófDesc


58 
PLófTag
 
	mèg
;

61 
boﬁ
 
	mis_dúty
;

64 
pg_©omic_uöt32
 
	mªfcou¡
;

65 } 
	tPLófDesc
;

67 
	#PLEAFDESC_PAD_TO_SIZE
 (
SIZEOF_VOID_P
 =8 ? 64 : 1)

	)

69 
	uPLófDescPadded


71 
PLófDesc
 
	m∂ófdesc
;

72 
	m∑d
[
PLEAFDESC_PAD_TO_SIZE
];

73 } 
	tPLófDescPadded
;

75 
	sPLófMëa


82 
pg_©omic_uöt64
 
	mevi˘i⁄_º_idx
;

85 
PLófPageId
 
	mmax_∑ge_ids
[
NPLófPoﬁs
];

88 
	mª˚¡_ödex
;

91 
Tønß˘i⁄Id
 
	mgíî©i⁄_max_xid
;

94 
PLófGíNumbî
 
	mgíî©i⁄_numbîs
[
NPLófPoﬁs
];

96 } 
	tPLófMëa
;

98 
	#PLEAFMETA_PAD_TO_SIZE
 (
SIZEOF_VOID_P
 =8 ? 64 : 1)

	)

100 
	uPLófMëaPadded


102 
PLófMëa
 
	m∂ófmëa
;

103 
	m∑d
[
PLEAFMETA_PAD_TO_SIZE
];

104 } 
	tPLófMëaPadded
;

106 
	#GëPLófDes¸ùt‹
(
id
Ë(&
PLófDes¸ùt‹s
[(id)].
∂ófdesc
)

	)

107 
	#GëPLófBuf„rIOLock
(
id
Ë(&(
PLófBuf„rIOLWLockAºay
[(id)]).
lock
)

	)

109 
	#NUM_OF_STACKS
 (7)

	)

111 
	#STACK_POP_RETRY
 (2)

	)

113 
	#PLófSèckGëTime°amp
(
x
) \

114 ((
uöt32_t
)((
x
 & ~
PLEAF_PAGE_ID_MASK
Ë>> 32))

	)

116 
	#PLófSèckGëPageId
(
x
) \

117 ((
uöt32_t
)(
x
 & 
PLEAF_PAGE_ID_MASK
))

	)

119 
	#PLófSèckMakeHód
(
time°amp
, 
∑ge_id
) \

120 ((((
uöt64_t
)(
time°amp
 + 1Ë<< 32)Ë| 
∑ge_id
)

	)

123 
uöt32_t
 
	tPLófSèckTime°amp
;

131 
PLófPageMëad©a
 
	mhód
;

132 
	m∑d
[56];

134 
Elimö©i⁄AºayD©a
 
	mñim_¨øy
;

135 } 
	tPLófFªeSèckD©a
;

137 
PLófFªeSèckD©a
* 
	tPLófFªeSèck
;

140 
PLófFªeSèckD©a
 
	m‰ì_°acks
[
NUM_OF_STACKS
];

141 } 
	tPLófFªeIn°™˚D©a
;

143 
PLófFªeIn°™˚D©a
* 
	tPLófFªeIn°™˚
;

150 
pg_©omic_uöt64
 
	mº_cou¡î
;

151 
PLófGíNumbî
 
	mgí_no
;

153 
	m∑d
[48];

155 
PLófFªeIn°™˚
 
	m‰ì_ö°™˚s
;

156 } 
	tPLófFªePoﬁD©a
;

158 
PLófFªePoﬁD©a
* 
	tPLófFªePoﬁ
;

162 
PLófFªePoﬁD©a
 
	mpoﬁs
[
NPLófPoﬁs
];

163 } 
	tPLófFªeM™agîD©a
;

165 
PLófFªeM™agîD©a
* 
	tPLófFªeM™agî
;

167 
PLófFªePoﬁ
 
PLófGëFªePoﬁ
(
PLófGíNumbî
 
gí_no
);

168 
PLófGíNumbî
 
PLófGëL©e°Gíî©i⁄Numbî
();

170 
PLófInô
();

172 
Size
 
PLófShmemSize
();

174 
boﬁ
 
PLófIsOff£tVÆid
(
PLófOff£t
 
off£t
);

176 
boﬁ
 
PLófIsGíî©i⁄NumbîVÆidInUpd©e
(
PLófGíNumbî
 
À·
,

177 
PLófGíNumbî
 
right
);

179 
PLófIsGíî©i⁄NumbîVÆidInLookup
(
PLófGíNumbî
 
gí_no
);

181 
PLófGíNumbî
 
PLófGëOldGíî©i⁄Numbî
();

183 
PLófM¨kDútyPage
(
‰ame_id
);

185 
PLófPage
 
PLófGëPage
(
PLófPageId
 
∑ge_id
,

186 
PLófGíNumbî
 
gí_no
,

187 
boﬁ
 
is_√w
,

188 *
‰ame_id
);

190 
PLófRñó£Page
(
‰ame_id
);

192 
PLófPage
 
PLófGëFªePage
(*
‰ame_id
,

193 
PLófFªePoﬁ
 
‰ì_poﬁ
);

195 
PLófPage
 
PLófGëFªePageWôhC≠acôy
(* 
‰ame_id
,

196 
PLófFªePoﬁ
 
‰ì_poﬁ
,

197 
ˇp_ödex
,

198 
ö°_no
);

200 
PLófOff£t
 
PLófFödFªeSlŸ
(
PLófPage
 
∑ge
,

201 
‰ame_id
,

202 
PLófFªePoﬁ
 
‰ì_poﬁ
,

203 
uöt32_t
 
ty≥
);

205 
PLófRñó£FªeSlŸ
(
PLófPage
 
∑ge
,

206 
‰ame_id
,

207 
PLófFªePoﬁ
 
‰ì_poﬁ
,

208 
ˇ∑côy
,

209 
¨øy_ödex
);

211 
PLófPageId
 
PLófFømeToPageId
(
‰ame_id
);

213 
PLófMakeNewGíî©i⁄
();

214 
PLófCÀ™OldGíî©i⁄
();

	@pleaf_bufpage.h

14 #i‚de‡
PLEAF_BUFPAGE_H


15 
	#PLEAF_BUFPAGE_H


	)

17 
	#PLEAF_PAGE_SIZE
 ((
size_t
Ë(1U << 12))

	)

18 
	#PLEAF_PAGE_HEADER_SIZE
 ((
size_t
Ë(1U << 8))

	)

20 
	#PLEAF_PAGE_ID_SIZE
 (1U << 3)

	)

21 
	#PLEAF_PAGE_ID_START
 (0)

	)

23 
	#PLEAF_BITMAP_SIZE
 (1U << 3)

	)

24 
	#PLAEF_BITMAP_START
 (
PLEAF_PAGE_ID_SIZE
)

	)

26 
	#PLEAF_VERSION_INDEX_ARR_SIZE
 ((1U << 8Ë- (1U << 4))

	)

27 
	#PLEAF_VERSION_INDEX_ARR_START
 (
PLEAF_PAGE_ID_SIZE
 + 
PLEAF_BITMAP_SIZE
)

	)

29 
	#PLEAF_VERSION_DATA_SIZE
 (1U << 4)

	)

30 
	#PLEAF_VERSION_DATA_ARR_START
 (
PLEAF_PAGE_HEADER_SIZE
)

	)

32 
	#PLEAF_INVALID_PAGE_ID
 ((
uöt32_t
)(-1))

	)

34 
	#PLEAF_INVALID_OFFSET
 (0)

	)

35 
	#PLEAF_INVALID_VERSION_OFFSET
 ((
uöt64_t
)(-1))

	)

38 
	#PLEAF_PAGE_ID_MASK
 (0x00000000FFFFFFFFULL)

	)

39 
	#PLEAF_PAGE_CAP_MASK
 (0x07U)

	)

40 
	#PLEAF_PAGE_INST_MASK
 (0x0FU)

	)

41 
	#PLEAF_VERSION_ID_MASK
 (0x00000000FFFFFFFFULL)

	)

43 
	#PLEAF_VERSION_TYPE_MASK
 (0x80000000u)

	)

44 
	#PLEAF_VERSION_HEAD_MASK
 (0x7fff0000u)

	)

45 
	#PLEAF_VERSION_TAIL_MASK
 (0x0000ffffu)

	)

47 
	#PLEAF_OFFSET_MASK
 (0x0000FFFFFFFFFFFFULL)

	)

50 
	#PLEAF_DIRECT_ARRAY
 (0x80000000U)

	)

51 
	#PLEAF_INDIRECT_ARRAY
 (0x00000000U)

	)

54 
	#PLEAF_BITMAP_FULL
 (0)

	)

55 
	#PLEAF_BITMAP_INIT
 ((
uöt64_t
)(-1))

	)

58 
	#PLEAF_STACK_HEAD_INIT
 (0x00000000FFFFFFFFULL)

	)

60 
	#PLEAF_OFFSET_TO_PAGE_ID
(
off£t
) \

61 ((
uöt32_t
)(
off£t
 / 
PLEAF_PAGE_SIZE
))

	)

63 
	#PLEAF_OFFSET_TO_INTERNAL_OFFSET
(
off£t
) \

64 (
off£t
 & 
PLEAF_OFFSET_MASK
)

	)

66 
	#PLEAF_OFFSET_TO_GEN_NUMBER
(
off£t
) \

67 ((
uöt16_t
)(
off£t
 >> 48))

	)

69 
	#PLEAF_ARRAY_INDEX_TO_OFFSET
(
∑ge_id
, 
ˇp
, 
¨øy_ödex
) \

70 ((
uöt64_t
)((
∑ge_id
 * 
PLEAF_PAGE_SIZE
) + \

71 
PLEAF_PAGE_HEADER_SIZE
 + \

72 
ˇp
 * 
¨øy_ödex
 * 
PLEAF_VERSION_DATA_SIZE
))

	)

74 
uöt64_t
 
	tPLófBôm≠
;

76 
uöt64_t
 
	tPLófPageMëad©a
;

77 
uöt32_t
 
	tPLófPageId
;

79 
uöt16_t
 
	tPLófGíNumbî
;

81 
uöt64_t
 
	tPLófVîsi⁄Id
;

82 
uöt64_t
 
	tPLófVîsi⁄Off£t
;

84 
uöt64_t
 
	tPLófOff£t
;

92 
uöt32_t
 
	tPLófVîsi⁄IndexD©a
;

93 
PLófVîsi⁄IndexD©a
* 
	tPLófVîsi⁄Index
;

101 
PLófVîsi⁄Id
 
	mvîsi⁄_id
;

102 
PLófVîsi⁄Off£t
 
	mvîsi⁄_off£t
;

103 } 
	tPLófVîsi⁄D©a
;

105 
PLófVîsi⁄D©a
* 
	tPLófVîsi⁄
;

107 
	#N_VERSION_INDEX_ARR
 60

	)

109 
	#ASSERT_ARR_IDX
(
¨øy_ödex
) \

110 
	`as£π
(((0 <
¨øy_ödex
Ë&& (¨øy_ödex <60)))

	)

112 
	#ASSERT_OFFSET
(
off£t
, 
ˇp
) \

114 
	`as£π
(
off£t
 != 0); \

115 
	`as£π
(((
off£t
 % 
PLEAF_PAGE_SIZE
Ë- 
PLEAF_PAGE_HEADER_SIZE
) >= 0); \

116 
	`as£π
((((
off£t
 % 
PLEAF_PAGE_SIZE
Ë- 
PLEAF_PAGE_HEADER_SIZE
) \

117 % (
ˇp
 * 
PLEAF_VERSION_DATA_SIZE
)) == 0); \

118 } 0)

	)

132 
PLófPageMëad©a
 
	m√xt_∑ge_id
;

138 
PLófBôm≠
 
	mbôm≠
;

140 
PLófVîsi⁄IndexD©a
 
	mödex_¨øy
[
N_VERSION_INDEX_ARR
];

141 } 
	tPLófPageHódîD©a
;

143 
SèticAs£πDe˛
(
PLEAF_PAGE_HEADER_SIZE
 =(
PLófPageHódîD©a
),

146 
PLófPageHódîD©a
* 
	tPLófPageHódî
;

148 
	#N_VERSION_DATA_ARR
 240

	)

151 
PLófPageHódîD©a
 
	m∑ge_hódî
;

152 
PLófVîsi⁄D©a
 
	mvîsi⁄_¨øy
[
N_VERSION_DATA_ARR
];

153 } 
	tPLófPageD©a
;

155 
SèticAs£πDe˛
(
PLEAF_PAGE_SIZE
 =(
PLófPageD©a
),

158 
PLófPageD©a
* 
	tPLófPage
;

160 
PLófPageInôBôm≠
(
PLófPage
 
∑ge
, 
ˇp_ödex
);

162 
	#PLófPageGëBôm≠
(
∑ge
) \

163 (&(((
PLófPageHódî
)(
∑ge
))->
bôm≠
))

	)

165 
boﬁ
 
PLófPageSëBôm≠
(
PLófPage
 
∑ge
,

166 
PLófPageId
 
∑ge_id
,

167 
PLófOff£t
* 
off£t
);

169 
boﬁ
 
PLófPageUn£tBôm≠
(
PLófPage
 
∑ge
,

170 
¨øy_ödex
);

172 
	#N_PAGE_CAP_ARR
 7

	)

173 
	#PLEAF_MAX_CAPACITY
 240

	)

175 
PLófGëPr›îC≠acôyIndex
(
vîsi⁄_cou¡
);

177 
PLófGëC≠acôy
(
ˇp_ödex
);

179 
	#PLófPageGëC≠acôyIndex
(
∑ge
) \

180 ((
uöt8_t
)(((((
PLófPageHódî
)(
∑ge
))->
√xt_∑ge_id
Ë>> 60Ë& 
PLEAF_PAGE_CAP_MASK
))

	)

182 
PLófPageGëC≠acôy
(
PLófPage
 
∑ge
);

184 
	#PLófPageGëIn°No
(
∑ge
) \

185 ((
uöt8_t
)(((((
PLófPageHódî
)(
∑ge
))->
√xt_∑ge_id
Ë>> 56Ë& 
PLEAF_PAGE_INST_MASK
))

	)

187 
PLófPageSëC≠AndIn°No
(
PLófPage
 
∑ge
,

188 
ˇp
,

189 
ö°_no
);

191 
	#PLófPageGëNextPageId
(
∑ge
) \

192 ((
uöt32_t
)((((
PLófPageHódî
)(
∑ge
))->
√xt_∑ge_id
Ë& 
PLEAF_PAGE_ID_MASK
))

	)

194 
PLófPageSëNextPageId
(
PLófPage
 
∑ge
,

195 
uöt32_t
 
∑ge_id
);

197 
	#PLófPageGëAºayIndex
(
ˇp
, 
off
) \

198 (((
off
 % 
PLEAF_PAGE_SIZE
Ë- 
PLEAF_PAGE_HEADER_SIZE
Ë/ (
ˇp
 * 
PLEAF_VERSION_DATA_SIZE
))

	)

200 
	#PLófPageGëVîsi⁄Index
(
∑ge
, 
¨øy_ödex
) \

201 (&(((
PLófPageHódî
)(
∑ge
))->
ödex_¨øy
[
¨øy_ödex
]))

	)

203 
	#PLófPageGëFú°Vîsi⁄
(
∑ge
, 
¨øy_ödex
, 
ˇp
) \

204 (&(
∑ge
->
vîsi⁄_¨øy
[
¨øy_ödex
 * 
ˇp
]))

	)

206 
	#PLófPageGëVîsi⁄
(
fú°_vîsi⁄
, 
i
) \

207 (&(
fú°_vîsi⁄
[
i
]))

	)

210 
	#PLófPageSëVîsi⁄
(
vîsi⁄
, 
xmö
, 
xmax
, 
vîsi⁄_off£t
) \

212 
vîsi⁄
->
vîsi⁄_off£t
 = version_offset; \

213 
vîsi⁄
->
vîsi⁄_id
 = ((((
uöt64_t
)
xmö
Ë<< 32Ë| 
xmax
); \

214 } 0)

	)

216 
	#PLófPageSëVîsi⁄Xmö
(
vîsi⁄
, 
xmö
) \

217 (
vîsi⁄
->
vîsi⁄_id
 = ((vîsi⁄->vîsi⁄_id & 
PLEAF_VERSION_ID_MASK
) | \

218 (((
uöt64_t
)
xmö
Ë<< 32)))

	)

220 
	#PLófPageSëVîsi⁄Xmax
(
vîsi⁄
, 
xmax
) \

221 (
vîsi⁄
->
vîsi⁄_id
 = ((vîsi⁄->vîsi⁄_id & ~
PLEAF_VERSION_ID_MASK
) | \

222 
xmax
))

	)

224 
	#PLófPageSëVîsi⁄Off£t
(
vîsi⁄
, 
off£t
) \

225 (
vîsi⁄
->
vîsi⁄_off£t
 = 
off£t
)

	)

227 
	#PLófSëVîsi⁄IndexTy≥
(
vîsi⁄_ödex
, 
Êag
) \

228 (*
vîsi⁄_ödex
 = ((*vîsi⁄_ödex & ~
PLEAF_VERSION_TYPE_MASK
Ë| 
Êag
))

	)

230 
	#PLófSëVîsi⁄IndexHód
(
vîsi⁄_ödex
, 
vîsi⁄_hód
) \

231 (*
vîsi⁄_ödex
 = ((
vîsi⁄_hód
 << 16) | \

232 (*
vîsi⁄_ödex
 & \

233 (
PLEAF_VERSION_TYPE_MASK
 | 
PLEAF_VERSION_TAIL_MASK
))))

	)

235 
	#PLófSëVîsi⁄IndexTaû
(
vîsi⁄_ödex
, 
vîsi⁄_èû
) \

236 (*
vîsi⁄_ödex
 = ((*vîsi⁄_ödex & ~
PLEAF_VERSION_TAIL_MASK
) | \

237 
vîsi⁄_èû
))

	)

239 
	#PLófGëVîsi⁄Id
(
vîsi⁄
) \

240 ((
uöt64_t
)(
vîsi⁄
->
vîsi⁄_id
))

	)

242 
	#PLófGëVîsi⁄Off£t
(
vîsi⁄
) \

243 ((
uöt64_t
)(
vîsi⁄
->
vîsi⁄_off£t
))

	)

245 
	#PLófGëXmö
(
vîsi⁄_id
) \

246 ((
uöt32_t
)((
vîsi⁄_id
 >> 32Ë& 
PLEAF_VERSION_ID_MASK
))

	)

248 
	#PLófGëXmax
(
vîsi⁄_id
) \

249 ((
uöt32_t
)(
vîsi⁄_id
 & 
PLEAF_VERSION_ID_MASK
))

	)

251 
	#PLófGëVîsi⁄Ty≥
(
vîsi⁄_ödex_d©a
) \

252 (
vîsi⁄_ödex_d©a
 & 
PLEAF_VERSION_TYPE_MASK
)

	)

254 
	#PLófGëVîsi⁄IndexHód
(
vîsi⁄_ödex_d©a
) \

255 ((
vîsi⁄_ödex_d©a
 & 
PLEAF_VERSION_HEAD_MASK
Ë>> 16)

	)

257 
	#PLófGëVîsi⁄IndexTaû
(
vîsi⁄_ödex_d©a
) \

258 (
vîsi⁄_ödex_d©a
 & 
PLEAF_VERSION_TAIL_MASK
)

	)

260 
PLófGëPr›îC≠acôyIndex
(
vîsi⁄_cou¡
);

	@pleaf_hash.h

15 #i‚de‡
PLEAF_HASH_H


16 
	#PLEAF_HASH_H


	)

18 
	#PLófHashP¨tôi⁄
(
hashcode
) \

19 ((
hashcode
Ë% 
NUM_PLEAF_PARTITIONS
)

	)

21 
	#PLófM≠pögP¨tôi⁄Lock
(
hashcode
) \

22 (&
MaöLWLockAºay
[
PLEAF_MAPPING_LWLOCK_OFFSET
 + \

23 
	`PLófHashP¨tôi⁄
(
hashcode
)].
lock
)

	)

25 
Size
 
PLófHashShmemSize
(
size
);

26 
PLófHashInô
(
size
);

27 
uöt32
 
PLófHashCode
(c⁄° 
PLófTag
* 
ègPå
);

29 
PLófHashLookup
(c⁄° 
PLófTag
* 
ègPå
,

30 
uöt32
 
hashcode
);

31 
PLófHashIn£π
(c⁄° 
PLófTag
* 
ègPå
,

32 
uöt32
 
hashcode
,

33 
∑ge_id
);

34 
PLófHashDñëe
(c⁄° 
PLófTag
* 
ègPå
,

35 
uöt32
 
hashcode
);

	@pleaf_internals.h

14 #i‚de‡
PLEAF_INTERNALS_H


15 
	#PLEAF_INTERNALS_H


	)

18 
	#PLEAF_LOOKUP_FORWARD
 (0)

	)

19 
	#PLEAF_LOOKUP_BACKWARD
 (1)

	)

20 
	#PLEAF_LOOKUP_FOUND
 (2)

	)

23 
	#PLEAF_APPEND_NOTHING
 (0)

	)

24 
	#PLEAF_APPEND_ERROR
 (1)

	)

25 
	#PLEAF_APPEND_SUCCESS
 (2)

	)

27 
	#MAX_ARRAY_ACCESSED
 (5)

	)

28 
	#LAST_ARRAY_ACCESSED
 (1)

	)

30 
	#PLEAF_APPEND_DONE
 (0)

	)

31 
	#PLEAF_APPEND_CONTRACT
 (1)

	)

32 
	#PLEAF_APPEND_COMPACT
 (2)

	)

33 
	#PLEAF_APPEND_EXPAND
 (3)

	)

35 
	#PLófMakeOff£t
(
gí_no
, 
off£t
) \

36 ((
uöt64_t
)(((uöt64_t)
gí_no
 << 48Ë| 
off£t
))

	)

38 
	#GëVîsi⁄Cou¡
(
hód
, 
èû
, 
ˇp
) \

39 ((
hód
 <
èû
Ë?Åaû - hód :Åaû - hód + (2 * 
ˇp
))

	)

43 
PLófPage
 
	m∑ge
;

44 
	m¨øy_ödex
;

45 
	m‰ame_id
;

46 } 
	tPLófTempInfoD©a
;

48 
PLófTempInfoD©a
* 
	tPLófTempInfo
;

50 
PLófIsVisibÀ
(
S«pshŸ
 
¢≠shŸ
,

51 
uöt32_t
 
xmö
,

52 
uöt32_t
 
xmax
);

54 
boﬁ
 
PLófCheckVisibûôy
(
Tønß˘i⁄Id
 
xmö
,

55 
Tønß˘i⁄Id
 
xmax
);

57 
PLófGëVîsi⁄Info
(
PLófVîsi⁄Id
 
vîsi⁄_id
,

58 
Tønß˘i⁄Id
* 
xmö
,

59 
Tønß˘i⁄Id
* 
xmax
);

61 
boﬁ
 
PLófCheckAµíd√ss
(
ˇp
, 
uöt16_t
 
hód
, uöt16_à
èû
);

62 
boﬁ
 
PLófCheckEm±öess
(
uöt16_t
 
hód
, uöt16_à
èû
);

65 
boﬁ
 
PLófLookupVîsi⁄
(
PLófPage
 
∑ge
,

66 
PLófOff£t
* 
off£t
,

67 
S«pshŸ
 
¢≠shŸ
);

69 
PLófAµídVîsi⁄
(
PLófOff£t
 
off£t
,

70 
PLófOff£t
* 
ªt_off£t
,

71 
Tønß˘i⁄Id
 
xmö
, Tønß˘i⁄Id 
xmax
,

72 
PLófVîsi⁄Off£t
 
vîsi⁄_off£t
,

73 
Size
 
tu∂e_size
,

74 c⁄° * 
tu∂e
,

75 
LWLock
* 
rwlock
);

	@pleaf_mgr.h

14 #i‚de‡
PLEAF_MGR_H


15 
	#PLEAF_MGR_H


	)

17 
	#PLófGëCuºítTime
(
time•ec
) \

18 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, 
time•ec
)

	)

20 
	#PLófGëTimeEœp£dInSec⁄ds
(
now
, 
ba£
) \

21 (
now
.
tv_£c
 - 
ba£
.tv_£c)

	)

23 
	$PLófM™agîMaö
(Ë
	`pg_©åibuã_n‹ëu∫
();

	@pleaf_stack_helper.h

15 #i‚de‡
PLEAF_STACK_HELPER_H


16 
	#PLEAF_STACK_HELPER_H


	)

19 
	#N_ELIMINATION_ARRAY
 (8)

	)

20 
	#ELIM_ARRAY_DUR
 ()(0.000001)

21 

	)

22 
	#EXCHANGER_INIT
 (0)

	)

23 
	#EXCHANGER_FAIL
 ((
uöt64_t
)(-1))

	)

25 
	#GëExch™gîSètus
(
v
) \

26 ((
uöt32_t
)((
v
 & ~
HELPER_VALUE_MASK
Ë>> 32))

	)

28 
	#HELPER_VALUE_MASK
 (0x00000000FFFFFFFFULL)

	)

30 
	#GëExch™gîVÆue
(
v
) \

31 (
v
 & 
HELPER_VALUE_MASK
)

	)

33 
	#SëExch™gîNewVÆue
(
v
, 
s
) \

34 ((((
uöt64_t
)
s
Ë<< 32Ë| 
v
)

	)

36 
	#EL_EMPTY
 0

	)

37 
	#EL_WAITING
 1

	)

38 
	#EL_BUSY
 2

	)

42 
uöt64_t
 
	m¨r
[
N_ELIMINATION_ARRAY
];

43 } 
	tElimö©i⁄AºayD©a
;

45 
Elimö©i⁄AºayD©a
* 
	tElimö©i⁄Aºay
;

47 
uöt64_t
 
ElimAºayVisô
(
Elimö©i⁄Aºay
 
ñim_¨øy
,

48 
uöt64_t
 
vÆue
);

	@que0que.h

33 #i‚de‡
que0que_h


34 
	#que0que_h


	)

36 
	~"d©a0d©a.h
"

37 
	~"di˘0ty≥s.h
"

38 
	~"∑rs0ty≥s.h
"

39 
	~"que0ty≥s.h
"

40 
	~"row0ty≥s.h
"

41 
	~"§v0§v.h
"

42 
	~"åx0rﬁl.h
"

43 
	~"åx0åx.h
"

44 
	~"univ.i
"

45 
	~"u§0ty≥s.h
"

48 
ib_muãx_t
 
que_thr_muãx
;

52 
que_f‹k_t
 *
que_f‹k_¸óã
(

53 
que_t
 *
gøph
,

56 
que_node_t
 *
∑ª¡
,

57 
ulöt
 
f‹k_ty≥
,

58 
mem_hóp_t
 *
hóp
);

60 
UNIV_INLINE


61 
que_thr_t
 *
que_f‹k_gë_fú°_thr
(
que_f‹k_t
 *
f‹k
);

63 
UNIV_INLINE


64 
que_node_t
 *
que_f‹k_gë_chûd
(
que_f‹k_t
 *
f‹k
);

69 
UNIV_INLINE


70 
que_node_£t_∑ª¡
(
que_node_t
 *
node
, que_node_à*
∑ª¡
);

77 
que_thr_t
 *
que_thr_¸óã
(
que_f‹k_t
 *
∑ª¡
, 
mem_hóp_t
 *
hóp
,

78 
row_¥ebuût_t
 *
¥ebuût
);

81 
que_gøph_‰ì_ªcursive
(
que_node_t
 *
node
);

83 
que_gøph_‰ì
(
que_t
 *
gøph
);

93 
boﬁ
 
que_thr_°›
(
que_thr_t
 *
thr
);

97 
que_thr_move_to_run_°©e_f‹_mysql
(

98 
que_thr_t
 *
thr
,

99 
åx_t
 *
åx
);

105 
que_thr_°›_f‹_mysql_no_îr‹
(
que_thr_t
 *
thr
, 
åx_t
 *
åx
);

111 
que_thr_°›_f‹_mysql
(
que_thr_t
 *
thr
);

113 
que_run_thªads
(
que_thr_t
 *
thr
);

119 
que_thr_t
 *
que_thr_íd_lock_waô
(
åx_t
 *
åx
);

128 
que_thr_t
 *
que_f‹k_°¨t_comm™d
(
que_f‹k_t
 *
f‹k
);

130 
UNIV_INLINE


131 
åx_t
 *
thr_gë_åx
(
que_thr_t
 *
thr
);

136 
UNIV_INLINE


137 
iboﬁ
 
thr_is_ªcv
(c⁄° 
que_thr_t
 *
thr
);

139 
UNIV_INLINE


140 
ulöt
 
que_node_gë_ty≥
(c⁄° 
que_node_t
 *
node
);

142 
UNIV_INLINE


143 
dty≥_t
 *
que_node_gë_d©a_ty≥
(
que_node_t
 *
node
);

145 
UNIV_INLINE


146 
dfõld_t
 *
que_node_gë_vÆ
(
que_node_t
 *
node
);

149 
UNIV_INLINE


150 
ulöt
 
que_node_gë_vÆ_buf_size
(
que_node_t
 *
node
);

155 
UNIV_INLINE


156 
que_node_£t_vÆ_buf_size
(
que_node_t
 *
node
, 
ulöt
 
size
);

159 
UNIV_INLINE


160 
que_node_t
 *
que_node_gë_√xt
(que_node_à*
node
);

163 
UNIV_INLINE


164 
que_node_t
 *
que_node_gë_∑ª¡
(que_node_à*
node
);

168 
que_node_t
 *
que_node_gë_c⁄èöög_lo›_node
(

169 
que_node_t
 *
node
);

175 
UNIV_INLINE


176 
que_node_t
 *
que_node_li°_add_œ°
(que_node_à*
node_li°
, que_node_à*
node
);

180 
UNIV_INLINE


181 
que_node_t
 *
que_node_li°_gë_œ°
(

183 
que_node_t
 *
node_li°
);

186 
UNIV_INLINE


187 
ulöt
 
que_node_li°_gë_Àn
(

188 
que_node_t
 *
node_li°
);

194 
UNIV_INLINE


195 
iboﬁ
 
que_thr_≥ek_°›
(
que_thr_t
 *
thr
);

198 
UNIV_INLINE


199 
iboﬁ
 
que_gøph_is_£À˘
(
que_t
 *
gøph
);

201 
que_node_¥öt_öfo
(
que_node_t
 *
node
);

204 
dbîr_t
 
que_evÆ_sql
(
∑rs_öfo_t
 *
öfo
,

205 c⁄° *
sql
,

206 
iboﬁ
 
ª£rve_di˘_muãx
,

209 
åx_t
 *
åx
);

215 
que_thr_t
 *
que_f‹k_scheduÀr_round_robö
(

216 
que_f‹k_t
 *
f‹k
,

217 
que_thr_t
 *
thr
);

220 
que_öô
();

223 
que_˛o£
();

226 
	eque_thr_°©e_t
 {

227 
	mQUE_THR_RUNNING
,

228 
	mQUE_THR_PROCEDURE_WAIT
,

232 
	mQUE_THR_COMPLETED
,

233 
	mQUE_THR_COMMAND_WAIT
,

234 
	mQUE_THR_LOCK_WAIT
,

235 
	mQUE_THR_SUSPENDED


239 
	eque_thr_lock_t
 {

240 
	mQUE_THR_LOCK_NOLOCK
,

241 
	mQUE_THR_LOCK_ROW
,

242 
	mQUE_THR_LOCK_TABLE


246 
	eque_cur_t
 { 
	mQUE_CUR_NOT_DEFINED
, 
	mQUE_CUR_START
, 
	mQUE_CUR_END
 };

251 
	sque_thr_t
 {

252 
que_comm⁄_t
 
	mcomm⁄
;

253 
ulöt
 
	mmagic_n
;

255 
que_node_t
 *
	mchûd
;

256 
que_t
 *
	mgøph
;

257 
que_thr_°©e_t
 
	m°©e
;

258 
iboﬁ
 
	mis_a˘ive
;

267 
que_node_t
 *
	mrun_node
;

270 
que_node_t
 *
	m¥ev_node
;

272 
ulöt
 
	mªsour˚
;

274 
ulöt
 
	mlock_°©e
;

286 
§v_¶Ÿ_t
 *
	m¶Ÿ
;

290 
UT_LIST_NODE_T
(
que_thr_t
)

291 
	mthrs
;

293 
UT_LIST_NODE_T
(
que_thr_t
)

294 
	måx_thrs
;

296 
UT_LIST_NODE_T
(
que_thr_t
)

297 
	mqueue
;

299 
ulöt
 
	mfk_ˇsˇde_dïth
;

302 
row_¥ebuût_t
 *
	m¥ebuût
;

306 
	#QUE_THR_MAGIC_N
 8476583

	)

307 
	#QUE_THR_MAGIC_FREED
 123461526

	)

310 
	sque_f‹k_t
 {

311 
que_comm⁄_t
 
	mcomm⁄
;

312 
que_t
 *
	mgøph
;

313 
ulöt
 
	mf‹k_ty≥
;

314 
ulöt
 
	mn_a˘ive_thrs
;

319 
åx_t
 *
	måx
;

321 
ulöt
 
	m°©e
;

322 
que_thr_t
 *
	mˇŒî
;

324 
UT_LIST_BASE_NODE_T
(
que_thr_t
)

325 
	mthrs
;

328 
sym_èb_t
 *
	msym_èb
;

331 
∑rs_öfo_t
 *
	möfo
;

334 
ulöt
 
	mcur_íd
;

336 
ulöt
 
	mcur_pos
;

341 
iboﬁ
 
	mcur_⁄_row
;

344 
£l_node_t
 *
	mœ°_£l_node
;

346 
UT_LIST_NODE_T
(
que_f‹k_t
)

347 
	mgøphs
;

350 
mem_hóp_t
 *
	mhóp
;

355 
	#QUE_FORK_SELECT_NON_SCROLL
 1

	)

356 
	#QUE_FORK_SELECT_SCROLL
 2

	)

357 
	#QUE_FORK_INSERT
 3

	)

358 
	#QUE_FORK_UPDATE
 4

	)

359 
	#QUE_FORK_ROLLBACK
 5

	)

362 
	#QUE_FORK_PURGE
 6

	)

363 
	#QUE_FORK_EXECUTE
 7

	)

364 
	#QUE_FORK_PROCEDURE
 8

	)

365 
	#QUE_FORK_PROCEDURE_CALL
 9

	)

366 
	#QUE_FORK_MYSQL_INTERFACE
 10

	)

367 
	#QUE_FORK_RECOVERY
 11

	)

370 
	#QUE_FORK_ACTIVE
 1

	)

371 
	#QUE_FORK_COMMAND_WAIT
 2

	)

372 
	#QUE_FORK_INVALID
 3

	)

373 
	#QUE_FORK_BEING_FREED
 4

	)

376 
	#QUE_NODE_CONTROL_STAT
 1024

	)

379 
	#QUE_NODE_LOCK
 1

	)

380 
	#QUE_NODE_INSERT
 2

	)

381 
	#QUE_NODE_UPDATE
 4

	)

382 
	#QUE_NODE_CURSOR
 5

	)

383 
	#QUE_NODE_SELECT
 6

	)

384 
	#QUE_NODE_AGGREGATE
 7

	)

385 
	#QUE_NODE_FORK
 8

	)

386 
	#QUE_NODE_THR
 9

	)

387 
	#QUE_NODE_UNDO
 10

	)

388 
	#QUE_NODE_COMMIT
 11

	)

389 
	#QUE_NODE_ROLLBACK
 12

	)

390 
	#QUE_NODE_PURGE
 13

	)

391 
	#QUE_NODE_SYMBOL
 14

	)

392 
	#QUE_NODE_RES_WORD
 15

	)

393 
	#QUE_NODE_FUNC
 16

	)

394 
	#QUE_NODE_ORDER
 17

	)

395 
	#QUE_NODE_PROC
 (18 + 
QUE_NODE_CONTROL_STAT
)

	)

396 
	#QUE_NODE_IF
 (19 + 
QUE_NODE_CONTROL_STAT
)

	)

397 
	#QUE_NODE_WHILE
 (20 + 
QUE_NODE_CONTROL_STAT
)

	)

398 
	#QUE_NODE_ASSIGNMENT
 21

	)

399 
	#QUE_NODE_FETCH
 22

	)

400 
	#QUE_NODE_OPEN
 23

	)

401 
	#QUE_NODE_COL_ASSIGNMENT
 24

	)

402 
	#QUE_NODE_FOR
 (25 + 
QUE_NODE_CONTROL_STAT
)

	)

403 
	#QUE_NODE_RETURN
 26

	)

404 
	#QUE_NODE_ELSIF
 27

	)

405 
	#QUE_NODE_CALL
 28

	)

406 
	#QUE_NODE_EXIT
 29

	)

408 
	~"que0que.ic
"

	@que0que.ic

33 
	~"u§0£ss.h
"

36 
UNIV_INLINE


37 
åx_t
 *
	$thr_gë_åx
(
que_thr_t
 *
thr
)

39 
	`ut_ad
(
thr
);

41  (
thr
->
gøph
->
åx
);

42 
	}
}

44 #i‚de‡
UNIV_HOTBACKUP


49 
UNIV_INLINE


50 
iboﬁ
 
	$thr_is_ªcv
(c⁄° 
que_thr_t
 *
thr
)

52  (
	`åx_is_ªcv
(
thr
->
gøph
->
åx
));

53 
	}
}

57 
UNIV_INLINE


58 
que_thr_t
 *
	$que_f‹k_gë_fú°_thr
(
que_f‹k_t
 *
f‹k
)

60  (
	`UT_LIST_GET_FIRST
(
f‹k
->
thrs
));

61 
	}
}

64 
UNIV_INLINE


65 
que_node_t
 *
	$que_f‹k_gë_chûd
(
que_f‹k_t
 *
f‹k
)

67 
que_thr_t
 *
thr
;

69 
thr
 = 
	`UT_LIST_GET_FIRST
(
f‹k
->
thrs
);

71  (
thr
->
chûd
);

72 
	}
}

75 
UNIV_INLINE


76 
ulöt
 
	$que_node_gë_ty≥
(c⁄° 
que_node_t
 *
node
)

78  (
ªöãΩªt_ˇ°
<c⁄° 
que_comm⁄_t
 *>(
node
)->
ty≥
);

79 
	}
}

82 
UNIV_INLINE


83 
dfõld_t
 *
	$que_node_gë_vÆ
(
que_node_t
 *
node
)

85 
	`ut_ad
(
node
);

87  (&(((
que_comm⁄_t
 *)
node
)->
vÆ
));

88 
	}
}

92 
UNIV_INLINE


93 
ulöt
 
	$que_node_gë_vÆ_buf_size
(
que_node_t
 *
node
)

95 
	`ut_ad
(
node
);

97  (((
que_comm⁄_t
 *)
node
)->
vÆ_buf_size
);

98 
	}
}

101 
UNIV_INLINE


102 
	$que_node_£t_vÆ_buf_size
(
que_node_t
 *
node
,

103 
ulöt
 
size
)

105 
	`ut_ad
(
node
);

107 ((
que_comm⁄_t
 *)
node
)->
vÆ_buf_size
 = 
size
;

108 
	}
}

111 
UNIV_INLINE


112 
	$que_node_£t_∑ª¡
(
que_node_t
 *
node
,

113 
que_node_t
 *
∑ª¡
)

115 
	`ut_ad
(
node
);

117 ((
que_comm⁄_t
 *)
node
)->
∑ª¡
 =Öarent;

118 
	}
}

121 
UNIV_INLINE


122 
dty≥_t
 *
	$que_node_gë_d©a_ty≥
(
que_node_t
 *
node
)

124 
	`ut_ad
(
node
);

126  (
	`dfõld_gë_ty≥
(&((
que_comm⁄_t
 *)
node
)->
vÆ
));

127 
	}
}

131 
UNIV_INLINE


132 
que_node_t
 *
	$que_node_li°_add_œ°
(

133 
que_node_t
 *
node_li°
,

134 
que_node_t
 *
node
)

136 
que_comm⁄_t
 *
˙ode
;

137 
que_comm⁄_t
 *
˙ode2
;

139 
˙ode
 = (
que_comm⁄_t
 *)
node
;

141 
˙ode
->
brŸhî
 = 
nuŒ±r
;

143 i‡(
node_li°
 =
nuŒ±r
) {

144  (
node
);

147 
˙ode2
 = (
que_comm⁄_t
 *)
node_li°
;

149 
˙ode2
->
brŸhî
 !
nuŒ±r
) {

150 
˙ode2
 = (
que_comm⁄_t
 *)˙ode2->
brŸhî
;

153 
˙ode2
->
brŸhî
 = 
node
;

155  (
node_li°
);

156 
	}
}

160 
UNIV_INLINE


161 
que_node_t
 *
	$que_node_li°_gë_œ°
(

163 
que_node_t
 *
node_li°
)

165 
que_comm⁄_t
 *
node
;

167 
	`ut_a
(
node_li°
 !
nuŒ±r
);

169 
node
 = (
que_comm⁄_t
 *)
node_li°
;

172 
node
->
brŸhî
 !
nuŒ±r
) {

173 
node
 = (
que_comm⁄_t
 *Íode->
brŸhî
;

176  (
node
);

177 
	}
}

180 
UNIV_INLINE


181 
que_node_t
 *
	$que_node_gë_√xt
(
que_node_t
 *
node
)

183  (((
que_comm⁄_t
 *)
node
)->
brŸhî
);

184 
	}
}

188 
UNIV_INLINE


189 
ulöt
 
	$que_node_li°_gë_Àn
(

190 
que_node_t
 *
node_li°
)

192 c⁄° 
que_comm⁄_t
 *
˙ode
;

193 
ulöt
 
Àn
;

195 
˙ode
 = (c⁄° 
que_comm⁄_t
 *)
node_li°
;

196 
Àn
 = 0;

198 
˙ode
 !
nuŒ±r
) {

199 
Àn
++;

200 
˙ode
 = (c⁄° 
que_comm⁄_t
 *)˙ode->
brŸhî
;

203  (
Àn
);

204 
	}
}

208 
UNIV_INLINE


209 
que_node_t
 *
	$que_node_gë_∑ª¡
(
que_node_t
 *
node
)

211  (((
que_comm⁄_t
 *)
node
)->
∑ª¡
);

212 
	}
}

219 
UNIV_INLINE


220 
iboﬁ
 
	$que_thr_≥ek_°›
(
que_thr_t
 *
thr
)

222 
åx_t
 *
åx
;

223 
que_t
 *
gøph
;

225 
gøph
 = 
thr
->graph;

226 
åx
 = 
gøph
->trx;

228 i‡(
gøph
->
°©e
 !
QUE_FORK_ACTIVE
 ||

229 
åx
->
lock
.
que_°©e
 =
TRX_QUE_LOCK_WAIT
 ||

230 (
åx
->
lock
.
que_°©e
 !
TRX_QUE_ROLLING_BACK
 &&

231 
åx
->
lock
.
que_°©e
 !
TRX_QUE_RUNNING
)) {

232  (
TRUE
);

235  (
FALSE
);

236 
	}
}

240 
UNIV_INLINE


241 
iboﬁ
 
	$que_gøph_is_£À˘
(
que_t
 *
gøph
)

243 i‡(
gøph
->
f‹k_ty≥
 =
QUE_FORK_SELECT_SCROLL
 ||

244 
gøph
->
f‹k_ty≥
 =
QUE_FORK_SELECT_NON_SCROLL
) {

245  (
TRUE
);

248  (
FALSE
);

249 
	}
}

	@que0types.h

33 #i‚de‡
que0ty≥s_h


34 
	#que0ty≥s_h


	)

36 
	~"d©a0d©a.h
"

37 
	~"di˘0ty≥s.h
"

40 
	tque_node_t
;

43 
que_f‹k_t
 
	tque_t
;

45 
	gque_thr_t
;

50 
	sque_comm⁄_t
 {

51 
ulöt
 
	mty≥
;

52 
que_node_t
 *
	m∑ª¡
;

53 
que_node_t
 *
	mbrŸhî
;

54 
dfõld_t
 
	mvÆ
;

55 
ulöt
 
	mvÆ_buf_size
;

	@read0read.h

33 #i‚de‡
ªad0ªad_h


34 
	#ªad0ªad_h


	)

36 
	~<°ddef.h
>

37 
	~<Æg‹ôhm
>

39 
	~"ªad0ty≥s.h
"

40 
	~"univ.i
"

43 ˛as†
	cMVCC
 {

44 
	mpublic
:

47 
ex∂icô
 
MVCC
(
ulöt
 
size
);

51 ~
MVCC
();

57 
võw_›í
(
RódVõw
 *&
võw
, 
åx_t
 *
åx
);

63 
võw_˛o£
(
RódVõw
 *&
võw
, 
boﬁ
 
own_muãx
);

69 
võw_ªÀa£
(
RódVõw
 *&
võw
);

77 
˛⁄e_ﬁde°_võw
(
RódVõw
 *
võw
);

81 
ulöt
 
	$size
() const;

85 
boﬁ
 
	$is_võw_a˘ive
(
RódVõw
 *
võw
) {

86 
	`ut_a
(
võw
 !
ªöãΩªt_ˇ°
<
RódVõw
 *>(0x1));

88  (
võw
 !
nuŒ±r
 && !(
	`öçå_t
(view) & 0x1));

94 
	`£t_võw_¸ót‹_åx_id
(
RódVõw
 *
võw
, 
åx_id_t
 
id
);

96 
¥iv©e
:

99 
boﬁ
 
	$vÆid©e
() const;

106 
ölöe
 
RódVõw
 *
	`gë_võw
();

112 
ölöe
 
RódVõw
 *
	$gë_ﬁde°_võw
() const;

113 
RódVõw
 *
	$gë_võw_¸óãd_by_åx_id
(
åx_id_t
 
åx_id
) const;

115 
¥iv©e
:

117 
	`MVCC
(c⁄° 
MVCC
 &);

118 
MVCC
 &
›î©‹
=(const MVCC &);

120 
¥iv©e
:

121 
	$UT_LIST_BASE_NODE_T
(
	tRódVõw
Ë
	tvõw_li°_t
;

124 
võw_li°_t
 
m_‰ì
;

128 
võw_li°_t
 
m_võws
;

129 
	}
};

	@read0types.h

33 #i‚de‡
ªad0ty≥s_h


34 
	#ªad0ty≥s_h


	)

36 
	~<Æg‹ôhm
>

37 
	~"di˘0mem.h
"

39 
	~"åx0ty≥s.h
"

42 
˛ass
 
	gMVCC
;

47 ˛as†
	cRódVõw
 {

50 ˛as†
	cids_t
 {

51 
	måx_ids_t
::
	tvÆue_ty≥
 value_type;

55 
ids_t
(Ë: 
m_±r
(), 
m_size
(), 
m_ª£rved
() {}

59 ~
ids_t
(Ë{ 
UT_DELETE_ARRAY
(
m_±r
); }

64 
ª£rve
(
ulöt
 
n
);

69 
ªsize
(
ulöt
 
n
) {

70 
ut_ad
(
n
 <
ˇ∑côy
());

72 
	mm_size
 = 
n
;

77 
˛ór
(Ë{ 
ªsize
(0); }

81 
ulöt
 
ˇ∑côy
(Ëc⁄° {  (
	mm_ª£rved
); }

88 
assign
(c⁄° 
vÆue_ty≥
 *
°¨t
, c⁄° vÆue_ty≥ *
íd
);

93 
ö£π
(
vÆue_ty≥
 
vÆue
);

97 
vÆue_ty≥
 
‰⁄t
() const {

98 
ut_ad
(!
em±y
());

100  (
	mm_±r
[0]);

105 
vÆue_ty≥
 
back
() const {

106 
ut_ad
(!
em±y
());

108  (
	mm_±r
[
m_size
 - 1]);

114 
push_back
(
vÆue_ty≥
 
vÆue
);

118 
åx_id_t
 *
d©a
(Ë{  (
	mm_±r
); }

122 c⁄° 
åx_id_t
 *
d©a
(Ëc⁄° {  (
	mm_±r
); }

126 
ulöt
 
size
(Ëc⁄° {  (
	mm_size
); }

130 
boﬁ
 
em±y
(Ëc⁄° {  (
size
() == 0); }

132 
	m¥iv©e
:

134 
ids_t
(const ids_t &);

135 
	mids_t
 &
	m›î©‹
=(c⁄° 
ids_t
 &);

137 
	m¥iv©e
:

139 
vÆue_ty≥
 *
m_±r
;

142 
ulöt
 
	mm_size
;

145 
ulöt
 
	mm_ª£rved
;

147 
‰õnd
 
˛ass
 
	mRódVõw
;

150 
	gpublic
:

151 
RódVõw
();

152 ~
RódVõw
();

156 
check_åx_id_ßnôy
(
åx_id_t
 
id
, c⁄° 
èbÀ_«me_t
 &
«me
);

162 
boﬁ
 
	$ch™ges_visibÀ
(
åx_id_t
 
id
, c⁄° 
èbÀ_«me_t
 &
«me
) const

163 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

164 
	`ut_ad
(
id
 > 0);

166 i‡(
id
 < 
m_up_limô_id
 || id =
m_¸ót‹_åx_id
) {

167  (
åue
);

170 
	`check_åx_id_ßnôy
(
id
, 
«me
);

172 i‡(
id
 >
m_low_limô_id
) {

173  (
Ál£
);

175 } i‡(
m_ids
.
	`em±y
()) {

176  (
åue
);

179 c⁄° 
ids_t
::
vÆue_ty≥
 *
p
 = 
m_ids
.
	`d©a
();

181  (!
°d
::
	`bö¨y_£¨ch
(
p
,Ö + 
m_ids
.
	`size
(), 
id
));

182 
	}
}

187 
boﬁ
 
	$£es
(
åx_id_t
 
id
Ëc⁄° {  (id < 
m_up_limô_id
); 
	}
}

191 
	$˛o£
() {

192 
	`ut_ad
(
m_¸ót‹_åx_id
 !
TRX_ID_MAX
);

193 
m_¸ót‹_åx_id
 = 
TRX_ID_MAX
;

194 
	}
}

198 
boﬁ
 
	$is_˛o£d
(Ëc⁄° {  (
m_˛o£d
); 
	}
}

203 
	$¥öt_limôs
(
FILE
 *
fûe
) const {

204 
	`Ârötf
(
fûe
,

206 " id >" 
TRX_ID_FMT
 ", sees < " TRX_ID_FMT "\n",

207 
m_low_limô_id
, 
m_up_limô_id
);

208 
	}
}

213 
	$ªdu˚_low_limô
(
åx_id_t
 
åx_no
) {

214 i‡(
åx_no
 < 
m_low_limô_no
) {

216 
	`ut_d
(
m_võw_low_limô_no
 = 
m_low_limô_no
);

217 
m_low_limô_no
 = 
åx_no
;

219 
	}
}

223 
åx_id_t
 
	$low_limô_no
(Ëc⁄° {  (
m_low_limô_no
); 
	}
}

227 
åx_id_t
 
	$low_limô_id
(Ëc⁄° {  (
m_low_limô_id
); 
	}
}

231 
boﬁ
 
	$em±y
(Ëc⁄° {  (
m_ids
.
	`em±y
()); 
	}
}

233 #ifde‡
UNIV_DEBUG


236 
åx_id_t
 
	$võw_low_limô_no
(Ëc⁄° {  (
m_võw_low_limô_no
); 
	}
}

241 
boﬁ
 
	$À
(c⁄° 
RódVõw
 *
rhs
) const {

242  (
m_low_limô_no
 <
rhs
->m_low_limit_no);

243 
	}
}

245 
	g¥iv©e
:

248 
ölöe
 
c›y_åx_ids
(c⁄° 
åx_ids_t
 &
åx_ids
);

254 
ölöe
 
¥ï¨e
(
åx_id_t
 
id
);

259 
ölöe
 
c›y_¥ï¨e
(c⁄° 
RódVõw
 &
Ÿhî
);

264 
ölöe
 
c›y_com∂ëe
();

268 
	$¸ót‹_åx_id
(
åx_id_t
 
id
) {

269 
	`ut_ad
(
m_¸ót‹_åx_id
 == 0);

270 
m_¸ót‹_åx_id
 = 
id
;

271 
	}
}

273 
‰õnd
 
˛ass
 
	gMVCC
;

275 
	g¥iv©e
:

277 
RódVõw
(const ReadView &);

278 
	gRódVõw
 &
	g›î©‹
=(c⁄° 
RódVõw
 &);

280 
	g¥iv©e
:

283 
åx_id_t
 
m_low_limô_id
;

288 
åx_id_t
 
	gm_up_limô_id
;

292 
åx_id_t
 
	gm_¸ót‹_åx_id
;

296 
ids_t
 
	gm_ids
;

301 
åx_id_t
 
	gm_low_limô_no
;

303 #ifde‡
UNIV_DEBUG


308 
åx_id_t
 
	gm_võw_low_limô_no
;

312 
boﬁ
 
	gm_˛o£d
;

314 
	$UT_LIST_NODE_T
(
	tRódVõw
Ë
	tnode_t
;

317 
byã
 
∑d1
[64 - (
node_t
)];

318 
node_t
 
m_võw_li°
;

319 
	}
};

	@rem0cmp.h

33 #i‚de‡
ªm0cmp_h


34 
	#ªm0cmp_h


	)

36 
	~<my_sys.h
>

37 
	~"d©a0d©a.h
"

38 
	~"d©a0ty≥.h
"

39 
	~"di˘0di˘.h
"

40 
	~"ha_¥ŸŸy≥s.h
"

41 
	~"ªm0ªc.h
"

44 
c⁄°ex¥
áutÿ
	gDISABLE_MIN_REC_FLAG_CHECK
 = 
ULINT_UNDEFINED
;

47 
«me•a˚
 
	gdd
 {

48 
˛ass
 
	gS∑tül_ª„ªn˚_sy°em
;

56 
boﬁ
 
cmp_cﬁs_¨e_equÆ
(c⁄° 
di˘_cﬁ_t
 *
cﬁ1
, c⁄° di˘_cﬁ_à*
cﬁ2
,

57 
boﬁ
 
check_ch¨£ts
);

72 
	$cmp_d©a_d©a
(
ulöt
 
mty≥
, ulöà
¥ty≥
, 
boﬁ
 
is_asc
, c⁄° 
byã
 *
d©a1
,

73 
ulöt
 
Àn1
, c⁄° 
byã
 *
d©a2
, ulöà
Àn2
)

74 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

84 
UNIV_INLINE


85 
	$cmp_dfõld_dfõld
(c⁄° 
dfõld_t
 *
dfõld1
, c⁄° dfõld_à*
dfõld2
,

86 
boﬁ
 
is_asc
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

93 
UNIV_INLINE


94 
	$cmp_mu…i_vÆue_dfõld_dfõld
(c⁄° 
dfõld_t
 *
dfõld1
,

95 c⁄° 
dfõld_t
 *
dfõld2
)

96 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

105 
	`cmp_dtu∂e_ªc_wôh_gis
(c⁄° 
dtu∂e_t
 *
dtu∂e
, c⁄° 
ªc_t
 *
ªc
,

106 c⁄° 
ulöt
 *
off£ts
, 
∑ge_cur_mode_t
 
mode
,

107 c⁄° 
dd
::
S∑tül_ª„ªn˚_sy°em
 *
§s
);

117 
	`cmp_dtu∂e_ªc_wôh_gis_öã∫Æ
(c⁄° 
dtu∂e_t
 *
dtu∂e
, c⁄° 
ªc_t
 *
ªc
,

118 c⁄° 
ulöt
 *
off£ts
,

119 c⁄° 
dd
::
S∑tül_ª„ªn˚_sy°em
 *
§s
);

132 
	`cmp_dtu∂e_ªc_wôh_m©ch_low
(c⁄° 
dtu∂e_t
 *
dtu∂e
, c⁄° 
ªc_t
 *
ªc
,

133 c⁄° 
di˘_ödex_t
 *
ödex
,

134 c⁄° 
ulöt
 *
off£ts
, ulöà
n_cmp
,

135 
ulöt
 *
m©ched_fõlds
);

149 
	$cmp_dtu∂e_ªc_wôh_m©ch_byãs
(c⁄° 
dtu∂e_t
 *
dtu∂e
, c⁄° 
ªc_t
 *
ªc
,

150 c⁄° 
di˘_ödex_t
 *
ödex
,

151 c⁄° 
ulöt
 *
off£ts
, ulöà*
m©ched_fõlds
,

152 
ulöt
 *
m©ched_byãs
)

153 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

164 
	$cmp_dtu∂e_ªc
(c⁄° 
dtu∂e_t
 *
dtu∂e
, c⁄° 
ªc_t
 *
ªc
,

165 c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
ulöt
 *
off£ts
)

166 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

173 
boﬁ
 
	$cmp_dtu∂e_is_¥efix_of_ªc
(c⁄° 
dtu∂e_t
 *
dtu∂e
, c⁄° 
ªc_t
 *
ªc
,

174 c⁄° 
di˘_ödex_t
 *
ödex
,

175 c⁄° 
ulöt
 *
off£ts
)

176 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

182 
	$cmp_ªc_ªc_sim∂e
(

183 c⁄° 
ªc_t
 *
ªc1
,

184 c⁄° 
ªc_t
 *
ªc2
,

185 c⁄° 
ulöt
 *
off£ts1
,

186 c⁄° 
ulöt
 *
off£ts2
,

187 c⁄° 
di˘_ödex_t
 *
ödex
,

188 
TABLE
 *
èbÀ
)

191 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

209 
	`cmp_ªc_ªc_wôh_m©ch
(c⁄° 
ªc_t
 *
ªc1
, c⁄°Ñec_à*
ªc2
,

210 c⁄° 
ulöt
 *
off£ts1
, c⁄° ulöà*
off£ts2
,

211 c⁄° 
di˘_ödex_t
 *
ödex
,

212 
boﬁ
 
•©ül_ödex_n⁄_Àaf
, boﬁ 
nuŒs_u√quÆ
,

213 
ulöt
 *
m©ched_fõlds
, 
boﬁ
 
cmp_båì_ªcs
 = 
åue
);

229 
UNIV_INLINE


230 
	`cmp_ªc_ªc
(c⁄° 
ªc_t
 *
ªc1
, c⁄°Ñec_à*
ªc2
, c⁄° 
ulöt
 *
off£ts1
,

231 c⁄° 
ulöt
 *
off£ts2
, c⁄° 
di˘_ödex_t
 *
ödex
,

232 
boﬁ
 
•©ül_ödex_n⁄_Àaf
, 
ulöt
 *
m©ched_fõlds
 = 
nuŒ±r
,

233 
boﬁ
 
cmp_båì_ªcs
 = 
åue
);

241 
UNIV_INLINE


242 
boﬁ
 
	$cmp_dfõld_dfõld_eq_¥efix
(c⁄° 
dfõld_t
 *
dfõld1
,

243 c⁄° 
dfõld_t
 *
dfõld2
)

244 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

246 
	~"ªm0cmp.ic
"

	@rem0cmp.ic

33 
	~<mysql_com.h
>

35 
	~"fõld_ty≥s.h
"

45 
UNIV_INLINE


46 
	$cmp_dfõld_dfõld
(c⁄° 
dfõld_t
 *
dfõld1
, c⁄° dfõld_à*
dfõld2
,

47 
boﬁ
 
is_asc
) {

48 c⁄° 
dty≥_t
 *
ty≥
;

52 
	`ut_ad
(!(
	`dfõld_is_mu…i_vÆue
(
dfõld1
) &&

53 (
	`dfõld_gë_Àn
(
dfõld1
Ë=
UNIV_MULTI_VALUE_ARRAY_MARKER
 ||

54 
	`dfõld_gë_Àn
(
dfõld1
Ë=
UNIV_NO_INDEX_VALUE
)));

55 
	`ut_ad
(!(
	`dfõld_is_mu…i_vÆue
(
dfõld2
) &&

56 (
	`dfõld_gë_Àn
(
dfõld2
Ë=
UNIV_MULTI_VALUE_ARRAY_MARKER
 ||

57 
	`dfõld_gë_Àn
(
dfõld2
Ë=
UNIV_NO_INDEX_VALUE
)));

58 
	`ut_ad
(
	`dfõld_check_ty≥d
(
dfõld1
));

60 
ty≥
 = 
	`dfõld_gë_ty≥
(
dfõld1
);

62  (
	`cmp_d©a_d©a
(

63 
ty≥
->
mty≥
,Åy≥->
¥ty≥
, 
is_asc
, (c⁄° 
byã
 *)
	`dfõld_gë_d©a
(
dfõld1
),

64 
	`dfõld_gë_Àn
(
dfõld1
), (c⁄° 
byã
 *)
	`dfõld_gë_d©a
(
dfõld2
),

65 
	`dfõld_gë_Àn
(
dfõld2
)));

66 
	}
}

68 
UNIV_INLINE


69 
	$cmp_mu…i_vÆue_dfõld_dfõld
(c⁄° 
dfõld_t
 *
dfõld1
,

70 c⁄° 
dfõld_t
 *
dfõld2
) {

71 
	`ut_ad
(
	`dfõld_is_mu…i_vÆue
(
dfõld1
));

72 
	`ut_ad
(
	`dfõld_is_mu…i_vÆue
(
dfõld2
));

73 
	`ut_ad
(
	`dfõld_is_nuŒ
(
dfõld2
) ||

74 (
	`dfõld_gë_Àn
(
dfõld2
Ë!
UNIV_MULTI_VALUE_ARRAY_MARKER
 &&

75 
	`dfõld_gë_Àn
(
dfõld2
Ë!
UNIV_NO_INDEX_VALUE
));

77 i‡(
	`dfõld_is_nuŒ
(
dfõld1
)) {

78  (
	`dfõld_is_nuŒ
(
dfõld2
) ? 0 : 1);

79 } i‡(
	`dfõld_is_nuŒ
(
dfõld2
)) {

83 i‡(
dfõld1
->
Àn
 =
UNIV_NO_INDEX_VALUE
) {

88 
	`ut_ad
(
dfõld1
->
Àn
 =
UNIV_MULTI_VALUE_ARRAY_MARKER
);

90 
mu…i_vÆue_d©a
 *
mu…i_vÆue
 =

91 
ªöãΩªt_ˇ°
<
mu…i_vÆue_d©a
 *>(
	`dfõld_gë_d©a
(
dfõld1
));

93  (
mu…i_vÆue
->
	`has
(
	`dfõld_gë_ty≥
(
dfõld2
),

94 
°©ic_ˇ°
<c⁄° 
byã
 *>(
	`dfõld_gë_d©a
(
dfõld2
)),

95 
	`dfõld_gë_Àn
(
dfõld2
))

98 
	}
}

100 
UNIV_INLINE


101 
	$cmp_ªc_ªc
(c⁄° 
ªc_t
 *
ªc1
, c⁄°Ñec_à*
ªc2
, c⁄° 
ulöt
 *
off£ts1
,

102 c⁄° 
ulöt
 *
off£ts2
, c⁄° 
di˘_ödex_t
 *
ödex
,

103 
boﬁ
 
•©ül_ödex_n⁄_Àaf
, 
ulöt
 *
m©ched_fõlds
,

104 
boﬁ
 
cmp_båì_ªcs
) {

105 
ulöt
 
m©ch_f
;

106 
ªt
;

108 
ªt
 = 
	`cmp_ªc_ªc_wôh_m©ch
(
ªc1
, 
ªc2
, 
off£ts1
, 
off£ts2
, 
ödex
,

109 
•©ül_ödex_n⁄_Àaf
, 
Ál£
, &
m©ch_f
,

110 
cmp_båì_ªcs
);

112 i‡(
m©ched_fõlds
 !
nuŒ±r
) {

113 *
m©ched_fõlds
 = 
m©ch_f
;

116  (
ªt
);

117 
	}
}

119 #i‚de‡
UNIV_HOTBACKUP


126 
UNIV_INLINE


127 
boﬁ
 
	$cmp_dfõld_dfõld_eq_¥efix
(c⁄° 
dfõld_t
 *
dfõld1
,

128 c⁄° 
dfõld_t
 *
dfõld2
) {

129 c⁄° 
dty≥_t
 *
ty≥
;

131 
	`ut_ad
(
	`dfõld_check_ty≥d
(
dfõld1
));

132 
	`ut_ad
(
	`dfõld_check_ty≥d
(
dfõld2
));

134 
ty≥
 = 
	`dfõld_gë_ty≥
(
dfõld1
);

136 #ifde‡
UNIV_DEBUG


137 
ty≥
->
¥ty≥
 & 
DATA_MYSQL_TYPE_MASK
) {

138 
MYSQL_TYPE_BIT
:

139 
MYSQL_TYPE_STRING
:

140 
MYSQL_TYPE_VAR_STRING
:

141 
MYSQL_TYPE_TINY_BLOB
:

142 
MYSQL_TYPE_MEDIUM_BLOB
:

143 
MYSQL_TYPE_BLOB
:

144 
MYSQL_TYPE_LONG_BLOB
:

145 
MYSQL_TYPE_VARCHAR
:

148 
ut_îr‹
;

152 
uöt
 
cs_num
 = (uöt)
	`dty≥_gë_ch¨£t_cﬁl
(
ty≥
->
¥ty≥
);

154 i‡(
CHARSET_INFO
 *
cs
 = 
	`gë_ch¨£t
(
cs_num
, 
	`MYF
(
MY_WME
))) {

155  (!
cs
->
cﬁl
->
	`°∫ncﬁl
(

156 
cs
, 
°©ic_ˇ°
<
uch¨
 *>(
	`dfõld_gë_d©a
(
dfõld1
)),

157 
	`dfõld_gë_Àn
(
dfõld1
), 
°©ic_ˇ°
<
uch¨
 *>(
	`dfõld_gë_d©a
(
dfõld2
)),

158 
	`dfõld_gë_Àn
(
dfõld2
), 
åue
));

161 #ifde‡
UNIV_NO_ERR_MSGS


162 
ib
::
	`Áèl
()

164 
ib
::
	`Áèl
(
ER_IB_MSG_627
)

166 << "U«bÀÅÿföd ch¨£t-cﬁœti⁄ " << 
cs_num
;

168  (
Ál£
);

169 
	}
}

	@rem0rec.h

33 #i‚de‡
ªm0ªc_h


34 
	#ªm0ªc_h


	)

36 
	~<o°ªam
>

37 
	~<s°ªam
>

39 
	~"univ.i
"

41 
	~"d©a0d©a.h
"

42 
	~"må0ty≥s.h
"

43 
	~"∑ge0ty≥s.h
"

44 
	~"ªm/ªc.h
"

45 
	~"ªm0ty≥s.h
"

46 
	~"åx0ty≥s.h
"

47 
	~"ut0˛ass_li„_cy˛e.h
"

52 
UNIV_INLINE


53 c⁄° 
ªc_t
 *
	$ªc_gë_√xt_±r_c⁄°
(

54 c⁄° 
ªc_t
 *
ªc
,

55 
ulöt
 
comp
)

56 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

60 
UNIV_INLINE


61 
ªc_t
 *
	$ªc_gë_√xt_±r
(
ªc_t
 *
ªc
,

62 
ulöt
 
comp
)

63 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

67 
UNIV_INLINE


68 
ulöt
 
	$ªc_gë_√xt_offs
(c⁄° 
ªc_t
 *
ªc
,

69 
ulöt
 
comp
)

70 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

76 
UNIV_INLINE


77 
	`ªc_£t_√xt_offs_ﬁd
(
ªc_t
 *
ªc
, 
ulöt
 
√xt
);

81 
UNIV_INLINE


82 
	`ªc_£t_√xt_offs_√w
(
ªc_t
 *
ªc
, 
ulöt
 
√xt
);

87 
UNIV_INLINE


88 
ulöt
 
	$ªc_gë_n_ow√d_ﬁd
(

89 c⁄° 
ªc_t
 *
ªc
)

90 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

95 
UNIV_INLINE


96 
	`ªc_£t_n_ow√d_ﬁd
(
ªc_t
 *
ªc
, 
ulöt
 
n_ow√d
);

101 
UNIV_INLINE


102 
ulöt
 
	$ªc_gë_n_ow√d_√w
(

103 c⁄° 
ªc_t
 *
ªc
)

104 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

110 
UNIV_INLINE


111 
	`ªc_£t_n_ow√d_√w
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
n_ow√d
);

116 
UNIV_INLINE


117 
	`ªc_£t_öfo_bôs_ﬁd
(
ªc_t
 *
ªc
, 
ulöt
 
bôs
);

122 
UNIV_INLINE


123 
	`ªc_£t_öfo_bôs_√w
(
ªc_t
 *
ªc
, 
ulöt
 
bôs
);

128 
UNIV_INLINE


129 
	`ªc_£t_°©us
(
ªc_t
 *
ªc
, 
ulöt
 
bôs
);

134 
UNIV_INLINE


135 
ulöt
 
	$ªc_gë_öfo_™d_°©us_bôs
(

136 c⁄° 
ªc_t
 *
ªc
,

137 
ulöt
 
comp
)

138 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

144 
UNIV_INLINE


145 
	`ªc_£t_öfo_™d_°©us_bôs
(
ªc_t
 *
ªc
, 
ulöt
 
bôs
);

149 
UNIV_INLINE


150 
ulöt
 
	$ªc_gë_dñëed_Êag
(c⁄° 
ªc_t
 *
ªc
,

151 
ulöt
 
comp
)

152 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

157 
UNIV_INLINE


158 
	`ªc_£t_dñëed_Êag_ﬁd
(
ªc_t
 *
ªc
, 
ulöt
 
Êag
);

164 
UNIV_INLINE


165 
	`ªc_£t_dñëed_Êag_√w
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
Êag
);

170 
UNIV_INLINE


171 
	`ªc_£t_ö°™t_Êag_√w
(
ªc_t
 *
ªc
, 
boﬁ
 
Êag
);

175 
UNIV_INLINE


176 
boﬁ
 
	$ªc_gë_node_±r_Êag
(c⁄° 
ªc_t
 *
ªc
)

177 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

179 #ifde‡
J3VM


182 
UNIV_INLINE


183 
ulöt
 
	$ªc_gë_toggÀ_Êag
(c⁄° 
ªc_t
 *
ªc
,

184 
ulöt
 
comp
)

185 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

190 
UNIV_INLINE


191 
	`ªc_£t_toggÀ_Êag_ﬁd
(
ªc_t
 *
ªc
, 
ulöt
 
Êag
);

197 
UNIV_INLINE


198 
	`ªc_£t_toggÀ_Êag_√w
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
, 
ulöt
 
Êag
);

206 
UNIV_INLINE


207 
ulöt
 
	$ªc_gë_hóp_no_ﬁd
(c⁄° 
ªc_t
 *
ªc
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

213 
UNIV_INLINE


214 
	`ªc_£t_hóp_no_ﬁd
(
ªc_t
 *
ªc
, 
ulöt
 
hóp_no
);

220 
UNIV_INLINE


221 
ulöt
 
	$ªc_gë_hóp_no_√w
(c⁄° 
ªc_t
 *
ªc
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

227 
UNIV_INLINE


228 
	`ªc_£t_hóp_no_√w
(
ªc_t
 *
ªc
, 
ulöt
 
hóp_no
);

233 
UNIV_INLINE


234 
iboﬁ
 
	$ªc_gë_1byã_offs_Êag
(c⁄° 
ªc_t
 *
ªc
)

235 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

240 
UNIV_INLINE


241 
	`ªc_£t_1byã_offs_Êag
(
ªc_t
 *
ªc
, 
iboﬁ
 
Êag
);

247 
UNIV_INLINE


248 
ulöt
 
	$ªc_1_gë_fõld_íd_öfo
(c⁄° 
ªc_t
 *
ªc
,

249 
ulöt
 
n
)

250 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

257 
UNIV_INLINE


258 
ulöt
 
	$ªc_2_gë_fõld_íd_öfo
(c⁄° 
ªc_t
 *
ªc
,

259 
ulöt
 
n
)

260 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

265 
UNIV_INLINE


266 
ulöt
 
	$ªc_2_is_fõld_exã∫
(c⁄° 
ªc_t
 *
ªc
,

267 
ulöt
 
n
)

268 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

273 
ulöt
 
	$ªc_gë_n_exã∫_√w
(

274 c⁄° 
ªc_t
 *
ªc
,

275 c⁄° 
di˘_ödex_t
 *
ödex
,

276 
ulöt
 
n
)

277 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

279 #ifde‡
UNIV_DEBUG


280 
	#ªc_gë_off£ts
(
ªc
, 
ödex
, 
off£ts
, 
n
, 
hóp
) \

281 
	`ªc_gë_off£ts_func
(
ªc
, 
ödex
, 
off£ts
, 
n
, 
__FILE__
, 
__LINE__
, 
hóp
)

	)

283 
	#ªc_gë_off£ts
(
ªc
, 
ödex
, 
off£ts
, 
n
, 
hóp
) \

284 
	`ªc_gë_off£ts_func
(
ªc
, 
ödex
, 
off£ts
, 
n
, 
hóp
)

	)

290 
ulöt
 
	`ªc_gë_¡h_fõld_offs_ﬁd
(c⁄° 
ªc_t
 *
ªc
,

291 
ulöt
 
n
,

292 
ulöt
 *
Àn
);

303 
UNIV_INLINE


304 c⁄° 
byã
 *
	`ªc_gë_¡h_fõld_ﬁd_ö°™t
(c⁄° 
ªc_t
 *
ªc
, 
uöt16_t
 
n
,

305 c⁄° 
di˘_ödex_t
 *
ödex
,

306 
ulöt
 *
Àn
);

308 
	#ªc_gë_¡h_fõld_ﬁd
(
ªc
, 
n
, 
Àn
) \

309 ((
ªc
Ë+ 
	`ªc_gë_¡h_fõld_offs_ﬁd
‘ec, 
n
, 
Àn
))

	)

314 
UNIV_INLINE


315 
ulöt
 
	$ªc_gë_¡h_fõld_size
(c⁄° 
ªc_t
 *
ªc
,

316 
ulöt
 
n
)

317 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

327 
UNIV_INLINE


328 
ulöt
 
	`ªc_gë_¡h_fõld_offs
(c⁄° ulöà*
off£ts
, ulöà
n
, ulöà*
Àn
);

330 #ifde‡
UNIV_DEBUG


340 
ölöe
 
byã
 *
	$ªc_gë_¡h_fõld
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
, ulöà
n
,

341 
ulöt
 *
Àn
) {

342 
ulöt
 
off
 = 
	`ªc_gë_¡h_fõld_offs
(
off£ts
, 
n
, 
Àn
);

343 
	`ut_ad
(*
Àn
 !
UNIV_SQL_ADD_COL_DEFAULT
);

344  (
c⁄°_ˇ°
<
byã
 *>(
ªc
Ë+ 
off
);

345 
	}
}

351 
	#ªc_gë_¡h_fõld
(
ªc
, 
off£ts
, 
n
, 
Àn
) \

352 ((
ªc
Ë+ 
	`ªc_gë_¡h_fõld_offs
(
off£ts
, 
n
, 
Àn
))

	)

366 
UNIV_INLINE


367 c⁄° 
byã
 *
ªc_gë_¡h_fõld_ö°™t
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
,

368 
ulöt
 
n
, c⁄° 
di˘_ödex_t
 *
ödex
,

369 
ulöt
 *
Àn
);

375 
UNIV_INLINE


376 
boﬁ
 
ªc_fõld_nŸ_nuŒ_nŸ_add_cﬁ_def
(
ulöt
 
Àn
);

381 
UNIV_INLINE


382 
ulöt
 
	$ªc_offs_comp
(

383 c⁄° 
ulöt
 *
off£ts
)

384 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

388 
UNIV_INLINE


389 
ulöt
 
	$ªc_offs_™y_exã∫
(

390 c⁄° 
ulöt
 *
off£ts
)

391 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

394 
UNIV_INLINE


395 c⁄° 
byã
 *
	$ªc_offs_™y_nuŒ_exã∫
(

396 c⁄° 
ªc_t
 *
ªc
,

397 c⁄° 
ulöt
 *
off£ts
)

398 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

401 
UNIV_INLINE


402 
ulöt
 
	$ªc_offs_¡h_exã∫
(

403 c⁄° 
ulöt
 *
off£ts
,

404 
ulöt
 
n
)

405 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

410 
	`ªc_offs_make_¡h_exã∫
(
ulöt
 *
off£ts
, c⁄° ulöà
n
);

413 
UNIV_INLINE


414 
ulöt
 
	$ªc_offs_¡h_sql_nuŒ
(

415 c⁄° 
ulöt
 *
off£ts
,

416 
ulöt
 
n
)

417 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

421 
UNIV_INLINE


422 
ulöt
 
	`ªc_offs_¡h_deÁu…
(c⁄° ulöà*
off£ts
, ulöà
n
);

426 
UNIV_INLINE


427 
ulöt
 
	$ªc_offs_¡h_size
(

428 c⁄° 
ulöt
 *
off£ts
,

429 
ulöt
 
n
)

430 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

434 
UNIV_INLINE


435 
ulöt
 
	$ªc_offs_n_exã∫
(

436 c⁄° 
ulöt
 *
off£ts
)

437 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

452 
UNIV_INLINE


453 
	`ªc_£t_¡h_fõld
(
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
, ulöà
n
,

454 c⁄° *
d©a
, 
ulöt
 
Àn
);

461 
UNIV_INLINE


462 
ulöt
 
	$ªc_gë_d©a_size_ﬁd
(c⁄° 
ªc_t
 *
ªc
)

463 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

464 
	#ªc_offs_öô
(
off£ts
) \

465 
	`ªc_offs_£t_n_Æloc
(
off£ts
, ( off£tsË/  *off£ts)

	)

491 ˛as†
	cRec_off£ts
 : 
¥iv©e
 
ut
::
N⁄_c›yabÀ
 {

492 
public
:

496 
	$Rec_off£ts
(Ë{ 
	`ªc_offs_öô
(
m_¥óŒoˇãd_buf„r
); }

507 c⁄° 
ulöt
 *
	$compuã
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
di˘_ödex_t
 *
ödex
) {

508 
m_off£ts
 =

509 
	`ªc_gë_off£ts
(
ªc
, 
ödex
, 
m_off£ts
, 
ULINT_UNDEFINED
, &
m_hóp
);

510  
m_off£ts
;

511 
	}
}

513 ~
	$Rec_off£ts
() {

514 i‡(
m_hóp
) {

515 
	`mem_hóp_‰ì
(
m_hóp
);

516 
m_hóp
 = 
nuŒ±r
;

518 
	}
}

520 
	g¥iv©e
:

527 
mem_hóp_t
 *
m_hóp
{
nuŒ±r
};

531 
ulöt
 
	gm_¥óŒoˇãd_buf„r
[
REC_OFFS_NORMAL_SIZE
];

538 
ulöt
 *
	gm_off£ts
{
	gm_¥óŒoˇãd_buf„r
};

546 
UNIV_INLINE


547 
ulöt
 
	$ªc_offs_d©a_size
(

548 c⁄° 
ulöt
 *
off£ts
)

549 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

554 
UNIV_INLINE


555 
ulöt
 
	$ªc_offs_exåa_size
(

556 c⁄° 
ulöt
 *
off£ts
)

557 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

560 
UNIV_INLINE


561 
ulöt
 
	$ªc_offs_size
(

562 c⁄° 
ulöt
 *
off£ts
)

563 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

564 #ifde‡
UNIV_DEBUG


567 
UNIV_INLINE


568 
byã
 *
	$ªc_gë_°¨t
(

569 c⁄° 
ªc_t
 *
ªc
,

570 c⁄° 
ulöt
 *
off£ts
)

571 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

574 
UNIV_INLINE


575 
byã
 *
	$ªc_gë_íd
(

576 c⁄° 
ªc_t
 *
ªc
,

577 c⁄° 
ulöt
 *
off£ts
)

578 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

580 
	#ªc_gë_°¨t
(
ªc
, 
off£ts
Ë(‘ec)-
	`ªc_offs_exåa_size
(off£ts))

	)

581 
	#ªc_gë_íd
(
ªc
, 
off£ts
Ë(‘ecË+ 
	`ªc_offs_d©a_size
(off£ts))

	)

589 
UNIV_INLINE


590 
ªc_t
 *
	`ªc_c›y
(*
buf
, c⁄°Ñec_à*
ªc
, c⁄° 
ulöt
 *
off£ts
);

591 #ifde‡
J3VM


592 
UNIV_INLINE


593 
ªc_t
 *
	`ªc_c›y_•ecül
(*
buf
, c⁄°Ñec_à*
ªc
, c⁄° 
ulöt
 *
off£ts
);

595 #i‚de‡
UNIV_HOTBACKUP


598 
ulöt
 
	$ªc_gë_c⁄vîãd_size_ãmp
(

599 c⁄° 
di˘_ödex_t
 *
ödex
,

600 c⁄° 
dfõld_t
 *
fõlds
,

601 
ulöt
 
n_fõlds
,

602 c⁄° 
dtu∂e_t
 *
v_íåy
,

604 
ulöt
 *
exåa
)

605 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

609 
	`ªc_öô_off£ts_ãmp
(

610 c⁄° 
ªc_t
 *
ªc
,

611 c⁄° 
di˘_ödex_t
 *
ödex
,

612 
ulöt
 *
off£ts
);

617 
	`ªc_c⁄vît_dtu∂e_to_ãmp
(

618 
ªc_t
 *
ªc
,

619 c⁄° 
di˘_ödex_t
 *
ödex
,

620 c⁄° 
dfõld_t
 *
fõlds
,

621 
ulöt
 
n_fõlds
,

622 c⁄° 
dtu∂e_t
 *
v_íåy
);

628 
ªc_t
 *
	`ªc_c›y_¥efix_to_buf
(

629 c⁄° 
ªc_t
 *
ªc
,

630 c⁄° 
di˘_ödex_t
 *
ödex
,

631 
ulöt
 
n_fõlds
,

633 
byã
 **
buf
,

636 
size_t
 *
buf_size


646 
UNIV_INLINE


647 
ulöt
 
	$ªc_fﬁd
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
, ulöà
n_fõlds
,

648 
ulöt
 
n_byãs
, ulöà
fﬁd
, c⁄° 
di˘_ödex_t
 *
ödex
)

649 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

654 
ªc_t
 *
	$ªc_c⁄vît_dtu∂e_to_ªc
(

655 
byã
 *
buf
,

657 c⁄° 
di˘_ödex_t
 *
ödex
,

658 c⁄° 
dtu∂e_t
 *
dtu∂e
)

659 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

666 
UNIV_INLINE


667 
ulöt
 
	`ªc_gë_c⁄vîãd_exåa_size
(ulöà
d©a_size
, ulöà
n_fõlds
,

668 
boﬁ
 
has_ext
);

671 
ulöt
 
	$ªc_gë_c⁄vîãd_size_comp_¥efix
(

672 c⁄° 
di˘_ödex_t
 *
ödex
,

673 c⁄° 
dfõld_t
 *
fõlds
,

674 
ulöt
 
n_fõlds
,

675 
ulöt
 *
exåa
)

676 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

679 
ulöt
 
	`ªc_gë_c⁄vîãd_size_comp
(

680 c⁄° 
di˘_ödex_t
 *
ödex
,

684 
ulöt
 
°©us
,

685 c⁄° 
dfõld_t
 *
fõlds
,

686 
ulöt
 
n_fõlds
,

687 
ulöt
 *
exåa
);

693 
UNIV_INLINE


694 
ulöt
 
	$ªc_gë_c⁄vîãd_size
(c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
dtu∂e_t
 *
dtu∂e
)

695 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

696 #i‚de‡
UNIV_HOTBACKUP


699 
	`ªc_c›y_¥efix_to_dtu∂e
(

700 
dtu∂e_t
 *
tu∂e
,

701 c⁄° 
ªc_t
 *
ªc
,

702 c⁄° 
di˘_ödex_t
 *
ödex
,

703 
ulöt
 
n_fõlds
,

705 
mem_hóp_t
 *
hóp
);

711 
UNIV_INLINE


712 
uöt8_t
 
	`ªc_gë_n_fõlds_Àngth
(
ulöt
 
n_fõlds
);

719 
UNIV_INLINE


720 
uöt8_t
 
	`ªc_£t_n_fõlds
(
ªc_t
 *
ªc
, 
ulöt
 
n_fõlds
);

724 
iboﬁ
 
	`ªc_vÆid©e
(

725 c⁄° 
ªc_t
 *
ªc
,

726 c⁄° 
ulöt
 *
off£ts
);

731 
	`ªc_¥öt_ﬁd
(
FILE
 *
fûe
, c⁄° 
ªc_t
 *
ªc
);

733 #i‚de‡
UNIV_HOTBACKUP


739 
	`ªc_¥öt_mbr_ªc
(
FILE
 *
fûe
, c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
);

742 
	`ªc_¥öt_√w
(

743 
FILE
 *
fûe
,

744 c⁄° 
ªc_t
 *
ªc
,

745 c⁄° 
ulöt
 *
off£ts
);

751 
	`ªc_¥öt
(
FILE
 *
fûe
, c⁄° 
ªc_t
 *
ªc
, c⁄° 
di˘_ödex_t
 *
ödex
);

758 
	`ªc_¥öt
(
°d
::
o°ªam
 &
o
, c⁄° 
ªc_t
 *
ªc
, 
ulöt
 
öfo
,

759 c⁄° 
ulöt
 *
off£ts
);

762 
	sªc_ödex_¥öt
 {

764 
	`ªc_ödex_¥öt
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
di˘_ödex_t
 *
ödex
)

765 : 
	`m_ªc
(
ªc
), 
	`m_ödex
(
ödex
) {}

768 c⁄° 
ªc_t
 *
m_ªc
;

770 c⁄° 
di˘_ödex_t
 *
m_ödex
;

777 
°d
::
o°ªam
 &
›î©‹
<<(°d::o°ªam &
o
, c⁄° 
ªc_ödex_¥öt
 &
r
);

780 
	sªc_off£ts_¥öt
 {

782 
	`ªc_off£ts_¥öt
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
)

783 : 
	`m_ªc
(
ªc
), 
	`m_off£ts
(
off£ts
) {}

786 c⁄° 
ªc_t
 *
m_ªc
;

788 c⁄° 
ulöt
 *
m_off£ts
;

795 
°d
::
o°ªam
 &
›î©‹
<<(°d::o°ªam &
o
, c⁄° 
ªc_off£ts_¥öt
 &
r
);

797 #ifde‡
UNIV_DEBUG


799 ˛as†
	cªc_¥öãr
 : 
public
 
°d
::
o°rög°ªam
 {

800 
public
:

804 
	$ªc_¥öãr
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
Ë: 
°d
::
	$o°rög°ªam
() {

805 
	`ªc_¥öt
(*
this
, 
ªc
, 
	`ªc_gë_öfo_bôs
‘ec, 
	`ªc_offs_comp
(
off£ts
)),

806 
off£ts
);

813 
	$ªc_¥öãr
(c⁄° 
ªc_t
 *
ªc
, 
ulöt
 
öfo
, c⁄° ulöà*
off£ts
)

814 : 
°d
::
	$o°rög°ªam
() {

815 
	`ªc_¥öt
(*
this
, 
ªc
, 
öfo
, 
off£ts
);

816 
	}
}

820 
	$ªc_¥öãr
(c⁄° 
dtu∂e_t
 *
tu∂e
Ë: 
°d
::
	$o°rög°ªam
() {

821 
	`dtu∂e_¥öt
(*
this
, 
tu∂e
);

822 
	}
}

827 
	$ªc_¥öãr
(c⁄° 
dfõld_t
 *
fõld
, 
ulöt
 
n
Ë: 
°d
::
	$o°rög°ªam
() {

828 
	`dfõld_¥öt
(*
this
, 
fõld
, 
n
);

829 
	}
}

832 
	gvútuÆ
 ~
	$ªc_¥öãr
(Ë{
	}
}

834 
	g¥iv©e
:

836 
ªc_¥öãr
(c⁄°Ñec_¥öã∏&
Ÿhî
);

838 
	gªc_¥öãr
 &
	g›î©‹
=(c⁄° 
ªc_¥öãr
 &
Ÿhî
);

844 
åx_id_t
 
	$ªc_gë_åx_id
(c⁄° 
ªc_t
 *
ªc
,

845 c⁄° 
di˘_ödex_t
 *
ödex
)

846 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

851 
c⁄°ex¥
 
ulöt
 
REC_1BYTE_OFFS_LIMIT
 = 0x7FUL;

852 
c⁄°ex¥
 
ulöt
 
REC_2BYTE_OFFS_LIMIT
 = 0x7FFFUL;

856 
c⁄°ex¥
 
ulöt
 
REC_MAX_DATA_SIZE
 = 16384;

858 
	~"ªm0ªc.ic
"

	@rem0rec.ic

33 
	~"bå0ty≥s.h
"

34 
	~"di˘0boŸ.h
"

35 
	~"di˘0di˘.h
"

36 
	~"mach0d©a.h
"

37 
	~"ut0byã.h
"

85 
ªc_£t_¡h_fõld_nuŒ_bô
(
ªc_t
 *
ªc
,

86 
ulöt
 
i
,

87 
iboﬁ
 
vÆ
);

90 
ªc_£t_¡h_fõld_sql_nuŒ
(
ªc_t
 *
ªc
,

91 
ulöt
 
n
);

94 
UNIV_INLINE


95 
	$ªc_£t_bô_fõld_1
(

96 
ªc_t
 *
ªc
,

97 
ulöt
 
vÆ
,

98 
ulöt
 
offs
,

99 
ulöt
 
mask
,

100 
ulöt
 
shi·
)

102 
	`ut_ad
(
ªc
);

103 
	`ut_ad
(
offs
 <
REC_N_OLD_EXTRA_BYTES
);

104 
	`ut_ad
(
mask
);

105 
	`ut_ad
(
mask
 <= 0xFFUL);

106 
	`ut_ad
(((
mask
 >> 
shi·
) << shift) == mask);

107 
	`ut_ad
(((
vÆ
 << 
shi·
Ë& 
mask
) == (val << shift));

109 
	`mach_wrôe_to_1
(
ªc
 - 
offs
,

110 (
	`mach_ªad_‰om_1
(
ªc
 - 
offs
Ë& ~
mask
Ë| (
vÆ
 << 
shi·
));

111 
	}
}

114 
UNIV_INLINE


115 
	$ªc_£t_bô_fõld_2
(

116 
ªc_t
 *
ªc
,

117 
ulöt
 
vÆ
,

118 
ulöt
 
offs
,

119 
ulöt
 
mask
,

120 
ulöt
 
shi·
)

122 
	`ut_ad
(
ªc
);

123 
	`ut_ad
(
offs
 <
REC_N_OLD_EXTRA_BYTES
);

124 
	`ut_ad
(
mask
 > 0xFFUL);

125 
	`ut_ad
(
mask
 <= 0xFFFFUL);

126 
	`ut_ad
((
mask
 >> 
shi·
) & 1);

127 
	`ut_ad
(0 =((
mask
 >> 
shi·
) & ((mask >> shift) + 1)));

128 
	`ut_ad
(((
mask
 >> 
shi·
) << shift) == mask);

129 
	`ut_ad
(((
vÆ
 << 
shi·
Ë& 
mask
) == (val << shift));

131 
	`mach_wrôe_to_2
(
ªc
 - 
offs
,

132 (
	`mach_ªad_‰om_2
(
ªc
 - 
offs
Ë& ~
mask
Ë| (
vÆ
 << 
shi·
));

133 
	}
}

138 
UNIV_INLINE


139 c⁄° 
ªc_t
 *
	$ªc_gë_√xt_±r_c⁄°
(

140 c⁄° 
ªc_t
 *
ªc
,

141 
ulöt
 
comp
)

143 
ulöt
 
fõld_vÆue
;

145 
	`ut_ad
(
REC_NEXT_MASK
 == 0xFFFFUL);

146 
	`ut_ad
(
REC_NEXT_SHIFT
 == 0);

148 
fõld_vÆue
 = 
	`mach_ªad_‰om_2
(
ªc
 - 
REC_NEXT
);

150 i‡(
fõld_vÆue
 == 0) {

151  (
nuŒ±r
);

154 i‡(
comp
) {

155 i‡(
UNIV_PAGE_SIZE_MAX
 <= 32768) {

168 
	`ut_ad
((
fõld_vÆue
 >= 32768 ? field_value - 65536 : field_value) +

169 
	`ut_Æign_off£t
(
ªc
, 
UNIV_PAGE_SIZE
) <

170 
UNIV_PAGE_SIZE
);

175 
	`ut_ad
((
fõld_vÆue
 > 
REC_N_NEW_EXTRA_BYTES
 && field_value < 32768) ||

176 
fõld_vÆue
 < (
uöt16
)-
REC_N_NEW_EXTRA_BYTES
);

178  ((
byã
 *)
	`ut_Æign_down
(
ªc
, 
UNIV_PAGE_SIZE
) +

179 
	`ut_Æign_off£t
(
ªc
 + 
fõld_vÆue
, 
UNIV_PAGE_SIZE
));

181 
	`ut_ad
(
fõld_vÆue
 < 
UNIV_PAGE_SIZE
);

183  ((
byã
 *)
	`ut_Æign_down
(
ªc
, 
UNIV_PAGE_SIZE
Ë+ 
fõld_vÆue
);

185 
	}
}

190 
UNIV_INLINE


191 
ªc_t
 *
	$ªc_gë_√xt_±r
(
ªc_t
 *
ªc
,

192 
ulöt
 
comp
)

194  (
c⁄°_ˇ°
<
ªc_t
 *>(
	`ªc_gë_√xt_±r_c⁄°
(
ªc
, 
comp
)));

195 
	}
}

200 
UNIV_INLINE


201 
ulöt
 
	$ªc_gë_√xt_offs
(c⁄° 
ªc_t
 *
ªc
,

202 
ulöt
 
comp
)

204 
ulöt
 
fõld_vÆue
;

205 #i‡
REC_NEXT_MASK
 != 0xFFFFUL

208 #i‡
REC_NEXT_SHIFT


212 
fõld_vÆue
 = 
	`mach_ªad_‰om_2
(
ªc
 - 
REC_NEXT
);

214 i‡(
comp
) {

215 i‡(
UNIV_PAGE_SIZE_MAX
 <= 32768) {

229 
	`ut_ad
((
fõld_vÆue
 >= 32768 ? field_value - 65536 : field_value) +

230 
	`ut_Æign_off£t
(
ªc
, 
UNIV_PAGE_SIZE
) <

231 
UNIV_PAGE_SIZE
);

234 i‡(
fõld_vÆue
 == 0) {

240 
	`ut_ad
((
fõld_vÆue
 > 
REC_N_NEW_EXTRA_BYTES
 && field_value < 32768) ||

241 
fõld_vÆue
 < (
uöt16
)-
REC_N_NEW_EXTRA_BYTES
);

243  (
	`ut_Æign_off£t
(
ªc
 + 
fõld_vÆue
, 
UNIV_PAGE_SIZE
));

245 
	`ut_ad
(
fõld_vÆue
 < 
UNIV_PAGE_SIZE
);

247  (
fõld_vÆue
);

249 
	}
}

253 
UNIV_INLINE


254 
	$ªc_£t_√xt_offs_ﬁd
(
ªc_t
 *
ªc
,

255 
ulöt
 
√xt
)

257 
	`ut_ad
(
ªc
);

258 
	`ut_ad
(
UNIV_PAGE_SIZE
 > 
√xt
);

259 #i‡
REC_NEXT_MASK
 != 0xFFFFUL

262 #i‡
REC_NEXT_SHIFT


266 
	`mach_wrôe_to_2
(
ªc
 - 
REC_NEXT
, 
√xt
);

267 
	}
}

271 
UNIV_INLINE


272 
	$ªc_£t_√xt_offs_√w
(
ªc_t
 *
ªc
,

273 
ulöt
 
√xt
)

275 
ulöt
 
fõld_vÆue
;

277 
	`ut_ad
(
ªc
);

278 
	`ut_ad
(
UNIV_PAGE_SIZE
 > 
√xt
);

280 i‡(!
√xt
) {

281 
fõld_vÆue
 = 0;

287 
fõld_vÆue
 =

288 (
ulöt
)((
löt
)
√xt
 - (löt)
	`ut_Æign_off£t
(
ªc
, 
UNIV_PAGE_SIZE
));

289 
fõld_vÆue
 &
REC_NEXT_MASK
;

292 
	`mach_wrôe_to_2
(
ªc
 - 
REC_NEXT
, 
fõld_vÆue
);

293 
	}
}

297 
UNIV_INLINE


298 
	$ªc_£t_n_fõlds_ﬁd
(
ªc_t
 *
ªc
,

299 
ulöt
 
n_fõlds
)

301 
	`ut_ad
(
ªc
);

302 
	`ut_ad
(
n_fõlds
 <
REC_MAX_N_FIELDS
);

303 
	`ut_ad
(
n_fõlds
 > 0);

305 
	`ªc_£t_bô_fõld_2
(
ªc
, 
n_fõlds
, 
REC_OLD_N_FIELDS
, 
REC_OLD_N_FIELDS_MASK
,

306 
REC_OLD_N_FIELDS_SHIFT
);

307 
	}
}

312 
UNIV_INLINE


313 
ulöt
 
	$ªc_gë_n_ow√d_ﬁd
(

314 c⁄° 
ªc_t
 *
ªc
)

316  (
	`ªc_gë_bô_fõld_1
(
ªc
, 
REC_OLD_N_OWNED
, 
REC_N_OWNED_MASK
,

317 
REC_N_OWNED_SHIFT
));

318 
	}
}

321 
UNIV_INLINE


322 
	$ªc_£t_n_ow√d_ﬁd
(
ªc_t
 *
ªc
,

323 
ulöt
 
n_ow√d
)

325 
	`ªc_£t_bô_fõld_1
(
ªc
, 
n_ow√d
, 
REC_OLD_N_OWNED
, 
REC_N_OWNED_MASK
,

326 
REC_N_OWNED_SHIFT
);

327 
	}
}

332 
UNIV_INLINE


333 
ulöt
 
	$ªc_gë_n_ow√d_√w
(

334 c⁄° 
ªc_t
 *
ªc
)

336  (
	`ªc_gë_bô_fõld_1
(
ªc
, 
REC_NEW_N_OWNED
, 
REC_N_OWNED_MASK
,

337 
REC_N_OWNED_SHIFT
));

338 
	}
}

341 
UNIV_INLINE


342 
	$ªc_£t_n_ow√d_√w
(

343 
ªc_t
 *
ªc
,

344 
∑ge_zù_des_t
 *
∑ge_zù
,

345 
ulöt
 
n_ow√d
)

347 
	`ªc_£t_bô_fõld_1
(
ªc
, 
n_ow√d
, 
REC_NEW_N_OWNED
, 
REC_N_OWNED_MASK
,

348 
REC_N_OWNED_SHIFT
);

349 i‡(
∑ge_zù
 && 
	`ªc_gë_°©us
(
ªc
Ë!
REC_STATUS_SUPREMUM
) {

350 
	`∑ge_zù_ªc_£t_ow√d
(
∑ge_zù
, 
ªc
, 
n_ow√d
);

352 
	}
}

355 
UNIV_INLINE


356 
	$ªc_£t_öfo_bôs_ﬁd
(
ªc_t
 *
ªc
,

357 
ulöt
 
bôs
)

359 
	`ut_ad
(
	`ªc_öfo_bôs_vÆid
(
bôs
));

360 
	`ªc_£t_bô_fõld_1
(
ªc
, 
bôs
, 
REC_OLD_INFO_BITS
, 
REC_INFO_BITS_MASK
,

361 
REC_INFO_BITS_SHIFT
);

362 
	}
}

364 
UNIV_INLINE


365 
	$ªc_£t_öfo_bôs_√w
(
ªc_t
 *
ªc
,

366 
ulöt
 
bôs
)

368 
	`ut_ad
(
	`ªc_öfo_bôs_vÆid
(
bôs
));

369 
	`ªc_£t_bô_fõld_1
(
ªc
, 
bôs
, 
REC_NEW_INFO_BITS
, 
REC_INFO_BITS_MASK
,

370 
REC_INFO_BITS_SHIFT
);

371 
	}
}

375 
UNIV_INLINE


376 
	$ªc_£t_°©us
(
ªc_t
 *
ªc
,

377 
ulöt
 
bôs
)

379 
	`ªc_£t_bô_fõld_1
(
ªc
, 
bôs
, 
REC_NEW_STATUS
, 
REC_NEW_STATUS_MASK
,

380 
REC_NEW_STATUS_SHIFT
);

381 
	}
}

386 
UNIV_INLINE


387 
ulöt
 
	$ªc_gë_öfo_™d_°©us_bôs
(

388 c⁄° 
ªc_t
 *
ªc
,

389 
ulöt
 
comp
)

391 
ulöt
 
bôs
;

392 #i‡(
REC_NEW_STATUS_MASK
 >> 
REC_NEW_STATUS_SHIFT
) & \

393 (
REC_INFO_BITS_MASK
 >> 
REC_INFO_BITS_SHIFT
)

396 i‡(
comp
) {

397 
bôs
 = 
	`ªc_gë_öfo_bôs
(
ªc
, 
TRUE
Ë| 
	`ªc_gë_°©us
(rec);

399 
bôs
 = 
	`ªc_gë_öfo_bôs
(
ªc
, 
FALSE
);

400 
	`ut_ad
(!(
bôs
 & ~(
REC_INFO_BITS_MASK
 >> 
REC_INFO_BITS_SHIFT
)));

402  (
bôs
);

403 
	}
}

406 
UNIV_INLINE


407 
	$ªc_£t_öfo_™d_°©us_bôs
(
ªc_t
 *
ªc
,

408 
ulöt
 
bôs
)

410 #i‡(
REC_NEW_STATUS_MASK
 >> 
REC_NEW_STATUS_SHIFT
) & \

411 (
REC_INFO_BITS_MASK
 >> 
REC_INFO_BITS_SHIFT
)

414 
	`ªc_£t_°©us
(
ªc
, 
bôs
 & 
REC_NEW_STATUS_MASK
);

415 
	`ªc_£t_öfo_bôs_√w
(
ªc
, 
bôs
 & ~
REC_NEW_STATUS_MASK
);

416 
	}
}

420 
UNIV_INLINE


421 
ulöt
 
	$ªc_gë_dñëed_Êag
(c⁄° 
ªc_t
 *
ªc
,

422 
ulöt
 
comp
)

424 i‡(
comp
) {

425  (
	`ªc_gë_bô_fõld_1
(
ªc
, 
REC_NEW_INFO_BITS
, 
REC_INFO_DELETED_FLAG
,

426 
REC_INFO_BITS_SHIFT
));

428  (
	`ªc_gë_bô_fõld_1
(
ªc
, 
REC_OLD_INFO_BITS
, 
REC_INFO_DELETED_FLAG
,

429 
REC_INFO_BITS_SHIFT
));

431 
	}
}

434 
UNIV_INLINE


435 
	$ªc_£t_dñëed_Êag_ﬁd
(
ªc_t
 *
ªc
,

436 
ulöt
 
Êag
)

438 
ulöt
 
vÆ
;

440 
vÆ
 = 
	`ªc_gë_öfo_bôs
(
ªc
, 
FALSE
);

442 i‡(
Êag
) {

443 
vÆ
 |
REC_INFO_DELETED_FLAG
;

445 
vÆ
 &~
REC_INFO_DELETED_FLAG
;

448 
	`ªc_£t_öfo_bôs_ﬁd
(
ªc
, 
vÆ
);

449 
	}
}

452 
UNIV_INLINE


453 
	$ªc_£t_dñëed_Êag_√w
(

454 
ªc_t
 *
ªc
,

455 
∑ge_zù_des_t
 *
∑ge_zù
,

456 
ulöt
 
Êag
)

458 
ulöt
 
vÆ
;

460 
vÆ
 = 
	`ªc_gë_öfo_bôs
(
ªc
, 
TRUE
);

462 i‡(
Êag
) {

463 
vÆ
 |
REC_INFO_DELETED_FLAG
;

465 
vÆ
 &~
REC_INFO_DELETED_FLAG
;

468 
	`ªc_£t_öfo_bôs_√w
(
ªc
, 
vÆ
);

470 i‡(
∑ge_zù
) {

471 
	`∑ge_zù_ªc_£t_dñëed
(
∑ge_zù
, 
ªc
, 
Êag
);

473 
	}
}

478 
UNIV_INLINE


479 
	$ªc_£t_ö°™t_Êag_√w
(
ªc_t
 *
ªc
, 
boﬁ
 
Êag
) {

480 
ulöt
 
vÆ
;

482 
vÆ
 = 
	`ªc_gë_öfo_bôs
(
ªc
, 
TRUE
);

484 i‡(
Êag
) {

485 
vÆ
 |
REC_INFO_INSTANT_FLAG
;

487 
vÆ
 &~
REC_INFO_INSTANT_FLAG
;

490 
	`ªc_£t_öfo_bôs_√w
(
ªc
, 
vÆ
);

491 
	}
}

495 
UNIV_INLINE


496 
boﬁ
 
	$ªc_gë_node_±r_Êag
(c⁄° 
ªc_t
 *
ªc
)

498  (
REC_STATUS_NODE_PTR
 =
	`ªc_gë_°©us
(
ªc
));

499 
	}
}

501 #ifde‡
J3VM


504 
UNIV_INLINE


505 
ulöt
 
	$ªc_gë_toggÀ_Êag
(c⁄° 
ªc_t
 *
ªc
,

506 
ulöt
 
comp
)

508 i‡(
comp
) {

509  (
	`ªc_gë_bô_fõld_1
(
ªc
, 
REC_NEW_INFO_BITS
, 
REC_INFO_TOGGLE_FLAG
,

510 
REC_INFO_BITS_SHIFT
));

512  (
	`ªc_gë_bô_fõld_1
(
ªc
, 
REC_OLD_INFO_BITS
, 
REC_INFO_TOGGLE_FLAG
,

513 
REC_INFO_BITS_SHIFT
));

515 
	}
}

518 
UNIV_INLINE


519 
	$ªc_£t_toggÀ_Êag_ﬁd
(
ªc_t
 *
ªc
,

520 
ulöt
 
Êag
)

522 
ulöt
 
vÆ
;

524 
vÆ
 = 
	`ªc_gë_öfo_bôs
(
ªc
, 
FALSE
);

526 i‡(
Êag
) {

527 
vÆ
 |
REC_INFO_TOGGLE_FLAG
;

529 
vÆ
 &~
REC_INFO_TOGGLE_FLAG
;

532 
	`ªc_£t_öfo_bôs_ﬁd
(
ªc
, 
vÆ
);

533 
	}
}

536 
UNIV_INLINE


537 
	$ªc_£t_toggÀ_Êag_√w
(

538 
ªc_t
 *
ªc
,

539 
∑ge_zù_des_t
 *
∑ge_zù
,

540 
ulöt
 
Êag
)

542 
ulöt
 
vÆ
;

544 
vÆ
 = 
	`ªc_gë_öfo_bôs
(
ªc
, 
TRUE
);

546 i‡(
Êag
) {

547 
vÆ
 |
REC_INFO_TOGGLE_FLAG
;

549 
vÆ
 &~
REC_INFO_TOGGLE_FLAG
;

552 
	`ªc_£t_öfo_bôs_√w
(
ªc
, 
vÆ
);

554 i‡(
∑ge_zù
) {

556 
	`ut_a
(
Ál£
);

558 
	}
}

564 
UNIV_INLINE


565 
ulöt
 
	$ªc_gë_hóp_no_ﬁd
(c⁄° 
ªc_t
 *
ªc
)

567  (
	`ªc_gë_bô_fõld_2
(
ªc
, 
REC_OLD_HEAP_NO
, 
REC_HEAP_NO_MASK
,

568 
REC_HEAP_NO_SHIFT
));

569 
	}
}

573 
UNIV_INLINE


574 
	$ªc_£t_hóp_no_ﬁd
(
ªc_t
 *
ªc
,

575 
ulöt
 
hóp_no
)

577 
	`ªc_£t_bô_fõld_2
(
ªc
, 
hóp_no
, 
REC_OLD_HEAP_NO
, 
REC_HEAP_NO_MASK
,

578 
REC_HEAP_NO_SHIFT
);

579 
	}
}

584 
UNIV_INLINE


585 
ulöt
 
	$ªc_gë_hóp_no_√w
(c⁄° 
ªc_t
 *
ªc
)

587  (
	`ªc_gë_bô_fõld_2
(
ªc
, 
REC_NEW_HEAP_NO
, 
REC_HEAP_NO_MASK
,

588 
REC_HEAP_NO_SHIFT
));

589 
	}
}

593 
UNIV_INLINE


594 
	$ªc_£t_hóp_no_√w
(
ªc_t
 *
ªc
,

595 
ulöt
 
hóp_no
)

597 
	`ªc_£t_bô_fõld_2
(
ªc
, 
hóp_no
, 
REC_NEW_HEAP_NO
, 
REC_HEAP_NO_MASK
,

598 
REC_HEAP_NO_SHIFT
);

599 
	}
}

602 
UNIV_INLINE


603 
	$ªc_£t_1byã_offs_Êag
(
ªc_t
 *
ªc
,

604 
iboﬁ
 
Êag
)

606 #i‡
TRUE
 != 1

609 
	`ut_ad
(
Êag
 <
TRUE
);

611 
	`ªc_£t_bô_fõld_1
(
ªc
, 
Êag
, 
REC_OLD_SHORT
, 
REC_OLD_SHORT_MASK
,

612 
REC_OLD_SHORT_SHIFT
);

613 
	}
}

618 
UNIV_INLINE


619 
ulöt
 
	$ªc_2_is_fõld_exã∫
(c⁄° 
ªc_t
 *
ªc
,

620 
ulöt
 
n
)

622  (
	`ªc_2_gë_fõld_íd_öfo
(
ªc
, 
n
Ë& 
REC_2BYTE_EXTERN_MASK
);

623 
	}
}

628 
UNIV_INLINE


629 
ulöt
 
	$ªc_gë_¡h_fõld_offs
(

630 c⁄° 
ulöt
 *
off£ts
,

631 
ulöt
 
n
,

632 
ulöt
 *
Àn
)

636 
ulöt
 
offs
;

637 
ulöt
 
Àngth
;

638 
	`ut_ad
(
n
 < 
	`ªc_offs_n_fõlds
(
off£ts
));

639 
	`ut_ad
(
Àn
);

641 i‡(
n
 == 0) {

642 
offs
 = 0;

644 
offs
 = 
	`ªc_offs_ba£
(
off£ts
)[
n
] & 
REC_OFFS_MASK
;

647 
Àngth
 = 
	`ªc_offs_ba£
(
off£ts
)[1 + 
n
];

649 i‡(
Àngth
 & 
REC_OFFS_SQL_NULL
) {

650 
Àngth
 = 
UNIV_SQL_NULL
;

651 } i‡(
Àngth
 & 
REC_OFFS_DEFAULT
) {

652 
Àngth
 = 
UNIV_SQL_ADD_COL_DEFAULT
;

654 
Àngth
 &
REC_OFFS_MASK
;

655 
Àngth
 -
offs
;

658 *
Àn
 = 
Àngth
;

659  (
offs
);

660 
	}
}

666 
UNIV_INLINE


667 
boﬁ
 
	$ªc_fõld_nŸ_nuŒ_nŸ_add_cﬁ_def
(
ulöt
 
Àn
) {

668  (
Àn
 !
UNIV_SQL_NULL
 &&Üí !
UNIV_SQL_ADD_COL_DEFAULT
);

669 
	}
}

674 
UNIV_INLINE


675 
ulöt
 
	$ªc_offs_comp
(

676 c⁄° 
ulöt
 *
off£ts
)

678 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
,ÇuŒ±r, 
off£ts
));

679  (*
	`ªc_offs_ba£
(
off£ts
Ë& 
REC_OFFS_COMPACT
);

680 
	}
}

685 
UNIV_INLINE


686 
ulöt
 
	$ªc_offs_™y_exã∫
(

687 c⁄° 
ulöt
 *
off£ts
)

689 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
,ÇuŒ±r, 
off£ts
));

690  (*
	`ªc_offs_ba£
(
off£ts
Ë& 
REC_OFFS_EXTERNAL
);

691 
	}
}

695 
UNIV_INLINE


696 c⁄° 
byã
 *
	$ªc_offs_™y_nuŒ_exã∫
(

697 c⁄° 
ªc_t
 *
ªc
,

698 c⁄° 
ulöt
 *
off£ts
)

700 
ulöt
 
i
;

701 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
nuŒ±r
, 
off£ts
));

703 i‡(!
	`ªc_offs_™y_exã∫
(
off£ts
)) {

704  (
nuŒ±r
);

707 
i
 = 0; i < 
	`ªc_offs_n_fõlds
(
off£ts
); i++) {

708 i‡(
	`ªc_offs_¡h_exã∫
(
off£ts
, 
i
)) {

709 
ulöt
 
Àn
;

710 c⁄° 
byã
 *
fõld
 = 
	`ªc_gë_¡h_fõld
(
ªc
, 
off£ts
, 
i
, &
Àn
);

712 
	`ut_a
(
Àn
 >
BTR_EXTERN_FIELD_REF_SIZE
);

713 i‡(!
	`memcmp
(
fõld
 + 
Àn
 - 
BTR_EXTERN_FIELD_REF_SIZE
, 
fõld_ªf_zîo
,

714 
BTR_EXTERN_FIELD_REF_SIZE
)) {

715  (
fõld
);

720  (
nuŒ±r
);

721 
	}
}

725 
UNIV_INLINE


726 
ulöt
 
	$ªc_offs_¡h_exã∫
(

727 c⁄° 
ulöt
 *
off£ts
,

728 
ulöt
 
n
)

730 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
,ÇuŒ±r, 
off£ts
));

731 
	`ut_ad
(
n
 < 
	`ªc_offs_n_fõlds
(
off£ts
));

732  (
	`ªc_offs_ba£
(
off£ts
)[1 + 
n
] & 
REC_OFFS_EXTERNAL
);

733 
	}
}

737 
UNIV_INLINE


738 
ulöt
 
	$ªc_offs_¡h_sql_nuŒ
(

739 c⁄° 
ulöt
 *
off£ts
,

740 
ulöt
 
n
)

742 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
,ÇuŒ±r, 
off£ts
));

743 
	`ut_ad
(
n
 < 
	`ªc_offs_n_fõlds
(
off£ts
));

744  (
	`ªc_offs_ba£
(
off£ts
)[1 + 
n
] & 
REC_OFFS_SQL_NULL
);

745 
	}
}

749 
UNIV_INLINE


750 
ulöt
 
	$ªc_offs_¡h_deÁu…
(c⁄° 
ulöt
 *
off£ts
, ulöà
n
) {

751 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
,ÇuŒ±r, 
off£ts
));

752 
	`ut_ad
(
n
 < 
	`ªc_offs_n_fõlds
(
off£ts
));

753  (
	`ªc_offs_ba£
(
off£ts
)[1 + 
n
] & 
REC_OFFS_DEFAULT
);

754 
	}
}

758 
UNIV_INLINE


759 
ulöt
 
	$ªc_offs_¡h_size
(

760 c⁄° 
ulöt
 *
off£ts
,

761 
ulöt
 
n
)

763 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
,ÇuŒ±r, 
off£ts
));

764 
	`ut_ad
(
n
 < 
	`ªc_offs_n_fõlds
(
off£ts
));

765 i‡(!
n
) {

766  (
	`ªc_offs_ba£
(
off£ts
)[1 + 
n
] & 
REC_OFFS_MASK
);

768  ((
	`ªc_offs_ba£
(
off£ts
)[1 + 
n
] -Ñec_offs_base(offsets)[n]) &

769 
REC_OFFS_MASK
);

770 
	}
}

774 
UNIV_INLINE


775 
ulöt
 
	$ªc_offs_n_exã∫
(

776 c⁄° 
ulöt
 *
off£ts
)

778 
ulöt
 
n
 = 0;

780 i‡(
	`ªc_offs_™y_exã∫
(
off£ts
)) {

781 
ulöt
 
i
;

783 
i
 = 
	`ªc_offs_n_fõlds
(
off£ts
); i--;) {

784 i‡(
	`ªc_offs_¡h_exã∫
(
off£ts
, 
i
)) {

785 
n
++;

790  (
n
);

791 
	}
}

799 
UNIV_INLINE


800 
ulöt
 
	$ªc_1_gë_¥ev_fõld_íd_öfo
(c⁄° 
ªc_t
 *
ªc
,

801 
ulöt
 
n
)

803 
	`ut_ad
(
	`ªc_gë_1byã_offs_Êag
(
ªc
));

804 
	`ut_ad
(
n
 <
	`ªc_gë_n_fõlds_ﬁd_øw
(
ªc
));

806  (
	`mach_ªad_‰om_1
(
ªc
 - (
REC_N_OLD_EXTRA_BYTES
 + 
n
)));

807 
	}
}

813 
UNIV_INLINE


814 
ulöt
 
	$ªc_2_gë_¥ev_fõld_íd_öfo
(c⁄° 
ªc_t
 *
ªc
,

815 
ulöt
 
n
)

817 
	`ut_ad
(!
	`ªc_gë_1byã_offs_Êag
(
ªc
));

818 
	`ut_ad
(
n
 <
	`ªc_gë_n_fõlds_ﬁd_øw
(
ªc
));

820  (
	`mach_ªad_‰om_2
(
ªc
 - (
REC_N_OLD_EXTRA_BYTES
 + 2 * 
n
)));

821 
	}
}

825 
UNIV_INLINE


826 
	$ªc_1_£t_fõld_íd_öfo
(
ªc_t
 *
ªc
,

827 
ulöt
 
n
,

828 
ulöt
 
öfo
)

830 
	`ut_ad
(
	`ªc_gë_1byã_offs_Êag
(
ªc
));

831 
	`ut_ad
(
n
 < 
	`ªc_gë_n_fõlds_ﬁd_øw
(
ªc
));

833 
	`mach_wrôe_to_1
(
ªc
 - (
REC_N_OLD_EXTRA_BYTES
 + 
n
 + 1), 
öfo
);

834 
	}
}

838 
UNIV_INLINE


839 
	$ªc_2_£t_fõld_íd_öfo
(
ªc_t
 *
ªc
,

840 
ulöt
 
n
,

841 
ulöt
 
öfo
)

843 
	`ut_ad
(!
	`ªc_gë_1byã_offs_Êag
(
ªc
));

844 
	`ut_ad
(
n
 < 
	`ªc_gë_n_fõlds_ﬁd_øw
(
ªc
));

846 
	`mach_wrôe_to_2
(
ªc
 - (
REC_N_OLD_EXTRA_BYTES
 + 2 * 
n
 + 2), 
öfo
);

847 
	}
}

852 
UNIV_INLINE


853 
ulöt
 
	$ªc_1_gë_fõld_°¨t_offs
(c⁄° 
ªc_t
 *
ªc
,

854 
ulöt
 
n
)

856 
	`ut_ad
(
	`ªc_gë_1byã_offs_Êag
(
ªc
));

857 
	`ut_ad
(
n
 <
	`ªc_gë_n_fõlds_ﬁd_øw
(
ªc
));

859 i‡(
n
 == 0) {

863  (
	`ªc_1_gë_¥ev_fõld_íd_öfo
(
ªc
, 
n
Ë& ~
REC_1BYTE_SQL_NULL_MASK
);

864 
	}
}

869 
UNIV_INLINE


870 
ulöt
 
	$ªc_2_gë_fõld_°¨t_offs
(c⁄° 
ªc_t
 *
ªc
,

871 
ulöt
 
n
)

873 
	`ut_ad
(!
	`ªc_gë_1byã_offs_Êag
(
ªc
));

874 
	`ut_ad
(
n
 <
	`ªc_gë_n_fõlds_ﬁd_øw
(
ªc
));

876 i‡(
n
 == 0) {

880  (
	`ªc_2_gë_¥ev_fõld_íd_öfo
(
ªc
, 
n
) &

881 ~(
REC_2BYTE_SQL_NULL_MASK
 | 
REC_2BYTE_EXTERN_MASK
));

882 
	}
}

889 
UNIV_INLINE


890 
ulöt
 
	$ªc_gë_fõld_°¨t_offs
(c⁄° 
ªc_t
 *
ªc
,

891 
ulöt
 
n
)

893 
	`ut_ad
(
ªc
);

894 
	`ut_ad
(
n
 <
	`ªc_gë_n_fõlds_ﬁd_øw
(
ªc
));

896 i‡(
n
 == 0) {

900 i‡(
	`ªc_gë_1byã_offs_Êag
(
ªc
)) {

901  (
	`ªc_1_gë_fõld_°¨t_offs
(
ªc
, 
n
));

904  (
	`ªc_2_gë_fõld_°¨t_offs
(
ªc
, 
n
));

905 
	}
}

911 
UNIV_INLINE


912 
ulöt
 
	$ªc_gë_¡h_fõld_size
(c⁄° 
ªc_t
 *
ªc
,

913 
ulöt
 
n
)

915 
ulöt
 
os
;

916 
ulöt
 
√xt_os
;

918 
os
 = 
	`ªc_gë_fõld_°¨t_offs
(
ªc
, 
n
);

919 
√xt_os
 = 
	`ªc_gë_fõld_°¨t_offs
(
ªc
, 
n
 + 1);

921 
	`ut_ad
(
√xt_os
 - 
os
 < 
UNIV_PAGE_SIZE
);

923  (
√xt_os
 - 
os
);

924 
	}
}

931 
UNIV_INLINE


932 
	$ªc_£t_¡h_fõld
(

933 
ªc_t
 *
ªc
,

934 c⁄° 
ulöt
 *
off£ts
,

935 
ulöt
 
n
,

936 c⁄° *
d©a
,

938 
ulöt
 
Àn
)

940 
byã
 *
d©a2
;

941 
ulöt
 
Àn2
;

943 
	`ut_ad
(
ªc
);

944 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
nuŒ±r
, 
off£ts
));

946 i‡(
Àn
 =
UNIV_SQL_NULL
) {

947 i‡(!
	`ªc_offs_¡h_sql_nuŒ
(
off£ts
, 
n
)) {

948 
	`ut_a
(!
	`ªc_offs_comp
(
off£ts
));

949 
	`ªc_£t_¡h_fõld_sql_nuŒ
(
ªc
, 
n
);

955 
	`ut_ad
(!
	`ªc_offs_¡h_deÁu…
(
off£ts
, 
n
));

957 
d©a2
 = 
	`ªc_gë_¡h_fõld
(
ªc
, 
off£ts
, 
n
, &
Àn2
);

959 i‡(
Àn2
 =
UNIV_SQL_NULL
) {

960 
	`ut_ad
(!
	`ªc_offs_comp
(
off£ts
));

961 
	`ªc_£t_¡h_fõld_nuŒ_bô
(
ªc
, 
n
, 
FALSE
);

962 
	`ut_ad
(
Àn
 =
	`ªc_gë_¡h_fõld_size
(
ªc
, 
n
));

964 
	`ut_ad
(
Àn2
 =
Àn
);

967 
	`ut_mem˝y
(
d©a2
, 
d©a
, 
Àn
);

968 
	}
}

975 
UNIV_INLINE


976 
ulöt
 
	$ªc_gë_d©a_size_ﬁd
(c⁄° 
ªc_t
 *
ªc
)

978 
	`ut_ad
(
ªc
);

980  (
	`ªc_gë_fõld_°¨t_offs
(
ªc
, 
	`ªc_gë_n_fõlds_ﬁd_øw
(rec)));

981 
	}
}

988 
UNIV_INLINE


989 
ulöt
 
	$ªc_offs_d©a_size
(

990 c⁄° 
ulöt
 *
off£ts
)

992 
ulöt
 
size
;

994 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
,ÇuŒ±r, 
off£ts
));

995 
size
 = 
	`ªc_offs_ba£
(
off£ts
)[
	`ªc_offs_n_fõlds
(off£ts)] & 
REC_OFFS_MASK
;

996 
	`ut_ad
(
size
 < 
UNIV_PAGE_SIZE
);

997  (
size
);

998 
	}
}

1004 
UNIV_INLINE


1005 
ulöt
 
	$ªc_offs_exåa_size
(

1006 c⁄° 
ulöt
 *
off£ts
)

1008 
ulöt
 
size
;

1009 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
,ÇuŒ±r, 
off£ts
));

1010 
size
 = *
	`ªc_offs_ba£
(
off£ts
Ë& ~(
REC_OFFS_COMPACT
 | 
REC_OFFS_EXTERNAL
);

1011 
	`ut_ad
(
size
 < 
UNIV_PAGE_SIZE
);

1012  (
size
);

1013 
	}
}

1017 
UNIV_INLINE


1018 
ulöt
 
	$ªc_offs_size
(

1019 c⁄° 
ulöt
 *
off£ts
)

1021 #ifde‡
J3VM


1022 
ulöt
 
size
 = 
	`ªc_offs_d©a_size
(
off£ts
Ë+ 
	`ªc_offs_exåa_size
(offsets);

1023 i‡(
	`ªc_is_u£r_ªc
(
ªöãΩªt_ˇ°
<
ªc_t
*>(
off£ts
[2]),

1024 
ªöãΩªt_ˇ°
<
di˘_ödex_t
*>(
off£ts
[3]))) {

1027  (
size
 * 2Ë+ 
REC_PLEAF_EXTRA_SIZE
;

1029  
size
;

1032  (
	`ªc_offs_d©a_size
(
off£ts
Ë+ 
	`ªc_offs_exåa_size
(offsets));

1034 
	}
}

1036 #ifde‡
UNIV_DEBUG


1039 
UNIV_INLINE


1040 
byã
 *
	$ªc_gë_íd
(

1041 c⁄° 
ªc_t
 *
ªc
,

1042 c⁄° 
ulöt
 *
off£ts
)

1044 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
nuŒ±r
, 
off£ts
));

1045  (
c⁄°_ˇ°
<
ªc_t
 *>(
ªc
 + 
	`ªc_offs_d©a_size
(
off£ts
)));

1046 
	}
}

1050 
UNIV_INLINE


1051 
byã
 *
	$ªc_gë_°¨t
(

1052 c⁄° 
ªc_t
 *
ªc
,

1053 c⁄° 
ulöt
 *
off£ts
)

1055 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
nuŒ±r
, 
off£ts
));

1056  (
c⁄°_ˇ°
<
ªc_t
 *>(
ªc
 - 
	`ªc_offs_exåa_size
(
off£ts
)));

1057 
	}
}

1065 
UNIV_INLINE


1066 
ªc_t
 *
	$ªc_c›y
(*
buf
, c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
) {

1067 
ulöt
 
exåa_Àn
;

1068 
ulöt
 
d©a_Àn
;

1070 
	`ut_ad
(
ªc
 !
nuŒ±r
);

1071 
	`ut_ad
(
buf
 !
nuŒ±r
);

1072 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
nuŒ±r
, 
off£ts
));

1073 
	`ut_ad
(
	`ªc_vÆid©e
(
ªc
, 
off£ts
));

1075 
exåa_Àn
 = 
	`ªc_offs_exåa_size
(
off£ts
);

1076 
d©a_Àn
 = 
	`ªc_offs_d©a_size
(
off£ts
);

1078 
	`ut_mem˝y
(
buf
, 
ªc
 - 
exåa_Àn
,Éxåa_À¿+ 
d©a_Àn
);

1080  ((
byã
 *)
buf
 + 
exåa_Àn
);

1081 
	}
}

1082 #ifde‡
J3VM


1083 
UNIV_INLINE


1084 
ªc_t
 *
	$ªc_c›y_•ecül
(*
buf
, c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
) {

1085 
ulöt
 
exåa_Àn
;

1086 
ulöt
 
d©a_Àn
;

1088 
	`ut_ad
(
ªc
 !
nuŒ±r
);

1089 
	`ut_ad
(
buf
 !
nuŒ±r
);

1090 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
nuŒ±r
, 
off£ts
));

1091 
	`ut_ad
(
	`ªc_vÆid©e
(
ªc
, 
off£ts
));

1093 
exåa_Àn
 = 
	`ªc_offs_exåa_size
(
off£ts
);

1094 
d©a_Àn
 = 
	`ªc_offs_d©a_size
(
off£ts
);

1096 
	`ut_mem˝y
(
buf
, 
ªc
 - 
exåa_Àn
,

1097 (
exåa_Àn
 + 
d©a_Àn
Ë* 2 + 
REC_PLEAF_EXTRA_SIZE
);

1099  ((
byã
 *)
buf
 + 
exåa_Àn
);

1100 
	}
}

1105 
UNIV_INLINE


1106 
ulöt
 
	$ªc_gë_c⁄vîãd_exåa_size
(
ulöt
 
d©a_size
, ulöà
n_fõlds
,

1107 
boﬁ
 
has_ext
) {

1108 i‡(!
has_ext
 && 
d©a_size
 <
REC_1BYTE_OFFS_LIMIT
) {

1109  (
REC_N_OLD_EXTRA_BYTES
 + 
n_fõlds
);

1112  (
REC_N_OLD_EXTRA_BYTES
 + 2 * 
n_fõlds
);

1113 
	}
}

1120 
UNIV_INLINE


1121 
ulöt
 
	$ªc_gë_c⁄vîãd_size
(c⁄° 
di˘_ödex_t
 *
ödex
,

1122 c⁄° 
dtu∂e_t
 *
dtu∂e
) {

1123 
ulöt
 
d©a_size
;

1124 
ulöt
 
exåa_size
;

1126 
	`ut_ad
(
ödex
);

1127 
	`ut_ad
(
dtu∂e
);

1128 
	`ut_ad
(
	`dtu∂e_check_ty≥d
(
dtu∂e
));

1130 
	`ut_ad
(
	`di˘_ödex_is_ibuf
(
ödex
)

1134 || 
ödex
->
	`has_ö°™t_cﬁs
()

1136 || 
	`dtu∂e_gë_n_fõlds
(
dtu∂e
) ==

1137 (((
	`dtu∂e_gë_öfo_bôs
(
dtu∂e
Ë& 
REC_NEW_STATUS_MASK
) ==

1138 
REC_STATUS_NODE_PTR
)

1139 ? 
	`di˘_ödex_gë_n_unique_ö_åì_n⁄Àaf
(
ödex
) + 1

1140 : 
	`di˘_ödex_gë_n_fõlds
(
ödex
))

1144 || (
ödex
->
èbÀ
->
id
 =
DICT_INDEXES_ID
 &&

1145 
	`dtu∂e_gë_n_fõlds
(
dtu∂e
Ë=
	`di˘_ödex_gë_n_fõlds
(
ödex
) - 1));

1147 i‡(
	`di˘_èbÀ_is_comp
(
ödex
->
èbÀ
)) {

1148  (
	`ªc_gë_c⁄vîãd_size_comp
(

1149 
ödex
, 
	`dtu∂e_gë_öfo_bôs
(
dtu∂e
Ë& 
REC_NEW_STATUS_MASK
,

1150 
dtu∂e
->
fõlds
, dtu∂e->
n_fõlds
, 
nuŒ±r
));

1153 
d©a_size
 = 
	`dtu∂e_gë_d©a_size
(
dtu∂e
, 0);

1155 
exåa_size
 = 
	`ªc_gë_c⁄vîãd_exåa_size
(

1156 
d©a_size
, 
	`dtu∂e_gë_n_fõlds
(
dtu∂e
), dtu∂e->
	`has_ext
());

1168 i‡(
	`di˘_ödex_is_ibuf
(
ödex
)) {

1174 
	`ut_ad
(
n_ext
 == 0);

1178 
d©a_size
 +
REC_NODE_PTR_SIZE
;

1179 
exåa_size
 = 
	`ªc_gë_c⁄vîãd_exåa_size
(

1180 
d©a_size
,

1181 
	`dtu∂e_gë_n_fõlds
(
dtu∂e
) + 1,

1193  (
d©a_size
 + 
exåa_size
);

1194 
	}
}

1196 #i‚de‡
UNIV_HOTBACKUP


1205 
UNIV_INLINE


1206 
ulöt
 
	$ªc_fﬁd
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
, ulöà
n_fõlds
,

1207 
ulöt
 
n_byãs
, ulöà
fﬁd
, c⁄° 
di˘_ödex_t
 *
ödex
) {

1208 
uöt16_t
 
i
;

1209 c⁄° 
byã
 *
d©a
;

1210 
ulöt
 
Àn
;

1211 
ulöt
 
n_fõlds_ªc
;

1213 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
nuŒ±r
, 
off£ts
));

1214 
	`ut_ad
(
	`ªc_vÆid©e
(
ªc
, 
off£ts
));

1215 
	`ut_ad
(
n_fõlds
 > 0 || 
n_byãs
 > 0);

1217 
n_fõlds_ªc
 = 
	`ªc_offs_n_fõlds
(
off£ts
);

1218 
	`ut_ad
(
n_fõlds
 <
n_fõlds_ªc
);

1219 
	`ut_ad
(
n_fõlds
 < 
n_fõlds_ªc
 || 
n_byãs
 == 0);

1221 i‡(
n_fõlds
 > 
n_fõlds_ªc
) {

1222 
n_fõlds
 = 
n_fõlds_ªc
;

1225 i‡(
n_fõlds
 =
n_fõlds_ªc
) {

1226 
n_byãs
 = 0;

1229 
i
 = 0; i < 
n_fõlds
; i++) {

1230 
d©a
 = 
	`ªc_gë_¡h_fõld_ö°™t
(
ªc
, 
off£ts
, 
i
, 
ödex
, &
Àn
);

1232 i‡(
Àn
 !
UNIV_SQL_NULL
) {

1233 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, 
	`ut_fﬁd_bö¨y
(
d©a
, 
Àn
));

1237 i‡(
n_byãs
 > 0) {

1238 
d©a
 = 
	`ªc_gë_¡h_fõld_ö°™t
(
ªc
, 
off£ts
, 
i
, 
ödex
, &
Àn
);

1240 i‡(
Àn
 !
UNIV_SQL_NULL
) {

1241 i‡(
Àn
 > 
n_byãs
) {

1242 
Àn
 = 
n_byãs
;

1245 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, 
	`ut_fﬁd_bö¨y
(
d©a
, 
Àn
));

1249  (
fﬁd
);

1250 
	}
}

1256 
UNIV_INLINE


1257 
uöt8_t
 
	$ªc_gë_n_fõlds_Àngth
(
ulöt
 
n_fõlds
) {

1258  (
n_fõlds
 > 
REC_N_FIELDS_ONE_BYTE_MAX
 ? 2 : 1);

1259 
	}
}

1266 
UNIV_INLINE


1267 
uöt8_t
 
	$ªc_£t_n_fõlds
(
ªc_t
 *
ªc
, 
ulöt
 
n_fõlds
) {

1268 
byã
 *
±r
 = 
ªc
 - (
REC_N_NEW_EXTRA_BYTES
 + 1);

1270 
	`ut_ad
(
n_fõlds
 < 
REC_MAX_N_FIELDS
);

1272 i‡(
n_fõlds
 <
REC_N_FIELDS_ONE_BYTE_MAX
) {

1273 *
±r
 = 
°©ic_ˇ°
<
byã
>(
n_fõlds
);

1277 --
±r
;

1278 *
±r
++ = 
°©ic_ˇ°
<
byã
>(
n_fõlds
 & 0xFF);

1279 *
±r
 = 
°©ic_ˇ°
<
byã
>(
n_fõlds
 >> 8);

1280 
	`ut_ad
((*
±r
 & 0x80) == 0);

1281 *
±r
 |
REC_N_FIELDS_TWO_BYTES_FLAG
;

1284 
	}
}

1294 
UNIV_INLINE


1295 c⁄° 
byã
 *
	$ªc_gë_¡h_fõld_ﬁd_ö°™t
(c⁄° 
ªc_t
 *
ªc
, 
uöt16_t
 
n
,

1296 c⁄° 
di˘_ödex_t
 *
ödex
,

1297 
ulöt
 *
Àn
) {

1298 
	`ut_a
(
ödex
 !
nuŒ±r
);

1300 i‡(
n
 < 
	`ªc_gë_n_fõlds_ﬁd_øw
(
ªc
)) {

1301  (
	`ªc_gë_¡h_fõld_ﬁd
(
ªc
, 
n
, 
Àn
));

1304 c⁄° 
byã
 *
fõld
;

1306 
	`ut_ad
(
ödex
->
	`has_ö°™t_cﬁs
());

1308 
fõld
 = 
ödex
->
	`gë_¡h_deÁu…
(
n
, 
Àn
);

1309  (
fõld
);

1310 
	}
}

1321 
UNIV_INLINE


1322 c⁄° 
byã
 *
	$ªc_gë_¡h_fõld_ö°™t
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
,

1323 
ulöt
 
n
, c⁄° 
di˘_ödex_t
 *
ödex
,

1324 
ulöt
 *
Àn
) {

1325 
ulöt
 
off
 = 
	`ªc_gë_¡h_fõld_offs
(
off£ts
, 
n
, 
Àn
);

1327 i‡(*
Àn
 !
UNIV_SQL_ADD_COL_DEFAULT
) {

1328  (
ªc
 + 
off
);

1331 
	`ut_a
(
ödex
 !
nuŒ±r
);

1332 
	`ut_ad
(
ödex
->
	`has_ö°™t_cﬁs
());

1334  (
ödex
->
	`gë_¡h_deÁu…
(
n
, 
Àn
));

1335 
	}
}

	@rem0types.h

33 #i‚de‡
ªm0ty≥s_h


34 
	#ªm0ty≥s_h


	)

36 
	~"univ.i
"

39 
byã
 
	tªc_t
;

42 
	#REC_MAX_N_FIELDS
 (1024 - 1)

	)

43 
	#REC_MAX_HEAP_NO
 (2 * 8192 - 1)

	)

44 
	#REC_MAX_N_OWNED
 (16 - 1)

	)

53 
	#REC_MAX_N_USER_FIELDS
 (
REC_MAX_N_FIELDS
 - 
DATA_N_SYS_COLS
 * 2)

	)

64 
	#REC_ANTELOPE_MAX_INDEX_COL_LEN
 768

	)

69 
	#REC_VERSION_56_MAX_INDEX_COL_LEN
 3072

	)

74 
	eªc_f‹m©_íum
 {

75 
	mREC_FORMAT_REDUNDANT
 = 0,

76 
	mREC_FORMAT_COMPACT
 = 1,

77 
	mREC_FORMAT_COMPRESSED
 = 2,

78 
	mREC_FORMAT_DYNAMIC
 = 3

80 
ªc_f‹m©_íum
 
	tªc_f‹m©_t
;

	@row0ext.h

33 #i‚de‡
row0ext_h


34 
	#row0ext_h


	)

36 
	~"d©a0ty≥s.h
"

37 
	~"di˘0ty≥s.h
"

38 
	~"mem0mem.h
"

39 
	~"∑ge0size.h
"

40 
	~"row0ty≥s.h
"

41 
	~"univ.i
"

43 #ifde‡
UNIV_DEBUG


44 
	#row_ext_¸óã
(
ödex
, 
n_ext
, 
ext
, 
Êags
, 
tu∂e
, 
is_sdi
, 
hóp
) \

45 
	`row_ext_¸óã_func
(
ödex
, 
n_ext
, 
ext
, 
Êags
, 
tu∂e
, 
is_sdi
, 
hóp
)

	)

47 
	#row_ext_¸óã
(
ödex
, 
n_ext
, 
ext
, 
Êags
, 
tu∂e
, 
is_sdi
, 
hóp
) \

48 
	`row_ext_¸óã_func
(
ödex
, 
n_ext
, 
ext
, 
Êags
, 
tu∂e
, 
hóp
)

	)

62 #ifde‡
UNIV_DEBUG


69 
row_ext_t
 *
row_ext_¸óã_func
(c⁄° 
di˘_ödex_t
 *
ödex
, 
ulöt
 
n_ext
,

70 c⁄° 
ulöt
 *
ext
, 
uöt32_t
 
Êags
,

71 c⁄° 
dtu∂e_t
 *
tu∂e
,

72 #ifde‡
UNIV_DEBUG


73 
boﬁ
 
is_sdi
,

75 
mem_hóp_t
 *
hóp
);

84 
UNIV_INLINE


85 c⁄° 
byã
 *
row_ext_lookup_ôh
(c⁄° 
row_ext_t
 *
ext
, 
ulöt
 
i
, ulöà*
Àn
);

96 
UNIV_INLINE


97 c⁄° 
byã
 *
row_ext_lookup
(c⁄° 
row_ext_t
 *
ext
, 
ulöt
 
cﬁ
, ulöà*
Àn
);

100 
	srow_ext_t
 {

102 c⁄° 
di˘_ödex_t
 *
	mödex
;

104 
ulöt
 
	mn_ext
;

106 c⁄° 
ulöt
 *
	mext
;

107 
byã
 *
	mbuf
;

108 
ulöt
 
	mmax_Àn
;

112 
∑ge_size_t
 
	m∑ge_size
;

115 
ulöt
 
	mÀn
[1];

119 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

120 
out
 << "[row_ext_t:";

121 
ulöt
 
	mi
 = 0; i < 
	mn_ext
; i++) {

122 i‡(
	mÀn
[
i
] > 0) {

123 
byã
 *
	m±r
 = (
buf
 + 
i
 * 
max_Àn
);

124 
ut_¥öt_buf
(
out
, 
±r
, 
Àn
[
i
]);

127 
	mout
 << "]" << 
	m°d
::
ídl
;

128  (
	mout
);

132 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	grow_ext_t
 &
	gobj
) {

133  (
	gobj
.
¥öt
(
out
));

136 
	~"row0ext.ic
"

	@row0ext.ic

33 
	~"bå0ty≥s.h
"

34 
	~"ªm0ty≥s.h
"

39 
UNIV_INLINE


40 c⁄° 
byã
 *
	$row_ext_lookup_ôh
(

41 c⁄° 
row_ext_t
 *
ext
,

42 
ulöt
 
i
,

43 
ulöt
 *
Àn
)

46 
	`ut_ad
(
ext
);

47 
	`ut_ad
(
Àn
);

48 
	`ut_ad
(
i
 < 
ext
->
n_ext
);

50 *
Àn
 = 
ext
->Àn[
i
];

52 
	`ut_ad
(*
Àn
 <
ext
->
max_Àn
);

53 
	`ut_ad
(
ext
->
max_Àn
 > 0);

55 i‡(*
Àn
 == 0) {

57  (
fõld_ªf_zîo
);

59  (
ext
->
buf
 + 
i
 *Éxt->
max_Àn
);

61 
	}
}

66 
UNIV_INLINE


67 c⁄° 
byã
 *
	$row_ext_lookup
(c⁄° 
row_ext_t
 *
ext
,

68 
ulöt
 
cﬁ
,

72 
ulöt
 *
Àn
)

75 
ulöt
 
i
;

77 
	`ut_ad
(
ext
);

78 
	`ut_ad
(
Àn
);

80 
i
 = 0; i < 
ext
->
n_ext
; i++) {

81 i‡(
cﬁ
 =
ext
->ext[
i
]) {

82  (
	`row_ext_lookup_ôh
(
ext
, 
i
, 
Àn
));

86  (
nuŒ±r
);

87 
	}
}

	@row0ftsort.h

33 #i‚de‡
row0·s‹t_h


34 
	#row0·s‹t_h


	)

36 
	~"bå0bulk.h
"

37 
	~"d©a0d©a.h
"

38 
	~"di˘0ty≥s.h
"

39 
	~"·s0·s.h
"

40 
	~"·s0¥iv.h
"

41 
	~"·s0ty≥s.h
"

42 
	~"row0mîge.h
"

43 
	~"row0mysql.h
"

44 
	~"univ.i
"

49 
·s_doc_ôem
 
	t·s_doc_ôem_t
;

52 
	s·s_doc_ôem
 {

53 
dfõld_t
 *
	mfõld
;

54 
doc_id_t
 
	mdoc_id
;

55 
UT_LIST_NODE_T
(
·s_doc_ôem_t
Ë
	mdoc_li°
;

61 
	$UT_LIST_BASE_NODE_T
(
	t·s_doc_ôem_t
Ë
	t·s_doc_li°_t
;

63 
	#FTS_PLL_MERGE
 1

	)

66 
·s_ps‹t_t
;

69 
	s·s_ps‹t_comm⁄_t
 {

70 
row_mîge_dup_t
 *
dup
;

71 
di˘_èbÀ_t
 *
ﬁd_èbÀ
;

73 
di˘_èbÀ_t
 *
√w_èbÀ
;

74 
åx_t
 *
åx
;

75 
·s_ps‹t_t
 *
Æl_öfo
;

76 
os_evít_t
 
s‹t_evít
;

77 
os_evít_t
 
mîge_evít
;

78 
iboﬁ
 
›t_doc_id_size
;

85 
	s·s_ps‹t_t
 {

86 
ulöt
 
ps‹t_id
;

87 
row_mîge_buf_t
 *
mîge_buf
[
FTS_NUM_AUX_INDEX
];

89 
mîge_fûe_t
 *
mîge_fûe
[
FTS_NUM_AUX_INDEX
];

91 
row_mîge_block_t
 *
mîge_block
[
FTS_NUM_AUX_INDEX
];

93 
row_mîge_block_t
 *
block_Æloc
[
FTS_NUM_AUX_INDEX
];

95 
ulöt
 
chûd_°©us
;

96 
ulöt
 
°©e
;

97 
·s_doc_li°_t
 
·s_doc_li°
;

98 
·s_ps‹t_comm⁄_t
 *
ps‹t_comm⁄
;

99 
dbîr_t
 
îr‹
;

100 
ulöt
 
mem‹y_u£d
;

101 
ib_muãx_t
 
muãx
;

105 
	srow_·s_tokí_t
 {

106 
·s_°rög_t
 *
ãxt
;

107 
ulöt
 
posôi⁄
;

108 
	`UT_LIST_NODE_T
(
row_·s_tokí_t
)

109 
tokí_li°
;

112 
	$UT_LIST_BASE_NODE_T
(
	trow_·s_tokí_t
Ë
	t·s_tokí_li°_t
;

115 
	s·s_tokíize_˘x
 {

116 
ulöt
 
¥o˚s£d_Àn
{0};

117 
ulöt
 
öô_pos
{0};

118 
ulöt
 
buf_u£d
{0};

121 
ulöt
 
rows_added
[
FTS_NUM_AUX_INDEX
]{0};

124 
ib_rbt_t
 *
ˇched_°›w‹d
{
nuŒ±r
};

125 
dfõld_t
 
s‹t_fõld
[
FTS_NUM_FIELDS_SORT
];

127 
·s_tokí_li°_t
 
·s_tokí_li°
;

130 
·s_tokíize_˘x
 
	t·s_tokíize_˘x_t
;

134 
	s·s_ps‹t_ö£π
 {

135 
CHARSET_INFO
 *
ch¨£t
;

136 
mem_hóp_t
 *
hóp
;

137 
iboﬁ
 
›t_doc_id_size
;

139 
BåBulk
 *
bå_bulk
;

140 
dtu∂e_t
 *
tu∂e
;

142 #ifde‡
UNIV_DEBUG


143 
ulöt
 
aux_ödex_id
;

147 
·s_ps‹t_ö£π
 
	t·s_ps‹t_ö£π_t
;

150 
	#FTS_PARENT_COMPLETE
 1

	)

151 
	#FTS_PARENT_EXITING
 2

	)

152 
	#FTS_CHILD_COMPLETE
 1

	)

153 
	#FTS_CHILD_EXITING
 2

	)

156 
	#FTSORT_PRINT


	)

158 #ifde‡
FTSORT_PRINT


159 
	#DEBUG_FTS_SORT_PRINT
(
°r
) \

161 
	`ut_¥öt_time°amp
(
°dîr
); \

162 
	`Ârötf
(
°dîr
, 
°r
); \

163 
	}
} 0)

	)

165 
	#DEBUG_FTS_SORT_PRINT
(
°r
)

	)

176 
di˘_ödex_t
 *
row_mîge_¸óã_·s_s‹t_ödex
(

177 
di˘_ödex_t
 *
ödex
,

180 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

182 
iboﬁ
 *
›t_doc_id_size
);

197 
dbîr_t
 
row_·s_ps‹t_öfo_öô
(
åx_t
 *
åx
, 
row_mîge_dup_t
 *
dup
,

198 c⁄° 
di˘_èbÀ_t
 *
ﬁd_èbÀ
,

199 c⁄° 
di˘_èbÀ_t
 *
√w_èbÀ
,

200 
iboﬁ
 
›t_doc_id_size
, 
·s_ps‹t_t
 **
ps‹t
,

201 
·s_ps‹t_t
 **
mîge
);

205 
row_·s_ps‹t_öfo_de°roy
(

206 
·s_ps‹t_t
 *
ps‹t_öfo
,

207 
·s_ps‹t_t
 *
mîge_öfo
);

209 
row_·s_‰ì_∂l_mîge_buf
(

210 
·s_ps‹t_t
 *
ps‹t_öfo
);

213 
row_·s_°¨t_ps‹t
(

214 
·s_ps‹t_t
 *
ps‹t_öfo
);

216 
row_·s_°¨t_∑øŒñ_mîge
(

217 
·s_ps‹t_t
 *
mîge_öfo
);

220 
row_mîge_·s_£l_¥›ag©e
(

221 
¥›og©ed
,

222 *
£l_åì
,

223 
ulöt
 
Àvñ
,

224 c⁄° 
mªc_t
 **
mªc
,

225 
ulöt
 **
off£ts
,

226 
di˘_ödex_t
 *
ödex


236 
dbîr_t
 
row_·s_mîge_ö£π
(
di˘_ödex_t
 *
ödex
, 
di˘_èbÀ_t
 *
èbÀ
,

237 
·s_ps‹t_t
 *
ps‹t_öfo
, 
ulöt
 
id
);

	@row0import.h

33 #i‚de‡
row0imp‹t_h


34 
	#row0imp‹t_h


	)

36 
	~"di˘0ty≥s.h
"

37 
	~"univ.i
"

40 
	gåx_t
;

41 
	gdi˘_èbÀ_t
;

42 
	grow_¥ebuût_t
;

50 
dbîr_t
 
	$row_imp‹t_f‹_mysql
(
di˘_èbÀ_t
 *
èbÀ
, 
dd
::
TabÀ
 *
èbÀ_def
,

51 
row_¥ebuût_t
 *
¥ebuût
)

52 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

56 
dbîr_t
 
	$row_imp‹t_upd©e_disˇrded_Êag
(

57 
åx_t
 *
åx
,

59 
èbÀ_id_t
 
èbÀ_id
,

61 
boﬁ
 
disˇrded
,

63 
boﬁ
 
di˘_locked
)

66 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

	@row0ins.h

33 #i‚de‡
row0ös_h


34 
	#row0ös_h


	)

36 
	~"d©a0d©a.h
"

37 
	~"di˘0ty≥s.h
"

38 
	~"que0ty≥s.h
"

39 
	~"row0ty≥s.h
"

40 
	~"åx0ty≥s.h
"

41 
	~"univ.i
"

48 
dbîr_t
 
	$row_ös_check_f‹eign_c⁄°øöt
(

49 
iboﬁ
 
check_ªf
,

52 
di˘_f‹eign_t
 *
f‹eign
,

55 
di˘_èbÀ_t
 *
èbÀ
,

57 
dtu∂e_t
 *
íåy
,

58 
que_thr_t
 *
thr
)

59 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

62 
ös_node_t
 *
	`ös_node_¸óã
(

63 
ulöt
 
ös_ty≥
,

64 
di˘_èbÀ_t
 *
èbÀ
,

65 
mem_hóp_t
 *
hóp
);

69 
	`ös_node_£t_√w_row
(

70 
ös_node_t
 *
node
,

71 
dtu∂e_t
 *
row
);

82 
dbîr_t
 
	$row_ös_˛u°_ödex_íåy_low
(

83 
uöt32_t
 
Êags
,

84 
ulöt
 
mode
,

87 
di˘_ödex_t
 *
ödex
,

88 
ulöt
 
n_uniq
,

89 
dtu∂e_t
 *
íåy
,

90 
que_thr_t
 *
thr
,

94 
boﬁ
 
dup_chk_⁄ly
)

97 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

120 
dbîr_t
 
	$row_ös_£c_ödex_íåy_low
(
uöt32_t
 
Êags
, 
ulöt
 
mode
,

121 
di˘_ödex_t
 *
ödex
,

122 
mem_hóp_t
 *
off£ts_hóp
, mem_hóp_à*
hóp
,

123 
dtu∂e_t
 *
íåy
, 
åx_id_t
 
åx_id
,

124 
que_thr_t
 *
thr
, 
boﬁ
 
dup_chk_⁄ly
)

125 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

133 
dbîr_t
 
	`row_ös_ödex_íåy_£t_vÆs
(c⁄° 
di˘_ödex_t
 *
ödex
, 
dtu∂e_t
 *
íåy
,

134 c⁄° 
dtu∂e_t
 *
row
);

141 
dbîr_t
 
	$row_ös_˛u°_ödex_íåy
(

142 
di˘_ödex_t
 *
ödex
,

143 
dtu∂e_t
 *
íåy
,

144 
que_thr_t
 *
thr
,

145 
boﬁ
 
dup_chk_⁄ly
)

148 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

154 
dbîr_t
 
	$row_ös_£c_ödex_íåy
(

155 
di˘_ödex_t
 *
ödex
,

156 
dtu∂e_t
 *
íåy
,

157 
que_thr_t
 *
thr
,

158 
boﬁ
 
dup_chk_⁄ly
)

161 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

165 
que_thr_t
 *
	`row_ös_°ï
(que_thr_à*
thr
);

169 
	sös_node_t
 {

170 
que_comm⁄_t
 
comm⁄
;

171 
ulöt
 
ös_ty≥
;

172 
dtu∂e_t
 *
row
;

173 
di˘_èbÀ_t
 *
èbÀ
;

174 
£l_node_t
 *
£À˘
;

175 
que_node_t
 *
vÆues_li°
;

177 
ulöt
 
°©e
;

178 
di˘_ödex_t
 *
ödex
;

180 
dtu∂e_t
 *
íåy
;

183 
	`UT_LIST_BASE_NODE_T
(
dtu∂e_t
)

184 
íåy_li°
;

185 
byã
 *
row_id_buf
;

186 
åx_id_t
 
åx_id
;

188 
byã
 *
åx_id_buf
;

189 
mem_hóp_t
 *
íåy_sys_hóp
;

197 
uöt32_t
 
ös_mu…i_vÆ_pos
;

199 
ulöt
 
magic_n
;

202 
	#INS_NODE_MAGIC_N
 15849075

	)

205 
	#INS_SEARCHED
 0

	)

206 
	#INS_VALUES
 1

	)

207 
	#INS_DIRECT
 \

208 2

	)

212 
	#INS_NODE_SET_IX_LOCK
 1

	)

213 
	#INS_NODE_ALLOC_ROW_ID
 2

	)

214 
	#INS_NODE_INSERT_ENTRIES
 \

215 3

	)

	@row0log.h

27 
	~"my_psi_c⁄fig.h
"

35 #i‚de‡
row0log_h


36 
	#row0log_h


	)

38 
	~"univ.i
"

40 
	~"d©a0ty≥s.h
"

41 
	~"di˘0ty≥s.h
"

42 
	~"må0ty≥s.h
"

43 
	~"que0ty≥s.h
"

44 
	~"ªm0ty≥s.h
"

45 
	~"row0ty≥s.h
"

46 
	~"åx0ty≥s.h
"

48 
˛ass
 
	gut_°age_Æãr_t
;

53 
boﬁ
 
	$row_log_Æloˇã
(

54 
di˘_ödex_t
 *
ödex
,

55 
di˘_èbÀ_t
 *
èbÀ
,

57 
boﬁ
 
ßme_pk
,

59 c⁄° 
dtu∂e_t
 *
add_cﬁs
,

62 c⁄° 
ulöt
 *
cﬁ_m≠
,

64 c⁄° *
∑th
)

65 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

68 
	`row_log_‰ì
(
row_log_t
 *&
log
);

71 
UNIV_INLINE


72 
	`row_log_ab‹t_£c
(
di˘_ödex_t
 *
ödex
);

78 
UNIV_INLINE


79 
boﬁ
 
	$row_log_⁄löe_›_åy
(

80 
di˘_ödex_t
 *
ödex
,

81 c⁄° 
dtu∂e_t
 *
tu∂e
,

82 
åx_id_t
 
åx_id
)

84 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

86 
	$row_log_⁄löe_›
(

87 
di˘_ödex_t
 *
ödex
,

88 c⁄° 
dtu∂e_t
 *
tu∂e
,

89 
åx_id_t
 
åx_id
)

91 
UNIV_COLD
;

95 
dbîr_t
 
	$row_log_èbÀ_gë_îr‹
(

96 c⁄° 
di˘_ödex_t
 *
ödex
)

98 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

105 
boﬁ
 
	`row_log_cﬁ_is_ödexed
(c⁄° 
di˘_ödex_t
 *
ödex
, 
ulöt
 
v_no
);

109 
	$row_log_èbÀ_dñëe
(

110 
åx_t
 *
åx
,

111 c⁄° 
ªc_t
 *
ªc
,

113 c⁄° 
dtu∂e_t
 *
víåy
,

114 
di˘_ödex_t
 *
ödex
,

116 c⁄° 
ulöt
 *
off£ts
,

117 c⁄° 
byã
 *
sys
)

119 
UNIV_COLD
;

123 
	$row_log_èbÀ_upd©e
(

124 c⁄° 
ªc_t
 *
ªc
,

126 
di˘_ödex_t
 *
ödex
,

128 c⁄° 
ulöt
 *
off£ts
,

129 c⁄° 
dtu∂e_t
 *
ﬁd_pk
,

131 c⁄° 
dtu∂e_t
 *
√w_v_row
,

133 c⁄° 
dtu∂e_t
 *
ﬁd_v_row
)

135 
UNIV_COLD
;

141 c⁄° 
dtu∂e_t
 *
	$row_log_èbÀ_gë_pk
(

142 
åx_t
 *
åx
,

143 c⁄° 
ªc_t
 *
ªc
,

145 
di˘_ödex_t
 *
ödex
,

147 c⁄° 
ulöt
 *
off£ts
,

149 
byã
 *
sys
,

151 
mem_hóp_t
 **
hóp
)

152 
UNIV_COLD
 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

156 
	$row_log_èbÀ_ö£π
(

157 c⁄° 
ªc_t
 *
ªc
,

159 c⁄° 
dtu∂e_t
 *
víåy
,

160 
di˘_ödex_t
 *
ödex
,

162 c⁄° 
ulöt
 *
off£ts
)

163 
UNIV_COLD
;

165 
	$row_log_èbÀ_blob_‰ì
(

166 
di˘_ödex_t
 *
ödex
,

167 
∑ge_no_t
 
∑ge_no
)

168 
UNIV_COLD
;

170 
	$row_log_èbÀ_blob_Æloc
(

171 
di˘_ödex_t
 *
ödex
,

172 
∑ge_no_t
 
∑ge_no
)

173 
UNIV_COLD
;

183 
dbîr_t
 
	$row_log_èbÀ_≠∂y
(
que_thr_t
 *
thr
, 
di˘_èbÀ_t
 *
ﬁd_èbÀ
,

184 
TABLE
 *
èbÀ
, 
ut_°age_Æãr_t
 *
°age
)

185 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

190 
åx_id_t
 
	$row_log_gë_max_åx
(

191 
di˘_ödex_t
 *
ödex
)

192 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

203 
dbîr_t
 
	$row_log_≠∂y
(c⁄° 
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
,

204 
TABLE
 *
èbÀ
, 
ut_°age_Æãr_t
 *
°age
)

205 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

207 #ifde‡
HAVE_PSI_STAGE_INTERFACE


213 
ulöt
 
	`row_log_e°im©e_w‹k
(c⁄° 
di˘_ödex_t
 *
ödex
);

216 
	~"row0log.ic
"

	@row0log.ic

33 
	~"di˘0di˘.h
"

35 #i‚de‡
UNIV_HOTBACKUP


37 
UNIV_INLINE


38 
	$row_log_ab‹t_£c
(
di˘_ödex_t
 *
ödex
)

40 
	`ut_ad
(
	`rw_lock_own
(
	`di˘_ödex_gë_lock
(
ödex
), 
RW_LOCK_X
));

42 
	`ut_ad
(!
ödex
->
	`is_˛u°îed
());

43 
	`di˘_ödex_£t_⁄löe_°©us
(
ödex
, 
ONLINE_INDEX_ABORTED
);

44 
	`row_log_‰ì
(
ödex
->
⁄löe_log
);

45 
	}
}

51 
UNIV_INLINE


52 
boﬁ
 
	$row_log_⁄löe_›_åy
(

53 
di˘_ödex_t
 *
ödex
,

54 c⁄° 
dtu∂e_t
 *
tu∂e
,

55 
åx_id_t
 
åx_id
)

58 
	`ut_ad
(
	`rw_lock_own_Êagged
(
	`di˘_ödex_gë_lock
(
ödex
),

59 
RW_LOCK_FLAG_S
 | 
RW_LOCK_FLAG_X
 | 
RW_LOCK_FLAG_SX
));

61 
	`di˘_ödex_gë_⁄löe_°©us
(
ödex
)) {

62 
ONLINE_INDEX_COMPLETE
:

66  (
Ál£
);

67 
ONLINE_INDEX_CREATION
:

70 
	`row_log_⁄löe_›
(
ödex
, 
tu∂e
, 
åx_id
);

72 
ONLINE_INDEX_ABORTED
:

73 
ONLINE_INDEX_ABORTED_DROPPED
:

80  (
åue
);

81 
	}
}

	@row0merge.h

33 #i‚de‡
row0mîge_h


34 
	#row0mîge_h


	)

36 
	~"bå0ty≥s.h
"

37 
	~"d©a0d©a.h
"

38 
	~"di˘0ty≥s.h
"

39 
	~"lock0ty≥s.h
"

40 
	~"må0må.h
"

41 
	~"que0ty≥s.h
"

42 
	~"ªm0ªc.h
"

43 
	~"ªm0ty≥s.h
"

44 
	~"row0mysql.h
"

45 
	~"§v0§v.h
"

46 
	~"åx0ty≥s.h
"

47 
	~"univ.i
"

48 
	~"ut0°age.h
"

51 
	gib_£quí˚_t
;

60 
byã
 
	trow_mîge_block_t
;

68 
byã
 
	tmªc_buf_t
[
UNIV_PAGE_SIZE_MAX
];

74 
byã
 
	tmªc_t
;

77 
	smtu∂e_t
 {

78 
dfõld_t
 *
	mfõlds
;

82 
	srow_mîge_buf_t
 {

83 
mem_hóp_t
 *
	mhóp
;

84 
di˘_ödex_t
 *
	mödex
;

85 
ulöt
 
	mtŸÆ_size
;

86 
ulöt
 
	mn_tu∂es
;

87 
ulöt
 
	mmax_tu∂es
;

88 
mtu∂e_t
 *
	mtu∂es
;

89 
mtu∂e_t
 *
	mtmp_tu∂es
;

94 
	smîge_fûe_t
 {

95 
	mfd
;

96 
ulöt
 
	moff£t
;

97 
ib_uöt64_t
 
	mn_ªc
;

101 
	södex_fõld_t
 {

102 
ulöt
 
	mcﬁ_no
;

103 
ulöt
 
	m¥efix_Àn
;

105 
boﬁ
 
	mis_v_cﬁ
;

106 
boﬁ
 
	mis_mu…i_vÆue
;

107 
boﬁ
 
	mis_as˚ndög
;

111 
	södex_def_t
 {

112 c⁄° *
	m«me
;

113 
boﬁ
 
	mªbuûd
;

114 
ulöt
 
	möd_ty≥
;

116 
ulöt
 
	mkey_numbî
;

118 
ulöt
 
	mn_fõlds
;

119 
ödex_fõld_t
 *
	mfõlds
;

120 
°_mysql_·∑r£r
 *
	m∑r£r
;

121 
boﬁ
 
	mis_ngøm
;

122 
boﬁ
 
	m§id_is_vÆid
;

124 
uöt32_t
 
	m§id
;

128 
	srow_mîge_dup_t
 {

129 
di˘_ödex_t
 *
	mödex
;

130 
TABLE
 *
	mèbÀ
;

131 c⁄° 
ulöt
 *
	mcﬁ_m≠
;

135 
ulöt
 
	mn_dup
;

141 
row_mîge_dup_ªp‹t
(
row_mîge_dup_t
 *
dup
, c⁄° 
dfõld_t
 *
íåy
);

145 
dbîr_t
 
	$row_mîge_lock_èbÀ
(
åx_t
 *
åx
,

146 
di˘_èbÀ_t
 *
èbÀ
,

147 
lock_mode
 
mode
)

148 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

152 
	`row_mîge_dr›_ödexes
(

153 
åx_t
 *
åx
,

154 
di˘_èbÀ_t
 *
èbÀ
,

155 
iboﬁ
 
locked
);

162 
	$row_mîge_fûe_¸óã_low
(c⁄° *
∑th
)

163 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

167 
	`row_mîge_fûe_de°roy_low
(
fd
);

173 *
	`row_make_√w_∑th«me
(
di˘_èbÀ_t
 *
èbÀ
,

174 c⁄° *
√w_«me
);

179 
dbîr_t
 
	$row_mîge_ª«me_èbÀs_di˘
(

180 
di˘_èbÀ_t
 *
ﬁd_èbÀ
,

182 
di˘_èbÀ_t
 *
√w_èbÀ
,

184 c⁄° *
tmp_«me
,

185 
åx_t
 *
åx
)

186 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

195 
di˘_ödex_t
 *
	`row_mîge_¸óã_ödex
(
åx_t
 *
åx
, 
di˘_èbÀ_t
 *
èbÀ
,

196 c⁄° 
ödex_def_t
 *
ödex_def
,

197 c⁄° 
di˘_add_v_cﬁ_t
 *
add_v
);

204 
dbîr_t
 
	`row_mîge_dr›_èbÀ
(

205 
åx_t
 *
åx
,

206 
di˘_èbÀ_t
 *
èbÀ
);

236 
dbîr_t
 
	$row_mîge_buûd_ödexes
(

237 
åx_t
 *
åx
, 
di˘_èbÀ_t
 *
ﬁd_èbÀ
, di˘_èbÀ_à*
√w_èbÀ
, 
boﬁ
 
⁄löe
,

238 
di˘_ödex_t
 **
ödexes
, c⁄° 
ulöt
 *
key_numbîs
, ulöà
n_ödexes
,

239 
TABLE
 *
èbÀ
, c⁄° 
dtu∂e_t
 *
add_cﬁs
, c⁄° 
ulöt
 *
cﬁ_m≠
,

240 
ulöt
 
add_autoöc
, 
ib_£quí˚_t
 &
£quí˚
, 
boﬁ
 
skù_pk_s‹t
,

241 
ut_°age_Æãr_t
 *
°age
, c⁄° 
di˘_add_v_cﬁ_t
 *
add_v
,

242 
TABLE
 *
evÆ_èbÀ
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

248 
	`row_mîge_buf_wrôe
(c⁄° 
row_mîge_buf_t
 *
buf
, c⁄° 
mîge_fûe_t
 *
of
,

249 
row_mîge_block_t
 *
block
);

254 
	`row_mîge_buf_s‹t
(
row_mîge_buf_t
 *
buf
, 
row_mîge_dup_t
 *
dup
);

258 
iboﬁ
 
	`row_mîge_wrôe
(
fd
,

259 
ulöt
 
off£t
,

261 c⁄° *
buf
);

264 
row_mîge_buf_t
 *
	$row_mîge_buf_em±y
(

265 
row_mîge_buf_t
 *
buf
)

266 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

272 
	`row_mîge_fûe_¸óã
(
mîge_fûe_t
 *
mîge_fûe
, c⁄° *
∑th
);

284 
dbîr_t
 
	`row_mîge_s‹t
(
åx_t
 *
åx
, c⁄° 
row_mîge_dup_t
 *
dup
,

285 
mîge_fûe_t
 *
fûe
, 
row_mîge_block_t
 *
block
, *
tmpfd
,

286 
ut_°age_Æãr_t
 *
°age
 = 
nuŒ±r
);

290 
row_mîge_buf_t
 *
	$row_mîge_buf_¸óã
(

291 
di˘_ödex_t
 *
ödex
)

292 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
, 
mÆloc
));

294 
	`row_mîge_buf_‰ì
(

295 
row_mîge_buf_t
 *
buf
);

297 
	`row_mîge_fûe_de°roy
(

298 
mîge_fûe_t
 *
mîge_fûe
);

301 
iboﬁ
 
	`row_mîge_ªad
(
fd
,

302 
ulöt
 
off£t
,

305 
row_mîge_block_t
 *
buf
);

308 c⁄° 
byã
 *
	$row_mîge_ªad_ªc
(

309 
row_mîge_block_t
 *
block
,

310 
mªc_buf_t
 *
buf
,

311 c⁄° 
byã
 *
b
,

312 c⁄° 
di˘_ödex_t
 *
ödex
,

313 
fd
,

314 
ulöt
 *
foffs
,

315 c⁄° 
mªc_t
 **
mªc
,

318 
ulöt
 *
off£ts
)

319 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

	@row0mysql.h

34 #i‚de‡
row0mysql_h


35 
	#row0mysql_h


	)

37 #i‚de‡
UNIV_HOTBACKUP


38 
	~"ha_¥ŸŸy≥s.h
"

41 
	~<°ddef.h
>

42 
	~<sys/ty≥s.h
>

44 
	~"bå0pcur.h
"

45 
	~"d©a0d©a.h
"

46 
	~"d©a0ty≥.h
"

47 
	~"db0îr.h
"

48 
	~"di˘0ty≥s.h
"

49 
	~"·s0·s.h
"

50 
	~"gis0ty≥.h
"

51 
	~"lob0undo.h
"

52 
	~"lock0ty≥s.h
"

53 
	~"mem0mem.h
"

54 
	~"my_compûî.h
"

55 
	~"my_öây≥s.h
"

56 
	~"que0ty≥s.h
"

57 
	~"ªm0ty≥s.h
"

58 
	~"row0ty≥s.h
"

59 
	~"£ss0£ss.h
"

60 
	~"sql_cmd.h
"

61 
	~"åx0ty≥s.h
"

62 
	~"univ.i
"

63 
	~"ut0boﬁ_sc›e_gu¨d.h
"

66 
˛ass
 
	gTHD
;

67 
˛ass
 
	gha_önoba£
;

68 
˛ass
 
	gönodb_£ssi⁄_t
;

69 
«me•a˚
 
	gdd
 {

70 
˛ass
 
	gTabÀ
;

72 
	gTABLE
;

73 
	gbå_pcur_t
;

74 
	gdfõld_t
;

75 
	gdi˘_fõld_t
;

76 
	gdi˘_f‹eign_t
;

77 
	gdi˘_ödex_t
;

78 
	gdi˘_èbÀ_t
;

79 
	gdi˘_v_cﬁ_t
;

80 
	gdtu∂e_t
;

81 
	gös_node_t
;

82 
	gmå_t
;

83 
	gque_f‹k_t
;

84 
	gque_thr_t
;

85 
	gåx_t
;

86 
	gupd_node_t
;

87 
	gupd_t
;

89 #i‚de‡
UNIV_HOTBACKUP


90 
iboﬁ
 
row_rﬁlback_⁄_timeout
;

92 
	grow_¥ebuût_t
;

95 
row_mysql_¥ebuût_‰ì_blob_hóp
(

96 
row_¥ebuût_t
 *
¥ebuût
);

102 
byã
 *
row_mysql_°‹e_åue_v¨_Àn
(

103 
byã
 *
de°
,

104 
ulöt
 
Àn
,

105 
ulöt
 
À∆í
);

110 c⁄° 
byã
 *
row_mysql_ªad_åue_v¨ch¨
(

111 
ulöt
 *
Àn
,

112 c⁄° 
byã
 *
fõld
,

113 
ulöt
 
À∆í
);

124 
row_mysql_°‹e_blob_ªf
(
byã
 *
de°
, 
ulöt
 
cﬁ_Àn
, c⁄° *
d©a
,

125 
ulöt
 
Àn
);

132 c⁄° 
byã
 *
row_mysql_ªad_blob_ªf
(
ulöt
 *
Àn
, c⁄° byã *
ªf
, ulöà
cﬁ_Àn
);

135 
row_mysql_°‹e_geomëry
(

136 
byã
 *
de°
,

137 
ulöt
 
de°_Àn
,

141 c⁄° 
byã
 *
§c
,

143 
ulöt
 
§c_Àn
);

152 
row_mysql_∑d_cﬁ
(
ulöt
 
mbmöÀn
, 
byã
 *
∑d
, ulöà
Àn
);

158 
byã
 *
row_mysql_°‹e_cﬁ_ö_önoba£_f‹m©
(

159 
dfõld_t
 *
dfõld
,

162 
byã
 *
buf
,

168 
iboﬁ
 
row_f‹m©_cﬁ
,

175 c⁄° 
byã
 *
mysql_d©a
,

180 
ulöt
 
cﬁ_Àn
,

186 
ulöt
 
comp
);

190 
boﬁ
 
row_mysql_h™dÀ_îr‹s
(

191 
dbîr_t
 *
√w_îr
,

194 
åx_t
 *
åx
,

195 
que_thr_t
 *
thr
,

196 
åx_ßvït_t
 *
ßvït
);

199 
row_¥ebuût_t
 *
row_¸óã_¥ebuût
(

200 
di˘_èbÀ_t
 *
èbÀ
,

201 
ulöt
 
mysql_row_Àn
);

207 
row_¥ebuût_‰ì
(
row_¥ebuût_t
 *
¥ebuût
, 
iboﬁ
 
di˘_locked
);

213 
row_upd©e_¥ebuût_åx
(
row_¥ebuût_t
 *
¥ebuût
, 
åx_t
 *
åx
);

221 
dbîr_t
 
	$row_lock_èbÀ_autoöc_f‹_mysql
(

222 
row_¥ebuût_t
 *
¥ebuût
)

224 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

229 
dbîr_t
 
	`row_lock_èbÀ
(
row_¥ebuût_t
 *
¥ebuût
);

235 
dbîr_t
 
	$row_ö£π_f‹_mysql
(c⁄° 
byã
 *
mysql_ªc
, 
row_¥ebuût_t
 *
¥ebuût
)

236 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

239 
	`row_¥ebuûd_£l_gøph
(
row_¥ebuût_t
 *
¥ebuût
);

245 
upd_t
 *
	`row_gë_¥ebuût_upd©e_ve˘‹
(

246 
row_¥ebuût_t
 *
¥ebuût
);

251 
iboﬁ
 
	`row_èbÀ_gŸ_deÁu…_˛u°_ödex
(

252 c⁄° 
di˘_èbÀ_t
 *
èbÀ
);

258 
dbîr_t
 
	$row_upd©e_f‹_mysql
(c⁄° 
byã
 *
mysql_ªc
, 
row_¥ebuût_t
 *
¥ebuût
)

259 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

263 
	`row_dñëe_Æl_rows
(
di˘_èbÀ_t
 *
èbÀ
);

278 
	`row_u∆ock_f‹_mysql
(
row_¥ebuût_t
 *
¥ebuût
, 
iboﬁ
 
has_œtches_⁄_ªcs
);

284 
boﬁ
 
	$row_is_mysql_tmp_èbÀ_«me
(c⁄° *
«me
)

285 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

289 #i‚de‡
UNIV_HOTBACKUP


293 
upd_node_t
 *
	`row_¸óã_upd©e_node_f‹_mysql
(

294 
di˘_èbÀ_t
 *
èbÀ
,

295 
mem_hóp_t
 *
hóp
);

298 
dbîr_t
 
	$row_upd©e_ˇsˇde_f‹_mysql
(

299 
que_thr_t
 *
thr
,

300 
upd_node_t
 *
node
,

302 
di˘_èbÀ_t
 *
èbÀ
)

303 
	`MY_ATTRIBUTE
((
n⁄nuŒ
, 
w¨n_unu£d_ªsu…
));

310 
	`row_mysql_lock_d©a_di˘i⁄¨y_func
(
åx_t
 *
åx
, c⁄° *
fûe
,

311 
ulöt
 
löe
);

313 
	#row_mysql_lock_d©a_di˘i⁄¨y
(
åx
) \

314 
	`row_mysql_lock_d©a_di˘i⁄¨y_func
(
åx
, 
__FILE__
, 
__LINE__
)

	)

316 
	`row_mysql_u∆ock_d©a_di˘i⁄¨y
(
åx_t
 *
åx
);

323 
	`row_mysql_‰ìze_d©a_di˘i⁄¨y_func
(
åx_t
 *
åx
, c⁄° *
fûe
,

324 
ulöt
 
löe
);

326 
	#row_mysql_‰ìze_d©a_di˘i⁄¨y
(
åx
) \

327 
	`row_mysql_‰ìze_d©a_di˘i⁄¨y_func
(
åx
, 
__FILE__
, 
__LINE__
)

	)

329 
	`row_mysql_un‰ìze_d©a_di˘i⁄¨y
(
åx_t
 *
åx
);

338 
dbîr_t
 
	$row_¸óã_èbÀ_f‹_mysql
(
di˘_èbÀ_t
 *
èbÀ
, c⁄° *
com¥essi⁄
,

339 c⁄° 
HA_CREATE_INFO
 *
¸óã_öfo
,

340 
åx_t
 *
åx
)

341 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

347 
dbîr_t
 
	$row_¸óã_ödex_f‹_mysql
(

348 
di˘_ödex_t
 *
ödex
,

350 
åx_t
 *
åx
,

351 c⁄° 
ulöt
 *
fõld_Àngths
,

357 
di˘_èbÀ_t
 *
h™dÀr
)

358 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

370 
dbîr_t
 
	$row_èbÀ_lﬂd_f‹eign_c⁄°øöts
(
åx_t
 *
åx
, c⁄° *
«me
,

371 c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
)

372 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

378 
ulöt
 
	`row_dr›_èbÀs_f‹_mysql_ö_background
();

382 
ulöt
 
	`row_gë_background_dr›_li°_Àn_low
();

386 
dbîr_t
 
	$row_mysql_lock_èbÀ
(

387 
åx_t
 *
åx
,

388 
di˘_èbÀ_t
 *
èbÀ
,

389 
lock_mode
 
mode
,

390 c⁄° *
›_öfo
)

391 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

398 
dbîr_t
 
	`row_dr›_èbÀ•a˚
(
•a˚_id_t
 
•a˚_id
, c⁄° *
fûï©h
);

409 
dbîr_t
 
	`row_dr›_èbÀ_f‹_mysql
(c⁄° *
«me
, 
åx_t
 *
åx
, 
boﬁ
 
n⁄©omic
,

410 
di˘_èbÀ_t
 *
h™dÀr
 = 
nuŒ±r
);

417 
ölöe
 
dbîr_t
 
	$row_dr›_èbÀ_f‹_mysql
(c⁄° *
«me
, 
åx_t
 *
åx
) {

418  (
	`row_dr›_èbÀ_f‹_mysql
(
«me
, 
åx
, 
åue
, 
nuŒ±r
));

419 
	}
}

425 
dbîr_t
 
	$row_disˇrd_èbÀ•a˚_f‹_mysql
(

426 c⁄° *
«me
,

427 
åx_t
 *
åx
)

428 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

432 
dbîr_t
 
	$row_imp‹t_èbÀ•a˚_f‹_mysql
(

433 
di˘_èbÀ_t
 *
èbÀ
,

434 
row_¥ebuût_t
 *
¥ebuût
)

435 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

442 
dbîr_t
 
	`row_dr›_d©aba£_f‹_mysql
(c⁄° *
«me
, 
åx_t
 *
åx
, 
ulöt
 *
found
);

451 
dbîr_t
 
	$row_ª«me_èbÀ_f‹_mysql
(c⁄° *
ﬁd_«me
, c⁄° *
√w_«me
,

452 c⁄° 
dd
::
TabÀ
 *
dd_èbÀ
, 
åx_t
 *
åx
,

453 
boﬁ
 
ª∂ay
)

454 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

462 
dbîr_t
 
	`row_mysql_∑øŒñ_£À˘_cou¡_°¨
(

463 
åx_t
 *
åx
, 
°d
::
ve˘‹
<
di˘_ödex_t
 *> &
ödexes
, 
size_t
 
max_thªads
,

464 
ulöt
 *
n_rows
);

476 
dbîr_t
 
	$row_sˇn_ödex_f‹_mysql
(
row_¥ebuût_t
 *
¥ebuût
, 
di˘_ödex_t
 *
ödex
,

477 
size_t
 
n_thªads
, 
boﬁ
 
check_keys
,

478 
ulöt
 *
n_rows
)

479 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

481 
	`row_mysql_öô
();

484 
	`row_mysql_˛o£
();

491 
	smysql_row_ãm∂_t
 {

492 
ulöt
 
cﬁ_no
;

493 
ulöt
 
ªc_fõld_no
;

497 
ulöt
 
˛u°_ªc_fõld_no
;

501 
ulöt
 
i˝_ªc_fõld_no
;

506 
ulöt
 
mysql_cﬁ_off£t
;

508 
ulöt
 
mysql_cﬁ_Àn
;

510 
ulöt
 
mysql_mvidx_Àn
;

511 
ulöt
 
mysql_nuŒ_byã_off£t
;

513 
ulöt
 
mysql_nuŒ_bô_mask
;

515 
ulöt
 
ty≥
;

517 
ulöt
 
mysql_ty≥
;

519 
ulöt
 
mysql_Àngth_byãs
;

527 
ulöt
 
ch¨£t
;

529 
ulöt
 
mbmöÀn
;

531 
ulöt
 
mbmaxÀn
;

533 
ulöt
 
is_unsig√d
;

536 
ulöt
 
is_vútuÆ
;

537 
ulöt
 
is_mu…i_vÆ
;

541 
	#MYSQL_FETCH_CACHE_SIZE
 8

	)

543 
	#MYSQL_FETCH_CACHE_THRESHOLD
 4

	)

545 
	#ROW_PREBUILT_ALLOCATED
 78540783

	)

546 
	#ROW_PREBUILT_FREED
 26423527

	)

551 
	srow_¥ebuût_t
 {

552 
ulöt
 
magic_n
;

556 
di˘_èbÀ_t
 *
èbÀ
;

557 
di˘_ödex_t
 *
ödex
;

559 
åx_t
 *
åx
;

560 
sql_°©_°¨t
 : 1;

564 
˛u°_ödex_was_gíî©ed
 : 1;

571 
ödex_ußbÀ
 : 1;

573 
ªad_ju°_key
 : 1;

579 
u£d_ö_HANDLER
 : 1;

586 
ãm∂©e_ty≥
 : 2;

590 
n_ãm∂©e
 : 10;

592 
nuŒ_bôm≠_Àn
 : 10;

595 
√ed_to_ac˚ss_˛u°îed
 : 1;

600 
ãm∂_c⁄èös_blob
 : 1;

607 
ãm∂_c⁄èös_fixed_poöt
 : 1;

616 
⁄_du∂iˇã_key_upd©e
 : 1;

620 
ª∂a˚
 : 1;

624 
mysql_row_ãm∂_t
 *
mysql_ãm∂©e
;

628 
mem_hóp_t
 *
hóp
;

631 
mem_hóp_t
 *
curs‹_hóp
;

634 
ös_node_t
 *
ös_node
;

638 
byã
 *
ös_upd_ªc_buff
;

641 
mu…i_vÆue_d©a
 *
mv_d©a
;

642 c⁄° 
byã
 *
deÁu…_ªc
;

644 
ulöt
 
höt_√ed_to_„tch_exåa_cﬁs
;

653 
upd_node_t
 *
upd_node
;

655 
åx_id_t
 
åx_id
;

657 
que_f‹k_t
 *
ös_gøph
;

660 
que_f‹k_t
 *
upd_gøph
;

662 
bå_pcur_t
 *
pcur
;

664 
bå_pcur_t
 *
˛u°_pcur
;

666 
que_f‹k_t
 *
£l_gøph
;

668 
dtu∂e_t
 *
£¨ch_tu∂e
;

671 
dtu∂e_t
 *
m_°›_tu∂e
;

679 
boﬁ
 
m_°›_tu∂e_found
;

681 
¥iv©e
:

683 
boﬁ
 
m_is_ªadög_ønge
;

685 
public
:

686 
boﬁ
 
	`is_ªadög_ønge
(Ëc⁄° {  
m_is_ªadög_ønge
; }

688 ˛as†
	crow_is_ªadög_ønge_gu¨d_t
 : 
¥iv©e
 
ut
::
boﬁ_sc›e_gu¨d_t
 {

689 
public
:

690 
ex∂icô
 
	`row_is_ªadög_ønge_gu¨d_t
(
row_¥ebuût_t
 &
¥ebuût
)

691 : 
ut
::
	`boﬁ_sc›e_gu¨d_t
(
¥ebuût
.
m_is_ªadög_ønge
) {}

694 
row_is_ªadög_ønge_gu¨d_t
 
	$gë_is_ªadög_ønge_gu¨d
() {

698 
	`ut_ad
(!
m_is_ªadög_ønge
);

699  
	`row_is_ªadög_ønge_gu¨d_t
(*
this
);

700 
	}
}

702 
byã
 
	grow_id
[
DATA_ROW_ID_LEN
];

707 
doc_id_t
 
	g·s_doc_id
;

713 
dtu∂e_t
 *
	g˛u°_ªf
;

715 
ulöt
 
	g£À˘_lock_ty≥
;

716 
£À˘_mode
 
	g£À˘_mode
;

718 
ulöt
 
	grow_ªad_ty≥
;

745 
	gLOCK_PCUR
,

746 
	gLOCK_CLUST_PCUR
,

747 
	gLOCK_COUNT
,

750 
boﬁ
 
	g√w_ªc_lock
[
LOCK_COUNT
];

772 
ulöt
 
	gmysql_¥efix_Àn
;

774 
ulöt
 
	gmysql_row_Àn
;

776 
ulöt
 
	gn_rows_„tched
;

778 
ulöt
 
	g„tch_dúe˘i⁄
;

780 
byã
 *
	g„tch_ˇche
[
MYSQL_FETCH_CACHE_SIZE
];

790 
iboﬁ
 
	gkìp_Ÿhî_fõlds_⁄_keyªad
;

794 
ulöt
 
	g„tch_ˇche_fú°
;

796 
ulöt
 
	gn_„tch_ˇched
;

798 
mem_hóp_t
 *
	gblob_hóp
;

800 
mem_hóp_t
 *
	gﬁd_vîs_hóp
;

802 
boﬁ
 
	gö_·s_quîy
;

803 
boﬁ
 
	g·s_doc_id_ö_ªad_£t
;

806 
ul⁄gl⁄g
 
	gautoöc_œ°_vÆue
;

808 
ul⁄gl⁄g
 
	gautoöc_ö¸emít
;

812 
ul⁄gl⁄g
 
	gautoöc_off£t
;

815 
dbîr_t
 
	gautoöc_îr‹
;

821 
boﬁ
 
	gidx_c⁄d
;

823 
ulöt
 
	gidx_c⁄d_n_cﬁs
;

826 
	gönodb_≠i
 : 1;

828 c⁄° 
ªc_t
 *
	gönodb_≠i_ªc
;

829 *
	gönodb_≠i_buf
;

831 
ulöt
 
	gönodb_≠i_ªc_size
;

835 
πr_öfo_t
 *
	gπr_öfo
;

838 
ulöt
 
	gmagic_n2
;

841 
boﬁ
 
	gös_£l_°mt
;

843 
önodb_£ssi⁄_t
 *
	g£ssi⁄
;

844 
byã
 *
	g§ch_key_vÆ1
;

847 
byã
 *
	g§ch_key_vÆ2
;

850 
uöt
 
	g§ch_key_vÆ_Àn
;

852 
boﬁ
 
	gm_no_¥e„tch
;

855 
boﬁ
 
	gno_ªad_lockög
;

858 
boﬁ
 
	gno_autoöc_lockög
;

861 
boﬁ
 
	gm_ªad_vútuÆ_key
;

865 
boﬁ
 
	gm_ãmp_ªad_sh¨ed
;

869 
boﬁ
 
	gm_ãmp_åì_modifõd
;

872 
TABLE
 *
	gm_mysql_èbÀ
;

875 
ha_önoba£
 *
	gm_mysql_h™dÀr
;

878 
ul⁄gl⁄g
 
	gm_·s_limô
;

881 
boﬁ
 
	gm_íd_ønge
;

884 
	glob
::
undo_vîs_t
 
m_lob_undo
;

886 
	glob
::
undo_vîs_t
 *
	$gë_lob_undo
(Ë{  (&
m_lob_undo
); 
	}
}

888 
	$lob_undo_ª£t
(Ë{ 
m_lob_undo
.
	`ª£t
(); 
	}
}

894 
boﬁ
 
	$ˇn_¥e„tch_ªc‹ds
() const;

900 
boﬁ
 
	$Ælow_du∂iˇãs
(Ë{  (
ª∂a˚
 || 
⁄_du∂iˇã_key_upd©e
); 
	}
}

902 
	g¥iv©e
:

906 
	$öô_tu∂e_ty≥s
(
dtu∂e_t
 *
tu∂e
) {

907 
	`dtu∂e_£t_n_fõlds
(
tu∂e
, 
ödex
->
n_fõlds
);

908 
	`di˘_ödex_c›y_ty≥s
(
tu∂e
, 
ödex
, index->
n_fõlds
);

909 
	}
}

911 
	gpublic
:

913 
	$öô_£¨ch_tu∂es_ty≥s
() {

914 
	`öô_tu∂e_ty≥s
(
£¨ch_tu∂e
);

915 
	`öô_tu∂e_ty≥s
(
m_°›_tu∂e
);

916 
	}
}

919 
	$˛ór_£¨ch_tu∂es
() {

920 
	`dtu∂e_£t_n_fõlds
(
£¨ch_tu∂e
, 0);

921 
	`dtu∂e_£t_n_fõlds
(
m_°›_tu∂e
, 0);

922 
	}
}

925 
boﬁ
 
	$skù_c⁄cuºícy_tickë
() const;

930 
	`row_¥ebuût_t
(
row_¥ebuût_t
 c⁄° &Ë
dñëe
;

931 
row_¥ebuût_t
 &
›î©‹
=‘ow_¥ebuût_àc⁄° &Ë
dñëe
;

932 
row_¥ebuût_t
 &
›î©‹
=‘ow_¥ebuût_à&&Ë
dñëe
;

933 
	`row_¥ebuût_t
(
row_¥ebuût_t
 &&Ë
dñëe
;

934 
	}
};

937 
	sSysIndexCÆlback
 {

938 
	mvútuÆ
 ~
SysIndexCÆlback
() {}

943 
vútuÆ
 
›î©‹
()(
må_t
 *
	mmå
, 
bå_pcur_t
 *
	mpcur
Ë
	mn€x˚±
 = 0;

961 
dfõld_t
 *
önoba£_gë_compuãd_vÆue
(

962 c⁄° 
dtu∂e_t
 *
row
, c⁄° 
di˘_v_cﬁ_t
 *
cﬁ
, c⁄° 
di˘_ödex_t
 *
ödex
,

963 
mem_hóp_t
 **
loˇl_hóp
, mem_hóp_à*
hóp
, c⁄° 
di˘_fõld_t
 *
ifõld
,

964 
THD
 *
thd
, 
TABLE
 *
mysql_èbÀ
, c⁄° 
di˘_èbÀ_t
 *
ﬁd_èbÀ
,

965 
upd_t
 *
∑ª¡_upd©e
, 
di˘_f‹eign_t
 *
f‹eign
);

976 
önoba£_gë_mu…i_vÆue
(c⁄° 
TABLE
 *
mysql_èbÀ
, 
ulöt
 
f_idx
,

977 
dfõld_t
 *
dfõld
, 
mu…i_vÆue_d©a
 *
vÆue
,

978 
uöt
 
ﬁd_vÆ
, 
ulöt
 
comp
, 
mem_hóp_t
 *
hóp
);

982 
önoba£_öô_vc_ãm∂
(
di˘_èbÀ_t
 *
èbÀ
);

987 
önoba£_ª«me_vc_ãm∂
(
di˘_èbÀ_t
 *
èbÀ
);

989 
	#ROW_PREBUILT_FETCH_MAGIC_N
 465765687

	)

991 
	#ROW_MYSQL_WHOLE_ROW
 0

	)

992 
	#ROW_MYSQL_REC_FIELDS
 1

	)

993 
	#ROW_MYSQL_NO_TEMPLATE
 2

	)

994 
	#ROW_MYSQL_DUMMY_TEMPLATE
 \

995 3

	)

999 
	#ROW_RETRIEVE_PRIMARY_KEY
 1

	)

1000 
	#ROW_RETRIEVE_ALL_COLS
 2

	)

1003 
	#ROW_READ_WITH_LOCKS
 0

	)

1004 
	#ROW_READ_TRY_SEMI_CONSISTENT
 1

	)

1005 
	#ROW_READ_DID_SEMI_CONSISTENT
 2

	)

1007 #ifde‡
UNIV_DEBUG


1009 
row_waô_f‹_background_dr›_li°_em±y
();

	@row0pread-adapter.h

32 #i‚de‡
row0¥ód_ad≠ãr_h


33 
	#row0¥ód_ad≠ãr_h


	)

35 
	~"row0¥ód.h
"

36 
	~"ut0cou¡î.h
"

38 
	~"h™dÀr.h
"

42 ˛as†
	cP¨ÆÀl_ªadî_ad≠ãr
 {

44 
c⁄°ex¥
 
size_t
 
	mADAPTER_SEND_BUFFER_SIZE
 = 2 * 1024 * 1024;

47 
	mThªad_˘x
;

49 
	mpublic
:

50 
usög
 
Lﬂd_‚
 = 
h™dÀr
::
Lﬂd_cbk
;

52 
usög
 
	mEnd_‚
 = 
h™dÀr
::
Lﬂd_íd_cbk
;

54 
usög
 
	mInô_‚
 = 
h™dÀr
::
Lﬂd_öô_cbk
;

59 
P¨ÆÀl_ªadî_ad≠ãr
(
size_t
 
max_thªads
, 
ulöt
 
rowÀn
);

62 ~
P¨ÆÀl_ªadî_ad≠ãr
() = ;

69 
dbîr_t
 
	$add_sˇn
(
åx_t
 *
åx
, c⁄° 
P¨ÆÀl_ªadî
::
C⁄fig
 &
c⁄fig
,

70 
P¨ÆÀl_ªadî
::
F
 &&
f
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

81 
dbîr_t
 
	$run
(**
thªad_c⁄ãxts
, 
Inô_‚
 
öô_‚
, 
Lﬂd_‚
 
lﬂd_‚
,

82 
End_‚
 
íd_‚
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

87 
dbîr_t
 
	$¥o˚ss_rows
(c⁄° 
P¨ÆÀl_ªadî
::
Ctx
 *
ªadî_˘x
)

88 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

92 
	`£t
(
row_¥ebuût_t
 *
¥ebuût
);

94 
¥iv©e
:

99 
dbîr_t
 
	$öô
(
P¨ÆÀl_ªadî
::
Thªad_˘x
 *
ªadî_thªad_˘x
,

100 
row_¥ebuût_t
 *
¥ebuût
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

105 
dbîr_t
 
	$íd
(
P¨ÆÀl_ªadî
::
Thªad_˘x
 *
ªadî_thªad_˘x
)

106 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

113 
dbîr_t
 
	$£nd_b©ch
(
P¨ÆÀl_ªadî
::
Thªad_˘x
 *
ªadî_thªad_˘x
,

114 
size_t
 
∑πôi⁄_id
, 
uöt64_t
 
n_ªcs
)

115 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

120 
size_t
 
	$≥ndög
(
Thªad_˘x
 *
˘x
Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

121  (
˘x
->
m_n_ªad
 - ctx->
m_n_£¡
);

127 
boﬁ
 
	$is_buf„r_fuŒ
(
Thªad_˘x
 *
˘x
) const

128 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

129  
˘x
->
m_n_ªad
 > 0 && ctx->m_n_ªad % 
m_b©ch_size
 == 0;

130 
	}
}

132 
	g¥iv©e
:

135 **
m_thªad_˘xs
{};

139 
Inô_‚
 
	gm_öô_‚
{};

143 
Lﬂd_‚
 
	gm_lﬂd_‚
{};

147 
End_‚
 
	gm_íd_‚
{};

150 
uöt64_t
 
	gm_b©ch_size
{};

153 
	sMySQL_row
 {

154 
usög
 
	gCﬁumn_mëa_d©a
 = 
°d
::
ve˘‹
<
ul⁄g
, 
	gut_Æloˇt‹
<
	gul⁄g
>>;

157 
Cﬁumn_mëa_d©a
 
	gm_off£ts
{};

160 
Cﬁumn_mëa_d©a
 
	gm_nuŒ_bô_mask
{};

163 
Cﬁumn_mëa_d©a
 
	gm_nuŒ_bô_off£ts
{};

166 
ul⁄g
 
	gm_max_Àn
{};

170 
MySQL_row
 
	gm_mysql_row
{};

173 
	sThªad_˘x
 {

175 
Thªad_˘x
();

178 ~
Thªad_˘x
() = ;

181 
size_t
 
	gm_n_ªad
{};

184 
size_t
 
	gm_n_£¡
{};

187 
	g°d
::
ve˘‹
<
byã
, 
	gut_Æloˇt‹
<
	gbyã
>> 
	gm_buf„r
;

201 
row_¥ebuût_t
 *
	gm_¥ebuût
{};

204 
P¨ÆÀl_ªadî
 
	gm_∑øŒñ_ªadî
;

	@row0pread-histogram.h

32 #i‚de‡
row0¥ód_hi°ogøm_h


33 
	#row0¥ód_hi°ogøm_h


	)

35 
	~<øndom
>

36 
	~"row0¥ód.h
"

37 
	~"ut0cou¡î.h
"

39 ˛as†
	cHi°ogøm_ßm∂î
 {

40 
	mpublic
:

46 
ex∂icô
 
Hi°ogøm_ßm∂î
(
size_t
 
max_thªads
, 
ßm∂ög_£ed
,

47 
ßm∂ög_≥r˚¡age
,

48 
íum_ßm∂ög_mëhod
 
ßm∂ög_mëhod
);

51 ~
Hi°ogøm_ßm∂î
();

58 
boﬁ
 
öô
(
åx_t
 *
åx
, 
di˘_ödex_t
 *
ödex
, 
row_¥ebuût_t
 *
¥ebuût
);

62 
dbîr_t
 
buf„r_√xt
();

66 
buf„r_íd
();

71 
	$£t
(
byã
 *
buf
Ë{ 
m_buf
 = buf; }

75 
dbîr_t
 
	`run
();

82 
boﬁ
 
	`skù
();

84 
¥iv©e
:

86 
	`waô_f‹_°¨t_of_buf„rög
();

89 
	`waô_f‹_íd_of_buf„rög
();

92 
	`sig«l_°¨t_of_buf„rög
();

95 
	`sig«l_íd_of_buf„rög
();

99 
	$£t_îr‹_°©e
(
dbîr_t
 
îr
Ë{ 
m_îr
 =Éº; 
	}
}

102 
boﬁ
 
	$is_îr‹_£t
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

103  (
m_îr
 !
DB_SUCCESS
);

104 
	}
}

109 
dbîr_t
 
	$°¨t_ˇŒback
(
P¨ÆÀl_ªadî
::
Thªad_˘x
 *
ªadî_thªad_˘x
)

110 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

115 
dbîr_t
 
	$föish_ˇŒback
(
P¨ÆÀl_ªadî
::
Thªad_˘x
 *
ªadî_thªad_˘x
)

116 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

126 
dbîr_t
 
	`ßm∂e_ªc
(c⁄° 
P¨ÆÀl_ªadî
::
Ctx
 *
˘x
, c⁄° 
ªc_t
 *
ªc
,

127 
ulöt
 *
off£ts
, c⁄° 
di˘_ödex_t
 *
ödex
,

128 
row_¥ebuût_t
 *
¥ebuût
);

136 
dbîr_t
 
	$¥o˚ss_n⁄_Àaf_ªc
(c⁄° 
P¨ÆÀl_ªadî
::
Ctx
 *
˘x
,

137 
row_¥ebuût_t
 *
¥ebuût
)

138 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

146 
dbîr_t
 
	$¥o˚ss_Àaf_ªc
(c⁄° 
P¨ÆÀl_ªadî
::
Ctx
 *
˘x
,

147 
row_¥ebuût_t
 *
¥ebuût
)

148 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

150 
¥iv©e
:

152 
byã
 *
m_buf
{
nuŒ±r
};

155 
os_evít_t
 
	gm_°¨t_buf„r_evít
;

158 
os_evít_t
 
	gm_íd_buf„r_evít
;

161 
dbîr_t
 
	gm_îr
{
	gDB_SUCCESS
};

164 
P¨ÆÀl_ªadî
 
	gm_∑øŒñ_ªadî
;

169 
	g°d
::
mt19937
 
m_øndom_gíî©‹
;

172 
	g°d
::
unif‹m_ªÆ_di°ributi⁄
<> 
m_di°ributi⁄
;

175 
íum_ßm∂ög_mëhod
 
	gm_ßm∂ög_mëhod
{
	gíum_ßm∂ög_mëhod
::
NONE
};

178 
	gm_ßm∂ög_≥r˚¡age
{};

181 
	gm_ßm∂ög_£ed
{};

184 
	g°d
::
©omic_size_t
 
m_n_ßm∂ed
;

	@row0pread.h

32 #i‚de‡
row0∑r_ªad_h


33 
	#row0∑r_ªad_h


	)

35 
	~<fun˘i⁄Æ
>

36 
	~<ve˘‹
>

38 
	~"os0thªad-¸óã.h
"

39 
	~"row0£l.h
"

42 
	gåx_t
;

43 
	gmå_t
;

44 
	gbå_pcur_t
;

45 
	gbuf_block_t
;

46 
	gdi˘_èbÀ_t
;

48 
	~"bå0cur.h
"

49 
	~"db0îr.h
"

50 
	~"fû0fû.h
"

51 
	~"os0evít.h
"

52 
	~"∑ge0size.h
"

53 
	~"ªm0ty≥s.h
"

54 
	~"ut0mpmcbq.h
"

99 ˛as†
	cP¨ÆÀl_ªadî
 {

100 
	mpublic
:

102 
c⁄°ex¥
 
size_t
 
MAX_THREADS
{256};

106 
c⁄°ex¥
 
size_t
 
	gMAX_RESERVED_THREADS
{16};

110 
c⁄°ex¥
 
size_t
 
	gMAX_TOTAL_THREADS
{
	gMAX_THREADS
 + 
	gMAX_RESERVED_THREADS
};

112 
usög
 
	gLöks
 = 
°d
::
ve˘‹
<
∑ge_no_t
, 
	gut_Æloˇt‹
<
	g∑ge_no_t
>>;

115 
˛ass
 
	gCtx
;

116 
˛ass
 
	gSˇn_˘x
;

117 
	gThªad_˘x
;

120 
usög
 
	gSèπ
 = 
°d
::
fun˘i⁄
<
dbîr_t
(
Thªad_˘x
 *
thªad_˘x
)>;

123 
usög
 
	gFöish
 = 
°d
::
fun˘i⁄
<
dbîr_t
(
Thªad_˘x
 *
thªad_˘x
)>;

126 
usög
 
	gF
 = 
°d
::
fun˘i⁄
<
dbîr_t
(c⁄° 
Ctx
 *)>;

129 
	sSˇn_ønge
 {

131 
Sˇn_ønge
(Ë: 
m_°¨t
(), 
m_íd
() {}

135 
Sˇn_ønge
(c⁄° Sˇn_øngê&
sˇn_ønge
)

136 : 
m_°¨t
(
sˇn_ønge
.m_°¨t), 
m_íd
(scan_range.m_end) {}

141 
Sˇn_ønge
(c⁄° 
dtu∂e_t
 *
°¨t
, c⁄° dtu∂e_à*
íd
)

142 : 
m_°¨t
(
°¨t
), 
m_íd
(
íd
) {}

145 c⁄° 
dtu∂e_t
 *
	gm_°¨t
{};

148 c⁄° 
dtu∂e_t
 *
	gm_íd
{};

151 
	g°d
::
°rög
 
to_°rög
(Ëc⁄° 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

155 
	sC⁄fig
 {

162 
C⁄fig
(c⁄° 
Sˇn_ønge
 &
sˇn_ønge
, 
di˘_ödex_t
 *
ödex
,

163 
size_t
 
ªad_Àvñ
 = 0,

164 
size_t
 
∑πôi⁄_id
 = 
°d
::
numîic_limôs
<size_t>::
max
())

165 : 
m_sˇn_ønge
(
sˇn_ønge
),

166 
m_ödex
(
ödex
),

167 
m_is_com∑˘
(
di˘_èbÀ_is_comp
(
ödex
->
èbÀ
)),

168 
m_∑ge_size
(
di˘_tf_to_f•_Êags
(
ödex
->
èbÀ
->
Êags
)),

169 
m_ªad_Àvñ
(
ªad_Àvñ
),

170 
m_∑πôi⁄_id
(
∑πôi⁄_id
) {}

174 
C⁄fig
(c⁄° C⁄fig &
c⁄fig
)

175 : 
m_sˇn_ønge
(
c⁄fig
.m_scan_range),

176 
m_ödex
(
c⁄fig
.m_index),

177 
m_is_com∑˘
(
c⁄fig
.m_is_compact),

178 
m_∑ge_size
(
c⁄fig
.m_page_size),

179 
m_ªad_Àvñ
(
c⁄fig
.m_read_level),

180 
m_∑πôi⁄_id
(
c⁄fig
.m_partition_id) {}

183 c⁄° 
Sˇn_ønge
 
	gm_sˇn_ønge
;

186 
di˘_ödex_t
 *
	gm_ödex
{};

189 c⁄° 
boﬁ
 
	gm_is_com∑˘
{};

192 c⁄° 
∑ge_size_t
 
	gm_∑ge_size
;

195 
size_t
 
	gm_ªad_Àvñ
{0};

199 
size_t
 
	gm_∑πôi⁄_id
{
	g°d
::
numîic_limôs
<size_t>::
max
()};

203 
	sThªad_˘x
 {

206 
ex∂icô
 
Thªad_˘x
(
size_t
 
id
Ë
	gn€x˚±
 : 
m_thªad_id
(id) {}

209 ~
Thªad_˘x
(Ë
n€x˚±
 {

210 
ut_a
(
m_ˇŒback_˘x
 =
nuŒ±r
);

212 i‡(
	gm_blob_hóp
 !
nuŒ±r
) {

213 
mem_hóp_‰ì
(
m_blob_hóp
);

219 
	gãm∂©e
 <
ty≥«me
 
	gT
>

220 
£t_ˇŒback_˘x
(
T
 *
˘x
Ë
	gn€x˚±
 {

221 
ut_ad
(
m_ˇŒback_˘x
 =
nuŒ±r
 || 
˘x
 ==Çullptr);

222 
	gm_ˇŒback_˘x
 = 
˘x
;

227 
	gãm∂©e
 <
ty≥«me
 
	gT
>

228 
T
 *
gë_ˇŒback_˘x
(Ë
	gn€x˚±
 {

229  
	g°©ic_ˇ°
<
	gT
 *>(
	gm_ˇŒback_˘x
);

233 
¸óã_blob_hóp
(Ë
	gn€x˚±
 {

234 
ut_a
(
m_blob_hóp
 =
nuŒ±r
);

235 
	gm_blob_hóp
 = 
mem_hóp_¸óã
(
UNIV_PAGE_SIZE
);

239 
size_t
 
	gm_thªad_id
{
	g°d
::
numîic_limôs
<size_t>::
max
()};

242 
size_t
 
	gm_¥ev_∑πôi⁄_id
{
	g°d
::
numîic_limôs
<size_t>::
max
()};

246 *
	gm_ˇŒback_˘x
{};

249 
mem_hóp_t
 *
	gm_blob_hóp
{};

251 
Thªad_˘x
(Thªad_˘x &&Ë
dñëe
;

252 
Thªad_˘x
(c⁄° Thªad_˘x &Ë
dñëe
;

253 
	gThªad_˘x
 &
	g›î©‹
=(
Thªad_˘x
 &&Ë
dñëe
;

254 
	gThªad_˘x
 &
	g›î©‹
=(c⁄° 
Thªad_˘x
 &Ë
dñëe
;

260 
ex∂icô
 
P¨ÆÀl_ªadî
(
size_t
 
max_thªads
, 
boﬁ
 
sync
 = 
åue
);

263 ~
P¨ÆÀl_ªadî
();

270 
size_t
 
	$avaûabÀ_thªads
(
size_t
 
n_ªquúed
, 
boﬁ
 
u£_ª£rved
 = 
Ál£
)

271 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

274 
	$ªÀa£_thªads
(
size_t
 
n_thªads
) {

275 c⁄°áutÿ
RELAXED
 = 
°d
::
mem‹y_‹dî_ªœxed
;

276 autÿ
a˘ive
 = 
s_a˘ive_thªads
.
	`„tch_sub
(
n_thªads
, 
RELAXED
);

277 
	`ut_a
(
a˘ive
 >
n_thªads
);

278 
	}
}

282 
	$ÁŒback_to_sögÀ_thªaded_mode
() {

283 
m_sögÀ_thªaded_mode
 = 
åue
;

284 
	`ª£t_îr‹_°©e
();

285 
	}
}

293 
dbîr_t
 
	$add_sˇn
(
åx_t
 *
åx
, c⁄° 
C⁄fig
 &
c⁄fig
, 
F
 &&
f
)

294 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

297 
	$joö
() {

298 autÿ&
t
 : 
m_∑øŒñ_ªad_thªads
) {

299 
t
.
	`waô
();

301 
	}
}

305 
dbîr_t
 
	$gë_îr‹_°©e
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

306  (
m_îr
);

307 
	}
}

310 
boﬁ
 
	$is_åì_em±y
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

311  (
m_˘x_id
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
) == 0);

312 
	}
}

316 
	$£t_°¨t_ˇŒback
(
Sèπ
 &&
f
Ë{ 
m_°¨t_ˇŒback
 = 
°d
::
	`move
(f); 
	}
}

320 
	$£t_föish_ˇŒback
(
Föish
 &&
f
Ë{ 
m_föish_ˇŒback
 = 
°d
::
	`move
(f); 
	}
}

324 
dbîr_t
 
	$run
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

327 
size_t
 
	$max_thªads
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

330 
boﬁ
 
	$is_îr‹_£t
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

331  (
m_îr
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
Ë!
DB_SUCCESS
);

332 
	}
}

336 
	$£t_îr‹_°©e
(
dbîr_t
 
îr
) {

337 
m_îr
.
	`°‹e
(
îr
, 
°d
::
mem‹y_‹dî_ªœxed
);

338 
	}
}

341 
P¨ÆÀl_ªadî
(c⁄° P¨ÆÀl_ªadî &Ë
dñëe
;

342 
P¨ÆÀl_ªadî
(c⁄° P¨ÆÀl_ªadî &&Ë
dñëe
;

343 
	gP¨ÆÀl_ªadî
 &
	g›î©‹
=(
P¨ÆÀl_ªadî
 &&Ë
dñëe
;

344 
	gP¨ÆÀl_ªadî
 &
	g›î©‹
=(c⁄° 
P¨ÆÀl_ªadî
 &Ë
dñëe
;

346 
	g¥iv©e
:

348 
	$ª£t_îr‹_°©e
(Ë{ 
m_îr
 = 
DB_SUCCESS
; 
	}
}

352 
	$ªÀa£_unu£d_thªads
(
size_t
 
unu£d_thªads
) {

353 
	`ut_a
(
m_max_thªads
 >
unu£d_thªads
);

354 
	`ªÀa£_thªads
(
unu£d_thªads
);

355 
m_max_thªads
 -
unu£d_thªads
;

356 
	}
}

360 
íqueue
(
°d
::
sh¨ed_±r
<
Ctx
> 
˘x
);

364 
	g°d
::
sh¨ed_±r
<
Ctx
> 
	$dequeue
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

367 
boﬁ
 
	$is_queue_em±y
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

371 
	`w‹kî
(
Thªad_˘x
 *
thªad_˘x
);

374 
	`∑øŒñ_ªad
();

377 
boﬁ
 
	$is_a˘ive
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

378  (
m_n_com∂ëed
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
) <

379 
m_˘x_id
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

380 
	}
}

382 
	g¥iv©e
:

384 
usög
 
Ctxs
 =

385 
°d
::
li°
<°d::
sh¨ed_±r
<
Ctx
>,

386 
	gut_Æloˇt‹
<
	g°d
::
sh¨ed_±r
<
Ctx
>>>;

388 
usög
 
	gSˇn_˘xs
 =

389 
°d
::
li°
<°d::
sh¨ed_±r
<
Sˇn_˘x
>,

390 
	gut_Æloˇt‹
<
	g°d
::
sh¨ed_±r
<
Sˇn_˘x
>>>;

395 
size_t
 
	gm_max_thªads
{};

398 
muèbÀ
 
ib_muãx_t
 
	gm_muãx
;

401 
Ctxs
 
	gm_˘xs
{};

404 
Sˇn_˘xs
 
	gm_sˇn_˘xs
{};

408 
boﬁ
 
	gm_sögÀ_thªaded_mode
{
	gÁl£
};

411 
os_evít_t
 
	gm_evít
{};

414 
uöt64_t
 
	gm_sig_cou¡
;

417 
size_t
 
	gm_sˇn_˘x_id
{};

420 
	g°d
::
©omic_size_t
 
m_˘x_id
{};

423 
	g°d
::
©omic_size_t
 
m_n_com∂ëed
{};

426 
Sèπ
 
	gm_°¨t_ˇŒback
{};

429 
Föish
 
	gm_föish_ˇŒback
{};

432 
	g°d
::
©omic
<
dbîr_t
> 
m_îr
{
DB_SUCCESS
};

435 
	g°d
::
ve˘‹
<
IB_thªad
, 
	gut_Æloˇt‹
<
	gIB_thªad
>> 
	gm_∑øŒñ_ªad_thªads
;

438 
	g°d
::
©omic_size_t
 
s_a˘ive_thªads
;

441 
boﬁ
 
	gm_sync
;

444 
	g°d
::
ve˘‹
<
Thªad_˘x
 *, 
	gut_Æloˇt‹
<
	gThªad_˘x
 *>> 
	gm_thªad_˘xs
;

446 
‰õnd
 
˛ass
 
	gCtx
;

447 
‰õnd
 
˛ass
 
	gSˇn_˘x
;

451 ˛as†
	cP¨ÆÀl_ªadî
::
Sˇn_˘x
 {

452 
¥iv©e
:

459 
Sˇn_˘x
(
P¨ÆÀl_ªadî
 *
ªadî
, 
size_t
 
id
, 
åx_t
 *
åx
,

460 c⁄° 
P¨ÆÀl_ªadî
::
C⁄fig
 &
c⁄fig
, 
F
 &&
f
);

462 
	mpublic
:

464 ~
Sˇn_˘x
();

466 
	m¥iv©e
:

468 
	sIãr
 {

470 ~
Iãr
();

473 
mem_hóp_t
 *
	mm_hóp
{};

476 c⁄° 
ulöt
 *
	mm_off£ts
{};

479 c⁄° 
ªc_t
 *
	mm_ªc
{};

483 c⁄° 
dtu∂e_t
 *
	mm_tu∂e
{};

486 
bå_pcur_t
 *
	mm_pcur
{};

490 
usög
 
	gSavïoöt
 = 
°d
::
∑ú
<
ulöt
, 
	gbuf_block_t
 *>;

493 
usög
 
	gSavïoöts
 = 
°d
::
ve˘‹
<
Savïoöt
, 
	gut_Æloˇt‹
<
	gSavïoöt
>>;

496 
usög
 
	gR™ge
 = 
°d
::
∑ú
<°d::
sh¨ed_±r
<
Iãr
>, 
	g°d
::shared_ptr<Iter>>;

498 
usög
 
	gR™ges
 = 
°d
::
ve˘‹
<
R™ge
, 
	gut_Æloˇt‹
<
	gR™ge
>>;

501 
size_t
 
	$id
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë{  (
m_id
); 
	}
}

505 
	$£t_îr‹_°©e
(
dbîr_t
 
îr
) {

506 
m_îr
.
	`°‹e
(
îr
, 
°d
::
mem‹y_‹dî_ªœxed
);

507 
	}
}

510 
boﬁ
 
	$is_îr‹_£t
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

511  (
m_îr
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
Ë!
DB_SUCCESS
);

512 
	}
}

519 
buf_block_t
 *
	$block_gë_s_œtched
(c⁄° 
∑ge_id_t
 &
∑ge_id
, 
må_t
 *
må
,

520 
löe
) const

521 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

528 
dbîr_t
 
	`∑πôi⁄
(c⁄° 
Sˇn_ønge
 &
sˇn_ønge
, 
R™ges
 &
ønges
,

529 
size_t
 
•lô_Àvñ
);

536 
∑ge_no_t
 
	$£¨ch
(c⁄° 
buf_block_t
 *
block
, c⁄° 
dtu∂e_t
 *
key
) const

537 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

546 
∑ge_cur_t
 
	$°¨t_ønge
(
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
, c⁄° 
dtu∂e_t
 *
key
,

547 
Savïoöts
 &
ßvïoöts
) const

548 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

555 
	$¸óã_ønge
(
R™ges
 &
ønges
, 
∑ge_cur_t
 &
Àaf_∑ge_curs‹
,

556 
må_t
 *
må
) const;

565 
dbîr_t
 
	`¸óã_ønges
(c⁄° 
Sˇn_ønge
 &
sˇn_ønge
, 
∑ge_no_t
 
∑ge_no
,

566 
size_t
 
dïth
, c⁄° size_à
•lô_Àvñ
, 
R™ges
 &
ønges
,

567 
må_t
 *
må
);

572 
	$c›y_row
(c⁄° 
ªc_t
 *
ªc
, 
Iãr
 *
ôî
) const;

579 
°d
::
sh¨ed_±r
<
Iãr
> 
	$¸óã_≥rsi°ít_curs‹
(c⁄° 
∑ge_cur_t
 &
∑ge_curs‹
,

580 
må_t
 *
må
) const

581 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

592 
boﬁ
 
	$check_visibûôy
(c⁄° 
ªc_t
 *&
ªc
, 
ulöt
 *&
off£ts
, 
mem_hóp_t
 *&
hóp
,

593 
må_t
 *
må
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

600 
dbîr_t
 
	$¸óã_c⁄ãxt
(c⁄° 
R™ge
 &
ønge
, 
boﬁ
 
•lô
)

601 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

606 
dbîr_t
 
	$¸óã_c⁄ãxts
(c⁄° 
R™ges
 &
ønges
)

607 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

610 
size_t
 
	$max_thªads
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

611  (
m_ªadî
->
m_max_thªads
);

612 
	}
}

616 
	$ªÀa£_thªads
(
size_t
 
unu£d_thªads
) {

617 
m_ªadî
->
	`ªÀa£_thªads
(
unu£d_thªads
);

618 
	}
}

621 
ödex_s_lock
();

624 
ödex_s_u∆ock
();

627 
boﬁ
 
	$ödex_s_own
() const {

628  (
m_s_locks
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
) > 0);

629 
	}
}

631 
	g¥iv©e
:

632 
usög
 
C⁄fig
 = 
P¨ÆÀl_ªadî
::Config;

635 
size_t
 
	gm_id
{
	g°d
::
numîic_limôs
<size_t>::
max
()};

638 
C⁄fig
 
	gm_c⁄fig
;

641 c⁄° 
åx_t
 *
	gm_åx
{};

644 
F
 
	gm_f
;

647 
size_t
 
	gm_dïth
{};

650 
P¨ÆÀl_ªadî
 *
	gm_ªadî
{};

653 
muèbÀ
 
	g°d
::
©omic
<
dbîr_t
> 
m_îr
{
DB_SUCCESS
};

656 
	g°d
::
©omic_size_t
 
m_s_locks
{};

658 
‰õnd
 
˛ass
 
	gP¨ÆÀl_ªadî
;

659 
‰õnd
 
˛ass
 
	gP¨ÆÀl_ªadî
::
Ctx
;

661 
Sˇn_˘x
(Sˇn_˘x &&Ë
dñëe
;

662 
Sˇn_˘x
(c⁄° Sˇn_˘x &Ë
dñëe
;

663 
	gSˇn_˘x
 &
	g›î©‹
=(
Sˇn_˘x
 &&Ë
dñëe
;

664 
	gSˇn_˘x
 &
	g›î©‹
=(c⁄° 
Sˇn_˘x
 &Ë
dñëe
;

667 
˛ass
 
	gPCurs‹
;

670 ˛as†
	cP¨ÆÀl_ªadî
::
Ctx
 {

671 
¥iv©e
:

676 
	$Ctx
(
size_t
 
id
, 
Sˇn_˘x
 *
sˇn_˘x
, c⁄° Sˇn_˘x::
R™ge
 &
ønge
)

677 : 
	`m_id
(
id
), 
	`m_ønge
(
ønge
), 
	$m_sˇn_˘x
(
sˇn_˘x
) {}

679 
public
:

681 ~
	`Ctx
();

683 
public
:

685 
size_t
 
	$id
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)Ë{  (
m_id
); 
	}
}

688 
size_t
 
	$sˇn_id
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

689  (
m_sˇn_˘x
->
	`id
());

690 
	}
}

693 c⁄° 
åx_t
 *
	$åx
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

694  (
m_sˇn_˘x
->
m_åx
);

695 
	}
}

698 c⁄° 
di˘_ödex_t
 *
	$ödex
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

699  (
m_sˇn_˘x
->
m_c⁄fig
.
m_ödex
);

700 
	}
}

703 
size_t
 
	$thªad_id
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

704  
m_thªad_˘x
->
m_thªad_id
;

705 
	}
}

709 
Thªad_˘x
 *
	$thªad_˘x
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

710  
m_thªad_˘x
;

711 
	}
}

716 
size_t
 
	$∑πôi⁄_id
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

717  
m_sˇn_˘x
->
m_c⁄fig
.
m_∑πôi⁄_id
;

718 
	}
}

729 
boﬁ
 
	$is_ªc_visibÀ
(c⁄° 
ªc_t
 *&
ªc
, 
ulöt
 *&
off£ts
, 
mem_hóp_t
 *&
hóp
,

730 
må_t
 *
må
) {

731  (
m_sˇn_˘x
->
	`check_visibûôy
(
ªc
, 
off£ts
, 
hóp
, 
må
));

732 
	}
}

734 
	g¥iv©e
:

737 
dbîr_t
 
	$åavî£
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

743 
dbîr_t
 
	`åavî£_ªcs
(
PCurs‹
 *
pcurs‹
, 
må_t
 *
må
);

749 
boﬁ
 
	`move_to_√xt_node
(
PCurs‹
 *
pcurs‹
, 
må_t
 *
må
);

753 
dbîr_t
 
	$•lô
(Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

756 
boﬁ
 
	$is_îr‹_£t
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

757  
m_sˇn_˘x
->
m_ªadî
->
	`is_îr‹_£t
() || m_scan_ctx->is_error_set();

758 
	}
}

760 
	g¥iv©e
:

762 
size_t
 
m_id
{
°d
::
numîic_limôs
<size_t>::
max
()};

765 
boﬁ
 
	gm_•lô
{};

768 
	gSˇn_˘x
::
R™ge
 
m_ønge
{};

771 
Sˇn_˘x
 *
	gm_sˇn_˘x
{};

773 
	gpublic
:

775 
Thªad_˘x
 *
m_thªad_˘x
{};

778 c⁄° 
buf_block_t
 *
	gm_block
{};

781 c⁄° 
ªc_t
 *
	gm_ªc
{};

784 
size_t
 
	gm_n_∑ges
{};

787 
boﬁ
 
	gm_fú°_ªc
{
	gåue
};

789 
ulöt
 *
	gm_off£ts
{};

792 
boﬁ
 
	gm_°¨t
{};

794 
‰õnd
 
˛ass
 
	gP¨ÆÀl_ªadî
;

	@row0purge.h

33 #i‚de‡
row0purge_h


34 
	#row0purge_h


	)

36 
	~"univ.i
"

38 
	~"bå0pcur.h
"

39 
	~"bå0ty≥s.h
"

40 
	~"d©a0d©a.h
"

41 
	~"di˘0ty≥s.h
"

42 
	~"que0ty≥s.h
"

43 
	~"row0ty≥s.h
"

44 
	~"åx0ty≥s.h
"

45 
	~"ut0vec.h
"

51 
purge_node_t
 *
	$row_purge_node_¸óã
(
que_thr_t
 *
∑ª¡
, 
mem_hóp_t
 *
hóp
)

52 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

68 
boﬁ
 
	$row_purge_poss_£c
(
purge_node_t
 *
node
,

69 
di˘_ödex_t
 *
ödex
,

70 c⁄° 
dtu∂e_t
 *
íåy
)

71 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

76 
que_thr_t
 *
	$row_purge_°ï
(
que_thr_t
 *
thr
)

77 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

81 
	spurge_node_t
 {

83 
	sªc_t
 {

85 
åx_undo_ªc_t
 *
undo_ªc
;

88 
rﬁl_±r_t
 
rﬁl_±r
;

91 
åx_id_t
 
modifõr_åx_id
;

94 
usög
 
Recs
 = 
°d
::
li°
<
ªc_t
, 
mem_hóp_Æloˇt‹
<rec_t>>;

97 
que_comm⁄_t
 
comm⁄
;

102 
rﬁl_±r_t
 
rﬁl_±r
;

105 
undo_no_t
 
undo_no
;

108 
ulöt
 
ªc_ty≥
;

111 
di˘_èbÀ_t
 *
èbÀ
;

114 
MDL_tickë
 *
mdl
;

117 
di˘_èbÀ_t
 *
∑ª¡
;

120 
MDL_tickë
 *
∑ª¡_mdl
;

123 
TABLE
 *
mysql_èbÀ
;

126 
ulöt
 
cm∂_öfo
;

129 
upd_t
 *
upd©e
;

132 
dtu∂e_t
 *
ªf
;

136 
dtu∂e_t
 *
row
;

139 
di˘_ödex_t
 *
ödex
;

143 
mem_hóp_t
 *
hóp
;

147 
boﬁ
 
found_˛u°
;

150 
bå_pcur_t
 
pcur
;

153 
boﬁ
 
d⁄e
;

156 
åx_id_t
 
åx_id
;

159 
åx_id_t
 
modifõr_åx_id
;

162 
Recs
 *
ªcs
;

167 
boﬁ
 
	`is_èbÀ_id_exi°s
(
èbÀ_id_t
 
èbÀ_id
) const;

169 #ifde‡
UNIV_DEBUG


173 
boﬁ
 
	`check_du∂iˇã_undo_no
() const;

176 
åx_r£g_t
 *
r£g
;

177 #ifde‡
UNIV_DEBUG


184 
boﬁ
 
	`vÆid©e_pcur
();

	@row0quiesce.h

34 #i‚de‡
row0quõs˚_h


35 
	#row0quõs˚_h


	)

37 
	~"di˘0ty≥s.h
"

38 
	~"univ.i
"

40 
	gåx_t
;

43 
	#IB_EXPORT_CFG_VERSION_V1
 1

	)

45 
	#IB_EXPORT_CFG_VERSION_V2
 2

	)

47 
	#IB_EXPORT_CFG_VERSION_V3
 3

	)

49 
	#IB_EXPORT_CFG_VERSION_V4
 4

	)

52 
	#IB_EXPORT_CFG_VERSION_V5
 5

	)

54 
	#IB_EXPORT_CFG_VERSION_V6
 6

	)

56 
	#IB_EXPORT_CFG_VERSION_V99
 99

	)

61 
row_quõs˚_èbÀ_°¨t
(
di˘_èbÀ_t
 *
èbÀ
, 
åx_t
 *
åx
);

65 
dbîr_t
 
	$row_quõs˚_£t_°©e
(

66 
di˘_èbÀ_t
 *
èbÀ
,

67 
ib_quõs˚_t
 
°©e
,

68 
åx_t
 *
åx
)

69 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

74 
	`row_quõs˚_èbÀ_com∂ëe
(
di˘_èbÀ_t
 *
èbÀ
, 
åx_t
 *
åx
);

	@row0row.h

33 #i‚de‡
row0row_h


34 
	#row0row_h


	)

36 
	~"bå0ty≥s.h
"

37 
	~"d©a0d©a.h
"

38 
	~"di˘0ty≥s.h
"

39 
	~"må0må.h
"

40 
	~"que0ty≥s.h
"

41 
	~"ªm0ty≥s.h
"

42 
	~"row0ty≥s.h
"

43 
	~"åx0ty≥s.h
"

44 
	~"univ.i
"

49 
UNIV_INLINE


50 
ulöt
 
	$row_gë_åx_id_off£t
(

51 c⁄° 
di˘_ödex_t
 *
ödex
,

52 c⁄° 
ulöt
 *
off£ts
)

53 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

56 
UNIV_INLINE


57 
åx_id_t
 
	$row_gë_ªc_åx_id
(

58 c⁄° 
ªc_t
 *
ªc
,

59 c⁄° 
di˘_ödex_t
 *
ödex
,

60 c⁄° 
ulöt
 *
off£ts
)

61 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

64 
UNIV_INLINE


65 
rﬁl_±r_t
 
	$row_gë_ªc_rﬁl_±r
(

66 c⁄° 
ªc_t
 *
ªc
,

67 c⁄° 
di˘_ödex_t
 *
ödex
,

68 c⁄° 
ulöt
 *
off£ts
)

69 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

72 
	#ROW_BUILD_NORMAL
 0

	)

73 
	#ROW_BUILD_FOR_PURGE
 1

	)

74 
	#ROW_BUILD_FOR_UNDO
 2

	)

75 
	#ROW_BUILD_FOR_INSERT
 3

	)

81 
dtu∂e_t
 *
	$row_buûd_ödex_íåy_low
(

82 c⁄° 
dtu∂e_t
 *
row
,

84 c⁄° 
row_ext_t
 *
ext
,

86 c⁄° 
di˘_ödex_t
 *
ödex
,

87 
mem_hóp_t
 *
hóp
,

90 
ulöt
 
Êag
)

93 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

99 
UNIV_INLINE


100 
dtu∂e_t
 *
	$row_buûd_ödex_íåy
(

101 c⁄° 
dtu∂e_t
 *
row
,

103 c⁄° 
row_ext_t
 *
ext
,

105 c⁄° 
di˘_ödex_t
 *
ödex
,

106 
mem_hóp_t
 *
hóp
)

109 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

113 
dtu∂e_t
 *
	`row_buûd
(
ulöt
 
ty≥
,

120 c⁄° 
di˘_ödex_t
 *
ödex
,

121 c⁄° 
ªc_t
 *
ªc
,

130 c⁄° 
ulöt
 *
off£ts
,

133 c⁄° 
di˘_èbÀ_t
 *
cﬁ_èbÀ
,

142 c⁄° 
dtu∂e_t
 *
add_cﬁs
,

145 c⁄° 
ulöt
 *
cﬁ_m≠
,

147 
row_ext_t
 **
ext
,

150 
mem_hóp_t
 *
hóp
);

176 
dtu∂e_t
 *
	`row_buûd_w_add_vcﬁ
(
ulöt
 
ty≥
, c⁄° 
di˘_ödex_t
 *
ödex
,

177 c⁄° 
ªc_t
 *
ªc
, c⁄° 
ulöt
 *
off£ts
,

178 c⁄° 
di˘_èbÀ_t
 *
cﬁ_èbÀ
,

179 c⁄° 
dtu∂e_t
 *
add_cﬁs
,

180 c⁄° 
di˘_add_v_cﬁ_t
 *
add_v
,

181 c⁄° 
ulöt
 *
cﬁ_m≠
, 
row_ext_t
 **
ext
,

182 
mem_hóp_t
 *
hóp
);

187 
dtu∂e_t
 *
	$row_ªc_to_ödex_íåy_low
(

188 c⁄° 
ªc_t
 *
ªc
,

189 c⁄° 
di˘_ödex_t
 *
ödex
,

190 c⁄° 
ulöt
 *
off£ts
,

191 
mem_hóp_t
 *
hóp
)

193 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

197 
dtu∂e_t
 *
	$row_ªc_to_ödex_íåy
(

198 c⁄° 
ªc_t
 *
ªc
,

199 c⁄° 
di˘_ödex_t
 *
ödex
,

200 c⁄° 
ulöt
 *
off£ts
,

201 
mem_hóp_t
 *
hóp
)

203 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

207 
dtu∂e_t
 *
	$row_buûd_row_ªf
(

208 
ulöt
 
ty≥
,

212 c⁄° 
di˘_ödex_t
 *
ödex
,

213 c⁄° 
ªc_t
 *
ªc
,

220 
mem_hóp_t
 *
hóp
)

222 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

233 
	`row_buûd_row_ªf_ö_tu∂e
(
dtu∂e_t
 *
ªf
, c⁄° 
ªc_t
 *
ªc
,

234 c⁄° 
di˘_ödex_t
 *
ödex
, 
ulöt
 *
off£ts
,

235 
åx_t
 *
åx
);

245 
UNIV_INLINE


246 
	`row_buûd_row_ªf_Á°
(
dtu∂e_t
 *
ªf
, c⁄° 
ulöt
 *
m≠
, c⁄° 
ªc_t
 *
ªc
,

247 c⁄° 
ulöt
 *
off£ts
);

252 
iboﬁ
 
	$row_£¨ch_⁄_row_ªf
(
bå_pcur_t
 *
pcur
,

254 
ulöt
 
mode
,

255 
di˘_èbÀ_t
 *
èbÀ
,

256 c⁄° 
dtu∂e_t
 *
ªf
,

257 
må_t
 *
må
)

258 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

262 
ªc_t
 *
	$row_gë_˛u°_ªc
(

263 
ulöt
 
mode
,

264 c⁄° 
ªc_t
 *
ªc
,

265 c⁄° 
di˘_ödex_t
 *
ödex
,

266 
di˘_ödex_t
 **
˛u°_ödex
,

267 
må_t
 *
må
)

268 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

278 
ölöe
 
ib_uöt64_t
 
	`row_∑r£_öt
(c⁄° 
byã
 *
d©a
, 
ulöt
 
Àn
, ulöà
mty≥
,

279 
boﬁ
 
unsig√d_ty≥
);

288 
ib_uöt64_t
 
	`row_∑r£_öt_‰om_fõld
(c⁄° 
dfõld_t
 *
fõld
);

294 
ib_uöt64_t
 
	`row_gë_autoöc_cou¡î
(c⁄° 
dtu∂e_t
 *
row
, 
ulöt
 
n
);

297 
	erow_£¨ch_ªsu…
 {

298 
ROW_FOUND
 = 0,

299 
ROW_NOT_FOUND
,

300 
ROW_BUFFERED
,

305 
ROW_NOT_DELETED_REF


311 
row_£¨ch_ªsu…
 
	$row_£¨ch_ödex_íåy
(

312 
di˘_ödex_t
 *
ödex
,

313 c⁄° 
dtu∂e_t
 *
íåy
,

314 
ulöt
 
mode
,

315 
bå_pcur_t
 *
pcur
,

317 
må_t
 *
må
)

318 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

320 
	#ROW_COPY_DATA
 1

	)

321 
	#ROW_COPY_POINTERS
 2

	)

335 
ulöt
 
	$row_øw_f‹m©
(c⁄° *
d©a
,

336 
ulöt
 
d©a_Àn
,

338 c⁄° 
di˘_fõld_t
 *
di˘_fõld
,

339 *
buf
,

340 
ulöt
 
buf_size
)

342 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

346 ˛as†
	cMu…i_vÆue_íåy_buûdî
 {

347 
public
:

349 
	$Mu…i_vÆue_íåy_buûdî
(
di˘_ödex_t
 *
ödex
, 
dtu∂e_t
 *
íåy
, 
boﬁ
 
£À˘ed
)

350 : 
	`m_ödex
(
ödex
),

351 
	`m_£À˘ed
(
£À˘ed
),

352 
	`m_íåy
(
íåy
),

353 
	`m_pos
(0),

354 
	`m_mv_d©a
(
nuŒ±r
),

355 
	$m_mv_fõld_no
(0) {}

357 
vútuÆ
 ~
	$Mu…i_vÆue_íåy_buûdî
(Ë{
	}
}

366 
dtu∂e_t
 *
	$begö
(
uöt32_t
 
pos
 = 0) {

367 i‡(!
	`¥ï¨e_mu…i_vÆue_fõld
()) {

368  (
nuŒ±r
);

371 
	`¥ï¨e_íåy_if_√˚sßry
();

372 
	`ut_ad
(
m_íåy
 !
nuŒ±r
);

374 
m_pos
 = 
pos
;

375  (
m_mv_d©a
 =
nuŒ±r
 ? 
m_íåy
 : 
	`√xt
());

376 
	}
}

381 
dtu∂e_t
 *
	$√xt
() {

382 i‡(
m_mv_d©a
 =
nuŒ±r
 || 
m_pos
 >m_mv_d©a->
num_v
) {

383  (
nuŒ±r
);

386 
	`ut_ad
(
m_íåy
 !
nuŒ±r
);

387 
dfõld_t
 *
fõld
 = 
	`dtu∂e_gë_¡h_fõld
(
m_íåy
, 
m_mv_fõld_no
);

388 
	`ut_ad
(
	`dfõld_is_mu…i_vÆue
(
fõld
));

390 i‡(
m_£À˘ed
 && (
	`skù
(Ë=
m_mv_d©a
->
num_v
)) {

391  (
nuŒ±r
);

394 c⁄°áutÿ
Àn
 = 
m_mv_d©a
->
d©a_Àn
[
m_pos
];

395 
	`dfõld_£t_d©a
(
fõld
, 
m_mv_d©a
->
d©≠
[
m_pos
], 
Àn
);

397 ++
m_pos
;

398  (
m_íåy
);

399 
	}
}

403 
uöt32_t
 
	$œ°_mu…i_vÆue_posôi⁄
() const {

404  (
m_pos
 > 0 ? m_pos - 1 : 0);

405 
	}
}

407 
	g¥Ÿe˘ed
:

411 
vútuÆ
 
dfõld_t
 *
föd_mu…i_vÆue_fõld
() = 0;

417 
vútuÆ
 
boﬁ
 
	$¥ï¨e_mu…i_vÆue_fõld
() {

418 
dfõld_t
 *
fõld
 = 
	`föd_mu…i_vÆue_fõld
();

420 i‡(
fõld
 =
nuŒ±r
 || fõld->
Àn
 =
UNIV_NO_INDEX_VALUE
) {

421  (
Ál£
);

424 
	`ut_ad
(
m_mv_fõld_no
 > 0);

425 
	`ut_ad
(
	`dfõld_is_mu…i_vÆue
(
fõld
));

427 --
m_mv_fõld_no
;

429 i‡(!
	`dfõld_is_nuŒ
(
fõld
)) {

430 
m_mv_d©a
 = 
°©ic_ˇ°
<
mu…i_vÆue_d©a
 *>(
fõld
->
d©a
);

433  (
åue
);

434 
	}
}

437 
vútuÆ
 
	$¥ï¨e_íåy_if_√˚sßry
(Ë{ ; 
	}
}

442 
vútuÆ
 
uöt32_t
 
	$skù
() {

443 
	`ut_ad
(
m_mv_d©a
 !
nuŒ±r
);

444 
	`ut_ad
(
m_£À˘ed
);

445  (
m_mv_d©a
->
num_v
);

446 
	}
}

448 
	g¥Ÿe˘ed
:

450 
di˘_ödex_t
 *
m_ödex
;

454 c⁄° 
boﬁ
 
	gm_£À˘ed
;

457 
dtu∂e_t
 *
	gm_íåy
;

460 
uöt32_t
 
	gm_pos
;

463 c⁄° 
mu…i_vÆue_d©a
 *
	gm_mv_d©a
;

466 
uöt32_t
 
	gm_mv_fõld_no
;

472 ˛as†
	cMu…i_vÆue_íåy_buûdî_n‹mÆ
 : 
public
 
Mu…i_vÆue_íåy_buûdî
 {

473 
public
:

486 
	$Mu…i_vÆue_íåy_buûdî_n‹mÆ
(c⁄° 
dtu∂e_t
 *
row
, c⁄° 
row_ext_t
 *
ext
,

487 
di˘_ödex_t
 *
ödex
, 
mem_hóp_t
 *
hóp
,

488 
boﬁ
 
check
, boﬁ 
£À˘ed
)

489 : 
	`Mu…i_vÆue_íåy_buûdî
(
ödex
, 
nuŒ±r
, 
£À˘ed
),

490 
	`m_row
(
row
),

491 
	`m_ext
(
ext
),

492 
	`m_hóp
(
hóp
),

493 
	$m_check
(
check
) {}

495 
¥iv©e
:

499 
dfõld_t
 *
	$föd_mu…i_vÆue_fõld
(Ë
ovîride
;

502 
	$¥ï¨e_íåy_if_√˚sßry
(Ë
ovîride
 {

503 i‡(
m_check
) {

504 
m_íåy
 = 
	`row_buûd_ödex_íåy
(
m_row
, 
m_ext
, 
m_ödex
, 
m_hóp
);

508 
m_íåy
 = 
	`row_buûd_ödex_íåy_low
(
m_row
, 
m_ext
, 
m_ödex
, 
m_hóp
,

509 
ROW_BUILD_FOR_PURGE
);

511 
	}
}

516 
uöt32_t
 
	$skù
(Ë
ovîride
 {

517 
	`ut_ad
(
m_£À˘ed
);

519 i‡(
m_mv_d©a
->
bô£t
 =
nuŒ±r
) {

520  (
m_pos
);

523 
m_pos
 < 
m_mv_d©a
->
num_v
 && !m_mv_d©a->
bô£t
->
	`ã°
(m_pos)) {

524 ++
m_pos
;

527  (
m_pos
);

528 
	}
}

530 
	g¥iv©e
:

532 c⁄° 
dtu∂e_t
 *
m_row
;

535 c⁄° 
row_ext_t
 *
	gm_ext
;

538 
mem_hóp_t
 *
	gm_hóp
;

541 c⁄° 
boﬁ
 
	gm_check
;

547 ˛as†
	cMu…i_vÆue_íåy_buûdî_ö£π
 : 
public
 
Mu…i_vÆue_íåy_buûdî
 {

548 
public
:

552 
	$Mu…i_vÆue_íåy_buûdî_ö£π
(
di˘_ödex_t
 *
ödex
, 
dtu∂e_t
 *
íåy
)

553 : 
	$Mu…i_vÆue_íåy_buûdî
(
ödex
, 
íåy
, 
Ál£
) {}

555 
¥iv©e
:

559 
dfõld_t
 *
	$föd_mu…i_vÆue_fõld
(Ë
ovîride
 {

560 
uöt16_t
 
i
 = 0;

561 
dfõld_t
 *
fõld
 = 
nuŒ±r
;

563 
	`ut_ad
(
m_íåy
 !
nuŒ±r
);

565 
m_mv_fõld_no
 = 0;

566 ; 
i
 < 
m_íåy
->
n_fõlds
; ++i) {

567 
fõld
 = &
m_íåy
->
fõlds
[
i
];

568 i‡(!
	`dfõld_is_mu…i_vÆue
(
fõld
)) {

572 
m_mv_fõld_no
 = 
i
 + 1;

576  (
i
 =
m_íåy
->
n_fõlds
 ? 
nuŒ±r
 : 
fõld
);

577 
	}
}

580 
	~"row0row.ic
"

	@row0row.ic

33 
	~<cm©h
>

34 
	~<c°döt
>

36 
	~"di˘0di˘.h
"

37 
	~"ªm0ªc.h
"

38 
	~"åx0undo.h
"

43 
UNIV_INLINE


44 
ulöt
 
	$row_gë_åx_id_off£t
(

45 c⁄° 
di˘_ödex_t
 *
ödex
,

46 c⁄° 
ulöt
 *
off£ts
)

48 
ulöt
 
pos
;

49 
ulöt
 
off£t
;

50 
ulöt
 
Àn
;

52 
	`ut_ad
(
ödex
->
	`is_˛u°îed
());

53 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
nuŒ±r
, 
ödex
, 
off£ts
));

55 
pos
 = 
ödex
->
	`gë_sys_cﬁ_pos
(
DATA_TRX_ID
);

57 
off£t
 = 
	`ªc_gë_¡h_fõld_offs
(
off£ts
, 
pos
, &
Àn
);

59 
	`ut_ad
(
Àn
 =
DATA_TRX_ID_LEN
);

61  (
off£t
);

62 
	}
}

66 
UNIV_INLINE


67 
åx_id_t
 
	$row_gë_ªc_åx_id
(

68 c⁄° 
ªc_t
 *
ªc
,

69 c⁄° 
di˘_ödex_t
 *
ödex
,

70 c⁄° 
ulöt
 *
off£ts
)

72 
ulöt
 
off£t
;

74 
	`ut_ad
(
ödex
->
	`is_˛u°îed
());

75 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
ödex
, 
off£ts
));

77 
off£t
 = 
ödex
->
åx_id_off£t
;

79 i‡(!
off£t
) {

80 
off£t
 = 
	`row_gë_åx_id_off£t
(
ödex
, 
off£ts
);

83  (
	`åx_ªad_åx_id
(
ªc
 + 
off£t
));

84 
	}
}

88 
UNIV_INLINE


89 
rﬁl_±r_t
 
	$row_gë_ªc_rﬁl_±r
(

90 c⁄° 
ªc_t
 *
ªc
,

91 c⁄° 
di˘_ödex_t
 *
ödex
,

92 c⁄° 
ulöt
 *
off£ts
)

94 
ulöt
 
off£t
;

96 
	`ut_ad
(
ödex
->
	`is_˛u°îed
());

97 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
ödex
, 
off£ts
));

99 
off£t
 = 
ödex
->
åx_id_off£t
;

101 i‡(!
off£t
) {

102 
off£t
 = 
	`row_gë_åx_id_off£t
(
ödex
, 
off£ts
);

105  (
	`åx_ªad_rﬁl_±r
(
ªc
 + 
off£t
 + 
DATA_TRX_ID_LEN
));

106 
	}
}

113 
UNIV_INLINE


114 
dtu∂e_t
 *
	$row_buûd_ödex_íåy
(

115 c⁄° 
dtu∂e_t
 *
row
,

117 c⁄° 
row_ext_t
 *
ext
,

119 c⁄° 
di˘_ödex_t
 *
ödex
,

120 
mem_hóp_t
 *
hóp
)

124 
dtu∂e_t
 *
íåy
;

126 
	`ut_ad
(
	`dtu∂e_check_ty≥d
(
row
));

127 
íåy
 = 
	`row_buûd_ödex_íåy_low
(
row
, 
ext
, 
ödex
, 
hóp
, 
ROW_BUILD_NORMAL
);

128 
	`ut_ad
(!
íåy
 || 
	`dtu∂e_check_ty≥d
(entry));

129  (
íåy
);

130 
	}
}

134 
UNIV_INLINE


135 
	$row_buûd_row_ªf_Á°
(

136 
dtu∂e_t
 *
ªf
,

138 c⁄° 
ulöt
 *
m≠
,

141 c⁄° 
ªc_t
 *
ªc
,

144 c⁄° 
ulöt
 *
off£ts
)

146 
dfõld_t
 *
dfõld
;

147 c⁄° 
byã
 *
fõld
;

148 
ulöt
 
Àn
;

149 
ulöt
 
ªf_Àn
;

150 
ulöt
 
fõld_no
;

151 
ulöt
 
i
;

153 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
nuŒ±r
, 
off£ts
));

154 
	`ut_ad
(!
	`ªc_offs_™y_exã∫
(
off£ts
));

155 
ªf_Àn
 = 
	`dtu∂e_gë_n_fõlds
(
ªf
);

157 
i
 = 0; i < 
ªf_Àn
; i++) {

158 
dfõld
 = 
	`dtu∂e_gë_¡h_fõld
(
ªf
, 
i
);

160 
fõld_no
 = *(
m≠
 + 
i
);

162 i‡(
fõld_no
 !
ULINT_UNDEFINED
) {

163 
fõld
 = 
	`ªc_gë_¡h_fõld
(
ªc
, 
off£ts
, 
fõld_no
, &
Àn
);

164 
	`dfõld_£t_d©a
(
dfõld
, 
fõld
, 
Àn
);

167 
	}
}

177 
ib_uöt64_t
 
	$row_∑r£_öt
(c⁄° 
byã
 *
d©a
, 
ulöt
 
Àn
, ulöà
mty≥
,

178 
boﬁ
 
unsig√d_ty≥
) {

179 
ib_uöt64_t
 
vÆue
 = 0;

181 
mty≥
) {

182 
DATA_INT
:

184 
	`ut_a
(
Àn
 < 
vÆue
);

185 
vÆue
 = 
	`mach_ªad_öt_ty≥
(
d©a
, 
Àn
, 
unsig√d_ty≥
);

188 
DATA_FLOAT
:

190 
	`ut_a
(
Àn
 == ());

193 
vÆue
 =

194 
°©ic_ˇ°
<
ib_uöt64_t
>(°©ic_ˇ°<
öt64_t
>(
	`mach_Êﬂt_ªad
(
d©a
)));

197 
DATA_DOUBLE
: {

198 
	`ut_a
(
Àn
 == ());

199 
dblvÆ
 = 
	`mach_doubÀ_ªad
(
d©a
);

200 
vÆue
 = 
°d
::
	`signbô
(
dblvÆ
Ë? 
°©ic_ˇ°
<
öt64_t
>(dblval)

201 : 
°©ic_ˇ°
<
ib_uöt64_t
>(
dblvÆ
);

205 
ut_îr‹
;

208 i‡(!
unsig√d_ty≥
 && 
°©ic_ˇ°
<
öt64_t
>(
vÆue
) < 0) {

209 
vÆue
 = 0;

212  (
vÆue
);

213 
	}
}

	@row0sel.h

33 #i‚de‡
row0£l_h


34 
	#row0£l_h


	)

36 
	~"univ.i
"

38 
	~"bå0pcur.h
"

39 
	~"d©a0d©a.h
"

40 
	~"di˘0°©s.h
"

41 
	~"di˘0ty≥s.h
"

42 
	~"∑rs0sym.h
"

43 
	~"que0ty≥s.h
"

44 
	~"ªad0ty≥s.h
"

45 
	~"row0mysql.h
"

46 
	~"row0ty≥s.h
"

47 
	~"åx0ty≥s.h
"

51 
£l_node_t
 *
£l_node_¸óã
(

52 
mem_hóp_t
 *
hóp
);

55 
£l_node_‰ì_¥iv©e
(
£l_node_t
 *
node
);

58 
£l_cﬁ_¥e„tch_buf_‰ì
(

59 
£l_buf_t
 *
¥e„tch_buf
);

65 
UNIV_INLINE


66 
∂™_t
 *
£l_node_gë_¡h_∂™
(
£l_node_t
 *
node
, 
ulöt
 
i
);

71 
que_thr_t
 *
row_£l_°ï
(que_thr_à*
thr
);

74 
UNIV_INLINE


75 
que_thr_t
 *
›í_°ï
(que_thr_à*
thr
);

78 
que_thr_t
 *
„tch_°ï
(que_thr_à*
thr
);

86 
row_£l_c›y_ˇched_fõlds_f‹_mysql
(
byã
 *
buf
, c⁄° byã *
ˇched_ªc
,

87 
row_¥ebuût_t
 *
¥ebuût
);

115 
boﬁ
 
row_£l_°‹e_mysql_ªc
(
byã
 *
mysql_ªc
, 
row_¥ebuût_t
 *
¥ebuût
,

116 c⁄° 
ªc_t
 *
ªc
, c⁄° 
dtu∂e_t
 *
vrow
,

117 
boﬁ
 
ªc_˛u°
, c⁄° 
di˘_ödex_t
 *
ªc_ödex
,

118 c⁄° 
di˘_ödex_t
 *
¥ebuût_ödex
,

119 c⁄° 
ulöt
 *
off£ts
, 
boﬁ
 
˛u°_ãm∂_f‹_£c
,

120 
lob
::
undo_vîs_t
 *
lob_undo
,

121 
mem_hóp_t
 *&
blob_hóp
);

128 
row_£l_c⁄vît_mysql_key_to_önoba£
(

129 
dtu∂e_t
 *
tu∂e
,

133 
byã
 *
buf
,

140 
ulöt
 
buf_Àn
,

141 
di˘_ödex_t
 *
ödex
,

142 c⁄° 
byã
 *
key_±r
,

143 
ulöt
 
key_Àn
,

144 
åx_t
 *
åx
);

166 
UNIV_INLINE


167 
dbîr_t
 
	$row_£¨ch_f‹_mysql
(
byã
 *
buf
, 
∑ge_cur_mode_t
 
mode
,

168 
row_¥ebuût_t
 *
¥ebuût
, 
ulöt
 
m©ch_mode
,

169 
ulöt
 
dúe˘i⁄
)

170 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

190 
dbîr_t
 
	$row_£¨ch_no_mvcc
(
byã
 *
buf
, 
∑ge_cur_mode_t
 
mode
,

191 
row_¥ebuût_t
 *
¥ebuût
, 
ulöt
 
m©ch_mode
,

192 
ulöt
 
dúe˘i⁄
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

213 
dbîr_t
 
	$row_£¨ch_mvcc
(
byã
 *
buf
, 
∑ge_cur_mode_t
 
mode
,

214 
row_¥ebuût_t
 *
¥ebuût
, 
ulöt
 
m©ch_mode
,

215 c⁄° 
ulöt
 
dúe˘i⁄
)

216 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

220 
dbîr_t
 
	`row_cou¡_πªe_ªcs
(

221 
row_¥ebuût_t
 *
¥ebuût
,

228 
ulöt
 *
n_rows
,

230 
ulöt
 *
n_dups
);

235 
dbîr_t
 
	$row_£¨ch_max_autoöc
(

236 
di˘_ödex_t
 *
ödex
,

237 c⁄° *
cﬁ_«me
,

238 
ib_uöt64_t
 *
vÆue
)

239 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

242 
	s£l_buf_t
 {

243 
byã
 *
d©a
;

247 
ulöt
 
Àn
;

248 
ulöt
 
vÆ_buf_size
;

255 
	s∂™_t
 {

256 
di˘_èbÀ_t
 *
èbÀ
;

258 
di˘_ödex_t
 *
ödex
;

259 
bå_pcur_t
 
pcur
;

261 
iboﬁ
 
asc
;

262 
iboﬁ
 
pcur_is_›í
;

264 
iboﬁ
 
curs‹_©_íd
;

271 
iboﬁ
 
°‹ed_curs‹_ªc_¥o˚s£d
;

275 
que_node_t
 **
tu∂e_exps
;

281 
dtu∂e_t
 *
tu∂e
;

282 
∑ge_cur_mode_t
 
mode
;

283 
ulöt
 
n_exa˘_m©ch
;

286 
iboﬁ
 
unique_£¨ch
;

288 
ulöt
 
n_rows_„tched
;

290 
ulöt
 
n_rows_¥e„tched
;

293 
ulöt
 
fú°_¥e„tched
;

295 
iboﬁ
 
no_¥e„tch
;

296 
sym_node_li°_t
 
cﬁumns
;

298 
	`UT_LIST_BASE_NODE_T
(
func_node_t
)

299 
íd_c⁄ds
;

307 
	`UT_LIST_BASE_NODE_T
(
func_node_t
)

308 
Ÿhî_c⁄ds
;

310 
iboﬁ
 
mu°_gë_˛u°
;

318 
ulöt
 *
˛u°_m≠
;

321 
dtu∂e_t
 *
˛u°_ªf
;

324 
bå_pcur_t
 
˛u°_pcur
;

327 
mem_hóp_t
 *
ﬁd_vîs_hóp
;

332 
	e£l_node_°©e
 {

333 
SEL_NODE_CLOSED
,

335 
SEL_NODE_OPEN
,

336 
SEL_NODE_FETCH
,

337 
SEL_NODE_NO_MORE_ROWS


341 
	s£l_node_t
 {

342 
que_comm⁄_t
 
comm⁄
;

343 
£l_node_°©e
 
°©e
;

344 
que_node_t
 *
£À˘_li°
;

345 
sym_node_t
 *
öto_li°
;

346 
sym_node_t
 *
èbÀ_li°
;

347 
iboﬁ
 
asc
;

349 
iboﬁ
 
£t_x_locks
;

352 
ulöt
 
row_lock_mode
;

353 
ulöt
 
n_èbÀs
;

354 
ulöt
 
„tch_èbÀ
;

356 
∂™_t
 *
∂™s
;

359 
que_node_t
 *
£¨ch_c⁄d
;

360 
RódVõw
 *
ªad_võw
;

363 
iboﬁ
 
c⁄si°ít_ªad
;

365 
‹dî_node_t
 *
‹dî_by
;

367 
iboﬁ
 
is_aggªg©e
;

369 
iboﬁ
 
aggªg©e_Æªady_„tched
;

373 
iboﬁ
 
ˇn_gë_upd©ed
;

384 
sym_node_t
 *
ex∂icô_curs‹
;

385 
	`UT_LIST_BASE_NODE_T
(
sym_node_t
)

386 
c›y_v¨übÀs
;

393 
	s„tch_node_t
 {

394 
que_comm⁄_t
 
comm⁄
;

395 
£l_node_t
 *
curs‹_def
;

396 
sym_node_t
 *
öto_li°
;

398 
∑rs_u£r_func_t
 *
func
;

411 
	e›í_node_›
 {

412 
ROW_SEL_OPEN_CURSOR
,

413 
ROW_SEL_CLOSE_CURSOR


417 
	s›í_node_t
 {

418 
que_comm⁄_t
 
comm⁄
;

419 
›í_node_›
 
›_ty≥
;

421 
£l_node_t
 *
curs‹_def
;

425 
	erow_£l_dúe˘i⁄
 {

426 
ROW_SEL_NEXT
 = 1,

427 
ROW_SEL_PREV
 = 2

431 
	erow_£l_m©ch_mode
 {

432 
ROW_SEL_EXACT
 = 1,

433 
ROW_SEL_EXACT_PREFIX


440 #ifde‡
UNIV_DEBUG


442 
	#row_£l_fõld_°‹e_ö_mysql_f‹m©
(
de°
, 
ãm∂
, 
idx
, 
fõld
, 
§c
, 
Àn
, \

443 
£c
) \

444 
	`row_£l_fõld_°‹e_ö_mysql_f‹m©_func
(
de°
, 
ãm∂
, 
idx
, 
fõld
, 
§c
, 
Àn
, \

445 
£c
)

	)

448 
	#row_£l_fõld_°‹e_ö_mysql_f‹m©
(
de°
, 
ãm∂
, 
idx
, 
fõld
, 
§c
, 
Àn
, \

449 
£c
) \

450 
	`row_£l_fõld_°‹e_ö_mysql_f‹m©_func
(
de°
, 
ãm∂
, 
idx
, 
§c
, 
Àn
)

	)

464 #ifde‡
UNIV_DEBUG


472 #ifde‡
UNIV_DEBUG


479 
	`row_£l_fõld_°‹e_ö_mysql_f‹m©_func
(
byã
 *
de°
,

480 c⁄° 
mysql_row_ãm∂_t
 *
ãm∂
,

481 c⁄° 
di˘_ödex_t
 *
ödex
,

482 #ifde‡
UNIV_DEBUG


483 
ulöt
 
fõld_no
,

485 c⁄° 
byã
 *
d©a
, 
ulöt
 
Àn


486 #ifde‡
UNIV_DEBUG


488 
ulöt
 
£c_fõld


498 
boﬁ
 
	`row_£¨ch_èbÀ_°©s
(c⁄° *
db_«me
, c⁄° *
tbl_«me
,

499 
TabÀSètsRec‹d
 &
èbÀ_°©s
);

510 
boﬁ
 
	`row_£¨ch_ödex_°©s
(c⁄° *
db_«me
, c⁄° *
tbl_«me
,

511 c⁄° *
ödex_«me
, 
ulöt
 
cﬁ_off£t
,

512 
ul⁄gl⁄g
 *
ˇrdöÆôy
);

514 
	~"row0£l.ic
"

	@row0sel.ic

33 
	~"que0que.h
"

37 
UNIV_INLINE


38 
∂™_t
 *
	$£l_node_gë_¡h_∂™
(
£l_node_t
 *
node
,

39 
ulöt
 
i
)

41 
	`ut_ad
(
i
 < 
node
->
n_èbÀs
);

43  (
node
->
∂™s
 + 
i
);

44 
	}
}

50 
UNIV_INLINE


51 
	$£l_node_ª£t_curs‹
(
£l_node_t
 *
node
)

53 
node
->
°©e
 = 
SEL_NODE_OPEN
;

54 
	}
}

58 
UNIV_INLINE


59 
que_thr_t
 *
	$›í_°ï
(
que_thr_t
 *
thr
)

61 
£l_node_t
 *
£l_node
;

62 
›í_node_t
 *
node
;

63 
ulöt
 
îr
;

65 
	`ut_ad
(
thr
);

67 
node
 = (
›í_node_t
 *)
thr
->
run_node
;

68 
	`ut_ad
(
	`que_node_gë_ty≥
(
node
Ë=
QUE_NODE_OPEN
);

70 
£l_node
 = 
node
->
curs‹_def
;

72 
îr
 = 
DB_SUCCESS
;

74 i‡(
node
->
›_ty≥
 =
ROW_SEL_OPEN_CURSOR
) {

77 
	`£l_node_ª£t_curs‹
(
£l_node
);

82 i‡(
£l_node
->
°©e
 !
SEL_NODE_CLOSED
) {

83 
£l_node
->
°©e
 = 
SEL_NODE_CLOSED
;

85 
îr
 = 
DB_ERROR
;

89 i‡(
îr
 !
DB_SUCCESS
) {

91 
	`Ârötf
(
°dîr
, "SQLÉº‹ %lu\n", (
ul⁄g
)
îr
);

93 
ut_îr‹
;

96 
thr
->
run_node
 = 
	`que_node_gë_∑ª¡
(
node
);

98  (
thr
);

99 
	}
}

121 
UNIV_INLINE


122 
dbîr_t
 
	$row_£¨ch_f‹_mysql
(
byã
 *
buf
, 
∑ge_cur_mode_t
 
mode
,

123 
row_¥ebuût_t
 *
¥ebuût
, 
ulöt
 
m©ch_mode
,

124 
ulöt
 
dúe˘i⁄
) {

125 i‡(!
¥ebuût
->
èbÀ
->
	`is_öåösic
()) {

126  (
	`row_£¨ch_mvcc
(
buf
, 
mode
, 
¥ebuût
, 
m©ch_mode
, 
dúe˘i⁄
));

128  (
	`row_£¨ch_no_mvcc
(
buf
, 
mode
, 
¥ebuût
, 
m©ch_mode
, 
dúe˘i⁄
));

130 
	}
}

	@row0types.h

33 #i‚de‡
row0ty≥s_h


34 
	#row0ty≥s_h


	)

36 
	g∂™_t
;

38 
	gupd_t
;

39 
	gupd_fõld_t
;

40 
	gupd_node_t
;

41 
	gdñ_node_t
;

42 
	gös_node_t
;

43 
	g£l_node_t
;

44 
	g›í_node_t
;

45 
	g„tch_node_t
;

47 
	g£l_buf_t
;

49 
	gundo_node_t
;

51 
	gpurge_node_t
;

53 
	grow_ext_t
;

56 
	grow_log_t
;

59 
	gTABLE
;

	@row0uins.h

33 #i‚de‡
row0uös_h


34 
	#row0uös_h


	)

36 
	~"univ.i
"

38 
	~"d©a0d©a.h
"

39 
	~"di˘0ty≥s.h
"

40 
	~"må0må.h
"

41 
	~"que0ty≥s.h
"

42 
	~"row0ty≥s.h
"

43 
	~"åx0ty≥s.h
"

51 
dbîr_t
 
	$row_undo_ös
(
undo_node_t
 *
node
,

52 
que_thr_t
 *
thr
)

53 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

	@row0umod.h

33 #i‚de‡
row0umod_h


34 
	#row0umod_h


	)

36 
	~"d©a0d©a.h
"

37 
	~"di˘0ty≥s.h
"

38 
	~"må0må.h
"

39 
	~"que0ty≥s.h
"

40 
	~"row0ty≥s.h
"

41 
	~"åx0ty≥s.h
"

42 
	~"univ.i
"

46 
dbîr_t
 
	$row_undo_mod
(
undo_node_t
 *
node
,

47 
que_thr_t
 *
thr
)

48 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

	@row0undo.h

33 #i‚de‡
row0undo_h


34 
	#row0undo_h


	)

36 
	~"bå0pcur.h
"

37 
	~"bå0ty≥s.h
"

38 
	~"di˘0ty≥s.h
"

39 
	~"må0må.h
"

40 
	~"que0ty≥s.h
"

41 
	~"row0ty≥s.h
"

42 
	~"åx0sys.h
"

43 
	~"åx0ty≥s.h
"

44 
	~"univ.i
"

50 
row_c⁄vît_im∂_to_ex∂_if_√eded
(
bå_cur_t
 *
curs‹
, 
undo_node_t
 *
node
);

58 
undo_node_t
 *
row_undo_node_¸óã
(
åx_t
 *
åx
, 
que_thr_t
 *
∑ª¡
,

59 
mem_hóp_t
 *
hóp
, 
boﬁ
 
∑πül_rﬁlback
);

67 
boﬁ
 
	$row_undo_£¨ch_˛u°_to_pcur
(

68 
undo_node_t
 *
node
)

69 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

73 
que_thr_t
 *
	`row_undo_°ï
(que_thr_à*
thr
);

91 
	eundo_exec
 {

92 
UNDO_NODE_FETCH_NEXT
 = 1,

94 
UNDO_NODE_INSERT
,

96 
UNDO_NODE_MODIFY


102 
	sundo_node_t
 {

103 
que_comm⁄_t
 
comm⁄
;

104 
undo_exec
 
°©e
;

105 
åx_t
 *
åx
;

106 
rﬁl_±r_t
 
rﬁl_±r
;

107 
åx_undo_ªc_t
 *
undo_ªc
;

108 
undo_no_t
 
undo_no
;

109 
ulöt
 
ªc_ty≥
;

111 
åx_id_t
 
√w_åx_id
;

113 
bå_pcur_t
 
pcur
;

115 
di˘_èbÀ_t
 *
èbÀ
;

116 
ulöt
 
cm∂_öfo
;

117 
upd_t
 *
upd©e
;

119 
dtu∂e_t
 *
ªf
;

120 
dtu∂e_t
 *
row
;

122 
row_ext_t
 *
ext
;

124 
dtu∂e_t
 *
undo_row
;

125 
row_ext_t
 *
undo_ext
;

127 
di˘_ödex_t
 *
ödex
;

129 
mem_hóp_t
 *
hóp
;

132 
boﬁ
 
∑πül
;

	@row0upd.h

33 #i‚de‡
row0upd_h


34 
	#row0upd_h


	)

36 
	~<°ack
>

37 
	~"bå0ty≥s.h
"

38 
	~"d©a0d©a.h
"

39 
	~"di˘0ty≥s.h
"

40 
	~"lob0lob.h
"

41 
	~"row0ty≥s.h
"

42 
	~"èbÀ.h
"

43 
	~"åx0ty≥s.h
"

44 
	~"univ.i
"

46 
	~"bå0pcur.h
"

47 #i‚de‡
UNIV_HOTBACKUP


48 
	~"∑rs0ty≥s.h
"

49 
	~"que0ty≥s.h
"

56 
UNIV_INLINE


57 
upd_t
 *
upd_¸óã
(
ulöt
 
n
, 
mem_hóp_t
 *
hóp
);

62 
UNIV_INLINE


63 
ulöt
 
upd_gë_n_fõlds
(c⁄° 
upd_t
 *
upd©e
);

65 #ifde‡
UNIV_DEBUG


70 
UNIV_INLINE


71 
upd_fõld_t
 *
upd_gë_¡h_fõld
(c⁄° 
upd_t
 *
upd©e
, 
ulöt
 
n
);

73 
	#upd_gë_¡h_fõld
(
upd©e
, 
n
Ë((upd©e)->
fõlds
 + (n))

	)

80 
UNIV_INLINE


81 
upd_fõld_£t_fõld_no
(
upd_fõld_t
 *
upd_fõld
, 
ulöt
 
fõld_no
,

82 c⁄° 
di˘_ödex_t
 *
ödex
, 
åx_t
 *
åx
);

88 
UNIV_INLINE


89 
upd_fõld_£t_v_fõld_no
(
upd_fõld_t
 *
upd_fõld
, 
ulöt
 
fõld_no
,

90 c⁄° 
di˘_ödex_t
 *
ödex
);

93 
UNIV_INLINE


94 c⁄° 
upd_fõld_t
 *
	$upd_gë_fõld_by_fõld_no
(

95 c⁄° 
upd_t
 *
upd©e
,

96 
ulöt
 
no
,

97 
boﬁ
 
is_vútuÆ
)

98 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

102 
byã
 *
	`row_upd_wrôe_sys_vÆs_to_log
(

103 
di˘_ödex_t
 *
ödex
,

104 
åx_id_t
 
åx_id
,

105 
rﬁl_±r_t
 
rﬁl_±r
,

106 
byã
 *
log_±r
,

108 
må_t
 *
må
);

120 
UNIV_INLINE


121 
	`row_upd_ªc_sys_fõlds
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
,

122 c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
ulöt
 *
off£ts
,

123 c⁄° 
åx_t
 *
åx
, 
rﬁl_±r_t
 
rﬁl_±r
);

131 
	`row_upd_ödex_íåy_sys_fõld
(
dtu∂e_t
 *
íåy
, 
di˘_ödex_t
 *
ödex
,

132 
ulöt
 
ty≥
, 
ib_uöt64_t
 
vÆ
);

136 
upd_node_t
 *
	`upd_node_¸óã
(

137 
mem_hóp_t
 *
hóp
);

146 
	`row_upd_ödex_wrôe_log
(
di˘_ödex_t
 *
ödex
, c⁄° 
upd_t
 *
upd©e
,

147 
byã
 *
log_±r
, 
må_t
 *
må
);

153 
iboﬁ
 
	`row_upd_ch™ges_fõld_size_‹_exã∫Æ
(

154 c⁄° 
di˘_ödex_t
 *
ödex
,

155 c⁄° 
ulöt
 *
off£ts
,

156 c⁄° 
upd_t
 *
upd©e
);

159 
boﬁ
 
	$row_upd_ch™ges_disow√d_exã∫Æ
(

160 c⁄° 
upd_t
 *
upd©e
)

161 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

167 
	`row_upd_ªc_ö_∂a˚
(

168 
ªc_t
 *
ªc
,

169 c⁄° 
di˘_ödex_t
 *
ödex
,

170 c⁄° 
ulöt
 *
off£ts
,

171 c⁄° 
upd_t
 *
upd©e
,

172 
∑ge_zù_des_t
 *
∑ge_zù
);

178 
upd_t
 *
	$row_upd_buûd_£c_ªc_dif„ªn˚_bö¨y
(

179 c⁄° 
ªc_t
 *
ªc
,

180 
di˘_ödex_t
 *
ödex
,

181 c⁄° 
ulöt
 *
off£ts
,

182 c⁄° 
dtu∂e_t
 *
íåy
,

183 
mem_hóp_t
 *
hóp
)

184 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

202 
upd_t
 *
	$row_upd_buûd_dif„ªn˚_bö¨y
(
di˘_ödex_t
 *
ödex
,

203 c⁄° 
dtu∂e_t
 *
íåy
, c⁄° 
ªc_t
 *
ªc
,

204 c⁄° 
ulöt
 *
off£ts
, 
boﬁ
 
no_sys
,

205 
åx_t
 *
åx
, 
mem_hóp_t
 *
hóp
,

206 
TABLE
 *
mysql_èbÀ
, 
dbîr_t
 *
îr‹
)

207 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

219 
	`row_upd_ödex_ª∂a˚_√w_cﬁ_vÆs_ödex_pos
(
dtu∂e_t
 *
íåy
,

220 c⁄° 
di˘_ödex_t
 *
ödex
,

221 c⁄° 
upd_t
 *
upd©e
,

222 
iboﬁ
 
‹dî_⁄ly
,

223 
mem_hóp_t
 *
hóp
);

233 
	`row_upd_ödex_ª∂a˚_√w_cﬁ_vÆs
(
dtu∂e_t
 *
íåy
,

234 c⁄° 
di˘_ödex_t
 *
ödex
,

235 c⁄° 
upd_t
 *
upd©e
, 
mem_hóp_t
 *
hóp
);

246 
	`row_upd_ª∂a˚
(
åx_t
 *
åx
, 
dtu∂e_t
 *
row
, 
row_ext_t
 **
ext
,

247 c⁄° 
di˘_ödex_t
 *
ödex
, c⁄° 
upd_t
 *
upd©e
,

248 
mem_hóp_t
 *
hóp
);

258 
	`row_upd_ª∂a˚_vcﬁ
(
dtu∂e_t
 *
row
, c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

259 c⁄° 
upd_t
 *
upd©e
, 
boﬁ
 
upd_√w
, 
dtu∂e_t
 *
undo_row
,

260 c⁄° 
byã
 *
±r
);

273 #ifde‡
UNIV_DEBUG


290 
boﬁ
 
	`row_upd_ch™ges_‹d_fõld_bö¨y_func
(
di˘_ödex_t
 *
ödex
,

291 c⁄° 
upd_t
 *
upd©e
,

292 #ifde‡
UNIV_DEBUG


293 c⁄° 
que_thr_t
 *
thr
,

295 c⁄° 
dtu∂e_t
 *
row
,

296 c⁄° 
row_ext_t
 *
ext
,

297 
boﬁ
 *
n⁄_mv_upd
, 
ulöt
 
Êag
)

298 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

300 #ifde‡
UNIV_DEBUG


301 
	#row_upd_ch™ges_‹d_fõld_bö¨y
(
ödex
, 
upd©e
, 
thr
, 
row
, 
ext
, \

302 
n⁄_mv_upd
) \

303 
	`row_upd_ch™ges_‹d_fõld_bö¨y_func
(
ödex
, 
upd©e
, 
thr
, 
row
, 
ext
, \

304 
n⁄_mv_upd
, 0)

	)

306 
	#row_upd_ch™ges_‹d_fõld_bö¨y
(
ödex
, 
upd©e
, 
thr
, 
row
, 
ext
, \

307 
n⁄_mv_upd
) \

308 
	`row_upd_ch™ges_‹d_fõld_bö¨y_func
(
ödex
, 
upd©e
, 
row
, 
ext
, 
n⁄_mv_upd
, 0)

	)

314 
ulöt
 
	`row_upd_ch™ges_·s_cﬁumn
(

315 
di˘_èbÀ_t
 *
èbÀ
,

316 
upd_fõld_t
 *
upd_fõld
);

319 
boﬁ
 
	$row_upd_ch™ges_doc_id
(
di˘_èbÀ_t
 *
èbÀ
,

320 
upd_fõld_t
 *
upd_fõld
)

321 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

328 
iboﬁ
 
	`row_upd_ch™ges_some_ödex_‹d_fõld_bö¨y
(

329 c⁄° 
di˘_èbÀ_t
 *
èbÀ
,

330 c⁄° 
upd_t
 *
upd©e
);

338 
	`row_upd_°‹e_row
(
åx_t
 *
åx
, 
upd_node_t
 *
node
, 
THD
 *
thd
,

339 
TABLE
 *
mysql_èbÀ
);

344 
que_thr_t
 *
	`row_upd_°ï
(que_thr_à*
thr
);

347 
byã
 *
	`row_upd_∑r£_sys_vÆs
(c⁄° byã *
±r
,

348 c⁄° 
byã
 *
íd_±r
,

349 
ulöt
 *
pos
,

350 
åx_id_t
 *
åx_id
,

351 
rﬁl_±r_t
 *
rﬁl_±r
);

361 
	`row_upd_ªc_sys_fõlds_ö_ªcovîy
(
ªc_t
 *
ªc
, 
∑ge_zù_des_t
 *
∑ge_zù
,

362 c⁄° 
ulöt
 *
off£ts
, ulöà
pos
,

363 
åx_id_t
 
åx_id
, 
rﬁl_±r_t
 
rﬁl_±r
);

367 
byã
 *
	`row_upd_ödex_∑r£
(c⁄° byã *
±r
,

368 c⁄° 
byã
 *
íd_±r
,

369 
mem_hóp_t
 *
hóp
,

371 
upd_t
 **
upd©e_out
);

380 
ib_uöt64_t
 
	`row_upd_gë_√w_autoöc_cou¡î
(c⁄° 
upd_t
 *
upd©e
,

381 
ulöt
 
autoöc_fõld_no
);

384 
	slob_ödex_diff_t
 {

385 
åx_id_t
 
m_modifõr_åxid
;

386 
undo_no_t
 
m_modifõr_undo_no
;

391 
°d
::
o°ªam
 &
	`¥öt
(°d::o°ªam &
out
) const {

392 
out
 << "[lob_ödex_diff_t: m_modifõr_åxid=" << 
m_modifõr_åxid


393 << ", m_modifõr_undo_no=" << 
m_modifõr_undo_no
 << "]";

394  (
out
);

398 
usög
 
Lob_ödex_diff_vec
 =

399 
°d
::
ve˘‹
<
lob_ödex_diff_t
, 
mem_hóp_Æloˇt‹
<lob_index_diff_t>>;

405 
ölöe
 
°d
::
o°ªam
 &
›î©‹
<<(°d::o°ªam &
out
,

406 c⁄° 
lob_ödex_diff_t
 &
obj
) {

407  (
obj
.
	`¥öt
(
out
));

408 
	}
}

411 
	sLob_diff
 {

415 
Lob_diff
(
mem_hóp_t
 *
mem_hóp
Ë: 
hóp
(mem_heap) {

416 
m_idx_diffs
 = 
°©ic_ˇ°
<
Lob_ödex_diff_vec
 *>(

417 
mem_hóp_Æloc
(
hóp
, (
Lob_ödex_diff_vec
)));

418 
√w
 (
m_idx_diffs
)

419 
Lob_ödex_diff_vec
(
mem_hóp_Æloˇt‹
<
lob_ödex_diff_t
>(
hóp
));

425 c⁄° 
byã
 *
ªad_off£t
(c⁄° byã *
undo_±r
) {

427 
	mm_off£t
 = 
mach_ªad_√xt_com¥es£d
(&
undo_±r
);

428  (
	mundo_±r
);

434 c⁄° 
byã
 *
ªad_Àngth
(c⁄° byã *
undo_±r
) {

436 
	mm_Àngth
 = 
mach_ªad_√xt_com¥es£d
(&
undo_±r
);

437 
ut_ad
(
m_Àngth
 <
lob
::
ªf_t
::
LOB_SMALL_CHANGE_THRESHOLD
);

439  (
	mundo_±r
);

442 
£t_ﬁd_d©a
(c⁄° 
byã
 *
undo_±r
Ë{ 
	mm_ﬁd_d©a
 = undo_ptr; }

444 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

445 
out
 << "[Lob_diff: off£t=" << 
m_off£t
 << ",Üígth=" << 
m_Àngth
;

446 i‡(
	mm_ﬁd_d©a
 =
nuŒ±r
) {

447 
out
 << ", m_old_data=nullptr";

449 
	mout
 << ", m_ﬁd_d©a=" << 
PrötBuf„r
(
m_ﬁd_d©a
, 
m_Àngth
);

452 i‡(
	mm_idx_diffs
 !
nuŒ±r
) {

453 autÿ
ôî
 = 
m_idx_diffs
->
begö
(); 
	môî
 !m_idx_diffs->
íd
();

454 ++
	môî
) {

455 
	mout
 << *
	môî
;

459 
	mout
 << "]";

460  (
	mout
);

464 
ulöt
 
	mm_off£t
 = 0;

467 
ulöt
 
	mm_Àngth
 = 0;

470 c⁄° 
byã
 *
	mm_ﬁd_d©a
 = 
nuŒ±r
;

473 
Lob_ödex_diff_vec
 *
	mm_idx_diffs
;

476 
mem_hóp_t
 *
	mhóp
;

479 
usög
 
	gLob_diff_ve˘‹
 = 
°d
::
ve˘‹
<
Lob_diff
, 
	gmem_hóp_Æloˇt‹
<
	gLob_diff
>>;

481 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gLob_diff
 &
	gobj
) {

482  (
	gobj
.
¥öt
(
out
));

486 
	supd_fõld_t
 {

487 
upd_fõld_t
()

488 : 
fõld_no
(0),

489 
‹ig_Àn
(0),

490 
exp
(
nuŒ±r
),

491 
ﬁd_v_vÆ
(
nuŒ±r
),

492 
mysql_fõld
(
nuŒ±r
),

493 
ext_ö_ﬁd
(
Ál£
),

494 
lob_diffs
(
nuŒ±r
),

495 
lob_fú°_∑ge_no
(
FIL_NULL
),

496 
lob_vîsi⁄
(0),

497 
œ°_åx_id
(0),

498 
œ°_undo_no
(0),

499 
hóp
(
nuŒ±r
) {}

501 
boﬁ
 
is_vútuÆ
(Ëc⁄° {  (
	m√w_vÆ
.is_virtual()); }

503 
	mfõld_no
 : 16;

509 
	m‹ig_Àn
 : 16;

512 
que_node_t
 *
	mexp
;

516 
dfõld_t
 
	mﬁd_vÆ
;

517 
dfõld_t
 
	m√w_vÆ
;

518 
dfõld_t
 *
	mﬁd_v_vÆ
;

520 
Fõld
 *
	mmysql_fõld
;

523 
boﬁ
 
	mext_ö_ﬁd
;

525 
push_lob_diff
(c⁄° 
Lob_diff
 &
lob_diff
) {

526 i‡(
	mlob_diffs
 =
nuŒ±r
) {

527 
lob_diffs
 = 
°©ic_ˇ°
<
Lob_diff_ve˘‹
 *>(

528 
mem_hóp_Æloc
(
hóp
, (
Lob_diff_ve˘‹
)));

529 
√w
 (
lob_diffs
Ë
Lob_diff_ve˘‹
(
mem_hóp_Æloˇt‹
<
Lob_diff
>(
hóp
));

531 
	mlob_diffs
->
push_back
(
lob_diff
);

536 
Lob_diff_ve˘‹
 *
	mlob_diffs
;

540 
∑ge_no_t
 
	mlob_fú°_∑ge_no
;

542 
ulöt
 
	mlob_vîsi⁄
;

545 
åx_id_t
 
	mœ°_åx_id
;

548 
undo_no_t
 
	mœ°_undo_no
;

550 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

553 
ª£t
() {

554 i‡(
	mlob_diffs
 !
nuŒ±r
) {

555 
lob_diffs
->
˛ór
();

560 
mem_hóp_t
 *
	mhóp
;

563 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gupd_fõld_t
 &
	gobj
) {

564  (
	gobj
.
¥öt
(
out
));

568 
	#upd_Êd_is_vútuÆ_cﬁ
(
upd_Êd
) \

569 (((
upd_Êd
)->
√w_vÆ
.
ty≥
.
¥ty≥
 & 
DATA_VIRTUAL
Ë=DATA_VIRTUAL)

	)

572 
	#upd_Êd_is_mu…i_vÆue_cﬁ
(
upd_Êd
) \

573 (
	`dfõld_is_mu…i_vÆue
(&((
upd_Êd
)->
√w_vÆ
)))

	)

576 
	#upd_Êd_£t_vútuÆ_cﬁ
(
upd_Êd
) \

577 ((
upd_Êd
)->
√w_vÆ
.
ty≥
.
¥ty≥
 |
DATA_VIRTUAL
)

	)

580 
	supd_t
 {

581 
mem_hóp_t
 *
	mhóp
;

582 
ulöt
 
	möfo_bôs
;

584 
dtu∂e_t
 *
	mﬁd_vrow
;

586 
di˘_èbÀ_t
 *
	mèbÀ
;

587 
TABLE
 *
	mmysql_èbÀ
;

589 
ulöt
 
	mn_fõlds
;

590 
upd_fõld_t
 *
	mfõlds
;

594 
≠≥nd
(c⁄° 
upd_fõld_t
 &
fõld
Ë{ 
	mfõlds
[
n_fõlds
++] = field; }

598 
boﬁ
 
is_modifõd
(c⁄° 
ulöt
 
fõld_no
) const {

599 i‡(
	mèbÀ
 =
nuŒ±r
) {

600 
ut_ad
(
Ál£
);

601  
	mÁl£
;

604  (
gë_fõld_by_fõld_no
(
fõld_no
, 
èbÀ
->
fú°_ödex
()Ë!
nuŒ±r
);

608 
ª£t
() {

609 
ulöt
 
	mi
 = 0; i < 
	mn_fõlds
; ++i) {

610 
	mfõlds
[
i
].
ª£t
();

614 #ifde‡
UNIV_DEBUG


615 
boﬁ
 
vÆid©e
() const {

616 
ulöt
 
	mi
 = 0; i < 
	mn_fõlds
; ++i) {

617 
dfõld_t
 *
	mfõld
 = &
fõlds
[
i
].
√w_vÆ
;

618 i‡(
dfõld_is_ext
(
fõld
)) {

619 
ut_ad
(
dfõld_gë_Àn
(
fõld
Ë>
BTR_EXTERN_FIELD_REF_SIZE
);

622  (
	måue
);

629 
boﬁ
 
is_∑πüŒy_upd©ed
(
ulöt
 
fõld_no
) const;

631 
upd_fõld_t
 *
gë_fõld_by_fõld_no
(
ulöt
 
fõld_no
, 
di˘_ödex_t
 *
ödex
) const;

633 c⁄° 
Bö¨y_diff_ve˘‹
 *
gë_bö¨y_diff_by_fõld_no
(
ulöt
 
fõld_no
) const;

639 
size_t
 
gë_tŸÆ_modifõd_byãs
(c⁄° 
Bö¨y_diff_ve˘‹
 &
bdv
) {

640 
size_t
 
	mtŸÆ
 = 0;

641 c⁄° 
	mBö¨y_diff
 &
	mbdiff
 : 
bdv
) {

642 
tŸÆ
 +
bdiff
.
Àngth
();

644  (
	mtŸÆ
);

647 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

654 
	m°d
::
o°ªam
 &
¥öt_puve˘
(
°d
::o°ªam &
out
, 
upd_fõld_t
 *
uf
) const;

657 #ifde‡
UNIV_DEBUG


664 
	g°d
::
o°ªam
 &
¥öt_bö¨y_diff
(
°d
::o°ªam &
out
, c⁄° 
Bö¨y_diff
 *
bdiff
,

665 c⁄° 
di˘_èbÀ_t
 *
èbÀ
, c⁄° 
Fõld
 *
fõld
);

667 
	g°d
::
o°ªam
 &
¥öt_bö¨y_diff
(
°d
::o°ªam &
out
, c⁄° 
Bö¨y_diff
 *
bdiff
);

669 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gupd_t
 &
	gobj
) {

670  (
	gobj
.
¥öt
(
out
));

673 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
,

674 c⁄° 
	gBö¨y_diff_ve˘‹
 &
	gobj
) {

675  (
	gout
);

679 #i‚de‡
UNIV_HOTBACKUP


683 
	supd_node_t
 {

684 
que_comm⁄_t
 
	mcomm⁄
;

685 
iboﬁ
 
	mis_dñëe
;

686 
iboﬁ
 
	m£¨ched_upd©e
;

689 
iboﬁ
 
	mö_mysql_öãrÁ˚
;

692 
di˘_f‹eign_t
 *
	mf‹eign
;

695 
upd_node_t
 *
	mˇsˇde_node
;

698 
mem_hóp_t
 *
	mˇsˇde_hóp
;

701 
£l_node_t
 *
	m£À˘
;

704 
bå_pcur_t
 *
	mpcur
;

709 
di˘_èbÀ_t
 *
	mèbÀ
;

710 
upd_t
 *
	mupd©e
;

711 
ulöt
 
	mupd©e_n_fõlds
;

716 
sym_node_li°_t
 
	mcﬁumns
;

718 
iboﬁ
 
	mhas_˛u°_ªc_x_lock
;

723 
ulöt
 
	mcm∂_öfo
;

729 
ulöt
 
	m°©e
;

730 
di˘_ödex_t
 *
	mödex
;

732 
dtu∂e_t
 *
	mrow
;

735 
row_ext_t
 *
	mext
;

737 
dtu∂e_t
 *
	mupd_row
;

738 
row_ext_t
 *
	mupd_ext
;

740 
mem_hóp_t
 *
	mhóp
;

744 
sym_node_t
 *
	mèbÀ_sym
;

745 
que_node_t
 *
	mcﬁ_assign_li°
;

751 
uöt32_t
 
	mdñ_mu…i_vÆ_pos
;

755 
uöt32_t
 
	mupd_mu…i_vÆ_pos
;

757 
ulöt
 
	mmagic_n
;

760 
	#UPD_NODE_MAGIC_N
 1579975

	)

763 
	#UPD_NODE_SET_IX_LOCK
 \

764 1

	)

769 
	#UPD_NODE_UPDATE_CLUSTERED
 \

770 2

	)

772 
	#UPD_NODE_INSERT_CLUSTERED
 \

773 3

	)

776 
	#UPD_NODE_UPDATE_ALL_SEC
 \

777 5

	)

781 
	#UPD_NODE_UPDATE_SOME_SEC
 \

782 6

	)

787 
	#UPD_NODE_NO_ORD_CHANGE
 \

788 1

	)

791 
	#UPD_NODE_NO_SIZE_CHANGE
 \

792 2

	)

796 
	~"row0upd.ic
"

	@row0upd.ic

33 
	~"må0log.h
"

34 #i‚de‡
UNIV_HOTBACKUP


35 
	~"lock0lock.h
"

36 
	~"row0row.h
"

37 
	~"åx0åx.h
"

38 
	~"åx0undo.h
"

40 
	~"∑ge0zù.h
"

44 
UNIV_INLINE


45 
upd_t
 *
	$upd_¸óã
(
ulöt
 
n
,

46 
mem_hóp_t
 *
hóp
)

48 
upd_t
 *
upd©e
;

50 
upd©e
 = 
°©ic_ˇ°
<
upd_t
 *>(

51 
	`mem_hóp_zÆloc
(
hóp
, (
upd_t
Ë+ (
upd_fõld_t
Ë* 
n
));

53 
upd©e
->
n_fõlds
 = 
n
;

54 
upd©e
->
fõlds
 = 
ªöãΩªt_ˇ°
<
upd_fõld_t
 *>(&update[1]);

55 
upd©e
->
hóp
 = heap;

57 
ulöt
 
i
 = 0; i < 
n
; ++i) {

58 
upd_fõld_t
 *
uf
 = &
upd©e
->
fõlds
[
i
];

59 
uf
->
hóp
 = heap;

62  (
upd©e
);

63 
	}
}

68 
UNIV_INLINE


69 
ulöt
 
	$upd_gë_n_fõlds
(c⁄° 
upd_t
 *
upd©e
)

71 
	`ut_ad
(
upd©e
);

73  (
upd©e
->
n_fõlds
);

74 
	}
}

76 #ifde‡
UNIV_DEBUG


79 
UNIV_INLINE


80 
upd_fõld_t
 *
	$upd_gë_¡h_fõld
(

81 c⁄° 
upd_t
 *
upd©e
,

82 
ulöt
 
n
)

84 
	`ut_ad
(
upd©e
);

85 
	`ut_ad
(
n
 < 
upd©e
->
n_fõlds
);

87  ((
upd_fõld_t
 *)
upd©e
->
fõlds
 + 
n
);

88 
	}
}

92 
UNIV_INLINE


93 
	$upd_fõld_£t_fõld_no
(

94 
upd_fõld_t
 *
upd_fõld
,

95 
ulöt
 
fõld_no
,

97 c⁄° 
di˘_ödex_t
 *
ödex
,

98 
åx_t
 *
åx
)

100 
upd_fõld
->
fõld_no
 = field_no;

101 
upd_fõld
->
‹ig_Àn
 = 0;

103 i‡(
fõld_no
 >
	`di˘_ödex_gë_n_fõlds
(
ödex
)) {

104 
ib
::
	`îr‹
(
ER_IB_MSG_628
)

105 << "ÅryögÅÿac˚s†fõld " << 
fõld_no
 << " i¿" << 
ödex
->
«me


106 << " o‡èbÀ " << 
ödex
->
èbÀ
->
«me
 << " which contains only "

107 << 
ödex
->
n_fõlds
 << " fields";

108 
	`ut_ad
(0);

111 
ödex
->
	`gë_cﬁ
(
fõld_no
)->
	`c›y_ty≥
(
	`dfõld_gë_ty≥
(&
upd_fõld
->
√w_vÆ
));

112 
	}
}

118 
UNIV_INLINE


119 
	$upd_fõld_£t_v_fõld_no
(
upd_fõld_t
 *
upd_fõld
, 
ulöt
 
fõld_no
,

120 c⁄° 
di˘_ödex_t
 *
ödex
) {

121 
upd_fõld
->
fõld_no
 = field_no;

122 
upd_fõld
->
‹ig_Àn
 = 0;

124 i‡(
fõld_no
 >
	`di˘_èbÀ_gë_n_v_cﬁs
(
ödex
->
èbÀ
)) {

125 
ib
::
	`îr‹
(
ER_IB_MSG_629
Ë<< "ÅryögÅÿac˚s†vútuÆ fõld " << 
fõld_no


126 << " i¿" << 
ödex
->
«me
 << " ofÅable "

127 << 
ödex
->
èbÀ
->
«me
 << " which contains only "

128 << 
ödex
->
èbÀ
->
n_v_cﬁs
 << " virutal columns";

129 
	`ut_ad
(0);

132 
	`di˘_èbÀ_gë_¡h_v_cﬁ
(
ödex
->
èbÀ
, 
fõld_no
)

133 ->
m_cﬁ
.
	`c›y_ty≥
(
	`dfõld_gë_ty≥
(&
upd_fõld
->
√w_vÆ
));

134 
	}
}

138 
UNIV_INLINE


139 c⁄° 
upd_fõld_t
 *
	$upd_gë_fõld_by_fõld_no
(

140 c⁄° 
upd_t
 *
upd©e
,

141 
ulöt
 
no
,

142 
boﬁ
 
is_vútuÆ
)

144 
ulöt
 
i
;

145 
i
 = 0; i < 
	`upd_gë_n_fõlds
(
upd©e
); i++) {

146 c⁄° 
upd_fõld_t
 *
uf
 = 
	`upd_gë_¡h_fõld
(
upd©e
, 
i
);

149 i‡((!
is_vútuÆ
Ë!(!
	`upd_Êd_is_vútuÆ_cﬁ
(
uf
))) {

153 i‡(
uf
->
fõld_no
 =
no
) {

154  (
uf
);

158  (
nuŒ±r
);

159 
	}
}

161 #i‚de‡
UNIV_HOTBACKUP


164 
UNIV_INLINE


165 
	$row_upd_ªc_sys_fõlds
(

166 
ªc_t
 *
ªc
,

167 
∑ge_zù_des_t
 *
∑ge_zù
,

169 c⁄° 
di˘_ödex_t
 *
ödex
,

170 c⁄° 
ulöt
 *
off£ts
,

171 c⁄° 
åx_t
 *
åx
,

172 
rﬁl_±r_t
 
rﬁl_±r
)

175 
	`ut_ad
(
ödex
->
	`is_˛u°îed
());

176 
	`ut_ad
(
	`ªc_offs_vÆid©e
(
ªc
, 
ödex
, 
off£ts
));

178 i‡(
∑ge_zù
) {

179 
ulöt
 
pos
 = 
ödex
->
	`gë_sys_cﬁ_pos
(
DATA_TRX_ID
);

180 
	`∑ge_zù_wrôe_åx_id_™d_rﬁl_±r
(
∑ge_zù
, 
ªc
, 
off£ts
, 
pos
, 
åx
->
id
,

181 
rﬁl_±r
);

183 
ulöt
 
off£t
 = 
ödex
->
åx_id_off£t
;

185 i‡(!
off£t
) {

186 
off£t
 = 
	`row_gë_åx_id_off£t
(
ödex
, 
off£ts
);

193 
	`ut_ad
(
rﬁl_±r
 == 0 ||

194 
	`lock_check_åx_id_ßnôy
(
	`åx_ªad_åx_id
(
ªc
 + 
off£t
),Ñec, 
ödex
,

195 
off£ts
));

197 
	`åx_wrôe_åx_id
(
ªc
 + 
off£t
, 
åx
->
id
);

198 
	`åx_wrôe_rﬁl_±r
(
ªc
 + 
off£t
 + 
DATA_TRX_ID_LEN
, 
rﬁl_±r
);

200 
	}
}

	@row0vers.h

33 #i‚de‡
row0vîs_h


34 
	#row0vîs_h


	)

36 
	~"d©a0d©a.h
"

37 
	~"di˘0mem.h
"

38 
	~"di˘0ty≥s.h
"

39 
	~"lob0undo.h
"

40 
	~"må0må.h
"

41 
	~"que0ty≥s.h
"

42 
	~"ªm0ty≥s.h
"

43 
	~"åx0ty≥s.h
"

44 
	~"univ.i
"

47 
˛ass
 
	gRódVõw
;

59 
åx_t
 *
row_vîs_im∂_x_locked
(c⁄° 
ªc_t
 *
ªc
, c⁄° 
di˘_ödex_t
 *
ödex
,

60 c⁄° 
ulöt
 *
off£ts
);

70 
iboﬁ
 
row_vîs_mu°_¥e£rve_dñ_m¨ked
(
åx_id_t
 
åx_id
,

71 c⁄° 
èbÀ_«me_t
 &
«me
, 
må_t
 *
må
);

79 
iboﬁ
 
row_vîs_ﬁd_has_ödex_íåy
(

80 
iboﬁ
 
Æso_cuº
,

83 c⁄° 
ªc_t
 *
ªc
,

85 
må_t
 *
må
,

87 
di˘_ödex_t
 *
ödex
,

88 c⁄° 
dtu∂e_t
 *
õ¡ry
,

89 
rﬁl_±r_t
 
rﬁl_±r
,

90 
åx_id_t
 
åx_id
);

114 
dbîr_t
 
row_vîs_buûd_f‹_c⁄si°ít_ªad
(

115 c⁄° 
ªc_t
 *
ªc
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
, 
ulöt
 **
off£ts
,

116 
RódVõw
 *
võw
, 
mem_hóp_t
 **
off£t_hóp
, mem_hóp_à*
ö_hóp
,

117 
ªc_t
 **
ﬁd_vîs
, c⁄° 
dtu∂e_t
 **
vrow
, 
lob
::
undo_vîs_t
 *
lob_undo
);

134 
row_vîs_buûd_f‹_£mi_c⁄si°ít_ªad
(

135 c⁄° 
ªc_t
 *
ªc
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
, 
ulöt
 **
off£ts
,

136 
mem_hóp_t
 **
off£t_hóp
, mem_hóp_à*
ö_hóp
, c⁄° 
ªc_t
 **
ﬁd_vîs
,

137 c⁄° 
dtu∂e_t
 **
vrow
);

139 
	~"row0vîs.ic
"

	@row0vers.ic

33 
	~"di˘0di˘.h
"

34 
	~"log0ªcv.h
"

35 
	~"∑ge0∑ge.h
"

36 
	~"ªad0ªad.h
"

37 
	~"row0row.h
"

	@sess0sess.h

34 #i‚de‡
£ss0£ss_h


35 
	#£ss0£ss_h


	)

37 
	~<sql_thd_öã∫Æ_≠i.h
>

38 
	~"di˘0mem.h
"

39 
	~"log0meb.h
"

40 
	~"§v0tmp.h
"

41 
	~"åx0åx.h
"

42 
	~"univ.i
"

43 
	~"ut0√w.h
"

45 
	~<m≠
>

47 ˛as†
	cdi˘_öåösic_èbÀ_t
 {

48 
	mpublic
:

51 
	$di˘_öåösic_èbÀ_t
(
di˘_èbÀ_t
 *
h™dÀr
Ë: 
	$m_h™dÀr
(
h™dÀr
) {

56 ~
	$di˘_öåösic_èbÀ_t
(Ë{ 
m_h™dÀr
 = 
nuŒ±r
; 
	}
}

58 
	gpublic
:

61 
di˘_èbÀ_t
 *
m_h™dÀr
;

65 
	g°d
::
	tm≠
<

66 
	t°d
::
	t°rög
, 
	tdi˘_öåösic_èbÀ_t
 *, std::
	tÀss
<std::string>,

67 
	tut_Æloˇt‹
<
	t°d
::
	t∑ú
<c⁄° std::
	t°rög
, 
	tdi˘_öåösic_èbÀ_t
 *>>>

68 
	tèbÀ_ˇche_t
;

70 ˛as†
	cönodb_£ssi⁄_t
 {

71 
	mpublic
:

73 
	$önodb_£ssi⁄_t
()

74 : 
	`m_åx
(), 
	`m_›í_èbÀs
(), 
	`m_u§_ãmp_tbl•
(), 
	$m_öåösic_ãmp_tbl•
() {

79 ~
	$önodb_£ssi⁄_t
() {

80 
m_åx
 = 
nuŒ±r
;

82 
èbÀ_ˇche_t
::
ôî©‹
 
ô
 = 
m_›í_èbÀs
.
	`begö
();

83 
ô
 !
m_›í_èbÀs
.
	`íd
(); ++it) {

84 
	`dñëe
 (
ô
->
£c⁄d
);

87 
meb
::
	`ªdo_log_¨chive_£ssi⁄_íd
(
this
);

89 i‡(
m_u§_ãmp_tbl•
 !
nuŒ±r
) {

90 
ibt
::
	`‰ì_tmp
(
m_u§_ãmp_tbl•
);

93 i‡(
m_öåösic_ãmp_tbl•
 !
nuŒ±r
) {

94 
ibt
::
	`‰ì_tmp
(
m_öåösic_ãmp_tbl•
);

96 
	}
}

101 
	$ªgi°î_èbÀ_h™dÀr
(c⁄° *
èbÀ_«me
, 
di˘_èbÀ_t
 *
èbÀ
) {

102 
	`ut_ad
(
	`lookup_èbÀ_h™dÀr
(
èbÀ_«me
Ë=
nuŒ±r
);

103 
m_›í_èbÀs
.
	`ö£π
(
èbÀ_ˇche_t
::
	`vÆue_ty≥
(

104 
èbÀ_«me
, 
√w
 
	`di˘_öåösic_èbÀ_t
(
èbÀ
)));

105 
	}
}

109 
di˘_èbÀ_t
 *
	$lookup_èbÀ_h™dÀr
(c⁄° *
èbÀ_«me
) {

110 
èbÀ_ˇche_t
::
ôî©‹
 
ô
 = 
m_›í_èbÀs
.
	`föd
(
èbÀ_«me
);

111  ((
ô
 =
m_›í_èbÀs
.
	`íd
()Ë? 
nuŒ±r
 : it->
£c⁄d
->
m_h™dÀr
);

112 
	}
}

116 
	$uƒegi°î_èbÀ_h™dÀr
(c⁄° *
èbÀ_«me
) {

117 
èbÀ_ˇche_t
::
ôî©‹
 
ô
 = 
m_›í_èbÀs
.
	`föd
(
èbÀ_«me
);

118 i‡(
ô
 =
m_›í_èbÀs
.
	`íd
()) {

122 
	`dñëe
 (
ô
->
£c⁄d
);

123 
m_›í_èbÀs
.
	`îa£
(
èbÀ_«me
);

124 
	}
}

128 
uöt
 
	$cou¡_ªgi°î_èbÀ_h™dÀr
() const {

129  (
°©ic_ˇ°
<
uöt
>(
m_›í_èbÀs
.
	`size
()));

130 
	}
}

132 
	gibt
::
TabÀ•a˚
 *
	$gë_u§_ãmp_tbl•
() {

133 i‡(
m_u§_ãmp_tbl•
 =
nuŒ±r
) {

134 
my_thªad_id
 
id
 = 
	`thd_thªad_id
(
m_åx
->
mysql_thd
);

135 
m_u§_ãmp_tbl•
 = 
ibt
::
tb•_poﬁ
->
	`gë
(
id
, ibt::
TBSP_USER
);

138  (
m_u§_ãmp_tbl•
);

139 
	}
}

141 
	gibt
::
TabÀ•a˚
 *
	$gë_ö°rösic_ãmp_tbl•
() {

142 i‡(
m_öåösic_ãmp_tbl•
 =
nuŒ±r
) {

143 
my_thªad_id
 
id
 = 
	`thd_thªad_id
(
m_åx
->
mysql_thd
);

144 
m_öåösic_ãmp_tbl•
 = 
ibt
::
tb•_poﬁ
->
	`gë
(
id
, ibt::
TBSP_INTRINSIC
);

147  (
m_öåösic_ãmp_tbl•
);

148 
	}
}

150 
	gpublic
:

152 
åx_t
 *
m_åx
;

157 
èbÀ_ˇche_t
 
	gm_›í_èbÀs
;

159 
	g¥iv©e
:

161 
ibt
::
TabÀ•a˚
 *
m_u§_ãmp_tbl•
;

164 
	gibt
::
TabÀ•a˚
 *
m_öåösic_ãmp_tbl•
;

	@srv0conc.h

47 #i‚de‡
§v_c⁄c_h


48 
	#§v_c⁄c_h


	)

54 
uöt32_t
 
§v_max_n_thªads
;

60 
ul⁄g
 
§v_thªad_c⁄cuºícy
;

62 
	grow_¥ebuût_t
;

67 
dbîr_t
 
§v_c⁄c_íãr_önodb
(
row_¥ebuût_t
 *
¥ebuût
);

71 
§v_c⁄c_f‹˚_íãr_önodb
(
åx_t
 *
åx
);

76 
§v_c⁄c_f‹˚_exô_önodb
(
åx_t
 *
åx
);

80 
öt32_t
 
§v_c⁄c_gë_waôög_thªads
();

83 
öt32_t
 
§v_c⁄c_gë_a˘ive_thªads
();

	@srv0mon.h

34 #i‚de‡
§v0m⁄_h


35 
	#§v0m⁄_h


	)

37 
	~"univ.i
"

39 #i‚de‡
__STDC_LIMIT_MACROS


41 
	#__STDC_LIMIT_MACROS


	)

44 
	~<°döt.h
>

47 
	em⁄ô‹_ru¬ög_°©us
 {

48 
	mMONITOR_STARTED
 = 1,

49 
	mMONITOR_STOPPED
 = 2

52 
m⁄ô‹_ru¬ög_°©us
 
	tm⁄ô‹_ru¬ög_t
;

55 
öt64_t
 
	tm⁄_ty≥_t
;

70 
	sm⁄ô‹_vÆue_t
 {

71 
ib_time_t
 
	mm⁄_°¨t_time
;

72 
ib_time_t
 
	mm⁄_°›_time
;

73 
ib_time_t
 
	mm⁄_ª£t_time
;

74 
	m°d
::
©omic
<
m⁄_ty≥_t
> 
m⁄_vÆue
;

75 
m⁄_ty≥_t
 
	mm⁄_max_vÆue
;

76 
m⁄_ty≥_t
 
	mm⁄_mö_vÆue
;

77 
m⁄_ty≥_t
 
	mm⁄_vÆue_ª£t
;

78 
m⁄_ty≥_t
 
	mm⁄_max_vÆue_°¨t
;

79 
m⁄_ty≥_t
 
	mm⁄_mö_vÆue_°¨t
;

80 
m⁄_ty≥_t
 
	mm⁄_°¨t_vÆue
;

81 
m⁄_ty≥_t
 
	mm⁄_œ°_vÆue
;

82 
m⁄ô‹_ru¬ög_t
 
	mm⁄_°©us
;

87 
	em⁄ô‹_ty≥_t
 {

88 
	mMONITOR_NONE
 = 0,

89 
	mMONITOR_MODULE
 = 1,

91 
	mMONITOR_EXISTING
 = 2,

93 
	mMONITOR_NO_AVERAGE
 = 4,

95 
	mMONITOR_DISPLAY_CURRENT
 = 8,

99 
	mMONITOR_GROUP_MODULE
 = 16,

101 
	mMONITOR_DEFAULT_ON
 = 32,

103 
	mMONITOR_SET_OWNER
 = 64,

105 
	mMONITOR_SET_MEMBER
 = 128,

106 
	mMONITOR_HIDDEN
 = 256

112 
	#MIN_RESERVED
 
INT64_MAX


	)

113 
	#MAX_RESERVED
 (~
MIN_RESERVED
)

	)

128 
	em⁄ô‹_id_t
 {

131 
	mMONITOR_DEFAULT_START
 = 0,

134 
	mMONITOR_MODULE_METADATA
,

135 
	mMONITOR_TABLE_OPEN
,

136 
	mMONITOR_TABLE_CLOSE
,

137 
	mMONITOR_TABLE_REFERENCE
,

140 
	mMONITOR_MODULE_LOCK
,

141 
	mMONITOR_DEADLOCK
,

142 
	mMONITOR_DEADLOCK_FALSE_POSITIVES
,

143 
	mMONITOR_DEADLOCK_ROUNDS
,

144 
	mMONITOR_LOCK_THREADS_WAITING
,

145 
	mMONITOR_TIMEOUT
,

146 
	mMONITOR_LOCKREC_WAIT
,

147 
	mMONITOR_TABLELOCK_WAIT
,

148 
	mMONITOR_NUM_RECLOCK_REQ
,

149 
	mMONITOR_RECLOCK_RELEASE_ATTEMPTS
,

150 
	mMONITOR_RECLOCK_GRANT_ATTEMPTS
,

151 
	mMONITOR_RECLOCK_CREATED
,

152 
	mMONITOR_RECLOCK_REMOVED
,

153 
	mMONITOR_NUM_RECLOCK
,

154 
	mMONITOR_TABLELOCK_CREATED
,

155 
	mMONITOR_TABLELOCK_REMOVED
,

156 
	mMONITOR_NUM_TABLELOCK
,

157 
	mMONITOR_OVLD_ROW_LOCK_CURRENT_WAIT
,

158 
	mMONITOR_OVLD_LOCK_WAIT_TIME
,

159 
	mMONITOR_OVLD_LOCK_MAX_WAIT_TIME
,

160 
	mMONITOR_OVLD_ROW_LOCK_WAIT
,

161 
	mMONITOR_OVLD_LOCK_AVG_WAIT_TIME
,

162 
	mMONITOR_SCHEDULE_REFRESHES
,

165 
	mMONITOR_MODULE_BUFFER
,

166 
	mMONITOR_OVLD_BUFFER_POOL_SIZE
,

167 
	mMONITOR_OVLD_BUF_POOL_READS
,

168 
	mMONITOR_OVLD_BUF_POOL_READ_REQUESTS
,

169 
	mMONITOR_OVLD_BUF_POOL_WRITE_REQUEST
,

170 
	mMONITOR_OVLD_BUF_POOL_WAIT_FREE
,

171 
	mMONITOR_OVLD_BUF_POOL_READ_AHEAD
,

172 
	mMONITOR_OVLD_BUF_POOL_READ_AHEAD_EVICTED
,

173 
	mMONITOR_OVLD_BUF_POOL_PAGE_TOTAL
,

174 
	mMONITOR_OVLD_BUF_POOL_PAGE_MISC
,

175 
	mMONITOR_OVLD_BUF_POOL_PAGES_DATA
,

176 
	mMONITOR_OVLD_BUF_POOL_BYTES_DATA
,

177 
	mMONITOR_OVLD_BUF_POOL_PAGES_DIRTY
,

178 
	mMONITOR_OVLD_BUF_POOL_BYTES_DIRTY
,

179 
	mMONITOR_OVLD_BUF_POOL_PAGES_FREE
,

180 
	mMONITOR_OVLD_PAGE_CREATED
,

181 
	mMONITOR_OVLD_PAGES_WRITTEN
,

182 
	mMONITOR_OVLD_PAGES_READ
,

183 
	mMONITOR_OVLD_BYTE_READ
,

184 
	mMONITOR_OVLD_BYTE_WRITTEN
,

185 
	mMONITOR_FLUSH_BATCH_SCANNED
,

186 
	mMONITOR_FLUSH_BATCH_SCANNED_NUM_CALL
,

187 
	mMONITOR_FLUSH_BATCH_SCANNED_PER_CALL
,

188 
	mMONITOR_FLUSH_BATCH_TOTAL_PAGE
,

189 
	mMONITOR_FLUSH_BATCH_COUNT
,

190 
	mMONITOR_FLUSH_BATCH_PAGES
,

191 
	mMONITOR_FLUSH_NEIGHBOR_TOTAL_PAGE
,

192 
	mMONITOR_FLUSH_NEIGHBOR_COUNT
,

193 
	mMONITOR_FLUSH_NEIGHBOR_PAGES
,

194 
	mMONITOR_FLUSH_N_TO_FLUSH_REQUESTED
,

195 
	mMONITOR_FLUSH_N_TO_FLUSH_BY_DIRTY_PAGE
,

197 
	mMONITOR_FLUSH_N_TO_FLUSH_BY_AGE
,

198 
	mMONITOR_FLUSH_ADAPTIVE_AVG_TIME_SLOT
,

199 
	mMONITOR_LRU_BATCH_FLUSH_AVG_TIME_SLOT
,

201 
	mMONITOR_FLUSH_ADAPTIVE_AVG_TIME_THREAD
,

202 
	mMONITOR_LRU_BATCH_FLUSH_AVG_TIME_THREAD
,

203 
	mMONITOR_FLUSH_ADAPTIVE_AVG_TIME_EST
,

204 
	mMONITOR_LRU_BATCH_FLUSH_AVG_TIME_EST
,

205 
	mMONITOR_FLUSH_AVG_TIME
,

207 
	mMONITOR_FLUSH_ADAPTIVE_AVG_PASS
,

208 
	mMONITOR_LRU_BATCH_FLUSH_AVG_PASS
,

209 
	mMONITOR_FLUSH_AVG_PASS
,

211 
	mMONITOR_LRU_GET_FREE_LOOPS
,

212 
	mMONITOR_LRU_GET_FREE_WAITS
,

214 
	mMONITOR_FLUSH_AVG_PAGE_RATE
,

215 
	mMONITOR_FLUSH_LSN_AVG_RATE
,

216 
	mMONITOR_FLUSH_PCT_FOR_DIRTY
,

217 
	mMONITOR_FLUSH_PCT_FOR_LSN
,

218 
	mMONITOR_FLUSH_SYNC_WAITS
,

219 
	mMONITOR_FLUSH_ADAPTIVE_TOTAL_PAGE
,

220 
	mMONITOR_FLUSH_ADAPTIVE_COUNT
,

221 
	mMONITOR_FLUSH_ADAPTIVE_PAGES
,

222 
	mMONITOR_FLUSH_SYNC_TOTAL_PAGE
,

223 
	mMONITOR_FLUSH_SYNC_COUNT
,

224 
	mMONITOR_FLUSH_SYNC_PAGES
,

225 
	mMONITOR_FLUSH_BACKGROUND_TOTAL_PAGE
,

226 
	mMONITOR_FLUSH_BACKGROUND_COUNT
,

227 
	mMONITOR_FLUSH_BACKGROUND_PAGES
,

228 
	mMONITOR_LRU_BATCH_SCANNED
,

229 
	mMONITOR_LRU_BATCH_SCANNED_NUM_CALL
,

230 
	mMONITOR_LRU_BATCH_SCANNED_PER_CALL
,

231 
	mMONITOR_LRU_BATCH_FLUSH_TOTAL_PAGE
,

232 
	mMONITOR_LRU_BATCH_FLUSH_COUNT
,

233 
	mMONITOR_LRU_BATCH_FLUSH_PAGES
,

234 
	mMONITOR_LRU_BATCH_EVICT_TOTAL_PAGE
,

235 
	mMONITOR_LRU_BATCH_EVICT_COUNT
,

236 
	mMONITOR_LRU_BATCH_EVICT_PAGES
,

237 
	mMONITOR_LRU_SINGLE_FLUSH_SCANNED
,

238 
	mMONITOR_LRU_SINGLE_FLUSH_SCANNED_NUM_CALL
,

239 
	mMONITOR_LRU_SINGLE_FLUSH_SCANNED_PER_CALL
,

240 
	mMONITOR_LRU_SINGLE_FLUSH_FAILURE_COUNT
,

241 
	mMONITOR_LRU_GET_FREE_SEARCH
,

242 
	mMONITOR_LRU_SEARCH_SCANNED
,

243 
	mMONITOR_LRU_SEARCH_SCANNED_NUM_CALL
,

244 
	mMONITOR_LRU_SEARCH_SCANNED_PER_CALL
,

245 
	mMONITOR_LRU_UNZIP_SEARCH_SCANNED
,

246 
	mMONITOR_LRU_UNZIP_SEARCH_SCANNED_NUM_CALL
,

247 
	mMONITOR_LRU_UNZIP_SEARCH_SCANNED_PER_CALL
,

250 
	mMONITOR_MODULE_BUF_PAGE
,

251 
	mMONITOR_INDEX_LEAF_PAGE_READ
,

252 
	mMONITOR_INDEX_NON_LEAF_PAGE_READ
,

253 
	mMONITOR_INDEX_IBUF_LEAF_PAGE_READ
,

254 
	mMONITOR_INDEX_IBUF_NON_LEAF_PAGE_READ
,

255 
	mMONITOR_UNDO_LOG_PAGE_READ
,

256 
	mMONITOR_INODE_PAGE_READ
,

257 
	mMONITOR_IBUF_FREELIST_PAGE_READ
,

258 
	mMONITOR_IBUF_BITMAP_PAGE_READ
,

259 
	mMONITOR_SYSTEM_PAGE_READ
,

260 
	mMONITOR_TRX_SYSTEM_PAGE_READ
,

261 
	mMONITOR_FSP_HDR_PAGE_READ
,

262 
	mMONITOR_XDES_PAGE_READ
,

263 
	mMONITOR_BLOB_PAGE_READ
,

264 
	mMONITOR_ZBLOB_PAGE_READ
,

265 
	mMONITOR_ZBLOB2_PAGE_READ
,

266 
	mMONITOR_RSEG_ARRAY_PAGE_READ
,

267 
	mMONITOR_OTHER_PAGE_READ
,

268 
	mMONITOR_INDEX_LEAF_PAGE_WRITTEN
,

269 
	mMONITOR_INDEX_NON_LEAF_PAGE_WRITTEN
,

270 
	mMONITOR_INDEX_IBUF_LEAF_PAGE_WRITTEN
,

271 
	mMONITOR_INDEX_IBUF_NON_LEAF_PAGE_WRITTEN
,

272 
	mMONITOR_UNDO_LOG_PAGE_WRITTEN
,

273 
	mMONITOR_INODE_PAGE_WRITTEN
,

274 
	mMONITOR_IBUF_FREELIST_PAGE_WRITTEN
,

275 
	mMONITOR_IBUF_BITMAP_PAGE_WRITTEN
,

276 
	mMONITOR_SYSTEM_PAGE_WRITTEN
,

277 
	mMONITOR_TRX_SYSTEM_PAGE_WRITTEN
,

278 
	mMONITOR_FSP_HDR_PAGE_WRITTEN
,

279 
	mMONITOR_XDES_PAGE_WRITTEN
,

280 
	mMONITOR_BLOB_PAGE_WRITTEN
,

281 
	mMONITOR_ZBLOB_PAGE_WRITTEN
,

282 
	mMONITOR_ZBLOB2_PAGE_WRITTEN
,

283 
	mMONITOR_RSEG_ARRAY_PAGE_WRITTEN
,

284 
	mMONITOR_OTHER_PAGE_WRITTEN
,

285 
	mMONITOR_ON_LOG_NO_WAITS_PAGE_WRITTEN
,

286 
	mMONITOR_ON_LOG_WAITS_PAGE_WRITTEN
,

287 
	mMONITOR_ON_LOG_WAIT_LOOPS_PAGE_WRITTEN
,

290 
	mMONITOR_MODULE_OS
,

291 
	mMONITOR_OVLD_OS_FILE_READ
,

292 
	mMONITOR_OVLD_OS_FILE_WRITE
,

293 
	mMONITOR_OVLD_OS_FSYNC
,

294 
	mMONITOR_OS_PENDING_READS
,

295 
	mMONITOR_OS_PENDING_WRITES
,

296 
	mMONITOR_OVLD_OS_LOG_WRITTEN
,

297 
	mMONITOR_OVLD_OS_LOG_FSYNC
,

298 
	mMONITOR_OVLD_OS_LOG_PENDING_FSYNC
,

299 
	mMONITOR_OVLD_OS_LOG_PENDING_WRITES
,

302 
	mMONITOR_MODULE_TRX
,

303 
	mMONITOR_TRX_RW_COMMIT
,

304 
	mMONITOR_TRX_RO_COMMIT
,

305 
	mMONITOR_TRX_NL_RO_COMMIT
,

306 
	mMONITOR_TRX_COMMIT_UNDO
,

307 
	mMONITOR_TRX_ROLLBACK
,

308 
	mMONITOR_TRX_ROLLBACK_SAVEPOINT
,

309 
	mMONITOR_TRX_ROLLBACK_ACTIVE
,

310 
	mMONITOR_TRX_ACTIVE
,

311 
	mMONITOR_TRX_ALLOCATIONS
,

312 
	mMONITOR_TRX_ON_LOG_NO_WAITS
,

313 
	mMONITOR_TRX_ON_LOG_WAITS
,

314 
	mMONITOR_TRX_ON_LOG_WAIT_LOOPS
,

315 
	mMONITOR_RSEG_HISTORY_LEN
,

316 
	mMONITOR_NUM_UNDO_SLOT_USED
,

317 
	mMONITOR_NUM_UNDO_SLOT_CACHED
,

318 
	mMONITOR_RSEG_CUR_SIZE
,

321 
	mMONITOR_MODULE_PURGE
,

322 
	mMONITOR_N_DEL_ROW_PURGE
,

323 
	mMONITOR_N_UPD_EXIST_EXTERN
,

324 
	mMONITOR_PURGE_INVOKED
,

325 
	mMONITOR_PURGE_N_PAGE_HANDLED
,

326 
	mMONITOR_DML_PURGE_DELAY
,

327 
	mMONITOR_PURGE_STOP_COUNT
,

328 
	mMONITOR_PURGE_RESUME_COUNT
,

329 
	mMONITOR_PURGE_TRUNCATE_HISTORY_COUNT
,

330 
	mMONITOR_PURGE_TRUNCATE_HISTORY_MICROSECOND
,

333 
	mMONITOR_UNDO_TRUNCATE
,

334 
	mMONITOR_UNDO_TRUNCATE_COUNT
,

335 
	mMONITOR_UNDO_TRUNCATE_START_LOGGING_COUNT
,

336 
	mMONITOR_UNDO_TRUNCATE_DONE_LOGGING_COUNT
,

337 
	mMONITOR_UNDO_TRUNCATE_MICROSECOND
,

340 
	mMONITOR_MODULE_REDO_LOG
,

341 
	mMONITOR_OVLD_LSN_FLUSHDISK
,

342 
	mMONITOR_OVLD_LSN_CHECKPOINT
,

343 
	mMONITOR_OVLD_LSN_CURRENT
,

344 
	mMONITOR_OVLD_LSN_ARCHIVED
,

345 
	mMONITOR_OVLD_LSN_CHECKPOINT_AGE
,

346 
	mMONITOR_OVLD_LSN_BUF_DIRTY_PAGES_ADDED
,

347 
	mMONITOR_OVLD_BUF_OLDEST_LSN_APPROX
,

348 
	mMONITOR_OVLD_BUF_OLDEST_LSN_LWM
,

349 
	mMONITOR_OVLD_MAX_AGE_ASYNC
,

350 
	mMONITOR_OVLD_MAX_AGE_SYNC
,

351 
	mMONITOR_OVLD_LOG_WAITS
,

352 
	mMONITOR_OVLD_LOG_WRITE_REQUEST
,

353 
	mMONITOR_OVLD_LOG_WRITES
,

355 
	mMONITOR_LOG_FLUSH_TOTAL_TIME
,

356 
	mMONITOR_LOG_FLUSH_MAX_TIME
,

357 
	mMONITOR_LOG_FLUSH_AVG_TIME
,

358 
	mMONITOR_LOG_FLUSH_LSN_AVG_RATE
,

360 
	mMONITOR_LOG_FULL_BLOCK_WRITES
,

361 
	mMONITOR_LOG_PARTIAL_BLOCK_WRITES
,

362 
	mMONITOR_LOG_PADDED
,

363 
	mMONITOR_LOG_NEXT_FILE
,

364 
	mMONITOR_LOG_CHECKPOINTS
,

365 
	mMONITOR_LOG_FREE_SPACE
,

366 
	mMONITOR_LOG_CONCURRENCY_MARGIN
,

368 
	mMONITOR_LOG_WRITER_NO_WAITS
,

369 
	mMONITOR_LOG_WRITER_WAITS
,

370 
	mMONITOR_LOG_WRITER_WAIT_LOOPS
,

371 
	mMONITOR_LOG_WRITER_ON_FREE_SPACE_WAITS
,

372 
	mMONITOR_LOG_WRITER_ON_ARCHIVER_WAITS
,

374 
	mMONITOR_LOG_FLUSHER_NO_WAITS
,

375 
	mMONITOR_LOG_FLUSHER_WAITS
,

376 
	mMONITOR_LOG_FLUSHER_WAIT_LOOPS
,

378 
	mMONITOR_LOG_WRITE_NOTIFIER_NO_WAITS
,

379 
	mMONITOR_LOG_WRITE_NOTIFIER_WAITS
,

380 
	mMONITOR_LOG_WRITE_NOTIFIER_WAIT_LOOPS
,

382 
	mMONITOR_LOG_FLUSH_NOTIFIER_NO_WAITS
,

383 
	mMONITOR_LOG_FLUSH_NOTIFIER_WAITS
,

384 
	mMONITOR_LOG_FLUSH_NOTIFIER_WAIT_LOOPS
,

386 
	mMONITOR_LOG_WRITE_TO_FILE_REQUESTS_INTERVAL
,

388 
	mMONITOR_LOG_ON_WRITE_NO_WAITS
,

389 
	mMONITOR_LOG_ON_WRITE_WAITS
,

390 
	mMONITOR_LOG_ON_WRITE_WAIT_LOOPS
,

391 
	mMONITOR_LOG_ON_FLUSH_NO_WAITS
,

392 
	mMONITOR_LOG_ON_FLUSH_WAITS
,

393 
	mMONITOR_LOG_ON_FLUSH_WAIT_LOOPS
,

394 
	mMONITOR_LOG_ON_RECENT_WRITTEN_WAIT_LOOPS
,

395 
	mMONITOR_LOG_ON_RECENT_CLOSED_WAIT_LOOPS
,

396 
	mMONITOR_LOG_ON_BUFFER_SPACE_NO_WAITS
,

397 
	mMONITOR_LOG_ON_BUFFER_SPACE_WAITS
,

398 
	mMONITOR_LOG_ON_BUFFER_SPACE_WAIT_LOOPS
,

399 
	mMONITOR_LOG_ON_FILE_SPACE_NO_WAITS
,

400 
	mMONITOR_LOG_ON_FILE_SPACE_WAITS
,

401 
	mMONITOR_LOG_ON_FILE_SPACE_WAIT_LOOPS
,

404 
	mMONITOR_MODULE_PAGE
,

405 
	mMONITOR_PAGE_COMPRESS
,

406 
	mMONITOR_PAGE_DECOMPRESS
,

407 
	mMONITOR_PAD_INCREMENTS
,

408 
	mMONITOR_PAD_DECREMENTS
,

411 
	mMONITOR_MODULE_INDEX
,

412 
	mMONITOR_INDEX_SPLIT
,

413 
	mMONITOR_INDEX_MERGE_ATTEMPTS
,

414 
	mMONITOR_INDEX_MERGE_SUCCESSFUL
,

415 
	mMONITOR_INDEX_REORG_ATTEMPTS
,

416 
	mMONITOR_INDEX_REORG_SUCCESSFUL
,

417 
	mMONITOR_INDEX_DISCARD
,

420 
	mMONITOR_MODULE_ADAPTIVE_HASH
,

421 
	mMONITOR_OVLD_ADAPTIVE_HASH_SEARCH
,

422 
	mMONITOR_OVLD_ADAPTIVE_HASH_SEARCH_BTREE
,

423 
	mMONITOR_ADAPTIVE_HASH_PAGE_ADDED
,

424 
	mMONITOR_ADAPTIVE_HASH_PAGE_REMOVED
,

425 
	mMONITOR_ADAPTIVE_HASH_ROW_ADDED
,

426 
	mMONITOR_ADAPTIVE_HASH_ROW_REMOVED
,

427 
	mMONITOR_ADAPTIVE_HASH_ROW_REMOVE_NOT_FOUND
,

428 
	mMONITOR_ADAPTIVE_HASH_ROW_UPDATED
,

431 
	mMONITOR_MODULE_FIL_SYSTEM
,

432 
	mMONITOR_OVLD_N_FILE_OPENED
,

435 
	mMONITOR_MODULE_IBUF_SYSTEM
,

436 
	mMONITOR_OVLD_IBUF_MERGE_INSERT
,

437 
	mMONITOR_OVLD_IBUF_MERGE_DELETE
,

438 
	mMONITOR_OVLD_IBUF_MERGE_PURGE
,

439 
	mMONITOR_OVLD_IBUF_MERGE_DISCARD_INSERT
,

440 
	mMONITOR_OVLD_IBUF_MERGE_DISCARD_DELETE
,

441 
	mMONITOR_OVLD_IBUF_MERGE_DISCARD_PURGE
,

442 
	mMONITOR_OVLD_IBUF_MERGES
,

443 
	mMONITOR_OVLD_IBUF_SIZE
,

446 
	mMONITOR_MODULE_SERVER
,

447 
	mMONITOR_MASTER_THREAD_SLEEP
,

448 
	mMONITOR_OVLD_SERVER_ACTIVITY
,

449 
	mMONITOR_MASTER_ACTIVE_LOOPS
,

450 
	mMONITOR_MASTER_IDLE_LOOPS
,

451 
	mMONITOR_SRV_BACKGROUND_DROP_TABLE_MICROSECOND
,

452 
	mMONITOR_SRV_IBUF_MERGE_MICROSECOND
,

453 
	mMONITOR_SRV_MEM_VALIDATE_MICROSECOND
,

454 
	mMONITOR_SRV_PURGE_MICROSECOND
,

455 
	mMONITOR_SRV_DICT_LRU_MICROSECOND
,

456 
	mMONITOR_SRV_DICT_LRU_EVICT_COUNT
,

457 
	mMONITOR_OVLD_SRV_DBLWR_WRITES
,

458 
	mMONITOR_OVLD_SRV_DBLWR_PAGES_WRITTEN
,

459 
	mMONITOR_OVLD_SRV_PAGE_SIZE
,

460 
	mMONITOR_OVLD_RWLOCK_S_SPIN_WAITS
,

461 
	mMONITOR_OVLD_RWLOCK_X_SPIN_WAITS
,

462 
	mMONITOR_OVLD_RWLOCK_SX_SPIN_WAITS
,

463 
	mMONITOR_OVLD_RWLOCK_S_SPIN_ROUNDS
,

464 
	mMONITOR_OVLD_RWLOCK_X_SPIN_ROUNDS
,

465 
	mMONITOR_OVLD_RWLOCK_SX_SPIN_ROUNDS
,

466 
	mMONITOR_OVLD_RWLOCK_S_OS_WAITS
,

467 
	mMONITOR_OVLD_RWLOCK_X_OS_WAITS
,

468 
	mMONITOR_OVLD_RWLOCK_SX_OS_WAITS
,

471 
	mMONITOR_MODULE_DML_STATS
,

472 
	mMONITOR_OLVD_ROW_READ
,

473 
	mMONITOR_OLVD_ROW_INSERTED
,

474 
	mMONITOR_OLVD_ROW_DELETED
,

475 
	mMONITOR_OLVD_ROW_UPDTATED
,

476 
	mMONITOR_OLVD_SYSTEM_ROW_READ
,

477 
	mMONITOR_OLVD_SYSTEM_ROW_INSERTED
,

478 
	mMONITOR_OLVD_SYSTEM_ROW_DELETED
,

479 
	mMONITOR_OLVD_SYSTEM_ROW_UPDATED
,

482 
	mMONITOR_MODULE_SAMPLING_STATS
,

483 
	mMONITOR_SAMPLED_PAGES_READ
,

484 
	mMONITOR_SAMPLED_PAGES_SKIPPED
,

487 
	mMONITOR_MODULE_DDL_STATS
,

488 
	mMONITOR_BACKGROUND_DROP_TABLE
,

489 
	mMONITOR_ONLINE_CREATE_INDEX
,

490 
	mMONITOR_PENDING_ALTER_TABLE
,

491 
	mMONITOR_ALTER_TABLE_SORT_FILES
,

492 
	mMONITOR_ALTER_TABLE_LOG_FILES
,

494 
	mMONITOR_MODULE_ICP
,

495 
	mMONITOR_ICP_ATTEMPTS
,

496 
	mMONITOR_ICP_NO_MATCH
,

497 
	mMONITOR_ICP_OUT_OF_RANGE
,

498 
	mMONITOR_ICP_MATCH
,

501 
	mMONITOR_MODULE_LATCHES
,

502 
	mMONITOR_LATCHES
,

505 
	mMONITOR_MODULE_CPU
,

506 
	mMONITOR_CPU_UTIME_ABS
,

507 
	mMONITOR_CPU_STIME_ABS
,

508 
	mMONITOR_CPU_UTIME_PCT
,

509 
	mMONITOR_CPU_STIME_PCT
,

510 
	mMONITOR_CPU_N
,

512 
	mMONITOR_MODULE_PAGE_TRACK
,

513 
	mMONITOR_PAGE_TRACK_RESETS
,

514 
	mMONITOR_PAGE_TRACK_PARTIAL_BLOCK_WRITES
,

515 
	mMONITOR_PAGE_TRACK_FULL_BLOCK_WRITES
,

516 
	mMONITOR_PAGE_TRACK_CHECKPOINT_PARTIAL_FLUSH_REQUEST
,

518 
	mMONITOR_MODULE_DBLWR
,

519 
	mMONITOR_DBLWR_ASYNC_REQUESTS
,

520 
	mMONITOR_DBLWR_SYNC_REQUESTS
,

521 
	mMONITOR_DBLWR_FLUSH_REQUESTS
,

522 
	mMONITOR_DBLWR_FLUSH_WAIT_EVENTS
,

526 
	mMONITOR_ALL_COUNTER
,

529 
	mNUM_MONITOR


534 
	#MONITOR_WILDCARD_MATCH
 (
NUM_MONITOR
 + 1)

	)

537 
	#MONITOR_NO_MATCH
 (
NUM_MONITOR
 + 2)

	)

541 
	sm⁄ô‹_öfo_t
 {

542 c⁄° *
	mm⁄ô‹_«me
;

543 c⁄° *
	mm⁄ô‹_moduÀ
;

545 c⁄° *
	mm⁄ô‹_desc
;

546 
m⁄ô‹_ty≥_t
 
	mm⁄ô‹_ty≥
;

547 
m⁄ô‹_id_t
 
	mm⁄ô‹_ªœãd_id
;

551 
m⁄ô‹_id_t
 
	mm⁄ô‹_id
;

558 
	em⁄_›ti⁄_t
 {

559 
	mMONITOR_TURN_ON
 = 1,

560 
	mMONITOR_TURN_OFF
,

561 
	mMONITOR_RESET_VALUE
,

562 
	mMONITOR_RESET_ALL_VALUE
,

563 
	mMONITOR_GET_VALUE


568 #i‚de‡
UNIV_HOTBACKUP


570 
	#NUM_BITS_ULINT
 ((
ulöt
Ë* 
CHAR_BIT
)

	)

574 
ulöt


575 
m⁄ô‹_£t_tbl
[(
NUM_MONITOR
 + 
NUM_BITS_ULINT
 - 1) / NUM_BITS_ULINT];

579 
	#MONITOR_ON
(
m⁄ô‹
) \

580 (
m⁄ô‹_£t_tbl
[
m⁄ô‹
 / 
NUM_BITS_ULINT
] |= \

581 ((
ulöt
)1 << (
m⁄ô‹
 % 
NUM_BITS_ULINT
)))

	)

583 
	#MONITOR_OFF
(
m⁄ô‹
) \

584 (
m⁄ô‹_£t_tbl
[
m⁄ô‹
 / 
NUM_BITS_ULINT
] &= \

585 ~((
ulöt
)1 << (
m⁄ô‹
 % 
NUM_BITS_ULINT
)))

	)

588 
	#MONITOR_IS_ON
(
m⁄ô‹
) \

589 (
m⁄ô‹_£t_tbl
[
m⁄ô‹
 / 
NUM_BITS_ULINT
] & \

590 ((
ulöt
)1 << (
m⁄ô‹
 % 
NUM_BITS_ULINT
)))

	)

594 
m⁄ô‹_vÆue_t
 
önodb_cou¡î_vÆue
[
NUM_MONITOR
];

603 
	#MONITOR_FIELD
(
m⁄ô‹
, 
fõld
Ë(
önodb_cou¡î_vÆue
[m⁄ô‹].fõld)

	)

605 
	#MONITOR_VALUE
(
m⁄ô‹
Ë
	`MONITOR_FIELD
(m⁄ô‹, 
m⁄_vÆue
)

	)

607 
	#MONITOR_MAX_VALUE
(
m⁄ô‹
Ë
	`MONITOR_FIELD
(m⁄ô‹, 
m⁄_max_vÆue
)

	)

609 
	#MONITOR_MIN_VALUE
(
m⁄ô‹
Ë
	`MONITOR_FIELD
(m⁄ô‹, 
m⁄_mö_vÆue
)

	)

611 
	#MONITOR_VALUE_RESET
(
m⁄ô‹
Ë
	`MONITOR_FIELD
(m⁄ô‹, 
m⁄_vÆue_ª£t
)

	)

613 
	#MONITOR_MAX_VALUE_START
(
m⁄ô‹
) \

614 
	`MONITOR_FIELD
(
m⁄ô‹
, 
m⁄_max_vÆue_°¨t
)

	)

616 
	#MONITOR_MIN_VALUE_START
(
m⁄ô‹
) \

617 
	`MONITOR_FIELD
(
m⁄ô‹
, 
m⁄_mö_vÆue_°¨t
)

	)

619 
	#MONITOR_LAST_VALUE
(
m⁄ô‹
Ë
	`MONITOR_FIELD
(m⁄ô‹, 
m⁄_œ°_vÆue
)

	)

621 
	#MONITOR_START_VALUE
(
m⁄ô‹
Ë
	`MONITOR_FIELD
(m⁄ô‹, 
m⁄_°¨t_vÆue
)

	)

623 
	#MONITOR_VALUE_SINCE_START
(
m⁄ô‹
) \

624 (
	`MONITOR_VALUE
(
m⁄ô‹
Ë+ 
	`MONITOR_VALUE_RESET
(m⁄ô‹))

	)

626 
	#MONITOR_STATUS
(
m⁄ô‹
Ë
	`MONITOR_FIELD
(m⁄ô‹, 
m⁄_°©us
)

	)

628 
	#MONITOR_SET_START
(
m⁄ô‹
) \

630 
	`MONITOR_STATUS
(
m⁄ô‹
Ë
MONITOR_STARTED
; \

631 
	`MONITOR_FIELD
((
m⁄ô‹
), 
m⁄_°¨t_time
Ë
	`time
(
NULL
); \

632 } 0)

	)

634 
	#MONITOR_SET_OFF
(
m⁄ô‹
) \

636 
	`MONITOR_STATUS
(
m⁄ô‹
Ë
MONITOR_STOPPED
; \

637 
	`MONITOR_FIELD
((
m⁄ô‹
), 
m⁄_°›_time
Ë
	`time
(
NULL
); \

638 } 0)

	)

640 
	#MONITOR_INIT_ZERO_VALUE
 0

	)

644 
	#MONITOR_MAX_MIN_NOT_INIT
(
m⁄ô‹
) \

645 (
	`MONITOR_STATUS
(
m⁄ô‹
Ë=
MONITOR_INIT_ZERO_VALUE
 && \

646 
	`MONITOR_MIN_VALUE
(
m⁄ô‹
Ë=
MONITOR_INIT_ZERO_VALUE
 && \

647 
	`MONITOR_MAX_VALUE
(
m⁄ô‹
Ë=
MONITOR_INIT_ZERO_VALUE
)

	)

649 
	#MONITOR_INIT
(
m⁄ô‹
) \

650 i‡(
	`MONITOR_MAX_MIN_NOT_INIT
(
m⁄ô‹
)) { \

651 
	`MONITOR_MIN_VALUE
(
m⁄ô‹
Ë
MIN_RESERVED
; \

652 
	`MONITOR_MIN_VALUE_START
(
m⁄ô‹
Ë
MIN_RESERVED
; \

653 
	`MONITOR_MAX_VALUE
(
m⁄ô‹
Ë
MAX_RESERVED
; \

654 
	`MONITOR_MAX_VALUE_START
(
m⁄ô‹
Ë
MAX_RESERVED
; \

655 }

	)

657 #ifde‡
UNIV_DEBUG_VALGRIND


658 
	#MONITOR_CHECK_DEFINED
(
vÆue
) \

660 
m⁄_ty≥_t
 
m
 = 
vÆue
; \

661 
	`UNIV_MEM_ASSERT_RW
(&
m
,  m); \

662 } 0)

	)

664 
	#MONITOR_CHECK_DEFINED
(
vÆue
Ë()0

	)

671 
	#MONITOR_INC
(
m⁄ô‹
Ë
	`m⁄ô‹_öc_vÆue
(m⁄ô‹, 1)

	)

672 
	#MONITOR_DEC
(
m⁄ô‹
Ë
	`m⁄ô‹_dec
(m⁄ô‹)

	)

673 
	#MONITOR_INC_VALUE
(
m⁄ô‹
, 
vÆue
Ë
	`m⁄ô‹_öc_vÆue
(m⁄ô‹, vÆue)

	)

674 
	#MONITOR_DEC_VALUE
(
m⁄ô‹
, 
vÆue
Ë
	`m⁄ô‹_dec_vÆue
(m⁄ô‹, vÆue)

	)

678 
	#MONITOR_INC_NOCHECK
(
m⁄ô‹
Ë
	`m⁄ô‹_öc_vÆue_nocheck
(m⁄ô‹, 1)

	)

679 
	#MONITOR_DEC_NOCHECK
(
m⁄ô‹
Ë
	`m⁄ô‹_dec_vÆue_nocheck
(m⁄ô‹, 1)

	)

684 
	#MONITOR_ATOMIC_INC
(
m⁄ô‹
Ë
	`m⁄ô‹_©omic_öc
(m⁄ô‹)

	)

689 
	#MONITOR_ATOMIC_DEC
(
m⁄ô‹
Ë
	`m⁄ô‹_©omic_dec
(m⁄ô‹)

	)

691 
ölöe
 
	$m⁄ô‹_£t_max_vÆue
(
m⁄ô‹_id_t
 
m⁄ô‹
, 
m⁄_ty≥_t
 
vÆue
) {

692 i‡(
vÆue
 > 
	`MONITOR_MAX_VALUE
(
m⁄ô‹
)) {

693 
	`MONITOR_MAX_VALUE
(
m⁄ô‹
Ë
vÆue
;

695 
	}
}

697 
ölöe
 
	$m⁄ô‹_£t_mö_vÆue
(
m⁄ô‹_id_t
 
m⁄ô‹
, 
m⁄_ty≥_t
 
vÆue
) {

698 i‡(
vÆue
 < 
	`MONITOR_MIN_VALUE
(
m⁄ô‹
)) {

699 
	`MONITOR_MIN_VALUE
(
m⁄ô‹
Ë
vÆue
;

701 
	}
}

703 
ölöe
 
	$m⁄ô‹_©omic_öc
(
m⁄ô‹_id_t
 
m⁄ô‹
) {

704 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

705 c⁄° 
m⁄_ty≥_t
 
vÆue
 = ++
	`MONITOR_VALUE
(
m⁄ô‹
);

708 
	`m⁄ô‹_£t_max_vÆue
(
m⁄ô‹
, 
vÆue
);

710 
	}
}

712 
ölöe
 
	$m⁄ô‹_©omic_dec
(
m⁄ô‹_id_t
 
m⁄ô‹
) {

713 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

714 c⁄° 
m⁄_ty≥_t
 
vÆue
 = --
	`MONITOR_VALUE
(
m⁄ô‹
);

717 
	`m⁄ô‹_£t_mö_vÆue
(
m⁄ô‹
, 
vÆue
);

719 
	}
}

721 
ölöe
 
	$m⁄ô‹_öc_vÆue_nocheck
(
m⁄ô‹_id_t
 
m⁄ô‹
, 
m⁄_ty≥_t
 
vÆue
,

722 
boﬁ
 
£t_max
 = 
åue
) {

726 c⁄°áutÿ
√w_vÆue
 =

727 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
Ë+ 
vÆue
;

728 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`°‹e
(
√w_vÆue
, 
°d
::
mem‹y_‹dî_ªœxed
);

729 i‡(
£t_max
) {

730 
	`m⁄ô‹_£t_max_vÆue
(
m⁄ô‹
, 
√w_vÆue
);

732 
	}
}

734 
ölöe
 
	$m⁄ô‹_öc_vÆue
(
m⁄ô‹_id_t
 
m⁄ô‹
, 
m⁄_ty≥_t
 
vÆue
) {

735 
	`MONITOR_CHECK_DEFINED
(
vÆue
);

736 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

737 
	`m⁄ô‹_öc_vÆue_nocheck
(
m⁄ô‹
, 
vÆue
);

739 
	}
}

741 
ölöe
 
	$m⁄ô‹_dec_vÆue_nocheck
(
m⁄ô‹_id_t
 
m⁄ô‹
, 
m⁄_ty≥_t
 
vÆue
) {

745 c⁄°áutÿ
√w_vÆue
 =

746 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
Ë- 
vÆue
;

747 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`°‹e
(
√w_vÆue
, 
°d
::
mem‹y_‹dî_ªœxed
);

748 
	`m⁄ô‹_£t_mö_vÆue
(
m⁄ô‹
, 
√w_vÆue
);

749 
	}
}

751 
ölöe
 
	$m⁄ô‹_dec_vÆue
(
m⁄ô‹_id_t
 
m⁄ô‹
, 
m⁄_ty≥_t
 
vÆue
) {

752 
	`MONITOR_CHECK_DEFINED
(
vÆue
);

753 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

754 
	`ut_ad
(
	`MONITOR_VALUE
(
m⁄ô‹
Ë>
vÆue
);

755 
	`m⁄ô‹_dec_vÆue_nocheck
(
m⁄ô‹
, 
vÆue
);

757 
	}
}

759 
ölöe
 
	$m⁄ô‹_dec
(
m⁄ô‹_id_t
 
m⁄ô‹
) {

760 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

761 
	`m⁄ô‹_dec_vÆue_nocheck
(
m⁄ô‹
, 1);

763 
	}
}

766 
	#MONITOR_SET
(
m⁄ô‹
, 
vÆue
Ë
	`m⁄ô‹_£t
(m⁄ô‹, vÆue, 
åue
,Årue)

	)

773 
ölöe
 
	$m⁄ô‹_£t
(
m⁄ô‹_id_t
 
m⁄ô‹
, 
m⁄_ty≥_t
 
vÆue
, 
boﬁ
 
£t_max
,

774 
boﬁ
 
£t_mö
) {

775 
	`MONITOR_CHECK_DEFINED
(
vÆue
);

776 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

777 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`°‹e
(
vÆue
, 
°d
::
mem‹y_‹dî_ªœxed
);

778 i‡(
£t_max
) {

779 
	`m⁄ô‹_£t_max_vÆue
(
m⁄ô‹
, 
vÆue
);

781 i‡(
£t_mö
) {

782 
	`m⁄ô‹_£t_mö_vÆue
(
m⁄ô‹
, 
vÆue
);

785 
	}
}

791 
	#MONITOR_INC_TIME_IN_MICRO_SECS
(
m⁄ô‹
, 
vÆue
) \

792 
	`m⁄ô‹_öc_time_ö_mi¸o_£c
(
m⁄ô‹
, 
vÆue
)

	)

794 
ölöe
 
	$m⁄ô‹_öc_time_ö_mi¸o_£c
(
m⁄ô‹_id_t
 
m⁄ô‹
,

795 
m⁄_ty≥_t
 
vÆue
) {

796 
	`MONITOR_CHECK_DEFINED
(
vÆue
);

797 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

798 c⁄° 
m⁄_ty≥_t
 
√w_vÆue
 =

799 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
) +

800 
	`ut_time_m⁄Ÿ⁄ic_us
(Ë- 
vÆue
;

801 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`°‹e
(
√w_vÆue
, 
°d
::
mem‹y_‹dî_ªœxed
);

803 
	}
}

815 
	#MONITOR_INC_VALUE_CUMULATIVE
(
m⁄ô‹
, 
m⁄ô‹_n_ˇŒs
, \

816 
m⁄ô‹_≥r_ˇŒ
, 
vÆue
) \

817 
	`m⁄ô‹_öc_vÆue_cumuœtive
(
m⁄ô‹
, 
m⁄ô‹_n_ˇŒs
, 
m⁄ô‹_≥r_ˇŒ
, \

818 
vÆue
)

	)

820 
ölöe
 
	$m⁄ô‹_öc_vÆue_cumuœtive
(
m⁄ô‹_id_t
 
m⁄ô‹
,

821 
m⁄ô‹_id_t
 
m⁄ô‹_n_ˇŒs
,

822 
m⁄ô‹_id_t
 
m⁄ô‹_≥r_ˇŒ
,

823 
m⁄_ty≥_t
 
vÆue
) {

824 
	`MONITOR_CHECK_DEFINED
(
vÆue
);

825 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

826 
	`m⁄ô‹_öc_vÆue_nocheck
(
m⁄ô‹_n_ˇŒs
, 1, 
Ál£
);

827 
	`m⁄ô‹_£t
(
m⁄ô‹_≥r_ˇŒ
, 
vÆue
, 
åue
, 
Ál£
);

828 
	`m⁄ô‹_öc_vÆue_nocheck
(
m⁄ô‹
, 
vÆue
);

830 
	}
}

834 
	#MONITOR_SET_UPD_MAX_ONLY
(
m⁄ô‹
, 
vÆue
) \

835 
	`m⁄ô‹_£t
(
m⁄ô‹
, 
vÆue
, 
åue
, 
Ál£
)

	)

839 
	#MONITOR_SET_SIMPLE
(
m⁄ô‹
, 
vÆue
) \

840 
	`m⁄ô‹_£t
(
m⁄ô‹
, 
vÆue
, 
Ál£
, fÆ£)

	)

844 
	#MONITOR_RESET_ALL
(
m⁄ô‹
Ë
	`m⁄ô‹_ª£t_Æl
(m⁄ô‹)

	)

846 
ölöe
 
	$m⁄ô‹_ª£t_Æl
(
m⁄ô‹_id_t
 
m⁄ô‹
) {

847 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`°‹e
(
MONITOR_INIT_ZERO_VALUE
,

848 
°d
::
mem‹y_‹dî_ªœxed
);

849 
	`MONITOR_MAX_VALUE
(
m⁄ô‹
Ë
MAX_RESERVED
;

850 
	`MONITOR_MIN_VALUE
(
m⁄ô‹
Ë
MIN_RESERVED
;

851 
	`MONITOR_VALUE_RESET
(
m⁄ô‹
Ë
MONITOR_INIT_ZERO_VALUE
;

852 
	`MONITOR_MAX_VALUE_START
(
m⁄ô‹
Ë
MAX_RESERVED
;

853 
	`MONITOR_MIN_VALUE_START
(
m⁄ô‹
Ë
MIN_RESERVED
;

854 
	`MONITOR_LAST_VALUE
(
m⁄ô‹
Ë
MONITOR_INIT_ZERO_VALUE
;

855 
	`MONITOR_FIELD
(
m⁄ô‹
, 
m⁄_°¨t_time
Ë
MONITOR_INIT_ZERO_VALUE
;

856 
	`MONITOR_FIELD
(
m⁄ô‹
, 
m⁄_°›_time
Ë
MONITOR_INIT_ZERO_VALUE
;

857 
	`MONITOR_FIELD
(
m⁄ô‹
, 
m⁄_ª£t_time
Ë
MONITOR_INIT_ZERO_VALUE
;

858 
	}
}

865 
	#MONITOR_SAVE_START
(
m⁄ô‹
, 
vÆue
) \

867 
	`MONITOR_CHECK_DEFINED
(
vÆue
); \

868 (
	`MONITOR_START_VALUE
(
m⁄ô‹
) = \

869 (
m⁄_ty≥_t
)(
vÆue
)-
	`MONITOR_VALUE_RESET
(
m⁄ô‹
)); \

870 } 0)

	)

874 
	#MONITOR_SAVE_LAST
(
m⁄ô‹
Ë
	`m⁄ô‹_ßve_œ°
(m⁄ô‹)

	)

876 
ölöe
 
	$m⁄ô‹_ßve_œ°
(
m⁄ô‹_id_t
 
m⁄ô‹
) {

877 c⁄°áutÿ
vÆue
 = 
	`MONITOR_VALUE
(
m⁄ô‹
).
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

878 
	`MONITOR_LAST_VALUE
(
m⁄ô‹
Ë
vÆue
;

879 
	`MONITOR_START_VALUE
(
m⁄ô‹
Ë+
vÆue
;

880 
	}
}

884 
	#MONITOR_SET_DIFF
(
m⁄ô‹
, 
vÆue
) \

885 
	`MONITOR_SET_UPD_MAX_ONLY
(
m⁄ô‹
, ((
vÆue
)-
	`MONITOR_VALUE_RESET
(monitor) - \

886 
	`MONITOR_FIELD
(
m⁄ô‹
, 
m⁄_°¨t_vÆue
) + \

887 
	`MONITOR_FIELD
(
m⁄ô‹
, 
m⁄_œ°_vÆue
)))

	)

893 
m⁄ô‹_öfo_t
 *
§v_m⁄_gë_öfo
(

894 
m⁄ô‹_id_t
 
m⁄ô‹_id
);

900 c⁄° *
§v_m⁄_gë_«me
(

901 
m⁄ô‹_id_t
 
m⁄ô‹_id
);

906 
§v_m⁄_£t_moduÀ_c⁄åﬁ
(

907 
m⁄ô‹_id_t
 
moduÀ_id
,

911 
m⁄_›ti⁄_t
 
£t_›ti⁄
);

919 
§v_m⁄_¥o˚ss_exi°ög_cou¡î
(

920 
m⁄ô‹_id_t
 
m⁄ô‹_id
,

922 
m⁄_›ti⁄_t
 
£t_›ti⁄
);

927 
UNIV_INLINE


928 
m⁄_ty≥_t
 
§v_m⁄_ˇlc_max_sö˚_°¨t
(

929 
m⁄ô‹_id_t
 
m⁄ô‹
);

933 
UNIV_INLINE


934 
m⁄_ty≥_t
 
§v_m⁄_ˇlc_mö_sö˚_°¨t
(

935 
m⁄ô‹_id_t
 
m⁄ô‹
);

938 
§v_m⁄_ª£t
(
m⁄ô‹_id_t
 
m⁄ô‹
);

940 
UNIV_INLINE


941 
§v_m⁄_ª£t_Æl
(
m⁄ô‹_id_t
 
m⁄ô‹
);

943 
§v_m⁄_deÁu…_⁄
();

945 
	~"§v0m⁄.ic
"

947 
	#MONITOR_INC
(
x
Ë(()0)

	)

948 
	#MONITOR_DEC
(
x
Ë(()0)

	)

951 
	#MONITOR_INC_WAIT_STATS_EX
(
m⁄ô‹_¥efix
, 
m⁄ô‹_sufix
, 
waô_°©s
) \

952 i‡((
waô_°©s
).
waô_lo›s
 == 0) { \

953 
	`MONITOR_INC
(
m⁄ô‹_¥efix
##
NO_WAITS
##
m⁄ô‹_sufix
); \

955 
	`MONITOR_INC
(
m⁄ô‹_¥efix
##
WAITS
##
m⁄ô‹_sufix
); \

956 
	`MONITOR_INC_VALUE
(
m⁄ô‹_¥efix
##
WAIT_LOOPS
##
m⁄ô‹_sufix
, \

957 (
waô_°©s
).
waô_lo›s
); \

958 }

	)

960 
	#MONITOR_INC_WAIT_STATS
(
m⁄ô‹_¥efix
, 
waô_°©s
) \

961 
	`MONITOR_INC_WAIT_STATS_EX
(
m⁄ô‹_¥efix
, , 
waô_°©s
);

	)

	@srv0mon.ic

36 
UNIV_INLINE


37 
m⁄_ty≥_t
 
	$§v_m⁄_ˇlc_max_sö˚_°¨t
(

38 
m⁄ô‹_id_t
 
m⁄ô‹
)

40 i‡(
	`MONITOR_MAX_VALUE_START
(
m⁄ô‹
Ë=
MAX_RESERVED
) {

44 
	`MONITOR_MAX_VALUE_START
(
m⁄ô‹
Ë
	`MONITOR_MAX_VALUE
(monitor);

46 } i‡(
	`MONITOR_MAX_VALUE
(
m⁄ô‹
Ë!
MAX_RESERVED
 &&

47 (
	`MONITOR_MAX_VALUE
(
m⁄ô‹
Ë+ 
	`MONITOR_VALUE_RESET
(monitor) >

48 
	`MONITOR_MAX_VALUE_START
(
m⁄ô‹
))) {

53 
	`MONITOR_MAX_VALUE_START
(
m⁄ô‹
) =

54 
	`MONITOR_MAX_VALUE
(
m⁄ô‹
Ë+ 
	`MONITOR_VALUE_RESET
(monitor);

57  (
	`MONITOR_MAX_VALUE_START
(
m⁄ô‹
));

58 
	}
}

63 
UNIV_INLINE


64 
m⁄_ty≥_t
 
	$§v_m⁄_ˇlc_mö_sö˚_°¨t
(

65 
m⁄ô‹_id_t
 
m⁄ô‹
)

67 i‡(
	`MONITOR_MIN_VALUE_START
(
m⁄ô‹
Ë=
MIN_RESERVED
) {

71 
	`MONITOR_MIN_VALUE_START
(
m⁄ô‹
Ë
	`MONITOR_MIN_VALUE
(monitor);

73 } i‡(
	`MONITOR_MIN_VALUE
(
m⁄ô‹
Ë!
MIN_RESERVED
 &&

74 (
	`MONITOR_MIN_VALUE
(
m⁄ô‹
Ë+ 
	`MONITOR_VALUE_RESET
(monitor) <

75 
	`MONITOR_MIN_VALUE_START
(
m⁄ô‹
))) {

80 
	`MONITOR_MIN_VALUE_START
(
m⁄ô‹
) =

81 
	`MONITOR_MIN_VALUE
(
m⁄ô‹
Ë+ 
	`MONITOR_VALUE_RESET
(monitor);

84  (
	`MONITOR_MIN_VALUE_START
(
m⁄ô‹
));

85 
	}
}

88 
UNIV_INLINE


89 
	$§v_m⁄_ª£t_Æl
(
m⁄ô‹_id_t
 
m⁄ô‹
)

92 i‡(
	`MONITOR_IS_ON
(
m⁄ô‹
)) {

93 
	`Ârötf
(
°dîr
,

97 
	`§v_m⁄_gë_«me
(
m⁄ô‹
));

99 
	`MONITOR_RESET_ALL
(
m⁄ô‹
);

101 
	}
}

	@srv0shutdown.h

32 #i‚de‡
§v0shutdown_h


33 
	#§v0shutdown_h


	)

35 
	~"my_compûî.h
"

36 
	~"univ.i
"

40 
§v_¥e_dd_shutdown
();

43 
§v_shutdown
();

46 
	e§v_shutdown_t
 {

48 
	mSRV_SHUTDOWN_NONE
 = 0,

56 
	mSRV_SHUTDOWN_RECOVERY_ROLLBACK
,

68 
	mSRV_SHUTDOWN_PRE_DD_AND_SYSTEM_TRANSACTIONS
,

72 
	mSRV_SHUTDOWN_PURGE
,

75 
	mSRV_SHUTDOWN_DD
,

91 
	mSRV_SHUTDOWN_CLEANUP
,

94 
	mSRV_SHUTDOWN_MASTER_STOP
,

99 
	mSRV_SHUTDOWN_FLUSH_PHASE
,

104 
	mSRV_SHUTDOWN_LAST_PHASE
,

110 
	mSRV_SHUTDOWN_EXIT_THREADS


115 
°d
::
©omic
<
§v_shutdown_t
> 
§v_shutdown_°©e
;

118 
	$§v_Áèl_îr‹
(Ë
	`MY_ATTRIBUTE
((
n‹ëu∫
));

127 
	`§v_shutdown_exô_thªads
();

132 
boﬁ
 
	`§v_shutdown_waôs_f‹_rﬁlback_of_ªcovîed_å™ß˘i⁄s
();

138 
ãm∂©e
 <
ty≥«me
 
F
>

139 
boﬁ
 
	$§v_shutdown_°©e_m©ches
(
F
 &&
f
) {

140 c⁄°áutÿ
°©e
 = 
§v_shutdown_°©e
.
	`lﬂd
();

141  
°d
::
f‹w¨d
<
F
>(
f
)(
°©e
);

142 
	}
}

	@srv0srv.h

48 #i‚de‡
§v0§v_h


49 
	#§v0§v_h


	)

51 
	~"buf0checksum.h
"

52 
	~"fû0fû.h
"

53 
	~"log0ty≥s.h
"

54 
	~"mysql/psi/mysql_°age.h
"

55 
	~"univ.i
"

57 #i‚de‡
UNIV_HOTBACKUP


58 
	~"log0ddl.h
"

59 
	~"os0evít.h
"

60 
	~"os0fûe.h
"

61 
	~"os0thªad.h
"

62 
	~"que0ty≥s.h
"

63 
	~"§v0c⁄c.h
"

64 
	~"åx0ty≥s.h
"

65 
	~"ut0cou¡î.h
"

67 
	~<futuª
>

70 
	s§v_°©s_t
 {

71 
	mib_cou¡î_t
<
	tulöt
, 64> 
	tulöt_˘r_64_t
;

72 
	mib_cou¡î_t
<
	tl¢_t
, 1, 
	tsögÀ_ödexî_t
> 
	tl¢_˘r_1_t
;

73 
	mib_cou¡î_t
<
	tulöt
, 1, 
	tsögÀ_ödexî_t
> 
	tulöt_˘r_1_t
;

74 
	mib_cou¡î_t
<
	tlöt
, 1, 
	tsögÀ_ödexî_t
> 
	tlöt_˘r_1_t
;

75 
	mib_cou¡î_t
<
	töt64_t
, 1, 
	tsögÀ_ödexî_t
> 
	töt64_˘r_1_t
;

78 
ulöt_˘r_1_t
 
	md©a_wrôãn
;

81 
ulöt_˘r_1_t
 
	mlog_wrôe_ªque°s
;

84 
ulöt_˘r_1_t
 
	mlog_wrôes
;

87 
l¢_˘r_1_t
 
	mos_log_wrôãn
;

90 
löt_˘r_1_t
 
	mos_log_≥ndög_wrôes
;

94 
ulöt_˘r_1_t
 
	mlog_waôs
;

97 
ulöt_˘r_1_t
 
	mdblwr_wrôes
;

101 
ulöt_˘r_1_t
 
	mdblwr_∑ges_wrôãn
;

104 
ulöt_˘r_1_t
 
	mbuf_poﬁ_wrôe_ªque°s
;

109 
ulöt_˘r_1_t
 
	mbuf_poﬁ_waô_‰ì
;

113 
ulöt_˘r_1_t
 
	mbuf_poﬁ_Êushed
;

117 
ulöt_˘r_1_t
 
	mbuf_poﬁ_ªads
;

120 
ulöt_˘r_1_t
 
	md©a_ªad
;

123 
öt64_˘r_1_t
 
	mn_lock_waô_time
;

126 
ulöt_˘r_1_t
 
	mn_lock_waô_cou¡
;

129 
löt_˘r_1_t
 
	mn_lock_waô_cuºít_cou¡
;

132 
ulöt_˘r_64_t
 
	mn_rows_ªad
;

135 
ulöt_˘r_64_t
 
	mn_rows_upd©ed
;

138 
ulöt_˘r_64_t
 
	mn_rows_dñëed
;

141 
ulöt_˘r_64_t
 
	mn_rows_ö£πed
;

144 
ulöt_˘r_64_t
 
	mn_sy°em_rows_ªad
;

147 
ulöt_˘r_64_t
 
	mn_sy°em_rows_upd©ed
;

150 
ulöt_˘r_64_t
 
	mn_sy°em_rows_dñëed
;

153 
ulöt_˘r_64_t
 
	mn_sy°em_rows_ö£πed
;

156 
ulöt_˘r_64_t
 
	mn_ßm∂ed_∑ges_ªad
;

159 
ulöt_˘r_64_t
 
	mn_ßm∂ed_∑ges_skù≥d
;

164 
	sSrv_thªads
 {

166 
IB_thªad
 
	mm_m⁄ô‹
;

169 
IB_thªad
 
	mm_îr‹_m⁄ô‹
;

172 
IB_thªad
 
	mm_log_checkpoöãr
;

175 
IB_thªad
 
	mm_log_wrôî
;

178 
IB_thªad
 
	mm_log_Êushî
;

181 
IB_thªad
 
	mm_log_wrôe_nŸifõr
;

184 
IB_thªad
 
	mm_log_Êush_nŸifõr
;

187 
IB_thªad
 
	mm_backup_log_¨chivî
;

190 
IB_thªad
 
	mm_buf_dump
;

193 
IB_thªad
 
	mm_buf_ªsize
;

196 
IB_thªad
 
	mm_di˘_°©s
;

199 
IB_thªad
 
	mm_lock_waô_timeout
;

202 
IB_thªad
 
	mm_ma°î
;

205 
IB_thªad
 
	mm_ts_Æãr_í¸y±
;

208 
IB_thªad
 
	mm_åx_ªcovîy_rﬁlback
;

211 
IB_thªad
 
	mm_ªcv_wrôî
;

214 
IB_thªad
 
	mm_purge_co‹dö©‹
;

217 
size_t
 
	mm_purge_w‹kîs_n
;

221 
IB_thªad
 *
	mm_purge_w‹kîs
;

224 
IB_thªad
 
	mm_∑ge_˛ó√r_co‹dö©‹
;

227 
size_t
 
	mm_∑ge_˛ó√r_w‹kîs_n
;

231 
IB_thªad
 *
	mm_∑ge_˛ó√r_w‹kîs
;

234 
IB_thªad
 
	mm_log_¨chivî
;

237 
IB_thªad
 
	mm_∑ge_¨chivî
;

240 
IB_thªad
 
	mm_·s_›timize
;

243 
IB_thªad
 
	mm_gtid_≥rsi°î
;

245 #ifde‡
UNIV_DEBUG


250 
os_evít_t
 
	mm_shutdown_˛ónup_dbg
;

262 
os_evít_t
 
	mm_ma°î_ªady_f‹_dd_shutdown
;

266 
boﬁ
 
§v_thªad_is_a˘ive
(c⁄° 
IB_thªad
 &
thªad
);

269 
boﬁ
 
§v_thªad_is_°›≥d
(c⁄° 
IB_thªad
 &
thªad
);

276 
§v_thªad_dñay_˛ónup_if_√eded
(
boﬁ
 
waô_f‹_sig«l
);

278 
	sSrv_˝u_ußge
 {

279 
	mn_˝u
;

280 
	mutime_abs
;

281 
	m°ime_abs
;

282 
	mutime_p˘
;

283 
	m°ime_p˘
;

287 
Srv_thªads
 
§v_thªads
;

290 
Srv_˝u_ußge
 
§v_˝u_ußge
;

292 
Log_DDL
 *
log_ddl
;

294 #ifde‡
INNODB_DD_TABLE


295 
boﬁ
 
§v_is_upgøde_mode
;

296 
boﬁ
 
§v_downgøde_logs
;

297 
boﬁ
 
§v_upgøde_ﬁd_undo_found
;

300 
boﬁ
 
§v_downgøde_∑πôi⁄_fûes
;

302 c⁄° *
§v_maö_thªad_›_öfo
;

305 
os_evít_t
 
§v_m⁄ô‹_evít
;

308 
os_evít_t
 
§v_îr‹_evít
;

311 
os_evít_t
 
§v_buf_dump_evít
;

314 
os_evít_t
 
§v_buf_ªsize_evít
;

318 
	#SRV_BUF_DUMP_FILENAME_DEFAULT
 "ib_buf„r_poﬁ"

	)

319 *
§v_buf_dump_fûíame
;

323 
boﬁ
 
§v_buf„r_poﬁ_dump_©_shutdown
;

324 
boﬁ
 
§v_buf„r_poﬁ_lﬂd_©_°¨tup
;

327 
boﬁ
 
§v_dißbÀ_s‹t_fûe_ˇche
;

333 
boﬁ
 
tb•_exãnd_™d_öôülize
;

337 
	#SRV_AUTO_EXTEND_INCREMENT
 (
§v_sys_•a˚
.
	`gë_aut€xãnd_ö¸emít
())

	)

339 #i‚de‡
UNIV_HOTBACKUP


341 
ib_muãx_t
 
∑ge_zù_°©_≥r_ödex_muãx
;

343 
ib_muãx_t
 
§v_m⁄ô‹_fûe_muãx
;

345 
FILE
 *
§v_m⁄ô‹_fûe
;

349 
ib_muãx_t
 
§v_misc_tmpfûe_muãx
;

351 
FILE
 *
§v_misc_tmpfûe
;

356 *
§v_d©a_home
;

359 
ul⁄g
 
§v_dblwr_∑ges
;

364 
boﬁ
 
§v_ªad_⁄ly_mode
;

367 
boﬁ
 
high_Àvñ_ªad_⁄ly
;

370 
boﬁ
 
§v_fûe_≥r_èbÀ
;

372 
ul⁄g
 
§v_thªad_¶ìp_dñay
;

374 
ul⁄g
 
§v_ad≠tive_max_¶ìp_dñay
;

377 
ul⁄g
 
§v_s‹t_buf_size
;

380 
§v_⁄löe_max_size
;

383 
ul⁄g
 
§v_∑øŒñ_ªad_thªads
;

389 
boﬁ
 
§v_u£_«tive_aio
;

390 
boﬁ
 
§v_numa_öãæóve
;

394 *
§v_önodb_dúe˘‹õs
;

397 *
§v_undo_dú
;

400 
ul⁄g
 
§v_undo_èbÀ•a˚s
;

403 
ul⁄g
 
§v_rﬁlback_£gmíts
;

406 
§v_max_undo_èbÀ•a˚_size
;

409 
ul⁄g
 
§v_purge_r£g_åunˇã_‰equícy
;

412 
boﬁ
 
§v_undo_log_åunˇã
;

415 
boﬁ
 
§v_undo_log_í¸y±
;

426 
	#INITIAL_UNDO_SPACE_SIZE
 (16 * 1024 * 1024)

	)

427 
	#INITIAL_UNDO_SPACE_SIZE_IN_PAGES
 \

428 
°©ic_ˇ°
<
os_off£t_t
>(
INITIAL_UNDO_SPACE_SIZE
 / 
UNIV_PAGE_SIZE
)

	)

432 c⁄° 
size_t
 
CONCURRENT_UNDO_TRUNCATE_LIMIT
;

434 *
§v_log_group_home_dú
;

437 
boﬁ
 
§v_ªdo_log_í¸y±
;

440 
	#SRV_N_LOG_FILES_CLONE_MAX
 1000

	)

443 
	#SRV_N_LOG_FILES_MAX
 100

	)

444 
ul⁄g
 
§v_n_log_fûes
;

446 #ifde‡
UNIV_DEBUG_DEDICATED


447 
ul⁄g
 
§v_debug_sy°em_mem_size
;

458 
ul⁄gl⁄g
 
§v_log_fûe_size
;

461 
ul⁄gl⁄g
 
§v_log_fûe_size_ªque°ed
;

466 
ul⁄g
 
§v_log_buf„r_size
;

471 
ul⁄g
 
§v_log_wrôe_max_size
;

474 
ul⁄g
 
§v_log_wrôe_ahód_size
;

477 
ul⁄g
 
§v_log_wrôe_evíts
;

480 
ul⁄g
 
§v_log_Êush_evíts
;

485 
ul⁄g
 
§v_log_ª˚¡_wrôãn_size
;

490 
ul⁄g
 
§v_log_ª˚¡_˛o£d_size
;

493 
boﬁ
 
§v_log_wrôî_thªads
;

496 
uöt
 
§v_log_•ö_˝u_abs_lwm
;

499 
uöt
 
§v_log_•ö_˝u_p˘_hwm
;

504 
ul⁄g
 
§v_log_waô_f‹_wrôe_•ö_dñay
;

507 
ul⁄g
 
§v_log_waô_f‹_wrôe_timeout
;

510 
ul⁄g
 
§v_log_waô_f‹_Êush_•ö_dñay
;

515 
ul⁄g
 
§v_log_waô_f‹_Êush_•ö_hwm
;

518 
ul⁄g
 
§v_log_waô_f‹_Êush_timeout
;

522 
ul⁄g
 
§v_log_wrôî_•ö_dñay
;

525 
ul⁄g
 
§v_log_wrôî_timeout
;

530 
ul⁄g
 
§v_log_checkpoöt_evîy
;

534 
ul⁄g
 
§v_log_Êushî_•ö_dñay
;

537 
ul⁄g
 
§v_log_Êushî_timeout
;

541 
ul⁄g
 
§v_log_wrôe_nŸifõr_•ö_dñay
;

544 
ul⁄g
 
§v_log_wrôe_nŸifõr_timeout
;

548 
ul⁄g
 
§v_log_Êush_nŸifõr_•ö_dñay
;

551 
ul⁄g
 
§v_log_Êush_nŸifõr_timeout
;

554 
boﬁ
 
§v_log_checksums
;

556 #ifde‡
UNIV_DEBUG


559 
boﬁ
 
§v_checkpoöt_dißbÀd
;

562 
boﬁ
 
§v_öje˘_too_m™y_c⁄cuºít_åxs
;

566 
ul⁄g
 
§v_Êush_log_©_åx_commô
;

567 
uöt
 
§v_Êush_log_©_timeout
;

568 
ul⁄g
 
§v_log_wrôe_ahód_size
;

569 
boﬁ
 
§v_ad≠tive_Êushög
;

570 
boﬁ
 
§v_Êush_sync
;

575 
boﬁ
 
§v_lﬂd_c‹ru±ed
;

578 
boﬁ
 
§v_dediˇãd_£rvî
;

580 
ulöt
 
§v_buf_poﬁ_size
;

582 c⁄° 
ulöt
 
§v_buf_poﬁ_mö_size
;

584 c⁄° 
ulöt
 
§v_buf_poﬁ_def_size
;

586 c⁄° 
l⁄gl⁄g
 
§v_buf_poﬁ_max_size
;

589 
ul⁄gl⁄g
 
§v_buf_poﬁ_chunk_unô
;

591 c⁄° 
ul⁄gl⁄g
 
§v_buf_poﬁ_chunk_unô_mö
;

593 c⁄° 
ul⁄gl⁄g
 
§v_buf_poﬁ_chunk_unô_blk_sz
;

595 c⁄° 
ul⁄gl⁄g
 
§v_buf_poﬁ_chunk_unô_max
;

598 
ul⁄g
 
§v_buf_poﬁ_ö°™˚s
;

600 c⁄° 
ul⁄g
 
§v_buf_poﬁ_ö°™˚s_deÁu…
;

602 
ul⁄g
 
§v_n_∑ge_hash_locks
;

604 
boﬁ
 
§v_vÆid©e_èbÀ•a˚_∑ths
;

606 
ul⁄g
 
§v_LRU_sˇn_dïth
;

608 
ul⁄g
 
§v_Êush_√ighb‹s
;

610 
ulöt
 
§v_buf_poﬁ_ﬁd_size
;

612 
ulöt
 
§v_buf_poﬁ_ba£_size
;

614 
§v_buf_poﬁ_cuº_size
;

616 
ul⁄g
 
§v_buf_poﬁ_dump_p˘
;

618 
ulöt
 
§v_lock_èbÀ_size
;

620 
ulöt
 
§v_n_fûe_io_thªads
;

621 
boﬁ
 
§v_øndom_ªad_ahód
;

622 
ul⁄g
 
§v_ªad_ahód_thªshﬁd
;

623 
ul⁄g
 
§v_n_ªad_io_thªads
;

624 
ul⁄g
 
§v_n_wrôe_io_thªads
;

626 
uöt
 
§v_ch™ge_buf„r_max_size
;

629 c⁄° 
ul⁄g
 
§v_idÀ_Êush_p˘_deÁu…
;

631 
ul⁄g
 
§v_idÀ_Êush_p˘
;

634 
ul⁄g
 
§v_io_ˇ∑côy
;

638 
	#SRV_MAX_IO_CAPACITY_DUMMY_DEFAULT
 (~0UL)

	)

639 
	#SRV_MAX_IO_CAPACITY_LIMIT
 (~0UL)

	)

640 
ul⁄g
 
§v_max_io_ˇ∑côy
;

644 
	#PCT_IO
(
p
Ë((
ul⁄g
)(
§v_io_ˇ∑côy
 * (()’Ë/ 100.0)))

	)

647 
	#MAX_PURGE_THREADS
 32

	)

652 
ul⁄g
 
§v_önodb_°©s_mëhod
;

654 
ulöt
 
§v_max_n_›í_fûes
;

656 
ul⁄g
 
§v_n_∑ge_˛ó√rs
;

658 
§v_max_dúty_∑ges_p˘
;

659 
§v_max_dúty_∑ges_p˘_lwm
;

661 
ul⁄g
 
§v_ad≠tive_Êushög_lwm
;

662 
ul⁄g
 
§v_Êushög_avg_lo›s
;

664 
ul⁄g
 
§v_f‹˚_ªcovîy
;

665 #ifde‡
UNIV_DEBUG


666 
ul⁄g
 
§v_f‹˚_ªcovîy_¸ash
;

681 
ul⁄g
 
§v_Á°_shutdown
;

682 
iboﬁ
 
§v_önodb_°©us
;

684 
§v_°©s_å™sõ¡_ßm∂e_∑ges
;

685 
boﬁ
 
§v_°©s_≥rsi°ít
;

686 
§v_°©s_≥rsi°ít_ßm∂e_∑ges
;

687 
boﬁ
 
§v_°©s_auto_ªˇlc
;

688 
boﬁ
 
§v_°©s_ö˛ude_dñëe_m¨ked
;

690 
ul⁄g
 
§v_checksum_Æg‹ôhm
;

692 
§v_max_buf_poﬁ_modifõd_p˘
;

693 
ul⁄g
 
§v_max_purge_œg
;

694 
ul⁄g
 
§v_max_purge_œg_dñay
;

696 
ul⁄g
 
§v_ª∂iˇti⁄_dñay
;

699 
boﬁ
 
§v_¥öt_önodb_m⁄ô‹
;

700 
boﬁ
 
§v_¥öt_önodb_lock_m⁄ô‹
;

702 
ul⁄g
 
§v_n_•ö_waô_rounds
;

703 
ul⁄g
 
§v_n_‰ì_tickës_to_íãr
;

704 
ul⁄g
 
§v_•ö_waô_dñay
;

705 
iboﬁ
 
§v_¥i‹ôy_boo°
;

707 
ulöt
 
§v_åunˇãd_°©us_wrôes
;

709 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_IBUF_DEBUG


710 
boﬁ
 
§v_ibuf_dißbÀ_background_mîge
;

713 #ifde‡
UNIV_DEBUG


714 
boﬁ
 
§v_buf_poﬁ_debug
;

715 
boﬁ
 
§v_sync_debug
;

716 
boﬁ
 
§v_purge_võw_upd©e_⁄ly_debug
;

719 
boﬁ
 
§v_ma°î_thªad_dißbÀd_debug
;

722 
ul⁄g
 
§v_Áèl_£m≠h‹e_waô_thªshﬁd
;

723 
°d
::
©omic
<> 
§v_Áèl_£m≠h‹e_waô_exãnd
;

725 
ulöt
 
§v_dml_√eded_dñay
;

727 #ifde‡
UNIV_HOTBACKUP


729 
	#SRV_MAX_N_IO_THREADS
 1

	)

731 
	#SRV_MAX_N_IO_THREADS
 130

	)

736 c⁄° *
§v_io_thªad_›_öfo
[];

737 c⁄° *
§v_io_thªad_fun˘i⁄
[];

740 
ul⁄g
 
§v_n_purge_thªads
;

743 
ul⁄g
 
§v_purge_b©ch_size
;

746 
ul⁄g
 
§v_sync_¨øy_size
;

749 
boﬁ
 
§v_¥öt_Æl_dódlocks
;

752 
boﬁ
 
§v_¥öt_ddl_logs
;

754 
boﬁ
 
§v_cmp_≥r_ödex_íabÀd
;

756 
boﬁ
 
§v_ªdo_log
;

759 
exp‹t_v¨_t
 
exp‹t_v¨s
;

761 #i‚de‡
UNIV_HOTBACKUP


763 
§v_°©s_t
 
§v_°©s
;

767 #ifde‡
UNIV_PFS_THREAD


768 
mysql_pfs_key_t
 
log_¨chivî_thªad_key
;

769 
mysql_pfs_key_t
 
∑ge_¨chivî_thªad_key
;

770 
mysql_pfs_key_t
 
buf_dump_thªad_key
;

771 
mysql_pfs_key_t
 
buf_ªsize_thªad_key
;

772 
mysql_pfs_key_t
 
˛⁄e_ddl_thªad_key
;

773 
mysql_pfs_key_t
 
˛⁄e_gtid_thªad_key
;

774 
mysql_pfs_key_t
 
di˘_°©s_thªad_key
;

775 
mysql_pfs_key_t
 
·s_›timize_thªad_key
;

776 
mysql_pfs_key_t
 
·s_∑øŒñ_mîge_thªad_key
;

777 
mysql_pfs_key_t
 
·s_∑øŒñ_tokíiz©i⁄_thªad_key
;

778 
mysql_pfs_key_t
 
io_h™dÀr_thªad_key
;

779 
mysql_pfs_key_t
 
io_ibuf_thªad_key
;

780 
mysql_pfs_key_t
 
io_log_thªad_key
;

781 
mysql_pfs_key_t
 
io_ªad_thªad_key
;

782 
mysql_pfs_key_t
 
io_wrôe_thªad_key
;

783 
mysql_pfs_key_t
 
log_wrôî_thªad_key
;

784 
mysql_pfs_key_t
 
log_checkpoöãr_thªad_key
;

785 
mysql_pfs_key_t
 
log_Êushî_thªad_key
;

786 
mysql_pfs_key_t
 
log_wrôe_nŸifõr_thªad_key
;

787 
mysql_pfs_key_t
 
log_Êush_nŸifõr_thªad_key
;

788 
mysql_pfs_key_t
 
∑ge_Êush_co‹dö©‹_thªad_key
;

789 
mysql_pfs_key_t
 
∑ge_Êush_thªad_key
;

790 
mysql_pfs_key_t
 
ªcv_wrôî_thªad_key
;

791 
mysql_pfs_key_t
 
§v_îr‹_m⁄ô‹_thªad_key
;

792 
mysql_pfs_key_t
 
§v_lock_timeout_thªad_key
;

793 
mysql_pfs_key_t
 
§v_ma°î_thªad_key
;

794 
mysql_pfs_key_t
 
§v_m⁄ô‹_thªad_key
;

795 
mysql_pfs_key_t
 
§v_purge_thªad_key
;

796 
mysql_pfs_key_t
 
§v_w‹kî_thªad_key
;

797 
mysql_pfs_key_t
 
åx_ªcovîy_rﬁlback_thªad_key
;

798 
mysql_pfs_key_t
 
§v_ts_Æãr_í¸y±_thªad_key
;

799 
mysql_pfs_key_t
 
∑øŒñ_ªad_thªad_key
;

803 #ifde‡
HAVE_PSI_STAGE_INTERFACE


806 
PSI_°age_öfo
 
§v_°age_Æãr_èbÀ_íd
;

810 
PSI_°age_öfo
 
§v_°age_Æãr_èbÀ_Êush
;

814 
PSI_°age_öfo
 
§v_°age_Æãr_èbÀ_ö£π
;

818 
PSI_°age_öfo
 
§v_°age_Æãr_èbÀ_log_ödex
;

822 
PSI_°age_öfo
 
§v_°age_Æãr_èbÀ_log_èbÀ
;

826 
PSI_°age_öfo
 
§v_°age_Æãr_èbÀ_mîge_s‹t
;

830 
PSI_°age_öfo
 
§v_°age_Æãr_èbÀ_ªad_pk_öã∫Æ_s‹t
;

834 
PSI_°age_öfo
 
§v_°age_Æãr_èbÀ•a˚_í¸y±i⁄
;

837 
PSI_°age_öfo
 
§v_°age_buf„r_poﬁ_lﬂd
;

841 
PSI_°age_öfo
 
§v_°age_˛⁄e_fûe_c›y
;

844 
PSI_°age_öfo
 
§v_°age_˛⁄e_ªdo_c›y
;

847 
PSI_°age_öfo
 
§v_°age_˛⁄e_∑ge_c›y
;

849 #i‚de‡
_WIN32


852 
	e§v_unix_Êush_t
 {

853 
	mSRV_UNIX_FSYNC
 = 0,

854 
	mSRV_UNIX_O_DSYNC
,

855 
	mSRV_UNIX_LITTLESYNC
,

858 
	mSRV_UNIX_NOSYNC
,

859 
	mSRV_UNIX_O_DIRECT
,

865 
	mSRV_UNIX_O_DIRECT_NO_FSYNC


873 
§v_unix_Êush_t
 
§v_unix_fûe_Êush_mëhod
;

875 
ölöe
 
boﬁ
 
	$§v_is_dúe˘_io
() {

876  (
§v_unix_fûe_Êush_mëhod
 =
SRV_UNIX_O_DIRECT
 ||

877 
§v_unix_fûe_Êush_mëhod
 =
SRV_UNIX_O_DIRECT_NO_FSYNC
);

878 
	}
}

882 
	e§v_wö_Êush_t
 {

884 
	mSRV_WIN_IO_UNBUFFERED
 = 0,

886 
	mSRV_WIN_IO_NORMAL
,

888 
§v_wö_Êush_t
 
§v_wö_fûe_Êush_mëhod
;

890 
ölöe
 
boﬁ
 
	$§v_is_dúe˘_io
() {

891  (
§v_wö_fûe_Êush_mëhod
 =
SRV_WIN_IO_UNBUFFERED
);

892 
	}
}

902 
	mSRV_FORCE_IGNORE_CORRUPT
 = 1,

904 
	mSRV_FORCE_NO_BACKGROUND
 = 2,

907 
	mSRV_FORCE_NO_TRX_UNDO
 = 3,

909 
	mSRV_FORCE_NO_IBUF_MERGE
 = 4,

912 
	mSRV_FORCE_NO_UNDO_LOG_SCAN
 = 5,

916 
	mSRV_FORCE_NO_LOG_REDO
 = 6

922 
	e§v_°©s_mëhod_«me_íum
 {

923 
	mSRV_STATS_NULLS_EQUAL
,

926 
	mSRV_STATS_NULLS_UNEQUAL
,

928 
	mSRV_STATS_NULLS_IGNORED


931 
§v_°©s_mëhod_«me_íum
 
	t§v_°©s_mëhod_«me_t
;

933 #ifde‡
UNIV_DEBUG


935 
ul⁄g
 
§v_debug_com¥ess
;

939 
	e§v_thªad_ty≥
 {

940 
	mSRV_NONE
,

941 
	mSRV_WORKER
,

944 
	mSRV_PURGE
,

945 
	mSRV_MASTER


950 
§v_boŸ
();

952 
§v_‰ì
();

957 
§v_£t_io_thªad_›_öfo
(
ulöt
 
i
, c⁄° *
°r
);

960 
§v_ª£t_io_thªad_›_öfo
();

966 
§v_wake_purge_thªad_if_nŸ_a˘ive
();

972 
§v_a˘ive_wake_ma°î_thªad_low
();

973 
	#§v_a˘ive_wake_ma°î_thªad
() \

975 i‡(!
§v_ªad_⁄ly_mode
) { \

976 
	`§v_a˘ive_wake_ma°î_thªad_low
(); \

978 } 0)

	)

980 
§v_wake_ma°î_thªad
();

981 #i‚de‡
UNIV_HOTBACKUP


991 
boﬁ
 
§v_¥ötf_önodb_m⁄ô‹
(
FILE
 *
fûe
, boﬁ 
nowaô
, 
ulöt
 *
åx_°¨t
,

992 
ulöt
 *
åx_íd
);

995 
§v_exp‹t_önodb_°©us
();

999 
ulöt
 
§v_gë_a˘ivôy_cou¡
();

1002 
iboﬁ
 
§v_check_a˘ivôy
(
ulöt
 
ﬁd_a˘ivôy_cou¡
);

1004 
§v_öc_a˘ivôy_cou¡
();

1008 
§v_que_èsk_íqueue_low
(
que_thr_t
 *
thr
);

1011 
§v_m⁄ô‹_thªad
();

1015 
§v_îr‹_m⁄ô‹_thªad
();

1018 
§v_ma°î_thªad
();

1021 
§v_purge_co‹dö©‹_thªad
();

1024 
§v_w‹kî_thªad
();

1027 
undo_rŸ©e_deÁu…_ma°î_key
();

1034 
boﬁ
 
£t_undo_èbÀ•a˚_í¸y±i⁄
(
•a˚_id_t
 
•a˚_id
, 
må_t
 *
må
,

1035 
boﬁ
 
is_boŸ
);

1042 
boﬁ
 
§v_íabÀ_undo_í¸y±i⁄
(boﬁ 
is_boŸ
);

1049 
boﬁ
 
§v_íabÀ_ªdo_í¸y±i⁄
(boﬁ 
is_boŸ
);

1053 
ulöt
 
§v_gë_èsk_queue_Àngth
();

1059 
ulöt
 
§v_ªÀa£_thªads
(
§v_thªad_ty≥
 
ty≥
,

1060 
ulöt
 
n
);

1069 
boﬁ
 
§v_ma°î_thªad_is_a˘ive
();

1072 
§v_purge_wakeup
();

1076 
boﬁ
 
§v_purge_thªads_a˘ive
();

1084 
dbîr_t
 
§v_undo_èbÀ•a˚_¸óã
(c⁄° *
•a˚_«me
,

1085 c⁄° *
fûe_«me
, 
•a˚_id_t
 
•a˚_id
);

1089 
undo_•a˚s_öô
();

1093 
undo_•a˚s_deöô
();

1097 
£t_§v_ªdo_log
(
boﬁ
 
íabÀ
);

1099 #ifde‡
UNIV_DEBUG


1100 
	gSYS_VAR
;

1108 
§v_ma°î_thªad_dißbÀd_debug_upd©e
(
THD
 *
thd
, 
SYS_VAR
 *
v¨
,

1109 *
v¨_±r
, c⁄° *
ßve
);

1114 
	sexp‹t_v¨_t
 {

1115 
ulöt
 
	mönodb_d©a_≥ndög_ªads
;

1116 
ulöt
 
	mönodb_d©a_≥ndög_wrôes
;

1117 
ulöt
 
	mönodb_d©a_≥ndög_fsyncs
;

1118 
ulöt
 
	mönodb_d©a_fsyncs
;

1119 
ulöt
 
	mönodb_d©a_ªad
;

1120 
ulöt
 
	mönodb_d©a_wrôes
;

1121 
ulöt
 
	mönodb_d©a_wrôãn
;

1122 
ulöt
 
	mönodb_d©a_ªads
;

1123 
	mönodb_buf„r_poﬁ_dump_°©us
[
OS_FILE_MAX_PATH
 +

1125 
	mönodb_buf„r_poﬁ_lﬂd_°©us
[
OS_FILE_MAX_PATH
 +

1127 
	mönodb_buf„r_poﬁ_ªsize_°©us
[512];

1128 
ulöt
 
	mönodb_buf„r_poﬁ_∑ges_tŸÆ
;

1129 
ulöt
 
	mönodb_buf„r_poﬁ_∑ges_d©a
;

1130 
ulöt
 
	mönodb_buf„r_poﬁ_byãs_d©a
;

1131 
ulöt
 
	mönodb_buf„r_poﬁ_∑ges_dúty
;

1132 
ulöt
 
	mönodb_buf„r_poﬁ_byãs_dúty
;

1133 
ulöt
 
	mönodb_buf„r_poﬁ_∑ges_misc
;

1134 
ulöt
 
	mönodb_buf„r_poﬁ_∑ges_‰ì
;

1135 #ifde‡
UNIV_DEBUG


1136 
ulöt
 
	mönodb_buf„r_poﬁ_∑ges_œtched
;

1138 
ulöt
 
	mönodb_buf„r_poﬁ_ªad_ªque°s
;

1139 
ulöt
 
	mönodb_buf„r_poﬁ_ªads
;

1140 
ulöt
 
	mönodb_buf„r_poﬁ_waô_‰ì
;

1141 
ulöt
 
	mönodb_buf„r_poﬁ_∑ges_Êushed
;

1142 
ulöt
 
	mönodb_buf„r_poﬁ_wrôe_ªque°s
;

1143 
ulöt
 
	mönodb_buf„r_poﬁ_ªad_ahód_∫d
;

1144 
ulöt
 
	mönodb_buf„r_poﬁ_ªad_ahód
;

1145 
ulöt
 
	mönodb_buf„r_poﬁ_ªad_ahód_evi˘ed
;

1146 
ulöt
 
	mönodb_dblwr_∑ges_wrôãn
;

1147 
ulöt
 
	mönodb_dblwr_wrôes
;

1148 
ulöt
 
	mönodb_log_waôs
;

1149 
ulöt
 
	mönodb_log_wrôe_ªque°s
;

1150 
ulöt
 
	mönodb_log_wrôes
;

1151 
l¢_t
 
	mönodb_os_log_wrôãn
;

1152 
ulöt
 
	mönodb_os_log_fsyncs
;

1153 
ulöt
 
	mönodb_os_log_≥ndög_wrôes
;

1154 
ulöt
 
	mönodb_os_log_≥ndög_fsyncs
;

1155 
ulöt
 
	mönodb_∑ge_size
;

1156 
ulöt
 
	mönodb_∑ges_¸óãd
;

1157 
ulöt
 
	mönodb_∑ges_ªad
;

1158 
ulöt
 
	mönodb_∑ges_wrôãn
;

1159 
boﬁ
 
	mönodb_ªdo_log_íabÀd
;

1160 
ulöt
 
	mönodb_row_lock_waôs
;

1161 
ulöt
 
	mönodb_row_lock_cuºít_waôs
;

1162 
öt64_t
 
	mönodb_row_lock_time
;

1164 
ulöt
 
	mönodb_row_lock_time_avg
;

1167 
ulöt
 
	mönodb_row_lock_time_max
;

1169 
ulöt
 
	mönodb_rows_ªad
;

1170 
ulöt
 
	mönodb_rows_ö£πed
;

1171 
ulöt
 
	mönodb_rows_upd©ed
;

1172 
ulöt
 
	mönodb_rows_dñëed
;

1173 
ulöt
 
	mönodb_sy°em_rows_ªad
;

1174 
ulöt
 
	mönodb_sy°em_rows_ö£πed
;

1175 
ulöt
 
	mönodb_sy°em_rows_upd©ed
;

1176 
ulöt
 
	mönodb_sy°em_rows_dñëed
;

1177 
ulöt
 
	mönodb_ßm∂ed_∑ges_ªad
;

1178 
ulöt
 
	mönodb_ßm∂ed_∑ges_skù≥d
;

1179 
ulöt
 
	mönodb_num_›í_fûes
;

1180 
ulöt
 
	mönodb_åunˇãd_°©us_wrôes
;

1181 
ulöt
 
	mönodb_undo_èbÀ•a˚s_tŸÆ
;

1183 
ulöt
 
	mönodb_undo_èbÀ•a˚s_im∂icô
;

1185 
ulöt
 
	mönodb_undo_èbÀ•a˚s_ex∂icô
;

1187 
ulöt
 
	mönodb_undo_èbÀ•a˚s_a˘ive
;

1189 #ifde‡
UNIV_DEBUG


1190 
ulöt
 
	mönodb_purge_åx_id_age
;

1191 
ulöt
 
	mönodb_purge_võw_åx_id_age
;

1193 
ulöt
 
	mönodb_ahi_dr›_lookups
;

1199 #i‚de‡
UNIV_HOTBACKUP


1201 
	s§v_¶Ÿ_t
 {

1203 
§v_thªad_ty≥
 
	mty≥
;

1206 
boﬁ
 
	mö_u£
;

1209 
boﬁ
 
	msu•íded
;

1213 
ib_time_m⁄Ÿ⁄ic_t
 
	msu•íd_time
;

1223 
uöt64_t
 
	mª£rv©i⁄_no
;

1227 
ul⁄g
 
	mwaô_timeout
;

1230 
os_evít_t
 
	mevít
;

1233 
que_thr_t
 *
	mthr
;

	@srv0start.h

33 #i‚de‡
§v0°¨t_h


34 
	#§v0°¨t_h


	)

36 
	~"log0ty≥s.h
"

37 
	~"os0thªad-¸óã.h
"

38 #i‚de‡
UNIV_HOTBACKUP


39 
	~"sync0rw.h
"

41 
	~"åx0purge.h
"

42 
	~"univ.i
"

43 
	~"ut0byã.h
"

46 
	gdi˘_èbÀ_t
;

48 #i‚de‡
UNIV_DEBUG


49 
	#RECOVERY_CRASH
(
x
) \

51 } 0)

	)

53 
	#RECOVERY_CRASH
(
x
) \

55 i‡(
§v_f‹˚_ªcovîy_¸ash
 =
x
) { \

56 
	`Êush_îr‹_log_mesßges
(); \

57 
	`Ârötf
(
°dîr
, "innodb_force_recovery_crash=%lu\n", \

58 
§v_f‹˚_ªcovîy_¸ash
); \

59 
	`fÊush
(
°dîr
); \

60 
	`_exô
(3); \

62 } 0)

	)

67 
	#BUF_POOL_SIZE_THRESHOLD
 (1024 * 1024 * 1024)

	)

71 
§v_‰ì_∑ths_™d_sizes
();

76 *
§v_add_∑th_£∑øt‹_if_√eded
(

77 *
°r
);

78 #i‚de‡
UNIV_HOTBACKUP


83 
dbîr_t
 
§v_undo_èbÀ•a˚_›í
(
undo
::
TabÀ•a˚
 &
undo_•a˚
);

88 
dbîr_t
 
§v_undo_èbÀ•a˚s_upgøde
();

93 
dbîr_t
 
	$§v_°¨t
(
boﬁ
 
¸óã_√w_db
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

102 
dbîr_t
 
	`§v_undo_èbÀ•a˚_fixup
(c⁄° *
•a˚_«me
, c⁄° *
fûe_«me
,

103 
•a˚_id_t
 
•a˚_id
);

107 
	`§v_di˘_ªcovî_⁄_ª°¨t
();

111 
	`§v_°¨t_thªads
(
boﬁ
 
boŸ°øp
);

115 
	`§v_°¨t_thªads_a·î_ddl_ªcovîy
();

119 
	`§v_°¨t_purge_thªads
();

123 
boﬁ
 
	`is_óæy_ªdo_undo_í¸y±i⁄_d⁄e
();

129 
ulöt
 
	$§v_∑th_c›y
(*
de°
,

130 
ulöt
 
de°_Àn
,

131 c⁄° *
ba£dú
,

132 c⁄° *
èbÀ_«me
)

133 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

140 
	`§v_gë_í¸y±i⁄_d©a_fûíame
(
di˘_èbÀ_t
 *
èbÀ
, *
fûíame
,

141 
ulöt
 
max_Àn
);

145 
boﬁ
 
§v_is_beög_°¨ãd
;

147 
boﬁ
 
§v_sys_èbÀ•a˚s_›í
;

150 
boﬁ
 
§v_°¨tup_is_bef‹e_åx_rﬁlback_pha£
;

153 
iboﬁ
 
§v_°¨t_øw_disk_ö_u£
;

	@srv0tmp.h

27 #i‚de‡
§v0tmp_h


28 
	#§v0tmp_h


	)

29 
	~"§v0§v.h
"

30 
«me•a˚
 
	gibt
 {

33 
	etb•_puΩo£
 {

34 
	gTBSP_NONE
 = 0,

36 
	gTBSP_USER
,

38 
	gTBSP_INTRINSIC
,

40 
	gTBSP_SLAVE


46 
dbîr_t
 
›í_‹_¸óã
(
boﬁ
 
¸óã_√w_db
);

49 ˛as†
	cTabÀ•a˚
 {

50 
	gpublic
:

51 
TabÀ•a˚
();

53 ~
TabÀ•a˚
();

57 
dbîr_t
 
¸óã
();

61 
boﬁ
 
˛o£
() const;

65 
boﬁ
 
åunˇã
();

69 
boﬁ
 
	g›î©‹
==(c⁄° 
TabÀ•a˚
 &
Ÿhî
) {

70  (
this
->
m_•a˚_id
 =
Ÿhî
.m_space_id);

74 
•a˚_id_t
 
•a˚_id
(Ëc⁄° {  (
	gm_•a˚_id
); }

80 
£t_thªad_id_™d_puΩo£
(
my_thªad_id
 
thªad_id
,

81 
tb•_puΩo£
 
puΩo£
) {

82 
ut_ad
(
m_thªad_id
 == 0);

83 
	gm_thªad_id
 = 
thªad_id
;

84 
	gm_puΩo£
 = 
puΩo£
;

88 
ª£t_thªad_id_™d_puΩo£
() {

89 
ut_ad
(
m_thªad_id
 != 0);

90 
	gm_thªad_id
 = 0;

91 
	gm_puΩo£
 = 
TBSP_NONE
;

95 
my_thªad_id
 
thªad_id
(Ëc⁄° {  (
	gm_thªad_id
); }

98 
tb•_puΩo£
 
puΩo£
(Ëc⁄° {  (
	gm_puΩo£
); }

101 
	g°d
::
°rög
 
∑th
() const;

103 
	g¥iv©e
:

106 
uöt32_t
 
fûe_id
() const;

109 
	g°d
::
°rög
 
fûe_«me
() const;

112 c⁄° 
•a˚_id_t
 
	gm_•a˚_id
;

116 
•a˚_id_t
 
	gm_œ°_u£d_•a˚_id
;

119 
boﬁ
 
	gm_öôed
;

122 
my_thªad_id
 
	gm_thªad_id
;

125 
tb•_puΩo£
 
	gm_puΩo£
;

136 ˛as†
	cTabÀ•a˚_poﬁ
 {

137 
	gpublic
:

138 
usög
 
Poﬁ
 = 
°d
::
li°
<
TabÀ•a˚
 *, 
	gut_Æloˇt‹
<
	gTabÀ•a˚
 *>>;

142 
TabÀ•a˚_poﬁ
(
size_t
 
öô_size
);

145 ~
TabÀ•a˚_poﬁ
();

152 
TabÀ•a˚
 *
gë
(
my_thªad_id
 
id
, 
tb•_puΩo£
 
puΩo£
);

156 
‰ì_ts
(
TabÀ•a˚
 *
ts
);

163 
dbîr_t
 
öôülize
(
boﬁ
 
¸óã_√w_db
);

169 
	gãm∂©e
 <
ty≥«me
 
	gF
>

170 
ôî©e_tb•
(
F
 &&
f
) {

171 
acquúe
();

173 
	g°d
::
f‹_óch
(
begö
(*
m_a˘ive
), 
íd
(*m_a˘ive), 
f
);

174 
	g°d
::
f‹_óch
(
begö
(*
m_‰ì
), 
íd
(*m_‰ì), 
f
);

176 
ªÀa£
();

179 
	g¥iv©e
:

182 
acquúe
(Ë{ 
muãx_íãr
(&
m_muãx
); }

185 
ªÀa£
(Ë{ 
muãx_exô
(&
m_muãx
); }

190 
dbîr_t
 
ex∑nd
(
size_t
 
size
);

196 
dñëe_ﬁd_poﬁ
(
boﬁ
 
¸óã_√w_db
);

198 
	g¥iv©e
:

200 
boﬁ
 
m_poﬁ_öôülized
;

202 
size_t
 
	gm_öô_size
;

204 
Poﬁ
 *
	gm_‰ì
;

206 
Poﬁ
 *
	gm_a˘ive
;

208 
ib_muãx_t
 
	gm_muãx
;

212 
˛ass
 
TabÀ•a˚_poﬁ
 *
tb•_poﬁ
;

215 *
§v_ãmp_dú
;

219 
‰ì_tmp
(
TabÀ•a˚
 *
ts
);

223 
dñëe_poﬁ_m™agî
();

226 
˛o£_fûes
();

231 
TabÀ•a˚
 *
gë_Ωl_¶ave_tbl•
();

	@sync0arr.h

33 #i‚de‡
sync0¨r_h


34 
	#sync0¨r_h


	)

36 
	~"os0thªad.h
"

37 
	~"univ.i
"

40 
	gsync_˚Œ_t
;

43 
	gsync_¨øy_t
;

56 
UNIV_INLINE


57 
sync_¨øy_t
 *
sync_¨øy_gë_™d_ª£rve_˚Œ
(*
obje˘
, 
ulöt
 
ty≥
,

58 c⁄° *
fûe
, 
ulöt
 
löe
,

59 
sync_˚Œ_t
 **
˚Œ
);

63 
sync_˚Œ_t
 *
sync_¨øy_ª£rve_˚Œ
(

64 
sync_¨øy_t
 *
¨r
,

65 *
obje˘
,

66 
ulöt
 
ty≥
,

67 c⁄° *
fûe
,

68 
ulöt
 
löe
);

74 
sync_¨øy_waô_evít
(
sync_¨øy_t
 *
¨r
,

75 
sync_˚Œ_t
 *&
˚Œ
);

79 
sync_¨øy_‰ì_˚Œ
(
sync_¨øy_t
 *
¨r
,

80 
sync_˚Œ_t
 *&
˚Œ
);

83 
sync_¨øy_obje˘_sig«Œed
();

88 
sync_¨r_wake_thªads_if_£ma_‰ì
();

92 
iboﬁ
 
sync_¨øy_¥öt_l⁄g_waôs
(

93 
os_thªad_id_t
 *
waôî
,

94 c⁄° **
£ma
);

97 
sync_¨øy_¥öt
(
FILE
 *
fûe
);

101 
sync_¨øy_öô
(
ulöt
 
n_thªads
);

104 
sync_¨øy_˛o£
();

107 
UNIV_INLINE


108 
sync_¨øy_t
 *
sync_¨øy_gë
();

110 
	~"sync0¨r.ic
"

	@sync0arr.ic

35 
ulöt
 
sync_¨øy_size
;

36 
sync_¨øy_t
 **
sync_waô_¨øy
;

38 
	~"ut0cou¡î.h
"

43 
UNIV_INLINE


44 
sync_¨øy_t
 *
	$sync_¨øy_gë
() {

45 i‡(
sync_¨øy_size
 <= 1) {

46  (
sync_waô_¨øy
[0]);

50 
sync_waô_¨øy
[
deÁu…_ödexî_t
<>::
	`gë_∫d_ödex
(Ë% 
sync_¨øy_size
]);

51 
	}
}

59 
UNIV_INLINE


60 
sync_¨øy_t
 *
	$sync_¨øy_gë_™d_ª£rve_˚Œ
(

61 *
obje˘
,

62 
ulöt
 
ty≥
,

63 c⁄° *
fûe
,

64 
ulöt
 
löe
,

65 
sync_˚Œ_t
 **
˚Œ
)

67 
sync_¨øy_t
 *
sync_¨r
 = 
nuŒ±r
;

69 *
˚Œ
 = 
nuŒ±r
;

70 
ulöt
 
i
 = 0; i < 
sync_¨øy_size
 && *
˚Œ
 =
nuŒ±r
; ++i) {

74 
sync_¨r
 = 
	`sync_¨øy_gë
();

75 *
˚Œ
 = 
	`sync_¨øy_ª£rve_˚Œ
(
sync_¨r
, 
obje˘
, 
ty≥
, 
fûe
, 
löe
);

81 
	`ut_a
(*
˚Œ
 !
nuŒ±r
);

83  (
sync_¨r
);

84 
	}
}

	@sync0debug.h

39 #i‚de‡
sync0debug_h


40 
	#sync0debug_h


	)

42 #i‚de‡
UNIV_LIBRARY


43 
	~"sync0ty≥s.h
"

44 
	~"univ.i
"

48 
sync_check_öô
(
size_t
 
max_thªads
);

51 
sync_check_˛o£
();

53 #ifde‡
UNIV_DEBUG


55 
sync_check_íabÀ
();

59 
sync_check_lock_vÆid©e
(c⁄° 
œtch_t
 *
œtch
);

63 
sync_check_lock_gø¡ed
(c⁄° 
œtch_t
 *
œtch
);

68 
sync_check_lock
(c⁄° 
œtch_t
 *
œtch
, 
œtch_Àvñ_t
 
Àvñ
);

72 
sync_check_ªlock
(c⁄° 
œtch_t
 *
œtch
);

76 
sync_check_u∆ock
(c⁄° 
œtch_t
 *
œtch
);

82 c⁄° 
œtch_t
 *
sync_check_föd
(
œtch_Àvñ_t
 
Àvñ
);

88 
boﬁ
 
sync_check_ôî©e
(
sync_check_fun˘‹_t
 &
fun˘‹
);

95 
rw_lock_debug_muãx_íãr
();

98 
rw_lock_debug_muãx_exô
();

	@sync0policy.h

33 #i‚de‡
sync0pﬁicy_h


34 
	#sync0pﬁicy_h


	)

36 
	~"os0thªad.h
"

37 
	~"§v0m⁄.h
"

38 
	~"sync0ty≥s.h
"

39 
	~"univ.i
"

40 
	~"ut0∫d.h
"

42 #i‚de‡
UNIV_LIBRARY


43 #ifde‡
UNIV_DEBUG


45 
	#MUTEX_MAGIC_N
 979585UL

	)

47 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

48 ˛as†
	cMuãxDebug
 {

49 
	mpublic
:

51 
C⁄ãxt
 : 
public
 
œtch_t
 {

53 
C⁄ãxt
()

54 : 
m_muãx
(),

55 
m_fûíame
(),

56 
m_löe
(),

57 
m_thªad_id
(
os_thªad_id_t
(
ULINT_UNDEFINED
)) {

63 
C⁄ãxt
(
œtch_id_t
 
id
Ë: 
œtch_t
(id) {

70 
locked
(c⁄° 
Muãx
 *
muãx
, c⁄° *
fûíame
,

71 
ulöt
 
löe
Ë
	mUNIV_NOTHROW
 {

72 
	mm_muãx
 = 
muãx
;

74 
	mm_thªad_id
 = 
os_thªad_gë_cuº_id
();

76 
	mm_fûíame
 = 
fûíame
;

78 
	mm_löe
 = 
löe
;

82 
ªÀa£
(Ë
	mUNIV_NOTHROW
 {

83 
	mm_muãx
 = 
nuŒ±r
;

85 
	mm_thªad_id
 = 
os_thªad_id_t
(
ULINT_UNDEFINED
);

87 
	mm_fûíame
 = 
nuŒ±r
;

89 
	mm_löe
 = 
ULINT_UNDEFINED
;

94 
	m°d
::
°rög
 
to_°rög
(Ëc⁄° 
ovîride
 
UNIV_NOTHROW
 {

95 
°d
::
o°rög°ªam
 
msg
;

97 
	mmsg
 << 
	mm_muãx
->
pﬁicy
().
to_°rög
();

99 i‡(
	mm_thªad_id
 !
os_thªad_id_t
(
ULINT_UNDEFINED
)) {

100 
msg
 << "áddr: " << 
m_muãx
 << "ácquúed: " << 
locked_‰om
().
c_°r
();

103 
	mmsg
 << "NotÜocked";

106  (
	mmsg
.
°r
());

111 
vútuÆ
 
	m°d
::
°rög
 
locked_‰om
(Ëc⁄° 
ovîride
 {

112 
°d
::
o°rög°ªam
 
msg
;

114 
	mmsg
 << 
sync_ba£«me
(
m_fûíame
Ë<< ":" << 
	mm_löe
;

116  (
	m°d
::
°rög
(
msg
.
°r
()));

120 c⁄° 
Muãx
 *
	mm_muãx
;

123 c⁄° *
	mm_fûíame
;

126 
ulöt
 
	mm_löe
;

129 
os_thªad_id_t
 
	mm_thªad_id
;

133 
	$MuãxDebug
(Ë: 
	`m_magic_n
(), 
	$m_c⁄ãxt
(Ë
UNIV_NOTHROW
 {

134 
	}
}

137 
	gvútuÆ
 ~
	$MuãxDebug
(Ë{
	}
}

140 
	$de°roy
(Ë
UNIV_NOTHROW
 {

141 
	`ut_ad
(
m_c⁄ãxt
.
m_thªad_id
 =
	`os_thªad_id_t
(
ULINT_UNDEFINED
));

143 
m_magic_n
 = 0;

145 
m_c⁄ãxt
.
m_thªad_id
 = 0;

146 
	}
}

151 
	$öô
(
œtch_id_t
 
id
Ë
UNIV_NOTHROW
;

157 
	$íãr
(c⁄° 
Muãx
 *
muãx
, c⁄° *
fûíame
, 
ulöt
 
löe
Ë
UNIV_NOTHROW
;

163 
	$locked
(c⁄° 
Muãx
 *
muãx
, c⁄° *
fûíame
,

164 
ulöt
 
löe
Ë
UNIV_NOTHROW
;

168 
	$ªÀa£
(c⁄° 
Muãx
 *
muãx
Ë
UNIV_NOTHROW
;

171 
boﬁ
 
	$is_ow√d
(Ëc⁄° 
UNIV_NOTHROW
 {

172  (
	`os_thªad_eq
(
m_c⁄ãxt
.
m_thªad_id
, 
	`os_thªad_gë_cuº_id
()));

173 
	}
}

176 c⁄° *
	$gë_íãr_fûíame
(Ëc⁄° 
UNIV_NOTHROW
 {

177  (
m_c⁄ãxt
.
m_fûíame
);

178 
	}
}

181 
ulöt
 
	$gë_íãr_löe
(Ëc⁄° 
UNIV_NOTHROW
 {  (
m_c⁄ãxt
.
m_löe
); 
	}
}

184 
os_thªad_id_t
 
	$gë_thªad_id
(Ëc⁄° 
UNIV_NOTHROW
 {

185  (
m_c⁄ãxt
.
m_thªad_id
);

186 
	}
}

189 
ulöt
 
	gm_magic_n
;

192 
C⁄ãxt
 
	gm_c⁄ãxt
;

197 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

198 
	sNoPﬁicy
 {

200 
NoPﬁicy
() {}

202 
öô
(c⁄° 
Muãx
 &, 
œtch_id_t
, c⁄° *, 
uöt32_t
Ë
	mUNIV_NOTHROW
 {}

203 
de°roy
(Ë
	mUNIV_NOTHROW
 {}

204 
íãr
(c⁄° 
Muãx
 &, c⁄° *, 
ulöt
 
löe
Ë
	mUNIV_NOTHROW
 {}

205 
add
(
uöt32_t
, uöt32_tË
	mUNIV_NOTHROW
 {}

206 
locked
(c⁄° 
Muãx
 &, c⁄° *, 
ulöt
Ë
	mUNIV_NOTHROW
 {}

207 
ªÀa£
(c⁄° 
Muãx
 &Ë
	mUNIV_NOTHROW
 {}

208 
	m°d
::
°rög
 
to_°rög
() const {  (""); }

209 
œtch_id_t
 
gë_id
() const;

213 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

214 
	gGíîicPﬁicy


215 #ifde‡
UNIV_DEBUG


216 : 
public
 
MuãxDebug
<
Muãx
>

219 
public
:

220 
Muãx
 
	tMuãxTy≥
;

223 
GíîicPﬁicy
(Ë
	gUNIV_NOTHROW
 :

224 #ifde‡
UNIV_DEBUG


225 
MuãxDebug
<
MuãxTy≥
>(),

227 
m_cou¡
(),

228 
m_id
() {

232 ~
GíîicPﬁicy
() {}

240 
öô
(c⁄° 
MuãxTy≥
 &
muãx
, 
œtch_id_t
 
id
, c⁄° *
fûíame
,

241 
uöt32_t
 
löe
Ë
	gUNIV_NOTHROW
 {

242 
	gm_id
 = 
id
;

244 
	gœtch_mëa_t
 &
	gmëa
 = 
sync_œtch_gë_mëa
(
id
);

246 
ut_ad
(
mëa
.
gë_id
(Ë=
id
);

248 
	gmëa
.
gë_cou¡î
()->
sögÀ_ªgi°î
(&
m_cou¡
);

250 
sync_fûe_¸óãd_ªgi°î
(
this
, 
fûíame
, 
löe
);

252 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
öô
(
m_id
));

256 
de°roy
(Ë
	gUNIV_NOTHROW
 {

257 
	gœtch_mëa_t
 &
	gmëa
 = 
sync_œtch_gë_mëa
(
m_id
);

259 
	gmëa
.
gë_cou¡î
()->
sögÀ_dîegi°î
(&
m_cou¡
);

261 
sync_fûe_¸óãd_dîegi°î
(
this
);

263 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
de°roy
());

271 
add
(
uöt32_t
 
n_•ös
, uöt32_à
n_waôs
Ë
	gUNIV_NOTHROW
 {

274 i‡(!
	gm_cou¡
.
	gm_íabÀd
) {

278 
	gm_cou¡
.
	gm_•ös
 +
n_•ös
;

279 
	gm_cou¡
.
	gm_waôs
 +
n_waôs
;

281 ++
	gm_cou¡
.
	gm_ˇŒs
;

288 
íãr
(c⁄° 
MuãxTy≥
 &
muãx
, c⁄° *
fûíame
,

289 
ulöt
 
löe
Ë
	gUNIV_NOTHROW
 {

290 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
íãr
(&
muãx
, 
fûíame
, 
löe
));

297 
locked
(c⁄° 
MuãxTy≥
 &
muãx
, c⁄° *
fûíame
,

298 
ulöt
 
löe
Ë
	gUNIV_NOTHROW
 {

299 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
locked
(&
muãx
, 
fûíame
, 
löe
));

304 
ªÀa£
(c⁄° 
MuãxTy≥
 &
muãx
Ë
	gUNIV_NOTHROW
 {

305 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
ªÀa£
(&
muãx
));

310 
	g°d
::
°rög
 
¥öt
(Ëc⁄° 
UNIV_NOTHROW
;

313 
œtch_id_t
 
gë_id
(Ëc⁄° 
	gUNIV_NOTHROW
 {  (
	gm_id
); }

316 
	g°d
::
°rög
 
to_°rög
() const;

318 
	g¥iv©e
:

319 
œtch_mëa_t
::
	tCou¡îTy≥
 
	tCou¡î
;

322 
	gCou¡î
::
Cou¡
 
m_cou¡
;

325 
œtch_id_t
 
	gm_id
;

330 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

331 
˛ass
 
	gBlockMuãxPﬁicy


332 #ifde‡
UNIV_DEBUG


333 : 
public
 
MuãxDebug
<
Muãx
>

336 
public
:

337 
Muãx
 
	tMuãxTy≥
;

338 
ty≥«me
 
	tœtch_mëa_t
::
	tCou¡îTy≥
::
	tCou¡
 Count;

341 
BlockMuãxPﬁicy
()

343 #ifde‡
UNIV_DEBUG


344 
MuãxDebug
<
MuãxTy≥
>(),

346 
m_cou¡
(),

347 
m_id
() {

352 ~
BlockMuãxPﬁicy
() {}

360 
öô
(c⁄° 
MuãxTy≥
 &
muãx
, 
œtch_id_t
 
id
, c⁄° *
fûíame
,

361 
uöt32_t
 
löe
Ë
	gUNIV_NOTHROW
 {

367 
	gm_id
 = 
id
;

369 
	gœtch_mëa_t
 &
	gmëa
 = 
sync_œtch_gë_mëa
(
m_id
);

371 
ut_ad
(
mëa
.
gë_id
(Ë=
id
);

373 
	gm_cou¡
 = 
mëa
.
gë_cou¡î
()->
sum_ªgi°î
();

375 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
öô
(
m_id
));

379 
de°roy
(Ë
	gUNIV_NOTHROW
 {

380 
	gœtch_mëa_t
 &
	gmëa
 = 
sync_œtch_gë_mëa
(
m_id
);

382 
ut_ad
(
mëa
.
gë_id
(Ë=
m_id
);

384 
	gmëa
.
gë_cou¡î
()->
sum_dîegi°î
(
m_cou¡
);

386 
	gm_cou¡
 = 
nuŒ±r
;

388 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
de°roy
());

396 
add
(
uöt32_t
 
n_•ös
, uöt32_à
n_waôs
Ë
	gUNIV_NOTHROW
 {

397 i‡(!
	gm_cou¡
->
	gm_íabÀd
) {

401 
	gm_cou¡
->
	gm_•ös
 +
n_•ös
;

402 
	gm_cou¡
->
	gm_waôs
 +
n_waôs
;

404 ++
	gm_cou¡
->
	gm_ˇŒs
;

411 
locked
(c⁄° 
MuãxTy≥
 &
muãx
, c⁄° *
fûíame
,

412 
ulöt
 
löe
Ë
	gUNIV_NOTHROW
 {

413 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
locked
(&
muãx
, 
fûíame
, 
löe
));

418 
ªÀa£
(c⁄° 
MuãxTy≥
 &
muãx
Ë
	gUNIV_NOTHROW
 {

419 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
ªÀa£
(&
muãx
));

426 
íãr
(c⁄° 
MuãxTy≥
 &
muãx
, c⁄° *
fûíame
,

427 
ulöt
 
löe
Ë
	gUNIV_NOTHROW
 {

428 
ut_d
(
MuãxDebug
<
MuãxTy≥
>::
íãr
(&
muãx
, 
fûíame
, 
löe
));

433 
	g°d
::
°rög
 
¥öt
(Ëc⁄° 
UNIV_NOTHROW
;

436 
œtch_id_t
 
gë_id
(Ëc⁄° {  (
	gm_id
); }

439 
	g°d
::
°rög
 
to_°rög
() const;

441 
	g¥iv©e
:

442 
œtch_mëa_t
::
	tCou¡îTy≥
 
	tCou¡î
;

445 
	gCou¡î
::
Cou¡
 *
m_cou¡
;

448 
œtch_id_t
 
	gm_id
;

451 
	~"sync0pﬁicy.ic
"

	@sync0policy.ic

33 
	~"sync0debug.h
"

35 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

36 
	g°d
::
°rög
 
GíîicPﬁicy
<
Muãx
>::
	$to_°rög
() const {

37  (
	`sync_muãx_to_°rög
(
	`gë_id
(), 
	`sync_fûe_¸óãd_gë
(
this
)));

38 
	}
}

40 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

41 
	g°d
::
°rög
 
BlockMuãxPﬁicy
<
Muãx
>::
	$to_°rög
() const {

45  (
	`sync_muãx_to_°rög
(
	`gë_id
(), "buf0buf.cc:0"));

46 
	}
}

48 #ifde‡
UNIV_DEBUG


50 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

51 
	gMuãxDebug
<
	gMuãx
>::
	$öô
(
œtch_id_t
 
id
Ë
UNIV_NOTHROW
 {

52 
m_c⁄ãxt
.
m_id
 = 
id
;

54 
m_c⁄ãxt
.
	`ªÀa£
();

56 
m_magic_n
 = 
MUTEX_MAGIC_N
;

57 
	}
}

59 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

60 
	gMuãxDebug
<
	gMuãx
>::
	$íãr
(c⁄° 
Muãx
 *
muãx
, c⁄° *
«me
,

61 
ulöt
 
löe
Ë
UNIV_NOTHROW
 {

62 
	`ut_ad
(!
	`is_ow√d
());

64 
C⁄ãxt
 
	`c⁄ãxt
(
m_c⁄ãxt
.
	`gë_id
());

66 
c⁄ãxt
.
	`locked
(
muãx
, 
«me
, 
löe
);

70 
	`sync_check_lock_vÆid©e
(&
c⁄ãxt
);

71 
	}
}

73 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

74 
	gMuãxDebug
<
	gMuãx
>::
	$locked
(c⁄° 
Muãx
 *
muãx
, c⁄° *
«me
,

75 
ulöt
 
löe
Ë
UNIV_NOTHROW
 {

76 
	`ut_ad
(!
	`is_ow√d
());

77 
	`ut_ad
(
m_c⁄ãxt
.
m_thªad_id
 =
	`os_thªad_id_t
(
ULINT_UNDEFINED
));

79 
m_c⁄ãxt
.
	`locked
(
muãx
, 
«me
, 
löe
);

81 
	`sync_check_lock_gø¡ed
(&
m_c⁄ãxt
);

82 
	}
}

84 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

85 
	gMuãxDebug
<
	gMuãx
>::
	$ªÀa£
(c⁄° 
Muãx
 *
muãx
Ë
UNIV_NOTHROW
 {

86 
	`ut_ad
(
	`is_ow√d
());

88 
m_c⁄ãxt
.
	`ªÀa£
();

90 
	`sync_check_u∆ock
(&
m_c⁄ãxt
);

91 
	}
}

	@sync0rw.h

40 #i‚de‡
sync0rw_h


41 
	#sync0rw_h


	)

43 
	~"univ.i
"

44 #i‚de‡
UNIV_HOTBACKUP


45 
	~"os0evít.h
"

46 
	~"ut0cou¡î.h
"

48 
	~<©omic
>

49 
	~"ut0muãx.h
"

51 
	grw_lock_t
;

53 #i‚de‡
UNIV_HOTBACKUP


55 #ifde‡
UNIV_LIBRARY


57 #ifde‡
UNIV_DEBUG


65 
UNIV_INLINE


66 
boﬁ
 
	$rw_lock_own
(
rw_lock_t
 *
lock
, 
ulöt
 
lock_ty≥
Ë{  (lock !
nuŒ±r
); 
	}
}

68 
	#sync_check_ôî©e
(
A
Ë
åue


	)

71 
	#rw_lock_s_lock
(
L
Ë(()0)

	)

72 
	#rw_lock_s_u∆ock
(
L
Ë(()0)

	)

73 
	#rw_lock_x_lock
(
L
Ë(()0)

	)

74 
	#rw_lock_x_lock_nowaô
(
L
Ë
åue


	)

75 
	#rw_lock_x_u∆ock
(
L
Ë(()0)

	)

76 
	#rw_lock_sx_lock
(
L
Ë(()0)

	)

77 
	#rw_lock_sx_u∆ock
(
L
Ë(()0)

	)

78 
	#rw_lock_s_lock_ölöe
(
M
, 
P
, 
F
, 
L
Ë(()0)

	)

79 
	#rw_lock_s_u∆ock_ölöe
(
M
, 
P
, 
F
, 
L
Ë(()0)

	)

80 
	#rw_lock_x_lock_ölöe
(
M
, 
P
, 
F
, 
L
Ë(()0)

	)

81 
	#rw_lock_x_u∆ock_ölöe
(
M
, 
P
, 
F
, 
L
Ë(()0)

	)

82 
	#rw_lock_sx_lock_ölöe
(
M
, 
P
, 
F
, 
L
Ë(()0)

	)

83 
	#rw_lock_sx_u∆ock_ölöe
(
M
, 
P
, 
F
, 
L
Ë(()0)

	)

84 
	#sync_check_lock
(
A
, 
B
Ë(()0)

	)

85 
	#rw_lock_s_lock_nowaô
(
M
, 
F
, 
L
Ë
åue


	)

86 
	#rw_lock_own_Êagged
(
A
, 
B
Ë
åue


	)

90 
	srw_lock_°©s_t
 {

91 
	mib_cou¡î_t
<
	tuöt64_t
, 
	tIB_N_SLOTS
> 
	tuöt64_cou¡î_t
;

95 
uöt64_cou¡î_t
 
	mrw_s_•ö_waô_cou¡
;

99 
uöt64_cou¡î_t
 
	mrw_s_•ö_round_cou¡
;

103 
uöt64_cou¡î_t
 
	mrw_s_os_waô_cou¡
;

107 
uöt64_cou¡î_t
 
	mrw_x_•ö_waô_cou¡
;

111 
uöt64_cou¡î_t
 
	mrw_x_•ö_round_cou¡
;

115 
uöt64_cou¡î_t
 
	mrw_x_os_waô_cou¡
;

119 
uöt64_cou¡î_t
 
	mrw_sx_•ö_waô_cou¡
;

123 
uöt64_cou¡î_t
 
	mrw_sx_•ö_round_cou¡
;

127 
uöt64_cou¡î_t
 
	mrw_sx_os_waô_cou¡
;

135 
	erw_lock_ty≥_t
 {

136 
	mRW_S_LATCH
 = 1,

137 
	mRW_X_LATCH
 = 2,

138 
	mRW_SX_LATCH
 = 4,

139 
	mRW_NO_LATCH
 = 8

146 
	#X_LOCK_DECR
 0x20000000

	)

147 
	#X_LOCK_HALF_DECR
 0x10000000

	)

149 #ifde‡
UNIV_DEBUG


150 
	grw_lock_debug_t
;

153 
	$UT_LIST_BASE_NODE_T
(
	trw_lock_t
Ë
	trw_lock_li°_t
;

155 
rw_lock_li°_t
 
rw_lock_li°
;

156 
ib_muãx_t
 
rw_lock_li°_muãx
;

158 #i‚de‡
UNIV_HOTBACKUP


160 
rw_lock_°©s_t
 
rw_lock_°©s
;

163 #i‚de‡
UNIV_LIBRARY


164 #i‚de‡
UNIV_HOTBACKUP


165 #i‚de‡
UNIV_PFS_RWLOCK


172 #ifde‡
UNIV_DEBUG


173 
	#rw_lock_¸óã
(
K
, 
L
, 
Àvñ
) \

174 
	`rw_lock_¸óã_func
((
L
), (
Àvñ
), #L, 
__FILE__
, 
__LINE__
)

	)

176 
	#rw_lock_¸óã
(
K
, 
L
, 
Àvñ
Ë
	`rw_lock_¸óã_func
((L), 
__FILE__
, 
__LINE__
)

	)

182 
	#rw_lock_s_lock
(
M
Ë
	`rw_lock_s_lock_func
((M), 0, 
__FILE__
, 
__LINE__
)

	)

184 
	#rw_lock_s_lock_ölöe
(
M
, 
P
, 
F
, 
L
) \

185 
	`rw_lock_s_lock_func
((
M
), (
P
), (
F
), (
L
))

	)

187 
	#rw_lock_s_lock_gí
(
M
, 
P
) \

188 
	`rw_lock_s_lock_func
((
M
), (
P
), 
__FILE__
, 
__LINE__
)

	)

190 
	#rw_lock_s_lock_nowaô
(
M
, 
F
, 
L
Ë
	`rw_lock_s_lock_low
((M), 0, (F), (L))

	)

192 #ifde‡
UNIV_DEBUG


193 
	#rw_lock_s_u∆ock_gí
(
L
, 
P
Ë
	`rw_lock_s_u∆ock_func
(P, L)

	)

195 
	#rw_lock_s_u∆ock_gí
(
L
, 
P
Ë
	`rw_lock_s_u∆ock_func
(L)

	)

198 
	#rw_lock_sx_lock
(
L
Ë
	`rw_lock_sx_lock_func
((L), 0, 
__FILE__
, 
__LINE__
)

	)

200 
	#rw_lock_sx_lock_ölöe
(
M
, 
P
, 
F
, 
L
) \

201 
	`rw_lock_sx_lock_func
((
M
), (
P
), (
F
), (
L
))

	)

203 
	#rw_lock_sx_lock_gí
(
M
, 
P
) \

204 
	`rw_lock_sx_lock_func
((
M
), (
P
), 
__FILE__
, 
__LINE__
)

	)

206 
	#rw_lock_sx_lock_nowaô
(
M
, 
P
) \

207 
	`rw_lock_sx_lock_low
((
M
), (
P
), 
__FILE__
, 
__LINE__
)

	)

209 #ifde‡
UNIV_DEBUG


210 
	#rw_lock_sx_u∆ock
(
L
Ë
	`rw_lock_sx_u∆ock_func
(0, L)

	)

211 
	#rw_lock_sx_u∆ock_gí
(
L
, 
P
Ë
	`rw_lock_sx_u∆ock_func
(P, L)

	)

213 
	#rw_lock_sx_u∆ock
(
L
Ë
	`rw_lock_sx_u∆ock_func
(L)

	)

214 
	#rw_lock_sx_u∆ock_gí
(
L
, 
P
Ë
	`rw_lock_sx_u∆ock_func
(L)

	)

217 
	#rw_lock_x_lock
(
M
Ë
	`rw_lock_x_lock_func
((M), 0, 
__FILE__
, 
__LINE__
)

	)

219 
	#rw_lock_x_lock_ölöe
(
M
, 
P
, 
F
, 
L
) \

220 
	`rw_lock_x_lock_func
((
M
), (
P
), (
F
), (
L
))

	)

222 
	#rw_lock_x_lock_gí
(
M
, 
P
) \

223 
	`rw_lock_x_lock_func
((
M
), (
P
), 
__FILE__
, 
__LINE__
)

	)

225 
	#rw_lock_x_lock_nowaô
(
M
) \

226 
	`rw_lock_x_lock_func_nowaô
((
M
), 
__FILE__
, 
__LINE__
)

	)

228 
	#rw_lock_x_lock_func_nowaô_ölöe
(
M
, 
F
, 
L
) \

229 
	`rw_lock_x_lock_func_nowaô
((
M
), (
F
), (
L
))

	)

231 #ifde‡
UNIV_DEBUG


232 
	#rw_lock_x_u∆ock_gí
(
L
, 
P
Ë
	`rw_lock_x_u∆ock_func
(P, L)

	)

234 
	#rw_lock_x_u∆ock_gí
(
L
, 
P
Ë
	`rw_lock_x_u∆ock_func
(L)

	)

237 
	#rw_lock_‰ì
(
M
Ë
	`rw_lock_‰ì_func
(M)

	)

242 #ifde‡
UNIV_DEBUG


243 
	#rw_lock_¸óã
(
K
, 
L
, 
Àvñ
) \

244 
	`pfs_rw_lock_¸óã_func
((
K
), (
L
), (
Àvñ
), #L, 
__FILE__
, 
__LINE__
)

	)

246 
	#rw_lock_¸óã
(
K
, 
L
, 
Àvñ
) \

247 
	`pfs_rw_lock_¸óã_func
((
K
), (
L
), 
__FILE__
, 
__LINE__
)

	)

254 
	#rw_lock_s_lock
(
M
Ë
	`pfs_rw_lock_s_lock_func
((M), 0, 
__FILE__
, 
__LINE__
)

	)

256 
	#rw_lock_s_lock_ölöe
(
M
, 
P
, 
F
, 
L
) \

257 
	`pfs_rw_lock_s_lock_func
((
M
), (
P
), (
F
), (
L
))

	)

259 
	#rw_lock_s_lock_gí
(
M
, 
P
) \

260 
	`pfs_rw_lock_s_lock_func
((
M
), (
P
), 
__FILE__
, 
__LINE__
)

	)

262 
	#rw_lock_s_lock_nowaô
(
M
, 
F
, 
L
Ë
	`pfs_rw_lock_s_lock_low
((M), 0, (F), (L))

	)

264 #ifde‡
UNIV_DEBUG


265 
	#rw_lock_s_u∆ock_gí
(
L
, 
P
Ë
	`pfs_rw_lock_s_u∆ock_func
(P, L)

	)

267 
	#rw_lock_s_u∆ock_gí
(
L
, 
P
Ë
	`pfs_rw_lock_s_u∆ock_func
(L)

	)

270 
	#rw_lock_sx_lock
(
M
Ë
	`pfs_rw_lock_sx_lock_func
((M), 0, 
__FILE__
, 
__LINE__
)

	)

272 
	#rw_lock_sx_lock_ölöe
(
M
, 
P
, 
F
, 
L
) \

273 
	`pfs_rw_lock_sx_lock_func
((
M
), (
P
), (
F
), (
L
))

	)

275 
	#rw_lock_sx_lock_gí
(
M
, 
P
) \

276 
	`pfs_rw_lock_sx_lock_func
((
M
), (
P
), 
__FILE__
, 
__LINE__
)

	)

278 
	#rw_lock_sx_lock_nowaô
(
M
, 
P
) \

279 
	`pfs_rw_lock_sx_lock_low
((
M
), (
P
), 
__FILE__
, 
__LINE__
)

	)

281 #ifde‡
UNIV_DEBUG


282 
	#rw_lock_sx_u∆ock
(
L
Ë
	`pfs_rw_lock_sx_u∆ock_func
(0, L)

	)

283 
	#rw_lock_sx_u∆ock_gí
(
L
, 
P
Ë
	`pfs_rw_lock_sx_u∆ock_func
(P, L)

	)

285 
	#rw_lock_sx_u∆ock
(
L
Ë
	`pfs_rw_lock_sx_u∆ock_func
(L)

	)

286 
	#rw_lock_sx_u∆ock_gí
(
L
, 
P
Ë
	`pfs_rw_lock_sx_u∆ock_func
(L)

	)

289 
	#rw_lock_x_lock
(
M
Ë
	`pfs_rw_lock_x_lock_func
((M), 0, 
__FILE__
, 
__LINE__
)

	)

291 
	#rw_lock_x_lock_ölöe
(
M
, 
P
, 
F
, 
L
) \

292 
	`pfs_rw_lock_x_lock_func
((
M
), (
P
), (
F
), (
L
))

	)

294 
	#rw_lock_x_lock_gí
(
M
, 
P
) \

295 
	`pfs_rw_lock_x_lock_func
((
M
), (
P
), 
__FILE__
, 
__LINE__
)

	)

297 
	#rw_lock_x_lock_nowaô
(
M
) \

298 
	`pfs_rw_lock_x_lock_func_nowaô
((
M
), 
__FILE__
, 
__LINE__
)

	)

300 
	#rw_lock_x_lock_func_nowaô_ölöe
(
M
, 
F
, 
L
) \

301 
	`pfs_rw_lock_x_lock_func_nowaô
((
M
), (
F
), (
L
))

	)

303 #ifde‡
UNIV_DEBUG


304 
	#rw_lock_x_u∆ock_gí
(
L
, 
P
Ë
	`pfs_rw_lock_x_u∆ock_func
(P, L)

	)

306 
	#rw_lock_x_u∆ock_gí
(
L
, 
P
Ë
	`pfs_rw_lock_x_u∆ock_func
(L)

	)

309 
	#rw_lock_‰ì
(
M
Ë
	`pfs_rw_lock_‰ì_func
(M)

	)

313 
	#rw_lock_s_u∆ock
(
L
Ë
	`rw_lock_s_u∆ock_gí
(L, 0)

	)

314 
	#rw_lock_x_u∆ock
(
L
Ë
	`rw_lock_x_u∆ock_gí
(L, 0)

	)

320 
	`rw_lock_¸óã_func
(

321 
rw_lock_t
 *
lock
,

322 #ifde‡
UNIV_DEBUG


323 
œtch_Àvñ_t
 
Àvñ
,

324 c⁄° *
cmuãx_«me
,

326 c⁄° *
cfûe_«me
,

327 
ulöt
 
˛öe
);

331 
	`rw_lock_‰ì_func
(
rw_lock_t
 *
lock
);

332 #ifde‡
UNIV_DEBUG


336 
boﬁ
 
	`rw_lock_vÆid©e
(c⁄° 
rw_lock_t
 *
lock
);

347 
UNIV_INLINE


348 
boﬁ
 
	`rw_lock_s_lock_low
(
rw_lock_t
 *
lock
, 
ulöt
 
∑ss
 
	`MY_ATTRIBUTE
((
unu£d
)),

349 c⁄° *
fûe_«me
, 
ulöt
 
löe
);

361 
UNIV_INLINE


362 
	`rw_lock_s_lock_func
(
rw_lock_t
 *
lock
, 
ulöt
 
∑ss
, c⁄° *
fûe_«me
,

363 
ulöt
 
löe
);

372 
UNIV_INLINE


373 
boﬁ
 
	`rw_lock_x_lock_func_nowaô
(
rw_lock_t
 *
lock
, c⁄° *
fûe_«me
,

374 
ulöt
 
löe
);

377 #ifde‡
UNIV_DEBUG


382 
UNIV_INLINE


383 
	`rw_lock_s_u∆ock_func
(

384 #ifde‡
UNIV_DEBUG


385 
ulöt
 
∑ss
,

387 
rw_lock_t
 *
lock
);

397 
	`rw_lock_x_lock_func
(

398 
rw_lock_t
 *
lock
,

399 
ulöt
 
∑ss
,

401 c⁄° *
fûe_«me
,

402 
ulöt
 
löe
);

405 
boﬁ
 
	`rw_lock_sx_lock_low
(

406 
rw_lock_t
 *
lock
,

407 
ulöt
 
∑ss
,

409 c⁄° *
fûe_«me
,

410 
ulöt
 
löe
);

419 
	`rw_lock_sx_lock_func
(

420 
rw_lock_t
 *
lock
,

421 
ulöt
 
∑ss
,

423 c⁄° *
fûe_«me
,

424 
ulöt
 
löe
);

427 #ifde‡
UNIV_DEBUG


432 
UNIV_INLINE


433 
	`rw_lock_x_u∆ock_func
(

434 #ifde‡
UNIV_DEBUG


435 
ulöt
 
∑ss
,

437 
rw_lock_t
 *
lock
);

440 #ifde‡
UNIV_DEBUG


445 
UNIV_INLINE


446 
	`rw_lock_sx_u∆ock_func
(

447 #ifde‡
UNIV_DEBUG


448 
ulöt
 
∑ss
,

450 
rw_lock_t
 *
lock
);

459 
	`rw_lock_x_lock_move_ow√rshù
(

460 
rw_lock_t
 *
lock
);

466 
UNIV_INLINE


467 
ulöt
 
	`rw_lock_gë_x_lock_cou¡
(c⁄° 
rw_lock_t
 *
lock
);

471 
UNIV_INLINE


472 
ulöt
 
	`rw_lock_gë_sx_lock_cou¡
(c⁄° 
rw_lock_t
 *
lock
);

475 
UNIV_INLINE


476 
boﬁ
 
	`rw_lock_gë_waôîs
(c⁄° 
rw_lock_t
 *
lock
);

480 
UNIV_INLINE


481 
ulöt
 
	`rw_lock_gë_wrôî
(c⁄° 
rw_lock_t
 *
lock
);

484 
UNIV_INLINE


485 
ulöt
 
	`rw_lock_gë_ªadî_cou¡
(c⁄° 
rw_lock_t
 *
lock
);

493 
UNIV_INLINE


494 
boﬁ
 
	`rw_lock_lock_w‹d_de¸
(
rw_lock_t
 *
lock
, 
ulöt
 
amou¡
, 
löt
 
thªshﬁd
);

500 
UNIV_INLINE


501 
löt
 
	`rw_lock_lock_w‹d_ö¸
(
rw_lock_t
 *
lock
, 
ulöt
 
amou¡
);

512 
UNIV_INLINE


513 
	`rw_lock_£t_wrôî_id_™d_ªcursi⁄_Êag
(
rw_lock_t
 *
lock
, 
boﬁ
 
ªcursive
);

515 #i‚de‡
UNIV_HOTBACKUP


516 #ifde‡
UNIV_DEBUG


519 
iboﬁ
 
	$rw_lock_own
(
rw_lock_t
 *
lock
,

520 
ulöt
 
lock_ty≥
)

522 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

526 
boﬁ
 
	$rw_lock_own_Êagged
(

527 c⁄° 
rw_lock_t
 *
lock
,

528 
rw_lock_Êags_t
 
Êags
)

530 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

535 
boﬁ
 
	`rw_lock_is_locked
(
rw_lock_t
 *
lock
,

536 
ulöt
 
lock_ty≥
);

538 #ifde‡
UNIV_DEBUG


540 
	`rw_lock_li°_¥öt_öfo
(
FILE
 *
fûe
);

547 
	`rw_lock_debug_¥öt
(
FILE
 *
f
, c⁄° 
rw_lock_debug_t
 *
öfo
);

564 
rw_lock_t


565 #ifde‡
UNIV_DEBUG


566 : 
public
 
œtch_t


569 
	`rw_lock_t
() = ;

576 
	`rw_lock_t
(c⁄° 
rw_lock_t
 &Ë
dñëe
;

577 
rw_lock_t
 &
›î©‹
=(c⁄°Ñw_lock_à&Ë
dñëe
;

580 
°d
::
©omic
<
öt32_t
> 
lock_w‹d
;

583 
°d
::
©omic
<
boﬁ
> 
waôîs
;

594 
°d
::
©omic
<
boﬁ
> 
ªcursive
;

600 
boﬁ
 
wrôî_is_waô_ex
;

603 vﬁ©ûê
ulöt
 
sx_ªcursive
;

608 
°d
::
©omic
<
os_thªad_id_t
> 
wrôî_thªad
;

611 
os_evít_t
 
evít
;

615 
os_evít_t
 
waô_ex_evít
;

618 c⁄° *
cfûe_«me
;

621 c⁄° *
œ°_s_fûe_«me
;

624 c⁄° *
œ°_x_fûe_«me
;

627 
uöt16_t
 
˛öe
;

630 
boﬁ
 
is_block_lock
;

633 
uöt16_t
 
œ°_s_löe
;

636 
uöt16_t
 
œ°_x_löe
;

639 
uöt32_t
 
cou¡_os_waô
;

642 
	`UT_LIST_NODE_T
(
rw_lock_t
Ë
li°
;

644 #ifde‡
UNIV_PFS_RWLOCK


646 
PSI_rwlock
 *
pfs_psi
;

649 #ifde‡
UNIV_DEBUG


651 ~
	`rw_lock_t
(Ë
ovîride
 {

652 
	`ut_ad
(
magic_n
 =
MAGIC_N
);

653 
magic_n
 = 0;

656 
vútuÆ
 
°d
::
°rög
 
	`to_°rög
(Ëc⁄° 
ovîride
;

657 
vútuÆ
 
°d
::
°rög
 
	`locked_‰om
(Ëc⁄° 
ovîride
;

660 c⁄° 
uöt32_t
 
MAGIC_N
 = 22643;

661 
uöt32_t
 
magic_n
 = {
MAGIC_N
};

664 
	`UT_LIST_BASE_NODE_T
(
rw_lock_debug_t
Ë
debug_li°
;

667 
œtch_Àvñ_t
 
Àvñ
;

669 
	}
};

670 #ifde‡
UNIV_DEBUG


673 
	srw_lock_debug_t
 {

674 
os_thªad_id_t
 
	mthªad_id
;

676 
ulöt
 
	m∑ss
;

677 
ulöt
 
	mlock_ty≥
;

679 c⁄° *
	mfûe_«me
;

680 
ulöt
 
	mlöe
;

681 
UT_LIST_NODE_T
(
rw_lock_debug_t
Ë
	mli°
;

687 #i‚de‡
UNIV_LIBRARY


688 #i‚de‡
UNIV_HOTBACKUP


715 #ifde‡
UNIV_PFS_RWLOCK


721 #ifde‡
UNIV_DEBUG


729 
UNIV_INLINE


730 
pfs_rw_lock_¸óã_func
(
mysql_pfs_key_t
 
key
, 
rw_lock_t
 *
lock
,

731 #ifde‡
UNIV_DEBUG


732 
œtch_Àvñ_t
 
Àvñ
, c⁄° *
cmuãx_«me
,

734 c⁄° *
cfûe_«me
, 
ulöt
 
˛öe
);

744 
UNIV_INLINE


745 
pfs_rw_lock_x_lock_func
(
rw_lock_t
 *
lock
, 
ulöt
 
∑ss
, c⁄° *
fûe_«me
,

746 
ulöt
 
löe
);

755 
UNIV_INLINE


756 
boﬁ
 
pfs_rw_lock_x_lock_func_nowaô
(
rw_lock_t
 *
lock
, c⁄° *
fûe_«me
,

757 
ulöt
 
löe
);

767 
UNIV_INLINE


768 
pfs_rw_lock_s_lock_func
(
rw_lock_t
 *
lock
, 
ulöt
 
∑ss
, c⁄° *
fûe_«me
,

769 
ulöt
 
löe
);

780 
UNIV_INLINE


781 
iboﬁ
 
pfs_rw_lock_s_lock_low
(
rw_lock_t
 *
lock
, 
ulöt
 
∑ss
, c⁄° *
fûe_«me
,

782 
ulöt
 
löe
);

792 
UNIV_INLINE


793 
pfs_rw_lock_x_lock_func
(
rw_lock_t
 *
lock
, 
ulöt
 
∑ss
, c⁄° *
fûe_«me
,

794 
ulöt
 
löe
);

799 #ifde‡
UNIV_DEBUG


804 
UNIV_INLINE


805 
pfs_rw_lock_s_u∆ock_func
(

806 #ifde‡
UNIV_DEBUG


807 
ulöt
 
∑ss
,

809 
rw_lock_t
 *
lock
);

814 #ifde‡
UNIV_DEBUG


819 
UNIV_INLINE


820 
pfs_rw_lock_x_u∆ock_func
(

821 #ifde‡
UNIV_DEBUG


822 
ulöt
 
∑ss
,

824 
rw_lock_t
 *
lock
);

834 
UNIV_INLINE


835 
pfs_rw_lock_sx_lock_func
(
rw_lock_t
 *
lock
, 
ulöt
 
∑ss
,

836 c⁄° *
fûe_«me
, 
ulöt
 
löe
);

845 
UNIV_INLINE


846 
boﬁ
 
pfs_rw_lock_sx_lock_low
(
rw_lock_t
 *
lock
, 
ulöt
 
∑ss
, c⁄° *
fûe_«me
,

847 
ulöt
 
löe
);

853 #ifde‡
UNIV_DEBUG


857 
UNIV_INLINE


858 
pfs_rw_lock_sx_u∆ock_func
(

859 #ifde‡
UNIV_DEBUG


860 
ulöt
 
∑ss
,

862 
rw_lock_t
 *
lock
);

867 
UNIV_INLINE


868 
pfs_rw_lock_‰ì_func
(
rw_lock_t
 *
lock
);

871 
	~"sync0rw.ic
"

	@sync0rw.ic

40 
	~"os0evít.h
"

46 
rw_lock_s_lock_•ö
(

47 
rw_lock_t
 *
lock
,

48 
ulöt
 
∑ss
,

50 c⁄° *
fûe_«me
,

51 
ulöt
 
löe
);

52 #ifde‡
UNIV_DEBUG


54 
rw_lock_add_debug_öfo
(

55 
rw_lock_t
 *
lock
,

56 
ulöt
 
∑ss
,

57 
ulöt
 
lock_ty≥
,

58 c⁄° *
fûe_«me
,

59 
ulöt
 
löe
);

61 
rw_lock_ªmove_debug_öfo
(
rw_lock_t
 *
lock
,

62 
ulöt
 
∑ss
,

63 
ulöt
 
lock_ty≥
);

68 
UNIV_INLINE


69 
boﬁ
 
	$rw_lock_gë_waôîs
(c⁄° 
rw_lock_t
 *
lock
)

71  
lock
->
waôîs
.
	`lﬂd
();

72 
	}
}

76 
UNIV_INLINE


77 
	$rw_lock_£t_waôî_Êag
(
rw_lock_t
 *
lock
)

79 
boﬁ
 
zîo
 = 
Ál£
;

80 
lock
->
waôîs
.
	`com∑ª_exch™ge_°r⁄g
(
zîo
, 
åue
);

81 
	}
}

85 
UNIV_INLINE


86 
	$rw_lock_ª£t_waôî_Êag
(
rw_lock_t
 *
lock
)

88 
boﬁ
 
⁄e
 = 
åue
;

89 
lock
->
waôîs
.
	`com∑ª_exch™ge_°r⁄g
(
⁄e
, 
Ál£
);

90 
	}
}

95 
UNIV_INLINE


96 
ulöt
 
	$rw_lock_gë_wrôî
(c⁄° 
rw_lock_t
 *
lock
)

98 
löt
 
lock_w‹d
 = 
lock
->lock_word;

100 
	`ut_ad
(
lock_w‹d
 <
X_LOCK_DECR
);

101 i‡(
lock_w‹d
 > 
X_LOCK_HALF_DECR
) {

104  (
RW_LOCK_NOT_LOCKED
);

105 } i‡(
lock_w‹d
 > 0) {

107  (
RW_LOCK_SX
);

108 } i‡(
lock_w‹d
 =0 ||Üock_w‹d =-
X_LOCK_HALF_DECR
 ||

109 
lock_w‹d
 <-
X_LOCK_DECR
) {

111  (
RW_LOCK_X
);

116  (
RW_LOCK_X_WAIT
);

118 
	}
}

122 
UNIV_INLINE


123 
ulöt
 
	$rw_lock_gë_ªadî_cou¡
(c⁄° 
rw_lock_t
 *
lock
)

125 
löt
 
lock_w‹d
 = 
lock
->lock_word;

126 
	`ut_ad
(
lock_w‹d
 <
X_LOCK_DECR
);

128 i‡(
lock_w‹d
 > 
X_LOCK_HALF_DECR
) {

130  (
X_LOCK_DECR
 - 
lock_w‹d
);

131 } i‡(
lock_w‹d
 > 0) {

133  (
X_LOCK_HALF_DECR
 - 
lock_w‹d
);

134 } i‡(
lock_w‹d
 == 0) {

137 } i‡(
lock_w‹d
 > -
X_LOCK_HALF_DECR
) {

139  ((
ulöt
)(-
lock_w‹d
));

140 } i‡(
lock_w‹d
 =-
X_LOCK_HALF_DECR
) {

143 } i‡(
lock_w‹d
 > -
X_LOCK_DECR
) {

145  ((
ulöt
)(-(
lock_w‹d
 + 
X_LOCK_HALF_DECR
)));

149 
	}
}

154 
UNIV_INLINE


155 
ulöt
 
	$rw_lock_gë_x_lock_cou¡
(c⁄° 
rw_lock_t
 *
lock
)

157 
löt
 
lock_c›y
 = 
lock
->
lock_w‹d
;

158 
	`ut_ad
(
lock_c›y
 <
X_LOCK_DECR
);

160 i‡(
lock_c›y
 =0 ||Üock_c›y =-
X_LOCK_HALF_DECR
) {

163 } i‡(
lock_c›y
 > -
X_LOCK_DECR
) {

166 } i‡(
lock_c›y
 > -(
X_LOCK_DECR
 + 
X_LOCK_HALF_DECR
)) {

170  (2 - (
lock_c›y
 + 
X_LOCK_DECR
));

175  (2 - (
lock_c›y
 + 
X_LOCK_DECR
 + 
X_LOCK_HALF_DECR
));

177 
	}
}

182 
UNIV_INLINE


183 
ulöt
 
	$rw_lock_gë_sx_lock_cou¡
(c⁄° 
rw_lock_t
 *
lock
)

185 #ifde‡
UNIV_DEBUG


186 
löt
 
lock_c›y
 = 
lock
->
lock_w‹d
;

188 
	`ut_ad
(
lock_c›y
 <
X_LOCK_DECR
);

190 
lock_c›y
 < 0) {

191 
lock_c›y
 +
X_LOCK_DECR
;

194 i‡(
lock_c›y
 > 0 &&Üock_c›y <
X_LOCK_HALF_DECR
) {

195  (
lock
->
sx_ªcursive
);

200  (
lock
->
sx_ªcursive
);

202 
	}
}

210 
ALWAYS_INLINE


211 
boﬁ
 
	$rw_lock_lock_w‹d_de¸
(
rw_lock_t
 *
lock
,

212 
ulöt
 
amou¡
,

213 
löt
 
thªshﬁd
)

215 
öt32_t
 
loˇl_lock_w‹d
;

217 
os_rmb
;

218 
loˇl_lock_w‹d
 = 
lock
->
lock_w‹d
;

219 
loˇl_lock_w‹d
 > 
thªshﬁd
) {

220 i‡(
lock
->
lock_w‹d
.
	`com∑ª_exch™ge_°r⁄g
(
loˇl_lock_w‹d
,

221 
loˇl_lock_w‹d
 - 
amou¡
)) {

222  (
åue
);

225  (
Ál£
);

226 
	}
}

230 
UNIV_INLINE


231 
löt
 
	$rw_lock_lock_w‹d_ö¸
(
rw_lock_t
 *
lock
,

232 
ulöt
 
amou¡
)

234  (
lock
->
lock_w‹d
.
	`„tch_add
(
amou¡
) +ámount);

235 
	}
}

237 
UNIV_INLINE


238 
	$rw_lock_£t_wrôî_id_™d_ªcursi⁄_Êag
(
rw_lock_t
 *
lock
, 
boﬁ
 
ªcursive
) {

239 
lock
->
wrôî_thªad
.
	`°‹e
(
	`os_thªad_gë_cuº_id
(), 
°d
::
mem‹y_‹dî_ªœxed
);

240 
lock
->
ªcursive
.
	`°‹e
‘ecursive, 
°d
::
mem‹y_‹dî_ªÀa£
);

241 
	}
}

246 
ALWAYS_INLINE


247 
boﬁ
 
rw_lock_s_lock_low
(

248 
rw_lock_t
 *
lock
,

249 
ulöt
 
∑ss
 
MY_ATTRIBUTE
((
unu£d
)),

252 c⁄° *
fûe_«me
,

253 
ulöt
 
löe
)

255 i‡(!
rw_lock_lock_w‹d_de¸
(
lock
, 1, 0)) {

257  
	gÁl£
;

260 
ut_d
(
rw_lock_add_debug_öfo
(
lock
, 
∑ss
, 
RW_LOCK_S
, 
fûe_«me
, 
löe
));

264 
	glock
->
	gœ°_s_fûe_«me
 = 
fûe_«me
;

266 
ut_ad
(
löe
 <
°d
::
numîic_limôs
<
de˛ty≥
(
lock
->
œ°_s_löe
)>::
max
());

267 
	glock
->
	gœ°_s_löe
 = 
löe
;

269  
	gåue
;

277 
UNIV_INLINE


278 
	$rw_lock_s_lock_func
(

279 
rw_lock_t
 *
lock
,

280 
ulöt
 
∑ss
,

282 c⁄° *
fûe_«me
,

283 
ulöt
 
löe
)

296 
	`ut_ad
(!
	`rw_lock_own
(
lock
, 
RW_LOCK_S
));

297 
	`ut_ad
(!
	`rw_lock_own
(
lock
, 
RW_LOCK_X
));

299 i‡(!
	`rw_lock_s_lock_low
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
)) {

302 
	`rw_lock_s_lock_•ö
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

304 
	}
}

310 
UNIV_INLINE


311 
boﬁ
 
	$rw_lock_x_lock_func_nowaô
(

312 
rw_lock_t
 *
lock
,

313 c⁄° *
fûe_«me
,

314 
ulöt
 
löe
)

316 
öt32_t
 
x_lock_de¸
 = 
X_LOCK_DECR
;

318 i‡(
lock
->
lock_w‹d
.
	`com∑ª_exch™ge_°r⁄g
(
x_lock_de¸
, 0)) {

319 
	`rw_lock_£t_wrôî_id_™d_ªcursi⁄_Êag
(
lock
, 
åue
);

320 } i‡(
lock
->
ªcursive
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
) &&

321 
	`os_thªad_eq
(
lock
->
wrôî_thªad
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
),

322 
	`os_thªad_gë_cuº_id
())) {

326 i‡(
lock
->
lock_w‹d
 =0 ||Üock->lock_w‹d =-
X_LOCK_HALF_DECR
) {

328 
lock
->
lock_w‹d
 -
X_LOCK_DECR
;

329 } i‡(
lock
->
lock_w‹d
 <-
X_LOCK_DECR
) {

331 
lock
->
lock_w‹d
--;

334  
Ál£
;

338 
	`ut_ad
(
lock
->
lock_w‹d
 < 0);

342  
Ál£
;

345 
	`ut_d
(
	`rw_lock_add_debug_öfo
(
lock
, 0, 
RW_LOCK_X
, 
fûe_«me
, 
löe
));

347 
lock
->
œ°_x_fûe_«me
 = 
fûe_«me
;

349 
	`ut_ad
(
löe
 <
°d
::
numîic_limôs
<
	`de˛ty≥
(
lock
->
œ°_x_löe
)>::
	`max
());

350 
lock
->
œ°_x_löe
 = 
löe
;

352 
	`ut_ad
(
	`rw_lock_vÆid©e
(
lock
));

354  
åue
;

355 
	}
}

358 
UNIV_INLINE


359 
rw_lock_s_u∆ock_func
(

360 #ifde‡
UNIV_DEBUG


361 
ulöt
 
∑ss
,

364 
rw_lock_t
 *
lock
)

366 
ut_ad
(
lock
->
lock_w‹d
 > -
X_LOCK_DECR
);

367 
ut_ad
(
lock
->
lock_w‹d
 != 0);

368 
ut_ad
(
lock
->
lock_w‹d
 < 
X_LOCK_DECR
);

370 
ut_d
(
rw_lock_ªmove_debug_öfo
(
lock
, 
∑ss
, 
RW_LOCK_S
));

373 
löt
 
	glock_w‹d
 = 
rw_lock_lock_w‹d_ö¸
(
lock
, 1);

374 i‡(
	glock_w‹d
 =0 || 
lock_w‹d
 =-
X_LOCK_HALF_DECR
) {

378 
os_evít_£t
(
lock
->
waô_ex_evít
);

379 
sync_¨øy_obje˘_sig«Œed
();

382 
ut_ad
(
rw_lock_vÆid©e
(
lock
));

386 
UNIV_INLINE


387 
rw_lock_x_u∆ock_func
(

388 #ifde‡
UNIV_DEBUG


389 
ulöt
 
∑ss
,

392 
rw_lock_t
 *
lock
)

394 
ut_ad
(
lock
->
lock_w‹d
 =0 ||Üock->lock_w‹d =-
X_LOCK_HALF_DECR
 ||

395 
lock
->
lock_w‹d
 <-
X_LOCK_DECR
);

404 i‡(
	glock
->
	glock_w‹d
 == 0) {

406 
lock
->
ªcursive
.
°‹e
(
Ál£
, 
°d
::
mem‹y_‹dî_ªœxed
);

409 
ut_d
(
rw_lock_ªmove_debug_öfo
(
lock
, 
∑ss
, 
RW_LOCK_X
));

411 i‡(
	glock
->
	glock_w‹d
 =0 || 
lock
->
lock_w‹d
 =-
X_LOCK_HALF_DECR
) {

414 i‡(
rw_lock_lock_w‹d_ö¸
(
lock
, 
X_LOCK_DECR
) <= 0) {

415 
ut_îr‹
;

423 i‡(
	glock
->
	gwaôîs
) {

424 
rw_lock_ª£t_waôî_Êag
(
lock
);

425 
os_evít_£t
(
lock
->
evít
);

426 
sync_¨øy_obje˘_sig«Œed
();

428 } i‡(
	glock
->
	glock_w‹d
 =-
X_LOCK_DECR
 ||

429 
lock
->
lock_w‹d
 =-(
X_LOCK_DECR
 + 
X_LOCK_HALF_DECR
)) {

431 
lock
->
lock_w‹d
 +
X_LOCK_DECR
;

434 
ut_ad
(
lock
->
lock_w‹d
 < -
X_LOCK_DECR
);

435 
	glock
->
	glock_w‹d
 += 1;

438 
ut_ad
(
rw_lock_vÆid©e
(
lock
));

442 
UNIV_INLINE


443 
rw_lock_sx_u∆ock_func
(

444 #ifde‡
UNIV_DEBUG


445 
ulöt
 
∑ss
,

448 
rw_lock_t
 *
lock
)

450 
ut_ad
(
rw_lock_gë_sx_lock_cou¡
(
lock
));

451 
ut_ad
(
lock
->
sx_ªcursive
 > 0);

453 --
	glock
->
	gsx_ªcursive
;

455 
ut_d
(
rw_lock_ªmove_debug_öfo
(
lock
, 
∑ss
, 
RW_LOCK_SX
));

457 i‡(
	glock
->
	gsx_ªcursive
 == 0) {

459 i‡(
lock
->
lock_w‹d
 > 0) {

460 
lock
->
ªcursive
.
°‹e
(
Ál£
, 
°d
::
mem‹y_‹dî_ªœxed
);

462 i‡(
rw_lock_lock_w‹d_ö¸
(
lock
, 
X_LOCK_HALF_DECR
) <= X_LOCK_HALF_DECR) {

463 
ut_îr‹
;

469 i‡(
	glock
->
	gwaôîs
) {

470 
rw_lock_ª£t_waôî_Êag
(
lock
);

471 
os_evít_£t
(
lock
->
evít
);

472 
sync_¨øy_obje˘_sig«Œed
();

476 
ut_ad
(
lock
->
lock_w‹d
 =-
X_LOCK_HALF_DECR
 ||

477 
lock
->
lock_w‹d
 <-(
X_LOCK_DECR
 + 
X_LOCK_HALF_DECR
));

478 
	glock
->
	glock_w‹d
 +
X_LOCK_HALF_DECR
;

482 
ut_ad
(
rw_lock_vÆid©e
(
lock
));

485 #ifde‡
UNIV_PFS_RWLOCK


490 
UNIV_INLINE


491 
pfs_rw_lock_¸óã_func
(

492 
mysql_pfs_key_t
 
key
,

494 
rw_lock_t
 *
lock
,

495 #ifde‡
UNIV_DEBUG


496 
œtch_Àvñ_t
 
Àvñ
,

497 c⁄° *
cmuãx_«me
,

499 c⁄° *
cfûe_«me
,

500 
ulöt
 
˛öe
)

502 
√w
 (
lock
Ë
	grw_lock_t
;

505 
	glock
->
	gpfs_psi
 = 
PSI_RWLOCK_CALL
(
öô_rwlock
)(
key
.
m_vÆue
,Üock);

508 
rw_lock_¸óã_func
(
lock
,

509 #ifde‡
UNIV_DEBUG


510 
Àvñ
, 
cmuãx_«me
,

512 
cfûe_«me
, 
˛öe
);

517 
UNIV_INLINE


518 
	$pfs_rw_lock_x_lock_func
(

519 
rw_lock_t
 *
lock
,

520 
ulöt
 
∑ss
,

522 c⁄° *
fûe_«me
,

523 
ulöt
 
löe
)

525 i‡(
lock
->
pfs_psi
 !
nuŒ±r
) {

526 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

527 
PSI_rwlock_lockî
 *
lockî
;

528 
PSI_rwlock_lockî_°©e
 
°©e
;

533 
lockî
 = 
	`PSI_RWLOCK_CALL
(
°¨t_rwlock_wrwaô
)(

534 &
°©e
, 
lock
->
pfs_psi
, 
PSI_RWLOCK_EXCLUSIVELOCK
, 
fûe_«me
,

535 
°©ic_ˇ°
<
uöt
>(
löe
));

537 
	`rw_lock_x_lock_func
(
lock
, 
∑ss
, 
fûe_«me
, 
°©ic_ˇ°
<
uöt
>(
löe
));

539 i‡(
lockî
 !
nuŒ±r
) {

540 
	`PSI_RWLOCK_CALL
(
íd_rwlock_wrwaô
)(
lockî
, 0);

546 
	`rw_lock_x_lock_func
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

547 
	}
}

553 
UNIV_INLINE


554 
boﬁ
 
	$pfs_rw_lock_x_lock_func_nowaô
(

555 
rw_lock_t
 *
lock
,

556 c⁄° *
fûe_«me
,

558 
ulöt
 
löe
)

560 
boﬁ
 
ªt
;

562 i‡(
lock
->
pfs_psi
 !
nuŒ±r
) {

563 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

564 
PSI_rwlock_lockî
 *
lockî
;

565 
PSI_rwlock_lockî_°©e
 
°©e
;

570 
lockî
 = 
	`PSI_RWLOCK_CALL
(
°¨t_rwlock_wrwaô
)(

571 &
°©e
, 
lock
->
pfs_psi
, 
PSI_RWLOCK_TRYEXCLUSIVELOCK
, 
fûe_«me
,

572 
°©ic_ˇ°
<
uöt
>(
löe
));

574 
ªt
 = 
	`rw_lock_x_lock_func_nowaô
(
lock
, 
fûe_«me
, 
löe
);

576 i‡(
lockî
 !
nuŒ±r
) {

577 
	`PSI_RWLOCK_CALL
(
íd_rwlock_wrwaô
)(
lockî
, 
°©ic_ˇ°
<>(
ªt
));

580  
ªt
;

584 
ªt
 = 
	`rw_lock_x_lock_func_nowaô
(
lock
, 
fûe_«me
, 
löe
);

586  
ªt
;

587 
	}
}

591 
UNIV_INLINE


592 
	$pfs_rw_lock_‰ì_func
(
rw_lock_t
 *
lock
)

594 i‡(
lock
->
pfs_psi
 !
nuŒ±r
) {

595 
	`PSI_RWLOCK_CALL
(
de°roy_rwlock
)(
lock
->
pfs_psi
);

596 
lock
->
pfs_psi
 = 
nuŒ±r
;

599 
	`rw_lock_‰ì_func
(
lock
);

600 
	}
}

604 
ALWAYS_INLINE


605 
	$pfs_rw_lock_s_lock_func
(
rw_lock_t
 *
lock
,

606 
ulöt
 
∑ss
,

609 c⁄° *
fûe_«me
,

611 
ulöt
 
löe
)

613 i‡(
lock
->
pfs_psi
 !
nuŒ±r
) {

614 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

615 
PSI_rwlock_lockî
 *
lockî
;

616 
PSI_rwlock_lockî_°©e
 
°©e
;

619 
lockî
 = 
	`PSI_RWLOCK_CALL
(
°¨t_rwlock_rdwaô
)(

620 &
°©e
, 
lock
->
pfs_psi
, 
PSI_RWLOCK_SHAREDLOCK
, 
fûe_«me
,

621 
°©ic_ˇ°
<
uöt
>(
löe
));

623 
	`rw_lock_s_lock_func
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

625 i‡(
lockî
 !
nuŒ±r
) {

626 
	`PSI_RWLOCK_CALL
(
íd_rwlock_rdwaô
)(
lockî
, 0);

633 
	`rw_lock_s_lock_func
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

634 
	}
}

638 
UNIV_INLINE


639 
	$pfs_rw_lock_sx_lock_func
(
rw_lock_t
 *
lock
,

640 
ulöt
 
∑ss
,

643 c⁄° *
fûe_«me
,

645 
ulöt
 
löe
)

647 i‡(
lock
->
pfs_psi
 !
nuŒ±r
) {

648 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

649 
PSI_rwlock_lockî
 *
lockî
;

650 
PSI_rwlock_lockî_°©e
 
°©e
;

653 
lockî
 = 
	`PSI_RWLOCK_CALL
(
°¨t_rwlock_wrwaô
)(

654 &
°©e
, 
lock
->
pfs_psi
, 
PSI_RWLOCK_SHAREDEXCLUSIVELOCK
, 
fûe_«me
,

655 
°©ic_ˇ°
<
uöt
>(
löe
));

657 
	`rw_lock_sx_lock_func
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

659 i‡(
lockî
 !
nuŒ±r
) {

660 
	`PSI_RWLOCK_CALL
(
íd_rwlock_wrwaô
)(
lockî
, 0);

667 
	`rw_lock_sx_lock_func
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

668 
	}
}

673 
UNIV_INLINE


674 
iboﬁ
 
	$pfs_rw_lock_s_lock_low
(

675 
rw_lock_t
 *
lock
,

676 
ulöt
 
∑ss
,

679 c⁄° *
fûe_«me
,

680 
ulöt
 
löe
)

682 
iboﬁ
 
ªt
;

684 i‡(
lock
->
pfs_psi
 !
nuŒ±r
) {

685 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

686 
PSI_rwlock_lockî
 *
lockî
;

687 
PSI_rwlock_lockî_°©e
 
°©e
;

690 
lockî
 = 
	`PSI_RWLOCK_CALL
(
°¨t_rwlock_rdwaô
)(

691 &
°©e
, 
lock
->
pfs_psi
, 
PSI_RWLOCK_TRYSHAREDLOCK
, 
fûe_«me
,

692 
°©ic_ˇ°
<
uöt
>(
löe
));

694 
ªt
 = 
	`rw_lock_s_lock_low
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

696 i‡(
lockî
 !
nuŒ±r
) {

697 
	`PSI_RWLOCK_CALL
(
íd_rwlock_rdwaô
)(
lockî
, 
°©ic_ˇ°
<>(
ªt
));

700  (
ªt
);

704 
ªt
 = 
	`rw_lock_s_lock_low
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

706  (
ªt
);

707 
	}
}

712 
UNIV_INLINE


713 
boﬁ
 
	$pfs_rw_lock_sx_lock_low
(

714 
rw_lock_t
 *
lock
,

715 
ulöt
 
∑ss
,

718 c⁄° *
fûe_«me
,

719 
ulöt
 
löe
)

721 
boﬁ
 
ªt
;

723 i‡(
lock
->
pfs_psi
 !
nuŒ±r
) {

724 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

725 
PSI_rwlock_lockî
 *
lockî
;

726 
PSI_rwlock_lockî_°©e
 
°©e
;

730 
lockî
 = 
	`PSI_RWLOCK_CALL
(
°¨t_rwlock_rdwaô
)(

731 &
°©e
, 
lock
->
pfs_psi
, 
PSI_RWLOCK_TRYSHAREDEXCLUSIVELOCK
, 
fûe_«me
,

732 
°©ic_ˇ°
<
uöt
>(
löe
));

734 
ªt
 = 
	`rw_lock_sx_lock_low
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

736 i‡(
lockî
 !
nuŒ±r
) {

737 
	`PSI_RWLOCK_CALL
(
íd_rwlock_rdwaô
)(
lockî
, 
°©ic_ˇ°
<>(
ªt
));

740  (
ªt
);

744 
ªt
 = 
	`rw_lock_sx_lock_low
(
lock
, 
∑ss
, 
fûe_«me
, 
löe
);

746  
ªt
;

747 
	}
}

751 
UNIV_INLINE


752 
pfs_rw_lock_x_u∆ock_func
(

753 #ifde‡
UNIV_DEBUG


754 
ulöt
 
∑ss
,

758 
rw_lock_t
 *
lock
)

761 i‡(
	glock
->
	gpfs_psi
 !
nuŒ±r
) {

762 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

763 
PSI_RWLOCK_CALL
(
u∆ock_rwlock
)(
lock
->
pfs_psi
, 
PSI_RWLOCK_EXCLUSIVEUNLOCK
);

767 
rw_lock_x_u∆ock_func
(

768 #ifde‡
UNIV_DEBUG


769 
∑ss
,

771 
lock
);

777 
UNIV_INLINE


778 
pfs_rw_lock_sx_u∆ock_func
(

779 #ifde‡
UNIV_DEBUG


780 
ulöt
 
∑ss
,

784 
rw_lock_t
 *
lock
)

787 i‡(
	glock
->
	gpfs_psi
 !
nuŒ±r
) {

788 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

789 
PSI_RWLOCK_CALL
(
u∆ock_rwlock
)

790 (
lock
->
pfs_psi
, 
PSI_RWLOCK_SHAREDEXCLUSIVEUNLOCK
);

794 
rw_lock_sx_u∆ock_func
(

795 #ifde‡
UNIV_DEBUG


796 
∑ss
,

798 
lock
);

804 
ALWAYS_INLINE


805 
pfs_rw_lock_s_u∆ock_func
(

806 #ifde‡
UNIV_DEBUG


807 
ulöt
 
∑ss
,

811 
rw_lock_t
 *
lock
)

814 i‡(
	glock
->
	gpfs_psi
 !
nuŒ±r
) {

815 i‡(
lock
->
pfs_psi
->
m_íabÀd
) {

816 
PSI_RWLOCK_CALL
(
u∆ock_rwlock
)(
lock
->
pfs_psi
, 
PSI_RWLOCK_SHAREDUNLOCK
);

820 
rw_lock_s_u∆ock_func
(

821 #ifde‡
UNIV_DEBUG


822 
∑ss
,

824 
lock
);

	@sync0sharded_rw.h

43 #i‚de‡
sync0sh¨ded_rw_h


44 
	#sync0sh¨ded_rw_h


	)

46 
	~"sync0rw.h
"

47 
	~"ut0˝u_ˇche.h
"

48 
	~"ut0∫d.h
"

49 
	~"ut0ut.h
"

51 #i‚de‡
UNIV_HOTBACKUP


52 #i‚de‡
UNIV_LIBRARY


62 ˛as†
	cSh¨ded_rw_lock
 {

63 
	mpublic
:

64 
¸óã
(

65 #ifde‡
UNIV_PFS_RWLOCK


66 
mysql_pfs_key_t
 
pfs_key
,

68 
œtch_Àvñ_t
 
œtch_Àvñ
, 
size_t
 
n_sh¨ds
) {

69 
	mm_n_sh¨ds
 = 
n_sh¨ds
;

71 
	mm_sh¨ds
 = 
°©ic_ˇ°
<
Sh¨d
 *>(
ut_zÆloc_nokey
((Sh¨dË* 
n_sh¨ds
));

73 
f‹_óch
([

74 #ifde‡
UNIV_PFS_RWLOCK


75 
pfs_key
,

77 
œtch_Àvñ
](
rw_lock_t
 &
lock
) {

78 
°©ic_ˇ°
<>(
œtch_Àvñ
);

79 
rw_lock_¸óã
(
pfs_key
, &
lock
, 
œtch_Àvñ
);

83 
	$‰ì
() {

84 
	`ut_a
(
m_sh¨ds
 !
nuŒ±r
);

86 
	`f‹_óch
([](
rw_lock_t
 &
lock
Ë{ 
	`rw_lock_‰ì
(&lock); });

88 
	`ut_‰ì
(
m_sh¨ds
);

89 
m_sh¨ds
 = 
nuŒ±r
;

90 
m_n_sh¨ds
 = 0;

91 
	}
}

93 
size_t
 
	$s_lock
() {

94 c⁄° 
size_t
 
sh¨d_no
 = 
	`ut_∫d_öãrvÆ
(0, 
m_n_sh¨ds
 - 1);

95 
	`rw_lock_s_lock
(&
m_sh¨ds
[
sh¨d_no
]);

96  
sh¨d_no
;

97 
	}
}

99 
iboﬁ
 
	$s_lock_nowaô
(
size_t
 &
sh¨d_no
, c⁄° *
fûe
, 
ulöt
 
löe
) {

100 
sh¨d_no
 = 
	`ut_∫d_öãrvÆ
(0, 
m_n_sh¨ds
 - 1);

101  
	`rw_lock_s_lock_nowaô
(&
m_sh¨ds
[
sh¨d_no
], 
fûe
, 
löe
);

102 
	}
}

104 
	$s_u∆ock
(
size_t
 
sh¨d_no
) {

105 
	`ut_a
(
sh¨d_no
 < 
m_n_sh¨ds
);

106 
	`rw_lock_s_u∆ock
(&
m_sh¨ds
[
sh¨d_no
]);

107 
	}
}

114 
boﬁ
 
	$åy_x_lock
() {

115 
size_t
 
sh¨d_no
 = 0; sh¨d_nÿ< 
m_n_sh¨ds
; ++shard_no) {

116 i‡(!
	`rw_lock_x_lock_nowaô
(&
m_sh¨ds
[
sh¨d_no
])) {

117 0 < 
sh¨d_no
--) {

118 
	`rw_lock_x_u∆ock
(&
m_sh¨ds
[
sh¨d_no
]);

120  (
Ál£
);

123  (
åue
);

124 
	}
}

126 
	$x_lock
() {

127 
	`f‹_óch
([](
rw_lock_t
 &
lock
Ë{ 
	`rw_lock_x_lock
(&lock); });

128 
	}
}

130 
	$x_u∆ock
() {

131 
	`f‹_óch
([](
rw_lock_t
 &
lock
Ë{ 
	`rw_lock_x_u∆ock
(&lock); });

132 
	}
}

134 #ifde‡
UNIV_DEBUG


135 
boﬁ
 
	$s_own
(
size_t
 
sh¨d_no
) const {

136  
	`rw_lock_own
(&
m_sh¨ds
[
sh¨d_no
], 
RW_LOCK_S
);

137 
	}
}

139 
boﬁ
 
	$x_own
(Ëc⁄° {  
	`rw_lock_own
(&
m_sh¨ds
[0], 
RW_LOCK_X
); 
	}
}

142 
	g¥iv©e
:

143 
usög
 
Sh¨d
 = 
ut
::
Cachñöe_∑dded
<
rw_lock_t
>;

145 
	gãm∂©e
 <
ty≥«me
 
	gF
>

146 
	$f‹_óch
(
F
 
f
) {

147 
°d
::
	`f‹_óch
(
m_sh¨ds
, m_sh¨d†+ 
m_n_sh¨ds
, 
f
);

148 
	}
}

150 
Sh¨d
 *
	gm_sh¨ds
 = 
nuŒ±r
;

152 
size_t
 
	gm_n_sh¨ds
 = 0;

159 ˛as†
	cSh¨ded_rw_lock
 {

160 
	mpublic
:

161 
¸óã
(

162 #ifde‡
UNIV_PFS_RWLOCK


163 
mysql_pfs_key_t
 
pfs_key
,

165 
œtch_Àvñ_t
 
œtch_Àvñ
, 
size_t
 
n_sh¨ds
) {

168 
	$‰ì
(Ë{
	}
}

170 
size_t
 
	$s_lock
(Ë{  0; 
	}
}

172 
	$s_u∆ock
(
size_t
 
sh¨d_no
Ë{ 
	`ut_a
(sh¨d_nÿ=0); 
	}
}

174 
	$x_lock
(Ë{
	}
}

176 
	$x_u∆ock
(Ë{
	}
}

	@sync0sync.h

41 #i‚de‡
sync0sync_h


42 
	#sync0sync_h


	)

44 
	~"univ.i
"

45 
	~"ut0cou¡î.h
"

47 #ifde‡
HAVE_PSI_INTERFACE


50 
	smysql_pfs_key_t
 {

51 
	mpublic
:

53 
mysql_pfs_key_t
(Ë{ 
s_cou¡
++; }

56 
mysql_pfs_key_t
(
vÆ
Ë: 
m_vÆue
(val) {}

60 
gë_cou¡
(Ë{  
s_cou¡
; }

63 
	mm_vÆue
;

65 
	m¥iv©e
:

67 
s_cou¡
;

72 #i‡
deföed
 
UNIV_PFS_MUTEX
 || deföed 
UNIV_PFS_RWLOCK


76 
	#PFS_SKIP_BUFFER_MUTEX_RWLOCK


	)

79 
	#PFS_SKIP_EVENT_MUTEX


	)

83 #ifde‡
UNIV_PFS_MUTEX


85 
mysql_pfs_key_t
 
autoöc_muãx_key
;

86 
mysql_pfs_key_t
 
autoöc_≥rsi°ed_muãx_key
;

87 #i‚de‡
PFS_SKIP_BUFFER_MUTEX_RWLOCK


88 
mysql_pfs_key_t
 
buf„r_block_muãx_key
;

90 
mysql_pfs_key_t
 
buf_poﬁ_chunks_muãx_key
;

91 
mysql_pfs_key_t
 
buf_poﬁ_Êush_°©e_muãx_key
;

92 
mysql_pfs_key_t
 
buf_poﬁ_LRU_li°_muãx_key
;

93 
mysql_pfs_key_t
 
buf_poﬁ_‰ì_li°_muãx_key
;

94 
mysql_pfs_key_t
 
buf_poﬁ_zù_‰ì_muãx_key
;

95 
mysql_pfs_key_t
 
buf_poﬁ_zù_hash_muãx_key
;

96 
mysql_pfs_key_t
 
buf_poﬁ_zù_muãx_key
;

97 
mysql_pfs_key_t
 
ˇche_œ°_ªad_muãx_key
;

98 
mysql_pfs_key_t
 
di˘_f‹eign_îr_muãx_key
;

99 
mysql_pfs_key_t
 
di˘_≥rsi°_dúty_èbÀs_muãx_key
;

100 
mysql_pfs_key_t
 
di˘_sys_muãx_key
;

101 
mysql_pfs_key_t
 
di˘_èbÀ_muãx_key
;

102 
mysql_pfs_key_t
 
∑r£r_muãx_key
;

103 
mysql_pfs_key_t
 
fû_sy°em_muãx_key
;

104 
mysql_pfs_key_t
 
Êush_li°_muãx_key
;

105 
mysql_pfs_key_t
 
·s_bg_thªads_muãx_key
;

106 
mysql_pfs_key_t
 
·s_dñëe_muãx_key
;

107 
mysql_pfs_key_t
 
·s_›timize_muãx_key
;

108 
mysql_pfs_key_t
 
·s_doc_id_muãx_key
;

109 
mysql_pfs_key_t
 
·s_∂l_tokíize_muãx_key
;

110 
mysql_pfs_key_t
 
hash_èbÀ_muãx_key
;

111 
mysql_pfs_key_t
 
ibuf_bôm≠_muãx_key
;

112 
mysql_pfs_key_t
 
ibuf_muãx_key
;

113 
mysql_pfs_key_t
 
ibuf_≥ssimi°ic_ö£π_muãx_key
;

114 
mysql_pfs_key_t
 
lock_‰ì_hash_muãx_key
;

115 
mysql_pfs_key_t
 
log_checkpoöãr_muãx_key
;

116 
mysql_pfs_key_t
 
log_˛o£r_muãx_key
;

117 
mysql_pfs_key_t
 
log_wrôî_muãx_key
;

118 
mysql_pfs_key_t
 
log_Êushî_muãx_key
;

119 
mysql_pfs_key_t
 
log_wrôe_nŸifõr_muãx_key
;

120 
mysql_pfs_key_t
 
log_Êush_nŸifõr_muãx_key
;

121 
mysql_pfs_key_t
 
log_limôs_muãx_key
;

122 
mysql_pfs_key_t
 
log_cmdq_muãx_key
;

123 
mysql_pfs_key_t
 
log_¢_lock_key
;

124 
mysql_pfs_key_t
 
log_¢_muãx_key
;

125 
mysql_pfs_key_t
 
log_sys_¨ch_muãx_key
;

126 
mysql_pfs_key_t
 
∑ge_sys_¨ch_muãx_key
;

127 
mysql_pfs_key_t
 
∑ge_sys_¨ch_›î_muãx_key
;

128 
mysql_pfs_key_t
 
∑ge_sys_¨ch_˛õ¡_muãx_key
;

129 
mysql_pfs_key_t
 
muãx_li°_muãx_key
;

130 
mysql_pfs_key_t
 
ªˇlc_poﬁ_muãx_key
;

131 
mysql_pfs_key_t
 
∑ge_˛ó√r_muãx_key
;

132 
mysql_pfs_key_t
 
purge_sys_pq_muãx_key
;

133 
mysql_pfs_key_t
 
ªcv_sys_muãx_key
;

134 
mysql_pfs_key_t
 
ªcv_wrôî_muãx_key
;

135 
mysql_pfs_key_t
 
πr_a˘ive_muãx_key
;

136 
mysql_pfs_key_t
 
πr_m©ch_muãx_key
;

137 
mysql_pfs_key_t
 
πr_∑th_muãx_key
;

138 
mysql_pfs_key_t
 
πr_s¢_muãx_key
;

139 
mysql_pfs_key_t
 
ãmp_•a˚_r£g_muãx_key
;

140 
mysql_pfs_key_t
 
undo_•a˚_r£g_muãx_key
;

141 
mysql_pfs_key_t
 
åx_sys_r£g_muãx_key
;

142 
mysql_pfs_key_t
 
∑ge_zù_°©_≥r_ödex_muãx_key
;

143 #ifde‡
UNIV_DEBUG


144 
mysql_pfs_key_t
 
rw_lock_debug_muãx_key
;

146 
mysql_pfs_key_t
 
rw_lock_li°_muãx_key
;

147 
mysql_pfs_key_t
 
rw_lock_muãx_key
;

148 
mysql_pfs_key_t
 
§v_önodb_m⁄ô‹_muãx_key
;

149 
mysql_pfs_key_t
 
§v_misc_tmpfûe_muãx_key
;

150 
mysql_pfs_key_t
 
§v_m⁄ô‹_fûe_muãx_key
;

151 #ifde‡
UNIV_DEBUG


152 
mysql_pfs_key_t
 
sync_thªad_muãx_key
;

154 
mysql_pfs_key_t
 
åx_undo_muãx_key
;

155 
mysql_pfs_key_t
 
åx_muãx_key
;

156 
mysql_pfs_key_t
 
åx_poﬁ_muãx_key
;

157 
mysql_pfs_key_t
 
åx_poﬁ_m™agî_muãx_key
;

158 
mysql_pfs_key_t
 
ãmp_poﬁ_m™agî_muãx_key
;

159 
mysql_pfs_key_t
 
lock_sys_∑ge_muãx_key
;

160 
mysql_pfs_key_t
 
lock_sys_èbÀ_muãx_key
;

161 
mysql_pfs_key_t
 
lock_waô_muãx_key
;

162 
mysql_pfs_key_t
 
åx_sys_muãx_key
;

163 
mysql_pfs_key_t
 
§v_sys_muãx_key
;

164 
mysql_pfs_key_t
 
§v_thªads_muãx_key
;

165 #i‚de‡
PFS_SKIP_EVENT_MUTEX


166 
mysql_pfs_key_t
 
evít_muãx_key
;

167 
mysql_pfs_key_t
 
evít_m™agî_muãx_key
;

169 
mysql_pfs_key_t
 
sync_¨øy_muãx_key
;

170 
mysql_pfs_key_t
 
zù_∑d_muãx_key
;

171 
mysql_pfs_key_t
 
row_dr›_li°_muãx_key
;

172 
mysql_pfs_key_t
 
fûe_›í_muãx_key
;

173 
mysql_pfs_key_t
 
ma°î_key_id_muãx_key
;

174 
mysql_pfs_key_t
 
˛⁄e_sys_muãx_key
;

175 
mysql_pfs_key_t
 
˛⁄e_èsk_muãx_key
;

176 
mysql_pfs_key_t
 
˛⁄e_¢≠shŸ_muãx_key
;

177 
mysql_pfs_key_t
 
∑øŒñ_ªad_muãx_key
;

178 
mysql_pfs_key_t
 
dblwr_muãx_key
;

181 #ifde‡
UNIV_PFS_RWLOCK


184 
mysql_pfs_key_t
 
bå_£¨ch_œtch_key
;

185 #i‚de‡
PFS_SKIP_BUFFER_MUTEX_RWLOCK


186 
mysql_pfs_key_t
 
buf_block_lock_key
;

188 #ifde‡
UNIV_DEBUG


189 
mysql_pfs_key_t
 
buf_block_debug_œtch_key
;

191 
mysql_pfs_key_t
 
di˘_›î©i⁄_lock_key
;

192 
mysql_pfs_key_t
 
undo_•a˚s_lock_key
;

193 
mysql_pfs_key_t
 
r£gs_lock_key
;

194 
mysql_pfs_key_t
 
lock_sys_globÆ_rw_lock_key
;

195 
mysql_pfs_key_t
 
fû_•a˚_œtch_key
;

196 
mysql_pfs_key_t
 
·s_ˇche_rw_lock_key
;

197 
mysql_pfs_key_t
 
·s_ˇche_öô_rw_lock_key
;

198 
mysql_pfs_key_t
 
åx_i_s_ˇche_lock_key
;

199 
mysql_pfs_key_t
 
åx_purge_œtch_key
;

200 
mysql_pfs_key_t
 
ödex_åì_rw_lock_key
;

201 
mysql_pfs_key_t
 
ödex_⁄löe_log_key
;

202 
mysql_pfs_key_t
 
di˘_èbÀ_°©s_key
;

203 
mysql_pfs_key_t
 
åx_sys_rw_lock_key
;

204 
mysql_pfs_key_t
 
hash_èbÀ_locks_key
;

207 #ifde‡
HAVE_PSI_INTERFACE


212 
mysql_pfs_key_t
 
PFS_NOT_INSTRUMENTED
;

217 
sync_¥öt
(
FILE
 *
fûe
);

	@sync0types.h

33 #i‚de‡
sync0ty≥s_h


34 
	#sync0ty≥s_h


	)

36 
	~<io°ªam
>

37 
	~<ve˘‹
>

39 
	~"sync0sync.h
"

40 
	~"univ.i
"

41 
	~"ut0cou¡î.h
"

42 
	~"ut0√w.h
"

44 #ifde‡
UNIV_DEBUG


46 
boﬁ
 
önodb_ˇŒög_exô
;

49 #ifde‡
_WIN32


51 
CRITICAL_SECTION
 
	tsys_muãx_t
;

54 
±hªad_muãx_t
 
	tsys_muãx_t
;

64 
	emuãx_°©e_t
 {

66 
	mMUTEX_STATE_UNLOCKED
 = 0,

69 
	mMUTEX_STATE_LOCKED
 = 1,

72 
	mMUTEX_STATE_WAITERS
 = 2

217 
	eœtch_Àvñ_t
 {

218 
	mSYNC_UNKNOWN
 = 0,

220 
	mSYNC_MUTEX
 = 1,

222 
	mRW_LOCK_SX
,

223 
	mRW_LOCK_X_WAIT
,

224 
	mRW_LOCK_S
,

225 
	mRW_LOCK_X
,

226 
	mRW_LOCK_NOT_LOCKED
,

228 
	mSYNC_LOCK_FREE_HASH
,

230 
	mSYNC_MONITOR_MUTEX
,

232 
	mSYNC_ANY_LATCH
,

234 
	mSYNC_FIL_SHARD
,

236 
	mSYNC_PAGE_ARCH_OPER
,

238 
	mSYNC_BUF_FLUSH_LIST
,

239 
	mSYNC_BUF_FLUSH_STATE
,

240 
	mSYNC_BUF_ZIP_HASH
,

241 
	mSYNC_BUF_FREE_LIST
,

242 
	mSYNC_BUF_ZIP_FREE
,

243 
	mSYNC_BUF_BLOCK
,

244 
	mSYNC_BUF_PAGE_HASH
,

245 
	mSYNC_BUF_LRU_LIST
,

246 
	mSYNC_BUF_CHUNKS
,

248 
	mSYNC_DBLWR
,

250 
	mSYNC_SEARCH_SYS
,

252 
	mSYNC_WORK_QUEUE
,

254 
	mSYNC_FTS_TOKENIZE
,

255 
	mSYNC_FTS_OPTIMIZE
,

256 
	mSYNC_FTS_BG_THREADS
,

257 
	mSYNC_FTS_CACHE_INIT
,

258 
	mSYNC_RECV
,

260 
	mSYNC_LOG_LIMITS
,

261 
	mSYNC_LOG_WRITER
,

262 
	mSYNC_LOG_WRITE_NOTIFIER
,

263 
	mSYNC_LOG_FLUSH_NOTIFIER
,

264 
	mSYNC_LOG_FLUSHER
,

265 
	mSYNC_LOG_CLOSER
,

266 
	mSYNC_LOG_CHECKPOINTER
,

267 
	mSYNC_LOG_SN
,

268 
	mSYNC_LOG_SN_MUTEX
,

269 
	mSYNC_PAGE_ARCH
,

270 
	mSYNC_PAGE_ARCH_CLIENT
,

271 
	mSYNC_LOG_ARCH
,

273 
	mSYNC_PAGE_CLEANER
,

274 
	mSYNC_PURGE_QUEUE
,

275 
	mSYNC_TRX_SYS_HEADER
,

276 
	mSYNC_THREADS
,

277 
	mSYNC_TRX
,

278 
	mSYNC_POOL
,

279 
	mSYNC_POOL_MANAGER
,

280 
	mSYNC_TRX_SYS
,

281 
	mSYNC_LOCK_SYS_SHARDED
,

282 
	mSYNC_LOCK_SYS_GLOBAL
,

283 
	mSYNC_LOCK_WAIT_SYS
,

285 
	mSYNC_INDEX_ONLINE_LOG
,

287 
	mSYNC_IBUF_BITMAP
,

288 
	mSYNC_IBUF_BITMAP_MUTEX
,

289 
	mSYNC_IBUF_TREE_NODE
,

290 
	mSYNC_IBUF_TREE_NODE_NEW
,

291 
	mSYNC_IBUF_INDEX_TREE
,

293 
	mSYNC_IBUF_MUTEX
,

295 
	mSYNC_FSP_PAGE
,

296 
	mSYNC_FSP
,

297 
	mSYNC_TEMP_POOL_MANAGER
,

298 
	mSYNC_EXTERN_STORAGE
,

299 
	mSYNC_RSEG_ARRAY_HEADER
,

300 
	mSYNC_TRX_UNDO_PAGE
,

301 
	mSYNC_RSEG_HEADER
,

302 
	mSYNC_RSEG_HEADER_NEW
,

303 
	mSYNC_TEMP_SPACE_RSEG
,

304 
	mSYNC_UNDO_SPACE_RSEG
,

305 
	mSYNC_TRX_SYS_RSEG
,

306 
	mSYNC_TRX_UNDO
,

307 
	mSYNC_PURGE_LATCH
,

308 
	mSYNC_TREE_NODE
,

309 
	mSYNC_TREE_NODE_FROM_HASH
,

310 
	mSYNC_TREE_NODE_NEW
,

311 
	mSYNC_INDEX_TREE
,

312 
	mSYNC_RSEGS
,

313 
	mSYNC_UNDO_SPACES
,

315 
	mSYNC_PERSIST_DIRTY_TABLES
,

316 
	mSYNC_PERSIST_AUTOINC
,

318 
	mSYNC_IBUF_PESS_INSERT_MUTEX
,

319 
	mSYNC_IBUF_HEADER
,

320 
	mSYNC_DICT_HEADER
,

321 
	mSYNC_TABLE
,

322 
	mSYNC_STATS_AUTO_RECALC
,

323 
	mSYNC_DICT_AUTOINC_MUTEX
,

324 
	mSYNC_DICT
,

325 
	mSYNC_PARSER
,

326 
	mSYNC_FTS_CACHE
,

327 
	mSYNC_UNDO_DDL
,

329 
	mSYNC_DICT_OPERATION
,

331 
	mSYNC_TRX_I_S_LAST_READ
,

333 
	mSYNC_TRX_I_S_RWLOCK
,

335 
	mSYNC_RECV_WRITER
,

341 
	mSYNC_LEVEL_VARYING
,

344 
	mSYNC_NO_ORDER_CHECK
,

347 
	mSYNC_LEVEL_MAX
 = 
SYNC_NO_ORDER_CHECK


353 
	eœtch_id_t
 {

354 
	mLATCH_ID_NONE
 = 0,

355 
	mLATCH_ID_AUTOINC
,

356 
	mLATCH_ID_BUF_BLOCK_MUTEX
,

357 
	mLATCH_ID_BUF_POOL_CHUNKS
,

358 
	mLATCH_ID_BUF_POOL_ZIP
,

359 
	mLATCH_ID_BUF_POOL_LRU_LIST
,

360 
	mLATCH_ID_BUF_POOL_FREE_LIST
,

361 
	mLATCH_ID_BUF_POOL_ZIP_FREE
,

362 
	mLATCH_ID_BUF_POOL_ZIP_HASH
,

363 
	mLATCH_ID_BUF_POOL_FLUSH_STATE
,

364 
	mLATCH_ID_DBLWR
,

365 
	mLATCH_ID_DBLWR_SPACE_CACHE
,

366 
	mLATCH_ID_CACHE_LAST_READ
,

367 
	mLATCH_ID_DICT_FOREIGN_ERR
,

368 
	mLATCH_ID_DICT_SYS
,

369 
	mLATCH_ID_DICT_TABLE
,

370 
	mLATCH_ID_FIL_SHARD
,

371 
	mLATCH_ID_FLUSH_LIST
,

372 
	mLATCH_ID_FTS_BG_THREADS
,

373 
	mLATCH_ID_FTS_DELETE
,

374 
	mLATCH_ID_FTS_OPTIMIZE
,

375 
	mLATCH_ID_FTS_DOC_ID
,

376 
	mLATCH_ID_FTS_PLL_TOKENIZE
,

377 
	mLATCH_ID_HASH_TABLE_MUTEX
,

378 
	mLATCH_ID_IBUF_BITMAP
,

379 
	mLATCH_ID_IBUF
,

380 
	mLATCH_ID_IBUF_PESSIMISTIC_INSERT
,

381 
	mLATCH_ID_LOCK_FREE_HASH
,

382 
	mLATCH_ID_LOCK_SYS_GLOBAL
,

383 
	mLATCH_ID_LOCK_SYS_PAGE
,

384 
	mLATCH_ID_LOCK_SYS_TABLE
,

385 
	mLATCH_ID_LOCK_SYS_WAIT
,

386 
	mLATCH_ID_LOG_SN
,

387 
	mLATCH_ID_LOG_SN_MUTEX
,

388 
	mLATCH_ID_LOG_CHECKPOINTER
,

389 
	mLATCH_ID_LOG_CLOSER
,

390 
	mLATCH_ID_LOG_WRITER
,

391 
	mLATCH_ID_LOG_FLUSHER
,

392 
	mLATCH_ID_LOG_WRITE_NOTIFIER
,

393 
	mLATCH_ID_LOG_FLUSH_NOTIFIER
,

394 
	mLATCH_ID_LOG_LIMITS
,

395 
	mLATCH_ID_PARSER
,

396 
	mLATCH_ID_LOG_ARCH
,

397 
	mLATCH_ID_PAGE_ARCH
,

398 
	mLATCH_ID_PAGE_ARCH_OPER
,

399 
	mLATCH_ID_PAGE_ARCH_CLIENT
,

400 
	mLATCH_ID_PERSIST_METADATA_BUFFER
,

401 
	mLATCH_ID_DICT_PERSIST_DIRTY_TABLES
,

402 
	mLATCH_ID_PERSIST_AUTOINC
,

403 
	mLATCH_ID_DICT_PERSIST_CHECKPOINT
,

404 
	mLATCH_ID_PAGE_CLEANER
,

405 
	mLATCH_ID_PURGE_SYS_PQ
,

406 
	mLATCH_ID_RECALC_POOL
,

407 
	mLATCH_ID_RECV_SYS
,

408 
	mLATCH_ID_RECV_WRITER
,

409 
	mLATCH_ID_TEMP_SPACE_RSEG
,

410 
	mLATCH_ID_UNDO_SPACE_RSEG
,

411 
	mLATCH_ID_TRX_SYS_RSEG
,

412 
	mLATCH_ID_RW_LOCK_DEBUG
,

413 
	mLATCH_ID_RTR_SSN_MUTEX
,

414 
	mLATCH_ID_RTR_ACTIVE_MUTEX
,

415 
	mLATCH_ID_RTR_MATCH_MUTEX
,

416 
	mLATCH_ID_RTR_PATH_MUTEX
,

417 
	mLATCH_ID_RW_LOCK_LIST
,

418 
	mLATCH_ID_SRV_INNODB_MONITOR
,

419 
	mLATCH_ID_SRV_MISC_TMPFILE
,

420 
	mLATCH_ID_SRV_MONITOR_FILE
,

421 
	mLATCH_ID_SYNC_THREAD
,

422 
	mLATCH_ID_TRX_UNDO
,

423 
	mLATCH_ID_TRX_POOL
,

424 
	mLATCH_ID_TRX_POOL_MANAGER
,

425 
	mLATCH_ID_TEMP_POOL_MANAGER
,

426 
	mLATCH_ID_TRX
,

427 
	mLATCH_ID_TRX_SYS
,

428 
	mLATCH_ID_SRV_SYS
,

429 
	mLATCH_ID_SRV_SYS_TASKS
,

430 
	mLATCH_ID_PAGE_ZIP_STAT_PER_INDEX
,

431 
	mLATCH_ID_EVENT_MANAGER
,

432 
	mLATCH_ID_EVENT_MUTEX
,

433 
	mLATCH_ID_SYNC_ARRAY_MUTEX
,

434 
	mLATCH_ID_ZIP_PAD_MUTEX
,

435 
	mLATCH_ID_OS_AIO_READ_MUTEX
,

436 
	mLATCH_ID_OS_AIO_WRITE_MUTEX
,

437 
	mLATCH_ID_OS_AIO_LOG_MUTEX
,

438 
	mLATCH_ID_OS_AIO_IBUF_MUTEX
,

439 
	mLATCH_ID_OS_AIO_SYNC_MUTEX
,

440 
	mLATCH_ID_ROW_DROP_LIST
,

441 
	mLATCH_ID_INDEX_ONLINE_LOG
,

442 
	mLATCH_ID_WORK_QUEUE
,

443 
	mLATCH_ID_BTR_SEARCH
,

444 
	mLATCH_ID_BUF_BLOCK_LOCK
,

445 
	mLATCH_ID_BUF_BLOCK_DEBUG
,

446 
	mLATCH_ID_DICT_OPERATION
,

447 
	mLATCH_ID_CHECKPOINT
,

448 
	mLATCH_ID_RSEGS
,

449 
	mLATCH_ID_UNDO_SPACES
,

450 
	mLATCH_ID_UNDO_DDL
,

451 
	mLATCH_ID_FIL_SPACE
,

452 
	mLATCH_ID_FTS_CACHE
,

453 
	mLATCH_ID_FTS_CACHE_INIT
,

454 
	mLATCH_ID_TRX_I_S_CACHE
,

455 
	mLATCH_ID_TRX_PURGE
,

456 
	mLATCH_ID_IBUF_INDEX_TREE
,

457 
	mLATCH_ID_INDEX_TREE
,

458 
	mLATCH_ID_DICT_TABLE_STATS
,

459 
	mLATCH_ID_HASH_TABLE_RW_LOCK
,

460 
	mLATCH_ID_BUF_CHUNK_MAP_LATCH
,

461 
	mLATCH_ID_SYNC_DEBUG_MUTEX
,

462 
	mLATCH_ID_MASTER_KEY_ID_MUTEX
,

463 
	mLATCH_ID_FILE_OPEN
,

464 
	mLATCH_ID_CLONE_SYS
,

465 
	mLATCH_ID_CLONE_TASK
,

466 
	mLATCH_ID_CLONE_SNAPSHOT
,

467 
	mLATCH_ID_PARALLEL_READ
,

468 
	mLATCH_ID_DBLR
,

469 
	mLATCH_ID_REDO_LOG_ARCHIVE_ADMIN_MUTEX
,

470 
	mLATCH_ID_REDO_LOG_ARCHIVE_QUEUE_MUTEX
,

471 
	mLATCH_ID_TEST_MUTEX
,

472 
	mLATCH_ID_MAX
 = 
LATCH_ID_TEST_MUTEX


479 
	sOSMuãx
 {

481 
OSMuãx
(Ë
	mUNIV_NOTHROW
 { 
ut_d
(
m_‰ìd
 = 
åue
); }

484 
öô
(Ë
	mUNIV_NOTHROW
 {

485 
ut_ad
(
m_‰ìd
);

487 #ifde‡
_WIN32


488 
InôülizeCrôiˇlSe˘i⁄
((
LPCRITICAL_SECTION
)&
m_muãx
);

491 
	mªt
 = 
±hªad_muãx_öô
(&
m_muãx
, 
nuŒ±r
);

492 
ut_a
(
ªt
 == 0);

496 
ut_d
(
m_‰ìd
 = 
Ál£
);

500 ~
OSMuãx
() {}

503 
de°roy
(Ë
	mUNIV_NOTHROW
 {

504 
ut_ad
(
önodb_ˇŒög_exô
 || !
m_‰ìd
);

505 #ifde‡
_WIN32


506 
DñëeCrôiˇlSe˘i⁄
((
LPCRITICAL_SECTION
)&
m_muãx
);

508 
	mªt
;

510 
	mªt
 = 
±hªad_muãx_de°roy
(&
m_muãx
);

512 i‡(
	mªt
 != 0) {

513 #ifde‡
UNIV_NO_ERR_MSGS


514 
ib
::
îr‹
()

516 
ib
::
îr‹
(
ER_IB_MSG_1372
)

518 << "Rëu∫ vÆuê" << 
ªt
 << " when callingÖthread_mutex_destroy().";

521 
ut_d
(
m_‰ìd
 = 
åue
);

525 
exô
(Ë
	mUNIV_NOTHROW
 {

526 
ut_ad
(
önodb_ˇŒög_exô
 || !
m_‰ìd
);

527 #ifde‡
_WIN32


528 
LóveCrôiˇlSe˘i⁄
(&
m_muãx
);

530 
	mªt
 = 
±hªad_muãx_u∆ock
(&
m_muãx
);

531 
ut_a
(
ªt
 == 0);

536 
íãr
(Ë
	mUNIV_NOTHROW
 {

537 
ut_ad
(
önodb_ˇŒög_exô
 || !
m_‰ìd
);

538 #ifde‡
_WIN32


539 
E¡îCrôiˇlSe˘i⁄
((
LPCRITICAL_SECTION
)&
m_muãx
);

541 
	mªt
 = 
±hªad_muãx_lock
(&
m_muãx
);

542 
ut_a
(
ªt
 == 0);

547 
boﬁ
 
åy_lock
(Ë
	mUNIV_NOTHROW
 {

548 
ut_ad
(
önodb_ˇŒög_exô
 || !
m_‰ìd
);

549 #ifde‡
_WIN32


550  (
TryE¡îCrôiˇlSe˘i⁄
(&
m_muãx
) != 0);

552  (
±hªad_muãx_åylock
(&
m_muãx
) == 0);

557 
›î©‹
 
	msys_muãx_t
 *(Ë
	mUNIV_NOTHROW
 {  (&
	mm_muãx
); }

559 #i‡
deföed
(
UNIV_LIBRARY
Ë&& deföed(
UNIV_DEBUG
)

560 
boﬁ
 
is_ow√d
() {

565 
	mut_îr‹
;

566  (
	mÁl£
);

570 
	m¥iv©e
:

571 #ifde‡
UNIV_DEBUG


573 
boﬁ
 
m_‰ìd
;

576 
sys_muãx_t
 
	mm_muãx
;

579 #i‚de‡
UNIV_LIBRARY


580 #ifde‡
UNIV_PFS_MUTEX


586 
	#LATCH_ADD_MUTEX
(
id
, 
Àvñ
, 
key
) \

587 
œtch_mëa
[
LATCH_ID_
##
id
] = \

588 
	`UT_NEW_NOKEY
(
	`œtch_mëa_t
(
LATCH_ID_
##
id
, #id, 
Àvñ
, #Àvñ, 
key
))

	)

590 #ifde‡
UNIV_PFS_RWLOCK


596 
	#LATCH_ADD_RWLOCK
(
id
, 
Àvñ
, 
key
) \

597 
œtch_mëa
[
LATCH_ID_
##
id
] = \

598 
	`UT_NEW_NOKEY
(
	`œtch_mëa_t
(
LATCH_ID_
##
id
, #id, 
Àvñ
, #Àvñ, 
key
))

	)

600 
	#LATCH_ADD_RWLOCK
(
id
, 
Àvñ
, 
key
) \

601 
œtch_mëa
[
LATCH_ID_
##
id
] = 
	`UT_NEW_NOKEY
( \

602 
	`œtch_mëa_t
(
LATCH_ID_
##
id
, #id, 
Àvñ
, #Àvñ, 
PSI_NOT_INSTRUMENTED
))

	)

606 
	#LATCH_ADD_MUTEX
(
id
, 
Àvñ
, 
key
) \

607 
œtch_mëa
[
LATCH_ID_
##
id
] = \

608 
	`UT_NEW_NOKEY
(
	`œtch_mëa_t
(
LATCH_ID_
##
id
, #id, 
Àvñ
, #Àvñ))

	)

609 
	#LATCH_ADD_RWLOCK
(
id
, 
Àvñ
, 
key
) \

610 
œtch_mëa
[
LATCH_ID_
##
id
] = \

611 
	`UT_NEW_NOKEY
(
	`œtch_mëa_t
(
LATCH_ID_
##
id
, #id, 
Àvñ
, #Àvñ))

	)

615 ˛as†
	cL©chCou¡î
 {

616 
	mpublic
:

618 
	sCou¡
 {

620 
Cou¡
(Ë
UNIV_NOTHROW
 : 
m_•ös
(), 
m_waôs
(), 
m_ˇŒs
(), 
m_íabÀd
() {

625 
ª£t
(Ë
	mUNIV_NOTHROW
 {

626 
	mm_•ös
 = 0;

627 
	mm_waôs
 = 0;

628 
	mm_ˇŒs
 = 0;

632 
uöt32_t
 
	mm_•ös
;

635 
uöt32_t
 
	mm_waôs
;

638 
uöt32_t
 
	mm_ˇŒs
;

641 
boﬁ
 
	mm_íabÀd
;

645 
	$L©chCou¡î
(Ë
UNIV_NOTHROW
 : 
	$m_a˘ive
(
Ál£
Ë{ 
m_muãx
.
	`öô
(); 
	}
}

648 ~
	$L©chCou¡î
(Ë
UNIV_NOTHROW
 {

649 
m_muãx
.
	`de°roy
();

651 
Cou¡
 *
cou¡
 : 
m_cou¡îs
) {

652 
	`UT_DELETE
(
cou¡
);

654 
	}
}

660 
	$ª£t
(Ë
UNIV_NOTHROW
 {

661 
m_muãx
.
	`íãr
();

663 
Cou¡
 *
cou¡
 : 
m_cou¡îs
) {

664 
cou¡
->
	`ª£t
();

667 
m_muãx
.
	`exô
();

668 
	}
}

671 
Cou¡
 *
	$sum_ªgi°î
(Ë
UNIV_NOTHROW
 {

672 
m_muãx
.
	`íãr
();

674 
Cou¡
 *
cou¡
;

676 i‡(
m_cou¡îs
.
	`em±y
()) {

677 
cou¡
 = 
	`UT_NEW_NOKEY
(
	`Cou¡
());

678 
m_cou¡îs
.
	`push_back
(
cou¡
);

680 
	`ut_a
(
m_cou¡îs
.
	`size
() == 1);

681 
cou¡
 = 
m_cou¡îs
[0];

684 
m_muãx
.
	`exô
();

686  (
cou¡
);

687 
	}
}

691 
	$sum_dîegi°î
(
Cou¡
 *
cou¡
Ëc⁄° 
UNIV_NOTHROW
 {

692 
	}
}

695 
	$sögÀ_ªgi°î
(
Cou¡
 *
cou¡
Ë
UNIV_NOTHROW
 {

696 
m_muãx
.
	`íãr
();

698 
m_cou¡îs
.
	`push_back
(
cou¡
);

700 
m_muãx
.
	`exô
();

701 
	}
}

705 
	$sögÀ_dîegi°î
(
Cou¡
 *
cou¡
Ë
UNIV_NOTHROW
 {

706 
m_muãx
.
	`íãr
();

708 
m_cou¡îs
.
	`îa£
(
°d
::
	`ªmove
(m_cou¡îs.
	`begö
(), m_cou¡îs.
	`íd
(), 
cou¡
),

709 
m_cou¡îs
.
	`íd
());

711 
m_muãx
.
	`exô
();

712 
	}
}

715 
	gãm∂©e
 <
ty≥«me
 
	gCÆlback
>

716 
	$ôî©e
(
CÆlback
 &&
ˇŒback
Ëc⁄° 
UNIV_NOTHROW
 {

717 
m_muãx
.
	`íãr
();

718 c⁄° 
Cou¡
 *
cou¡
 : 
m_cou¡îs
) {

719 
°d
::
f‹w¨d
<
CÆlback
>(
ˇŒback
)(
cou¡
);

721 
m_muãx
.
	`exô
();

722 
	}
}

725 
	$íabÀ
(Ë
UNIV_NOTHROW
 {

726 
m_muãx
.
	`íãr
();

728 
Cou¡
 *
cou¡
 : 
m_cou¡îs
) {

729 
cou¡
->
m_íabÀd
 = 
åue
;

732 
m_a˘ive
 = 
åue
;

734 
m_muãx
.
	`exô
();

735 
	}
}

738 
	$dißbÀ
(Ë
UNIV_NOTHROW
 {

739 
m_muãx
.
	`íãr
();

741 
Cou¡
 *
cou¡
 : 
m_cou¡îs
) {

742 
cou¡
->
m_íabÀd
 = 
Ál£
;

745 
m_a˘ive
 = 
Ál£
;

747 
m_muãx
.
	`exô
();

748 
	}
}

751 
boﬁ
 
	$is_íabÀd
(Ëc⁄° 
UNIV_NOTHROW
 {  (
m_a˘ive
); 
	}
}

753 
	g¥iv©e
:

755 
L©chCou¡î
(const LatchCounter &);

756 
	gL©chCou¡î
 &
	g›î©‹
=(c⁄° 
L©chCou¡î
 &);

758 
	g¥iv©e
:

759 
OSMuãx
 
	tMuãx
;

760 
	g°d
::
	tve˘‹
<
	tCou¡
 *> 
	tCou¡îs
;

763 
muèbÀ
 
Muãx
 
	gm_muãx
;

766 
Cou¡îs
 
	gm_cou¡îs
;

769 
boﬁ
 
	gm_a˘ive
;

773 
	gãm∂©e
 <
ty≥«me
 
	gCou¡î
 = 
L©chCou¡î
>

774 ˛as†
	cL©chMëa
 {

775 
public
:

776 
Cou¡î
 
	tCou¡îTy≥
;

778 #ifde‡
UNIV_PFS_MUTEX


779 
mysql_pfs_key_t
 
	tpfs_key_t
;

783 
	$L©chMëa
()

784 : 
	`m_id
(
LATCH_ID_NONE
),

785 
	`m_«me
(),

786 
	`m_Àvñ
(
SYNC_UNKNOWN
),

787 
	$m_Àvñ_«me
()

788 #ifde‡
UNIV_PFS_MUTEX


790 
	$m_pfs_key
()

796 ~
	$L©chMëa
(Ë{
	}
}

804 
L©chMëa
(
œtch_id_t
 
id
, c⁄° *
«me
, 
œtch_Àvñ_t
 
Àvñ
,

805 c⁄° *
Àvñ_«me


806 #ifde‡
UNIV_PFS_MUTEX


808 
pfs_key_t
 
key


811 : 
m_id
(
id
),

812 
m_«me
(
«me
),

813 
m_Àvñ
(
Àvñ
),

814 
	$m_Àvñ_«me
(
Àvñ_«me
)

815 #ifde‡
UNIV_PFS_MUTEX


817 
	$m_pfs_key
(
key
)

821 
	}
}

826 
boﬁ
 
	g›î©‹
<(c⁄° 
	gL©chMëa
 &
	grhs
) const {

827  (
gë_id
(Ë< 
	grhs
.get_id());

831 
œtch_id_t
 
	$gë_id
(Ëc⁄° {  (
m_id
); 
	}
}

834 c⁄° *
	$gë_«me
(Ëc⁄° {  (
m_«me
); 
	}
}

837 
œtch_Àvñ_t
 
	$gë_Àvñ
(Ëc⁄° {  (
m_Àvñ
); 
	}
}

840 c⁄° *
	$gë_Àvñ_«me
(Ëc⁄° {  (
m_Àvñ_«me
); 
	}
}

842 #ifde‡
UNIV_PFS_MUTEX


844 
pfs_key_t
 
	$gë_pfs_key
(Ëc⁄° {  (
m_pfs_key
); 
	}
}

848 
Cou¡î
 *
	$gë_cou¡î
(Ë{  (&
m_cou¡î
); 
	}
}

850 
	g¥iv©e
:

852 
œtch_id_t
 
m_id
;

855 c⁄° *
	gm_«me
;

858 
œtch_Àvñ_t
 
	gm_Àvñ
;

861 c⁄° *
	gm_Àvñ_«me
;

863 #ifde‡
UNIV_PFS_MUTEX


865 
pfs_key_t
 
	gm_pfs_key
;

869 
Cou¡î
 
	gm_cou¡î
;

872 
	gL©chMëa
<
	tL©chCou¡î
> 
	tœtch_mëa_t
;

873 
	g°d
::
	tve˘‹
<
	tœtch_mëa_t
 *, 
	tut_Æloˇt‹
<œtch_mëa_à*>> 
	tL©chMëaD©a
;

878 
L©chMëaD©a
 
œtch_mëa
;

883 
ölöe
 
	gœtch_mëa_t
 &
	$sync_œtch_gë_mëa
(
œtch_id_t
 
id
) {

884 
	`ut_ad
(
°©ic_ˇ°
<
size_t
>(
id
Ë< 
œtch_mëa
.
	`size
());

885 
	`ut_ad
(
id
 =
œtch_mëa
[id]->
	`gë_id
());

887  (*
œtch_mëa
[
id
]);

888 
	}
}

893 
ölöe
 
	gœtch_mëa_t
::
Cou¡îTy≥
 *
	$sync_œtch_gë_cou¡î
(
œtch_id_t
 
id
) {

894 
œtch_mëa_t
 &
mëa
 = 
	`sync_œtch_gë_mëa
(
id
);

896  (
mëa
.
	`gë_cou¡î
());

897 
	}
}

902 
ölöe
 c⁄° *
	$sync_œtch_gë_«me
(
œtch_id_t
 
id
) {

903 c⁄° 
œtch_mëa_t
 &
mëa
 = 
	`sync_œtch_gë_mëa
(
id
);

905  (
mëa
.
	`gë_«me
());

906 
	}
}

911 
ölöe
 
œtch_Àvñ_t
 
	$sync_œtch_gë_Àvñ
(
œtch_id_t
 
id
) {

912 c⁄° 
œtch_mëa_t
 &
mëa
 = 
	`sync_œtch_gë_mëa
(
id
);

914  (
mëa
.
	`gë_Àvñ
());

915 
	}
}

917 #ifde‡
UNIV_PFS_MUTEX


921 
ölöe
 
mysql_pfs_key_t
 
	$sync_œtch_gë_pfs_key
(
œtch_id_t
 
id
) {

922 c⁄° 
œtch_mëa_t
 &
mëa
 = 
	`sync_œtch_gë_mëa
(
id
);

924  (
mëa
.
	`gë_pfs_key
());

925 
	}
}

928 #i‚de‡
UNIV_HOTBACKUP


934 
	g°d
::
°rög
 
sync_muãx_to_°rög
(
œtch_id_t
 
id
, c⁄° 
°d
::°rög &
¸óãd
);

939 c⁄° *
sync_œtch_gë_«me
(
œtch_Àvñ_t
 
Àvñ
);

943 c⁄° *
sync_ba£«me
(c⁄° *
fûíame
);

950 
sync_fûe_¸óãd_ªgi°î
(c⁄° *
±r
, c⁄° *
fûíame
,

951 
uöt16_t
 
löe
);

955 
sync_fûe_¸óãd_dîegi°î
(c⁄° *
±r
);

960 
	g°d
::
°rög
 
sync_fûe_¸óãd_gë
(c⁄° *
±r
);

964 #ifde‡
UNIV_DEBUG


967 
	sœtch_t
 {

970 
ex∂icô
 
œtch_t
(
œtch_id_t
 
id
 = 
LATCH_ID_NONE
Ë
UNIV_NOTHROW
 : 
m_id
(id),

971 
m_rw_lock
(),

972 
m_ãmp_f•
() {}

974 
	mœtch_t
 &
	m›î©‹
=(c⁄° 
œtch_t
 &) = ;

977 
	mvútuÆ
 ~
œtch_t
(Ë
	mUNIV_NOTHROW
 {}

980 
œtch_id_t
 
gë_id
(Ëc⁄° {  (
	mm_id
); }

983 
boﬁ
 
is_rw_lock
(Ëc⁄° 
	mUNIV_NOTHROW
 {  (
	mm_rw_lock
); }

987 
vútuÆ
 
	m°d
::
°rög
 
to_°rög
() const = 0;

990 
vútuÆ
 
	m°d
::
°rög
 
locked_‰om
() const = 0;

993 
œtch_Àvñ_t
 
gë_Àvñ
(Ëc⁄° 
	mUNIV_NOTHROW
 {

994 
ut_a
(
m_id
 !
LATCH_ID_NONE
);

996 #i‚de‡
UNIV_LIBRARY


997  (
sync_œtch_gë_Àvñ
(
m_id
));

1003 
	mut_îr‹
;

1004  (
	mSYNC_UNKNOWN
);

1009 
boﬁ
 
is_ãmp_f•
(Ëc⁄° 
	mUNIV_NOTHROW
 {  (
	mm_ãmp_f•
); }

1015 
£t_ãmp_f•
(Ë
	mUNIV_NOTHROW
 {

1016 
ut_ad
(
gë_id
(Ë=
LATCH_ID_FIL_SPACE
);

1017 
	mm_ãmp_f•
 = 
åue
;

1021 c⁄° *
gë_«me
(Ëc⁄° 
	mUNIV_NOTHROW
 {

1022 
ut_a
(
m_id
 !
LATCH_ID_NONE
);

1024 #i‚de‡
UNIV_LIBRARY


1025  (
sync_œtch_gë_«me
(
m_id
));

1031 
	mut_îr‹
;

1032  (
	mnuŒ±r
);

1037 
œtch_id_t
 
	mm_id
;

1041 
boﬁ
 
	mm_rw_lock
;

1044 
boﬁ
 
	mm_ãmp_f•
;

1048 
	ssync_check_fun˘‹_t
 {

1049 
	mvútuÆ
 ~
sync_check_fun˘‹_t
() {}

1050 
vútuÆ
 
boﬁ
 
›î©‹
()(c⁄° 
	mœtch_Àvñ_t
) = 0;

1051 
vútuÆ
 
boﬁ
 
ªsu…
() const = 0;

1055 
	gbå£a_sync_check
 : 
public
 
sync_check_fun˘‹_t
 {

1058 
ex∂icô
 
bå£a_sync_check
(
boﬁ
 
has_£¨ch_œtch
)

1059 : 
m_ªsu…
(), 
m_has_£¨ch_œtch
(
has_£¨ch_œtch
) {}

1062 ~
bå£a_sync_check
(Ë
	govîride
 {}

1067 
boﬁ
 
›î©‹
()(c⁄° 
œtch_Àvñ_t
 
	gÀvñ
Ë
	govîride
 {

1084 i‡(!
	gm_has_£¨ch_œtch
 &&

1085 (
	gÀvñ
 !
SYNC_SEARCH_SYS
 && 
Àvñ
 !
SYNC_DICT
 &&

1086 
Àvñ
 !
SYNC_FTS_CACHE
 &&Üevñ !
SYNC_UNDO_DDL
 &&

1087 
Àvñ
 !
SYNC_DICT_OPERATION
 &&Üevñ !
SYNC_TRX_I_S_LAST_READ
 &&

1088 
Àvñ
 !
SYNC_TRX_I_S_RWLOCK
)) {

1089 
m_ªsu…
 = 
åue
;

1090 #ifde‡
UNIV_NO_ERR_MSGS


1091 
	gib
::
îr‹
()

1093 
ib
::
îr‹
(
ER_IB_MSG_1373
)

1097 << 
Àvñ
 << ".";

1099  (
	gm_ªsu…
);

1102  (
	gÁl£
);

1106 
boﬁ
 
ªsu…
(Ëc⁄° 
	govîride
 {  (
	gm_ªsu…
); }

1108 
	g¥iv©e
:

1110 
boﬁ
 
m_ªsu…
;

1113 c⁄° 
boﬁ
 
	gm_has_£¨ch_œtch
;

1117 
	gdi˘_sync_check
 : 
public
 
sync_check_fun˘‹_t
 {

1121 
ex∂icô
 
di˘_sync_check
(
boﬁ
 
di˘_muãx_Ælowed
)

1122 : 
m_ªsu…
(), 
m_di˘_muãx_Ælowed
(
di˘_muãx_Ælowed
) {}

1125 ~
di˘_sync_check
(Ë
	govîride
 {}

1129 
boﬁ
 
›î©‹
()(c⁄° 
œtch_Àvñ_t
 
	gÀvñ
Ë
	govîride
 {

1130 i‡(!
	gm_di˘_muãx_Ælowed
 ||

1131 (
	gÀvñ
 !
SYNC_DICT
 && 
Àvñ
 !
SYNC_UNDO_SPACES
 &&

1132 
Àvñ
 !
SYNC_FTS_CACHE
 &&Üevñ !
SYNC_DICT_OPERATION
 &&

1134 
Àvñ
 !
SYNC_RECV_WRITER
 &&Üevñ !
SYNC_NO_ORDER_CHECK
)) {

1135 
m_ªsu…
 = 
åue
;

1136 #ifde‡
UNIV_NO_ERR_MSGS


1137 
	gib
::
îr‹
()

1139 
ib
::
îr‹
(
ER_IB_MSG_1374
)

1141 << "Debug: Di˘i⁄¨yÜ©ch ordî viﬁ©i⁄ f‹Üevñ " << 
Àvñ


1144  (
	gåue
);

1147  (
	gÁl£
);

1151 
vútuÆ
 
boﬁ
 
ªsu…
(Ëc⁄° 
	govîride
 {  (
	gm_ªsu…
); }

1153 
	g¥iv©e
:

1155 
boﬁ
 
m_ªsu…
;

1158 c⁄° 
boﬁ
 
	gm_di˘_muãx_Ælowed
;

1162 
	gsync_Ælowed_œtches
 : 
public
 
sync_check_fun˘‹_t
 {

1166 
sync_Ælowed_œtches
(c⁄° 
œtch_Àvñ_t
 *
‰om
, c⁄°Ü©ch_Àvñ_à*
to
)

1167 : 
m_ªsu…
(), 
m_œtches
(
‰om
, 
to
) {}

1176 
vútuÆ
 
boﬁ
 
›î©‹
()(c⁄° 
œtch_Àvñ_t
 
	gÀvñ
Ë
	govîride
 {

1177 
œtch_Àvñ_t
 
	gÆlowed_Àvñ
 : 
m_œtches
) {

1178 i‡(
Àvñ
 =
Ælowed_Àvñ
) {

1179 
m_ªsu…
 = 
Ál£
;

1182  (
	gm_ªsu…
);

1186 #ifde‡
UNIV_NO_ERR_MSGS


1187 
	gib
::
îr‹
()

1189 
ib
::
îr‹
(
ER_IB_MSG_1375
)

1191 << "Debug: sync_Ælowed_œtche†viﬁ©i⁄ f‹Üevñ=" << 
Àvñ
;

1192 
	gm_ªsu…
 = 
åue
;

1193  (
	gm_ªsu…
);

1197 
vútuÆ
 
boﬁ
 
ªsu…
(Ëc⁄° 
	govîride
 {  (
	gm_ªsu…
); }

1199 
	g¥iv©e
:

1202 
boﬁ
 
m_ªsu…
;

1204 
	g°d
::
	tve˘‹
<
	tœtch_Àvñ_t
, 
	tut_Æloˇt‹
<œtch_Àvñ_t>> 
	tœtches_t
;

1207 
œtches_t
 
	gm_œtches
;

1213 
œtch_id_t
 
sync_œtch_gë_id
(c⁄° *
«me
);

1215 
ulöt
 
	trw_lock_Êags_t
;

1218 
	erw_lock_Êag_t
 {

1219 
	mRW_LOCK_FLAG_S
 = 1 << 0,

1220 
	mRW_LOCK_FLAG_X
 = 1 << 1,

1221 
	mRW_LOCK_FLAG_SX
 = 1 << 2

	@trx0i_s.h

35 #i‚de‡
åx0i_s_h


36 
	#åx0i_s_h


	)

38 
	~"di˘0ty≥s.h
"

39 
	~"åx0ty≥s.h
"

40 
	~"univ.i
"

42 
˛ass
 
	gPSI_£rvî_d©a_lock_c⁄èöî
;

46 
	#TRX_I_S_MEM_LIMIT
 16777216

	)

50 
	#TRX_I_S_LOCK_DATA_MAX_LEN
 8192

	)

54 
	#TRX_I_S_TRX_QUERY_MAX_LEN
 1024

	)

58 
	#TRX_I_S_TRX_OP_STATE_MAX_LEN
 64

	)

62 
	#TRX_I_S_TRX_FK_ERROR_MAX_LEN
 256

	)

66 
	#TRX_I_S_TRX_ISOLATION_LEVEL_MAX_LEN
 16

	)

70 
	#TRX_I_S_STRING_COPY
(
d©a
, 
fõld
, 
c⁄°øöt
, 
tˇche
) \

72 i‡(
	`°æí
(
d©a
Ë> 
c⁄°øöt
) { \

73 
buff
[
c⁄°øöt
 + 1]; \

74 
	`°∫˝y
(
buff
, 
d©a
, 
c⁄°øöt
); \

75 
buff
[
c⁄°øöt
] = '\0'; \

77 
fõld
 = 
°©ic_ˇ°
<const *>( \

78 
	`ha_°‹age_put_memlim
((
tˇche
)->
°‹age
, 
buff
, 
c⁄°øöt
 + 1, \

79 
	`MAX_ALLOWED_FOR_STORAGE
(
tˇche
))); \

81 
fõld
 = 
°©ic_ˇ°
<c⁄° *>(
	`ha_°‹age_put_°r_memlim
( \

82 (
tˇche
)->
°‹age
, 
d©a
, 
	`MAX_ALLOWED_FOR_STORAGE
(tcache))); \

84 } 0)

	)

87 
	si_s_locks_row_t
 {

88 
uöt64_t
 
	mlock_åx_immuèbÀ_id
;

95 
uöt64_t
 
	mlock_immuèbÀ_id
;

114 
•a˚_id_t
 
	mlock_•a˚
;

115 
∑ge_no_t
 
	mlock_∑ge
;

116 
ulöt
 
	mlock_ªc
;

122 
èbÀ_id_t
 
	mlock_èbÀ_id
;

129 
	si_s_åx_row_t
 {

130 
åx_id_t
 
	måx_id
;

131 c⁄° *
	måx_°©e
;

133 
ib_time_t
 
	måx_°¨ãd
;

134 c⁄° 
i_s_locks_row_t
 *
	mªque°ed_lock_row
;

140 
ib_time_t
 
	måx_waô_°¨ãd
;

142 
uötmax_t
 
	måx_weight
;

147 
	m°d
::
∑ú
<
boﬁ
, 
	måx_scheduÀ_weight_t
> 
	måx_scheduÀ_weight
;

148 
ulöt
 
	måx_mysql_thªad_id
;

149 c⁄° *
	måx_quîy
;

151 c⁄° 
CHARSET_INFO
 *
	måx_quîy_cs
;

152 c⁄° *
	måx_›î©i⁄_°©e
;

153 
ulöt
 
	måx_èbÀs_ö_u£
;

155 
ulöt
 
	måx_èbÀs_locked
;

158 
ulöt
 
	måx_lock_°ru˘s
;

160 
ulöt
 
	måx_lock_mem‹y_byãs
;

163 
ulöt
 
	måx_rows_locked
;

164 
uötmax_t
 
	måx_rows_modifõd
;

165 
ulöt
 
	måx_c⁄cuºícy_tickës
;

168 c⁄° *
	måx_isﬁ©i⁄_Àvñ
;

170 
iboﬁ
 
	måx_unique_checks
;

172 
iboﬁ
 
	måx_f‹eign_key_checks
;

174 c⁄° *
	måx_f‹eign_key_îr‹
;

176 
iboﬁ
 
	måx_has_£¨ch_œtch
;

178 
ulöt
 
	måx_is_ªad_⁄ly
;

180 
ulöt
 
	måx_is_autocommô_n⁄_lockög
;

186 
	gåx_i_s_ˇche_t
;

190 
	ei_s_èbÀ
 {

191 
	mI_S_INNODB_TRX
,

197 
åx_i_s_ˇche_t
 *
åx_i_s_ˇche
;

200 
åx_i_s_ˇche_öô
(
åx_i_s_ˇche_t
 *
ˇche
);

202 
åx_i_s_ˇche_‰ì
(
åx_i_s_ˇche_t
 *
ˇche
);

205 
åx_i_s_ˇche_°¨t_ªad
(
åx_i_s_ˇche_t
 *
ˇche
);

208 
åx_i_s_ˇche_íd_ªad
(
åx_i_s_ˇche_t
 *
ˇche
);

211 
åx_i_s_ˇche_°¨t_wrôe
(
åx_i_s_ˇche_t
 *
ˇche
);

214 
åx_i_s_ˇche_íd_wrôe
(
åx_i_s_ˇche_t
 *
ˇche
);

219 
ulöt
 
åx_i_s_ˇche_gë_rows_u£d
(
åx_i_s_ˇche_t
 *
ˇche
,

220 
i_s_èbÀ
 
èbÀ
);

225 *
åx_i_s_ˇche_gë_¡h_row
(
åx_i_s_ˇche_t
 *
ˇche
,

226 
i_s_èbÀ
 
èbÀ
,

227 
ulöt
 
n
);

231 
åx_i_s_possibly_„tch_d©a_öto_ˇche
(

232 
åx_i_s_ˇche_t
 *
ˇche
);

238 
boﬁ
 
åx_i_s_ˇche_is_åunˇãd
(
åx_i_s_ˇche_t
 *
ˇche
);

243 
	#TRX_I_S_LOCK_ID_MAX_LEN
 (20 * 5 + 4)

	)

250 *
åx_i_s_¸óã_lock_id
(

251 c⁄° 
i_s_locks_row_t
 *
row
,

252 *
lock_id
,

253 
ulöt
 
lock_id_size
);

264 
p_s_fûl_lock_d©a
(c⁄° **
lock_d©a
, c⁄° 
lock_t
 *
lock
,

265 
ulöt
 
hóp_no
,

266 
PSI_£rvî_d©a_lock_c⁄èöî
 *
c⁄èöî
);

273 
fûl_locks_row
(
i_s_locks_row_t
 *
row
, c⁄° 
lock_t
 *
lock
, 
ulöt
 
hóp_no
);

279 
åx_i_s_∑r£_lock_id
(c⁄° *
lock_id
, 
i_s_locks_row_t
 *
row
);

	@trx0purge.h

33 #i‚de‡
åx0purge_h


34 
	#åx0purge_h


	)

36 
	~<un‹dîed_£t
>

37 
	~"fû0fû.h
"

38 
	~"må0må.h
"

39 
	~"∑ge0∑ge.h
"

40 
	~"que0ty≥s.h
"

41 
	~"ªad0ty≥s.h
"

42 
	~"åx0sys.h
"

43 
	~"åx0ty≥s.h
"

44 
	~"univ.i
"

45 
	~"u§0£ss.h
"

46 #ifde‡
UNIV_HOTBACKUP


47 
	~"åx0sys.h
"

51 
åx_purge_t
 *
purge_sys
;

56 
UNIV_INLINE


57 
fû_addr_t
 
åx_purge_gë_log_‰om_hi°
(

58 
fû_addr_t
 
node_addr
);

65 
åx_purge_sys_¸óã
(
ulöt
 
n_purge_thªads
, 
purge_pq_t
 *
purge_queue
);

68 
åx_purge_sys_˛o£
();

73 
åx_purge_add_upd©e_undo_to_hi°‹y
(

74 
åx_t
 *
åx
,

75 
åx_undo_±r_t
 *
undo_±r
,

76 
∑ge_t
 *
undo_∑ge
,

78 
boﬁ
 
upd©e_r£g_hi°‹y_Àn
,

81 
ulöt
 
n_added_logs
,

82 
må_t
 *
må
);

86 
ulöt
 
åx_purge
(ulöà
n_purge_thªads
,

88 
ulöt
 
limô
,

90 
boﬁ
 
åunˇã
);

93 
åx_purge_°›
();

95 
åx_purge_run
();

98 
	epurge_°©e_t
 {

99 
	mPURGE_STATE_INIT
,

100 
	mPURGE_STATE_RUN
,

101 
	mPURGE_STATE_STOP
,

102 
	mPURGE_STATE_EXIT
,

103 
	mPURGE_STATE_DISABLED


108 
purge_°©e_t
 
åx_purge_°©e
();

111 
	gTrxUndoR£gsIãøt‹
;

115 
	spurge_ôî_t
 {

116 
purge_ôî_t
(Ë: 
åx_no
(), 
undo_no
(), 
undo_r£g_•a˚
(
SPACE_UNKNOWN
) {

122 
åx_id_t
 
	måx_no
;

126 
undo_no_t
 
	mundo_no
;

129 
•a˚_id_t
 
	mundo_r£g_•a˚
;

133 
åx_id_t
 
	mmodifõr_åx_id
;

138 
«me•a˚
 
	gundo
 {

141 c⁄° 
ib_uöt32_t
 
	gs_magic
 = 76845412;

144 c⁄° *c⁄° 
	gs_log_¥efix
 = "undo_";

147 c⁄° *c⁄° 
	gs_log_ext
 = "trunc.log";

151 
	s•a˚_id_accou¡
 {

152 
•a˚_id_t
 
	g•a˚_id
;

153 
boﬁ
 
	gö_u£
;

158 
•a˚_id_accou¡
 *
•a˚_id_b™k
;

163 
ölöe
 
boﬁ
 
is_ª£rved
(
•a˚_id_t
 
•a˚_id
) {

164  (
	g•a˚_id
 >
di˘_sys_t
::
s_mö_undo_•a˚_id
 &&

165 
•a˚_id
 <
di˘_sys_t
::
s_max_undo_•a˚_id
);

174 
ölöe
 
•a˚_id_t
 
num2id
(•a˚_id_à
•a˚_num
, 
size_t
 
ndx
) {

175 
ut_ad
(
•a˚_num
 > 0);

176 
ut_ad
(
•a˚_num
 <
FSP_MAX_UNDO_TABLESPACES
);

177 
ut_ad
(
ndx
 < 
di˘_sys_t
::
s_undo_•a˚_id_ønge
);

179 
•a˚_id_t
 
	g•a˚_id
 = 
di˘_sys_t
::
s_max_undo_•a˚_id
 + 1 - 
•a˚_num
 -

180 
°©ic_ˇ°
<
•a˚_id_t
>(
ndx
 * 
FSP_MAX_UNDO_TABLESPACES
);

182  (
	g•a˚_id
);

190 
ölöe
 
•a˚_id_t
 
num2id
(•a˚_id_à
•a˚_num
) {

191 
ut_ad
(
•a˚_num
 > 0);

192 
ut_ad
(
•a˚_num
 <
FSP_MAX_UNDO_TABLESPACES
);

194 
size_t
 
	g¶Ÿ
 = 
•a˚_num
 - 1;

199 
ut_ad
(
undo
::
•a˚_id_b™k
[
¶Ÿ
].
ö_u£
);

201  (
	gundo
::
•a˚_id_b™k
[
¶Ÿ
].
•a˚_id
);

226 
ölöe
 
•a˚_id_t
 
id2num
(•a˚_id_à
•a˚_id
) {

227 i‡(!
is_ª£rved
(
•a˚_id
)) {

228  (
	g•a˚_id
);

231  (((
	gdi˘_sys_t
::
s_max_undo_•a˚_id
 - 
•a˚_id
) %

232 
FSP_MAX_UNDO_TABLESPACES
) +

238 
ölöe
 
•a˚_id_t
 
id2√xt_id
(•a˚_id_à
•a˚_id
) {

239 
ut_ad
(
is_ª£rved
(
•a˚_id
));

241 
•a˚_id_t
 
	g•a˚_num
 = 
id2num
(
•a˚_id
);

242 
•a˚_id_t
 
	gfú°_id
 = 
di˘_sys_t
::
s_max_undo_•a˚_id
 + 1 - 
•a˚_num
;

243 
•a˚_id_t
 
	gœ°_id
 = 
fú°_id
 - (
FSP_MAX_UNDO_TABLESPACES
 *

244 (
di˘_sys_t
::
s_undo_•a˚_id_ønge
 - 1));

246  (
	g•a˚_id
 =
SPACE_UNKNOWN
 || 
•a˚_id
 =
œ°_id


247 ? 
fú°_id


248 : 
•a˚_id
 - 
FSP_MAX_UNDO_TABLESPACES
);

256 
öô_•a˚_id_b™k
();

261 
u£_•a˚_id
(
•a˚_id_t
 
•a˚_id
);

267 
•a˚_id_t
 
u£_√xt_•a˚_id
(•a˚_id_à
•a˚_num
);

273 
unu£_•a˚_id
(
•a˚_id_t
 
•a˚_id
);

280 
•a˚_id_t
 
√xt_•a˚_id
(•a˚_id_à
•a˚_id
, s∑˚_id_à
•a˚_num
);

286 
•a˚_id_t
 
√xt_•a˚_id
(•a˚_id_à
•a˚_id
);

292 
•a˚_id_t
 
gë_√xt_avaûabÀ_•a˚_num
();

297 *
make_•a˚_«me
(
•a˚_id_t
 
•a˚_id
);

304 *
make_fûe_«me
(
•a˚_id_t
 
•a˚_id
);

311 
	sTabÀ•a˚
 {

314 
ex∂icô
 
TabÀ•a˚
(
•a˚_id_t
 
id
)

315 : 
m_id
(
id
),

316 
m_num
(
undo
::
id2num
(
id
)),

317 
m_im∂icô
(
åue
),

318 
m_√w
(
Ál£
),

319 
m_•a˚_«me
(),

320 
m_fûe_«me
(),

321 
m_log_fûe_«me
(),

322 
m_r£gs
() {}

326 
TabÀ•a˚
(TabÀ•a˚ &
Ÿhî
)

327 : 
m_id
(
Ÿhî
.
id
()),

328 
m_num
(
undo
::
id2num
(
Ÿhî
.
id
())),

329 
m_im∂icô
(
Ÿhî
.
is_im∂icô
()),

330 
m_√w
(
Ÿhî
.
is_√w
()),

331 
m_•a˚_«me
(),

332 
m_fûe_«me
(),

333 
m_log_fûe_«me
(),

334 
m_r£gs
() {

335 
ut_ad
(
m_id
 =0 || 
is_ª£rved
(m_id));

337 
£t_•a˚_«me
(
Ÿhî
.
•a˚_«me
());

338 
£t_fûe_«me
(
Ÿhî
.
fûe_«me
());

344 
	gm_r£gs
 = 
UT_NEW_NOKEY
(
R£gs
());

348 ~
TabÀ•a˚
() {

349 i‡(
	gm_•a˚_«me
 !
nuŒ±r
) {

350 
ut_‰ì
(
m_•a˚_«me
);

351 
	gm_•a˚_«me
 = 
nuŒ±r
;

354 i‡(
	gm_fûe_«me
 !
nuŒ±r
) {

355 
ut_‰ì
(
m_fûe_«me
);

356 
	gm_fûe_«me
 = 
nuŒ±r
;

359 i‡(
	gm_log_fûe_«me
 !
nuŒ±r
) {

360 
ut_‰ì
(
m_log_fûe_«me
);

361 
	gm_log_fûe_«me
 = 
nuŒ±r
;

365 i‡(
	gm_r£gs
 !
nuŒ±r
) {

366 
UT_DELETE
(
m_r£gs
);

367 
	gm_r£gs
 = 
nuŒ±r
;

373 
boﬁ
 
√eds_åunˇti⁄
();

377 
£t_•a˚_id
(
•a˚_id_t
 
•a˚_id
);

382 
£t_•a˚_«me
(c⁄° *
√w_•a˚_«me
);

389 *
•a˚_«me
() {

390 i‡(
	gm_•a˚_«me
 =
nuŒ±r
) {

391 #i‚de‡
UNIV_HOTBACKUP


392 
m_•a˚_«me
 = 
make_•a˚_«me
(
m_id
);

396  (
	gm_•a˚_«me
);

406 
£t_fûe_«me
(c⁄° *
fûe_«me
);

413 *
fûe_«me
() {

414 i‡(
	gm_fûe_«me
 =
nuŒ±r
) {

415 
m_fûe_«me
 = 
make_fûe_«me
(
m_id
);

418  (
	gm_fûe_«me
);

424 *
make_log_fûe_«me
(
•a˚_id_t
 
•a˚_id
);

431 *
log_fûe_«me
() {

432 i‡(
	gm_log_fûe_«me
 =
nuŒ±r
) {

433 
m_log_fûe_«me
 = 
make_log_fûe_«me
(
m_id
);

436  (
	gm_log_fûe_«me
);

441 
•a˚_id_t
 
id
(Ë{  (
	gm_id
); }

447 
•a˚_id_t
 
num
() {

448 
ut_ad
(
m_num
 < 
FSP_MAX_ROLLBACK_SEGMENTS
);

450  (
	gm_num
);

456 
R£gs
 *
r£gs
(Ë{  (
	gm_r£gs
); }

461 
boﬁ
 
is_ex∂icô
(Ë{  (!
	gm_im∂icô
); }

465 
boﬁ
 
is_im∂icô
(Ë{  (
	gm_im∂icô
); }

470 
boﬁ
 
is_√w
(Ë{  (
	gm_√w
); }

473 
£t_√w
(Ë{ 
	gm_√w
 = 
åue
; }

477 
boﬁ
 
is_a˘ive
() {

478 i‡(
	gm_r£gs
 =
nuŒ±r
) {

479  (
Ál£
);

481 
	gm_r£gs
->
s_lock
();

482 
boﬁ
 
	gªt
 = 
m_r£gs
->
is_a˘ive
();

483 
	gm_r£gs
->
s_u∆ock
();

484  (
	gªt
);

490 
boﬁ
 
is_a˘ive_no_œtch
() {

491 i‡(
	gm_r£gs
 =
nuŒ±r
) {

492  (
Ál£
);

494  (
	gm_r£gs
->
is_a˘ive
());

500 
åx_r£g_t
 *
gë_a˘ive
(
ulöt
 
¶Ÿ
) {

501 
	gm_r£gs
->
s_lock
();

502 i‡(!
	gm_r£gs
->
is_a˘ive
()) {

503 
	gm_r£gs
->
s_u∆ock
();

504  (
	gnuŒ±r
);

509 
åx_r£g_t
 *
	gr£g
 = 
m_r£gs
->
©
(
¶Ÿ
);

510 
	gr£g
->
	gåx_ªf_cou¡
++;

512 
	gm_r£gs
->
s_u∆ock
();

514  (
	gr£g
);

520 
boﬁ
 
is_öa˘ive_im∂icô
() {

521 i‡(
	gm_r£gs
 =
nuŒ±r
) {

522  (
Ál£
);

524 
	gm_r£gs
->
s_lock
();

525 
boﬁ
 
	gªt
 = 
m_r£gs
->
is_öa˘ive_im∂icô
();

526 
	gm_r£gs
->
s_u∆ock
();

527  (
	gªt
);

533 
boﬁ
 
is_öa˘ive_ex∂icô
() {

534 i‡(
	gm_r£gs
 =
nuŒ±r
) {

535  (
Ál£
);

537 
	gm_r£gs
->
s_lock
();

538 
boﬁ
 
	gªt
 = 
m_r£gs
->
is_öa˘ive_ex∂icô
();

539 
	gm_r£gs
->
s_u∆ock
();

540  (
	gªt
);

546 
boﬁ
 
is_em±y
() {

547 i‡(
	gm_r£gs
 =
nuŒ±r
) {

548  (
åue
);

550 
	gm_r£gs
->
s_lock
();

551 
boﬁ
 
	gªt
 = 
m_r£gs
->
is_em±y
();

552 
	gm_r£gs
->
s_u∆ock
();

553  (
	gªt
);

557 
£t_a˘ive
() {

558 
	gm_r£gs
->
x_lock
();

559 
	gm_r£gs
->
£t_a˘ive
();

560 
	gm_r£gs
->
x_u∆ock
();

568 
£t_öa˘ive_im∂icô
(
•a˚_id_t
 *
m¨ked_•a˚_id
) {

569 
	gm_r£gs
->
x_lock
();

570 i‡(
	gm_r£gs
->
is_a˘ive
()) {

571 
	gm_r£gs
->
£t_öa˘ive_im∂icô
();

573 *
	gm¨ked_•a˚_id
 = 
m_id
;

575 
	gm_r£gs
->
x_u∆ock
();

581 
£t_öa˘ive_ex∂icô
() {

582 
	gm_r£gs
->
x_lock
();

583 
	gm_r£gs
->
£t_öa˘ive_ex∂icô
();

584 
	gm_r£gs
->
x_u∆ock
();

596 
Æãr_a˘ive
();

600 
£t_em±y
() {

601 
	gm_r£gs
->
x_lock
();

602 
	gm_r£gs
->
£t_em±y
();

603 
	gm_r£gs
->
x_u∆ock
();

606 
	g¥iv©e
:

608 
•a˚_id_t
 
m_id
;

613 
•a˚_id_t
 
	gm_num
;

616 
boﬁ
 
	gm_im∂icô
;

620 
boﬁ
 
	gm_√w
;

624 *
	gm_•a˚_«me
;

628 *
	gm_fûe_«me
;

632 *
	gm_log_fûe_«me
;

636 
R£gs
 *
	gm_r£gs
;

641 ˛as†
	cTabÀ•a˚s
 {

642 
usög
 
	gTabÀ•a˚s_Ve˘‹
 =

643 
°d
::
ve˘‹
<
TabÀ•a˚
 *, 
	gut_Æloˇt‹
<
	gTabÀ•a˚
 *>>;

645 
	gpublic
:

646 
TabÀ•a˚s
(Ë{ 
öô
(); }

648 ~
TabÀ•a˚s
(Ë{ 
deöô
(); }

651 
öô
();

654 
deöô
();

658 
˛ór
() {

659 autÿ
	gundo_•a˚
 : 
m_•a˚s
) {

660 
UT_DELETE
(
undo_•a˚
);

662 
	gm_•a˚s
.
˛ór
();

666 
ulöt
 
size
(Ë{  (
	gm_•a˚s
.size()); }

669 
boﬁ
 
em±y
(Ë{  (
	gm_•a˚s
.empty()); }

672 
TabÀ•a˚
 *
©
(
size_t
 
pos
Ë{  (
	gm_•a˚s
.at(pos)); }

679 
add
(
TabÀ•a˚
 &
ªf_undo_•a˚
);

683 
dr›
(
TabÀ•a˚
 *
undo_•a˚
);

687 
dr›
(
TabÀ•a˚
 &
ªf_undo_•a˚
);

692 
boﬁ
 
c⁄èös
(
•a˚_id_t
 
num
Ë{  (
föd
“umË!
nuŒ±r
); }

697 
TabÀ•a˚
 *
föd
(
•a˚_id_t
 
num
) {

698 i‡(
	gm_•a˚s
.
em±y
()) {

699  (
	gnuŒ±r
);

705 
•a˚_id_t
 
	g¶Ÿ
 = 
num
 - 1;

706 i‡(
	g¶Ÿ
 < 
	gm_•a˚s
.
size
()) {

707 autÿ
	gundo_•a˚
 = 
m_•a˚s
.
©
(
¶Ÿ
);

708 i‡(
	gundo_•a˚
->
num
() ==Çum) {

709  (
undo_•a˚
);

714 autÿ
	gundo_•a˚
 : 
m_•a˚s
) {

715 i‡(
undo_•a˚
->
num
() ==Çum) {

716  (
undo_•a˚
);

720  (
	gnuŒ±r
);

728 
TabÀ•a˚
 *
föd_fú°_öa˘ive_ex∂icô
(
size_t
 *
num_a˘ive
) {

729 
ut_ad
(
own_œtch
());

731 i‡(
	gm_•a˚s
.
em±y
()) {

732  (
	gnuŒ±r
);

735 autÿ
	gundo_•a˚
 : 
m_•a˚s
) {

736 i‡(
undo_•a˚
->
is_öa˘ive_ex∂icô
()) {

737  (
undo_•a˚
);

740 i‡(
	gnum_a˘ive
 !
nuŒ±r
 && 
undo_•a˚
->
is_a˘ive
()) {

741 (*
num_a˘ive
)++;

745  (
	gnuŒ±r
);

748 #ifde‡
UNIV_DEBUG


750 
boﬁ
 
own_œtch
() {

751  (
rw_lock_own
(
m_œtch
, 
RW_LOCK_X
Ë||Ñw_lock_own(m_œtch, 
RW_LOCK_S
));

756 
s_lock
(Ë{ 
rw_lock_s_lock
(
m_œtch
); }

759 
s_u∆ock
(Ë{ 
rw_lock_s_u∆ock
(
m_œtch
); }

762 
x_lock
(Ë{ 
rw_lock_x_lock
(
m_œtch
); }

765 
x_u∆ock
(Ë{ 
rw_lock_x_u∆ock
(
m_œtch
); }

767 
TabÀ•a˚s_Ve˘‹
 
	gm_•a˚s
;

769 
	g¥iv©e
:

772 
rw_lock_t
 *
m_œtch
;

777 
ib_muãx_t
 
ddl_muãx
;

780 
TabÀ•a˚s
 *
•a˚s
;

782 #ifde‡
UNIV_DEBUG


786 
öje˘_¸ash
(c⁄° *
öje˘i⁄_poöt_«me
);

790 ˛as†
	cInje˘_Áûuª_⁄˚
 {

791 
boﬁ
 
	gm_Æªady_Áûed
;

792 c⁄° *
	gm_öje˘_«me
;

794 
	gpublic
:

795 
Inje˘_Áûuª_⁄˚
(c⁄° *
öje˘_«me
)

796 : 
m_Æªady_Áûed
{
Ál£
}, 
	gm_öje˘_«me
{
	göje˘_«me
} {}

803 
boﬁ
 
should_Áû
();

814 
dbîr_t
 
°¨t_loggög
(
TabÀ•a˚
 *
undo_•a˚
);

823 
d⁄e_loggög
(
•a˚_id_t
 
•a˚_num
);

828 
boﬁ
 
is_a˘ive_åunˇã_log_¥e£¡
(
•a˚_id_t
 
•a˚_num
);

837 
S∑˚_Ids
 
s_undî_c⁄°ru˘i⁄
;

842 
add_•a˚_to_c⁄°ru˘i⁄_li°
(
•a˚_id_t
 
•a˚_id
);

845 
˛ór_c⁄°ru˘i⁄_li°
();

850 
boﬁ
 
is_undî_c⁄°ru˘i⁄
(
•a˚_id_t
 
•a˚_id
);

853 
£t_a˘ive
(
•a˚_id_t
 
•a˚_id
);

861 
boﬁ
 
is_a˘ive
(
•a˚_id_t
 
•a˚_id
, boﬁ 
gë_œtch
 = 
åue
);

863 
c⁄°ex¥
 
ulöt
 
	gTRUNCATE_FREQUENCY
 = 128;

866 ˛as†
	cTrunˇã
 {

867 
	gpublic
:

869 
Trunˇã
(Ë: 
m_•a˚_id_m¨ked
(
SPACE_UNKNOWN
), 
m_timî
() {}

872 ~
Trunˇã
() = ;

876 
boﬁ
 
is_m¨ked
(Ëc⁄° {  (
	gm_•a˚_id_m¨ked
 !
SPACE_UNKNOWN
); }

880 
£t_m¨ked_•a˚_em±y
(Ë{ 
	gm_m¨ked_•a˚_is_em±y
 = 
åue
; }

884 
boﬁ
 
is_m¨ked_•a˚_em±y
(Ëc⁄° {  (
	gm_m¨ked_•a˚_is_em±y
); }

888 
m¨k
(
TabÀ•a˚
 *
undo_•a˚
);

892 
•a˚_id_t
 
gë_m¨ked_•a˚_num
() const {

893  (
id2num
(
m_•a˚_id_m¨ked
));

897 
ª£t
() {

898 
ª£t_timî
();

899 
	gm_m¨ked_•a˚_is_em±y
 = 
Ál£
;

900 
	gm_•a˚_id_m¨ked
 = 
SPACE_UNKNOWN
;

906 
•a˚_id_t
 
gë_sˇn_•a˚_num
() const {

907 
	gs_sˇn_pos
 = 
s_sˇn_pos
 % 
undo
::
•a˚s
->
size
();

909 
TabÀ•a˚
 *
	gundo_•a˚
 = 
undo
::
•a˚s
->
©
(
s_sˇn_pos
);

911  (
	gundo_•a˚
->
num
());

916 
•a˚_id_t
 
ö¸emít_sˇn
() const {

921 
	gs_sˇn_pos
 = (
s_sˇn_pos
 + 1Ë% 
undo
::
•a˚s
->
size
();

923  (
gë_sˇn_•a˚_num
());

929 
boﬁ
 
is_equÆ
(
•a˚_id_t
 
•a˚_id
) const {

930  (
	gm_•a˚_id_m¨ked
 =
•a˚_id
);

934 
öt64_t
 
check_timî
(Ëc⁄° {  (
	gm_timî
.
ñ≠£d
()); }

937 
ª£t_timî
(Ë{ 
	gm_timî
.
ª£t
(); }

939 
	g¥iv©e
:

941 
•a˚_id_t
 
m_•a˚_id_m¨ked
;

947 
boﬁ
 
	gm_m¨ked_•a˚_is_em±y
;

950 
	gib
::
Timî
 
m_timî
;

954 
size_t
 
	gs_sˇn_pos
;

961 
	såx_purge_t
 {

963 
£ss_t
 *
	m£ss
;

967 
åx_t
 *
	måx
;

968 #i‚de‡
UNIV_HOTBACKUP


973 
rw_lock_t
 
	mœtch
;

977 
os_evít_t
 
	mevít
;

980 
ulöt
 
	mn_°›
;

983 vﬁ©ûê
boﬁ
 
	mru¬ög
;

987 vﬁ©ûê
purge_°©e_t
 
	m°©e
;

990 
que_t
 *
	mquîy
;

993 
RódVõw
 
	mvõw
;

996 
boﬁ
 
	mvõw_a˘ive
;

999 vﬁ©ûê
ulöt
 
	mn_submôãd
;

1002 
	m°d
::
©omic
<
ulöt
> 
n_com∂ëed
;

1010 
purge_ôî_t
 
	môî
;

1014 
purge_ôî_t
 
	mlimô
;

1015 #ifde‡
UNIV_DEBUG


1017 
purge_ôî_t
 
	md⁄e
;

1023 
boﬁ
 
	m√xt_°‹ed
;

1026 
åx_r£g_t
 *
	mr£g
;

1030 
∑ge_no_t
 
	m∑ge_no
;

1033 
ulöt
 
	moff£t
;

1036 
∑ge_no_t
 
	mhdr_∑ge_no
;

1039 
ulöt
 
	mhdr_off£t
;

1042 
TrxUndoR£gsIãøt‹
 *
	mr£g_ôî
;

1046 
purge_pq_t
 *
	mpurge_queue
;

1049 
PQMuãx
 
	mpq_muãx
;

1052 
	mundo
::
Trunˇã
 
undo_åunc
;

1055 
mem_hóp_t
 *
	mhóp
;

1058 
	mut
::
un‹dîed_£t
<
THD
 *> 
thds
;

1062 
	sTrxUndoR£gsIãøt‹
 {

1064 
TrxUndoR£gsIãøt‹
(
åx_purge_t
 *
purge_sys
);

1071 c⁄° 
∑ge_size_t
 
£t_√xt
();

1073 
	m¥iv©e
:

1075 
TrxUndoR£gsIãøt‹
(const TrxUndoRsegsIterator &);

1076 
	mTrxUndoR£gsIãøt‹
 &
	m›î©‹
=(c⁄° 
TrxUndoR£gsIãøt‹
 &);

1079 
åx_purge_t
 *
	mm_purge_sys
;

1082 
TrxUndoR£gs
 
	mm_åx_undo_r£gs
;

1085 
R£g_Iãøt‹
 
	mm_ôî
;

1088 c⁄° 
TrxUndoR£gs
 
	mNuŒEÀmít
;

1091 
	~"åx0purge.ic
"

	@trx0purge.ic

33 
	~"åx0undo.h
"

38 
UNIV_INLINE


39 
fû_addr_t
 
	$åx_purge_gë_log_‰om_hi°
(

40 
fû_addr_t
 
node_addr
)

43 
node_addr
.
boff£t
 -
TRX_UNDO_HISTORY_NODE
;

45  (
node_addr
);

46 
	}
}

50 
UNIV_INLINE


51 
boﬁ
 
	$åx_purge_check_limô
() {

57  (
purge_sys
->
ôî
.
åx_no
 >Öurge_sys->
limô
.trx_no ||

58 (
purge_sys
->
ôî
.
åx_no
 =purge_sys->
limô
.trx_no &&

59 ((
purge_sys
->
ôî
.
undo_no
 >purge_sys->
limô
.undo_no) ||

60 (
purge_sys
->
ôî
.
undo_r£g_•a˚
 !=

61 
purge_sys
->
limô
.
undo_r£g_•a˚
))));

62 
	}
}

	@trx0rec.h

33 #i‚de‡
åx0ªc_h


34 
	#åx0ªc_h


	)

36 
	~"univ.i
"

38 
	~"d©a0d©a.h
"

39 
	~"di˘0ty≥s.h
"

40 
	~"lob0undo.h
"

41 
	~"må0må.h
"

42 
	~"∑ge0ty≥s.h
"

43 
	~"ªm0ty≥s.h
"

44 
	~"row0log.h
"

45 
	~"row0ty≥s.h
"

46 
	~"åx0ty≥s.h
"

48 #i‚de‡
UNIV_HOTBACKUP


49 
	~"que0ty≥s.h
"

56 
UNIV_INLINE


57 
åx_undo_ªc_t
 *
åx_undo_ªc_c›y
(c⁄° 
∑ge_t
 *
undo_∑ge
, 
uöt32_t
 
undo_off£t
,

58 
mem_hóp_t
 *
hóp
);

62 
UNIV_INLINE


63 
ulöt
 
åx_undo_ªc_gë_ty≥
(

64 c⁄° 
åx_undo_ªc_t
 *
undo_ªc
);

67 
UNIV_INLINE


68 
ulöt
 
åx_undo_ªc_gë_cm∂_öfo
(

69 c⁄° 
åx_undo_ªc_t
 *
undo_ªc
);

72 
UNIV_INLINE


73 
iboﬁ
 
åx_undo_ªc_gë_exã∫_°‹age
(

74 c⁄° 
åx_undo_ªc_t
 *
undo_ªc
);

77 
UNIV_INLINE


78 
undo_no_t
 
åx_undo_ªc_gë_undo_no
(

79 c⁄° 
åx_undo_ªc_t
 *
undo_ªc
);

82 
	#åx_undo_ªc_gë_±r
(
undo_ªc
, 
undo_no
) \

83 ((
undo_ªc
Ë+ 
	`åx_undo_ªc_gë_off£t
(
undo_no
))

	)

88 
èbÀ_id_t
 
	$åx_undo_ªc_gë_èbÀ_id
(c⁄° 
åx_undo_ªc_t
 *
undo_ªc
)

89 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

93 
byã
 *
	`åx_undo_ªc_gë_row_ªf
(

94 
byã
 *
±r
,

100 
di˘_ödex_t
 *
ödex
,

101 
dtu∂e_t
 **
ªf
,

102 
mem_hóp_t
 *
hóp
);

107 
byã
 *
	`åx_undo_upd©e_ªc_gë_sys_cﬁs
(

108 c⁄° 
byã
 *
±r
,

111 
åx_id_t
 *
åx_id
,

112 
rﬁl_±r_t
 *
rﬁl_±r
,

113 
ulöt
 *
öfo_bôs
);

115 
ty≥_cm∂_t
;

120 
byã
 *
	`åx_undo_upd©e_ªc_gë_upd©e
(

121 c⁄° 
byã
 *
±r
,

127 c⁄° 
di˘_ödex_t
 *
ödex
,

128 
ulöt
 
ty≥
,

133 
åx_id_t
 
åx_id
,

134 
rﬁl_±r_t
 
rﬁl_±r
,

135 
ulöt
 
öfo_bôs
,

136 
åx_t
 *
åx
,

137 
mem_hóp_t
 *
hóp
,

139 
upd_t
 **
upd
,

140 
lob
::
undo_vîs_t
 *
lob_undo
,

141 
ty≥_cm∂_t
 &
ty≥_cm∂
);

147 
byã
 *
	$åx_undo_ªc_gë_∑πül_row
(

148 c⁄° 
byã
 *
±r
,

155 
di˘_ödex_t
 *
ödex
,

156 
dtu∂e_t
 **
row
,

157 
iboﬁ
 
ign‹e_¥efix
,

160 
mem_hóp_t
 *
hóp
)

162 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

168 
dbîr_t
 
	$åx_undo_ªp‹t_row_›î©i⁄
(

169 
ulöt
 
Êags
,

171 
ulöt
 
›_ty≥
,

173 
que_thr_t
 *
thr
,

174 
di˘_ödex_t
 *
ödex
,

175 c⁄° 
dtu∂e_t
 *
˛u°_íåy
,

178 c⁄° 
upd_t
 *
upd©e
,

180 
ulöt
 
cm∂_öfo
,

182 c⁄° 
ªc_t
 *
ªc
,

185 c⁄° 
ulöt
 *
off£ts
,

186 
rﬁl_±r_t
 *
rﬁl_±r
)

190 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

198 
	#TRX_UNDO_PREV_IN_PURGE
 0x1

	)

202 
	#TRX_UNDO_GET_OLD_V_VALUE
 0x2

	)

241 
boﬁ
 
	`åx_undo_¥ev_vîsi⁄_buûd
(c⁄° 
ªc_t
 *
ödex_ªc
, 
må_t
 *
ödex_må
,

242 c⁄° 
ªc_t
 *
ªc
, c⁄° 
di˘_ödex_t
 *
ödex
,

243 
ulöt
 *
off£ts
, 
mem_hóp_t
 *
hóp
,

244 
ªc_t
 **
ﬁd_vîs
, 
mem_hóp_t
 *
v_hóp
,

245 c⁄° 
dtu∂e_t
 **
vrow
, 
ulöt
 
v_°©us
,

246 
lob
::
undo_vîs_t
 *
lob_undo
);

251 
byã
 *
	`åx_undo_∑r£_add_undo_ªc
(byã *
±r
,

252 
byã
 *
íd_±r
,

253 
∑ge_t
 *
∑ge
);

256 
byã
 *
	`åx_undo_∑r£_îa£_∑ge_íd
(byã *
±r
,

257 
byã
 *
íd_±r
,

258 
∑ge_t
 *
∑ge
,

259 
må_t
 *
må
);

268 
byã
 *
	`åx_undo_ªc_gë_cﬁ_vÆ
(c⁄° byã *
±r
, c⁄° byã **
fõld
, 
ulöt
 *
Àn
,

269 
ulöt
 *
‹ig_Àn
);

279 
	`åx_undo_ªad_v_cﬁs
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, c⁄° 
byã
 *
±r
,

280 c⁄° 
dtu∂e_t
 *
row
, 
boﬁ
 
ö_purge
, boﬁ 
⁄löe
,

281 c⁄° 
ulöt
 *
cﬁ_m≠
, 
mem_hóp_t
 *
hóp
);

297 c⁄° 
byã
 *
	`åx_undo_ªad_v_idx
(c⁄° 
di˘_èbÀ_t
 *
èbÀ
, c⁄° byã *
±r
,

298 
boﬁ
 
fú°_v_cﬁ
, boﬁ *
is_undo_log
,

299 
ulöt
 *
fõld_no
);

301 #i‚de‡
UNIV_HOTBACKUP


307 
	#TRX_UNDO_INSERT_REC
 11

	)

308 
	#TRX_UNDO_UPD_EXIST_REC
 \

309 12

	)

311 
	#TRX_UNDO_UPD_DEL_REC
 \

312 13

	)

315 
	#TRX_UNDO_DEL_MARK_REC
 \

316 14

	)

318 
	#TRX_UNDO_CMPL_INFO_MULT
 \

319 16

	)

322 
	#TRX_UNDO_MODIFY_BLOB
 \

323 64

	)

330 
	#TRX_UNDO_UPD_EXTERN
 \

331 128

	)

337 
	#TRX_UNDO_INSERT_OP
 1

	)

338 
	#TRX_UNDO_MODIFY_OP
 2

	)

343 
	sty≥_cm∂_t
 {

344 
	`ty≥_cm∂_t
(Ë: 
	`m_Êag
(0) {}

346 c⁄° 
byã
 *
	`ªad
(c⁄° byã *
±r
) {

347 
m_Êag
 = 
	`mach_ªad_‰om_1
(
±r
);

348  (
±r
 + 1);

351 
ulöt
 
	`ty≥_öfo
() {

353  (
m_Êag
 & 0x0F);

356 
ulöt
 
	`cm∂_öfo
() {

358  ((
m_Êag
 >> 4) & 0x03);

363 
boﬁ
 
	`is_lob_upd©ed
() {

365  (
m_Êag
 & 
TRX_UNDO_UPD_EXTERN
);

371 
boﬁ
 
	`is_lob_undo
() const {

373  (
m_Êag
 & 
TRX_UNDO_MODIFY_BLOB
);

376 
¥iv©e
:

377 
uöt8_t
 
m_Êag
;

382 
byã
 *
	`åx_undo_ªc_gë_∑rs
(

383 
åx_undo_ªc_t
 *
undo_ªc
,

384 
ulöt
 *
ty≥
,

386 
ulöt
 *
cm∂_öfo
,

388 
boﬁ
 *
upd©ed_exã∫
,

390 
undo_no_t
 *
undo_no
,

391 
èbÀ_id_t
 *
èbÀ_id
,

392 
ty≥_cm∂_t
 &
ty≥_cm∂
);

396 
size_t
 
	`åx_undo_max_‰ì_•a˚
();

401 
boﬁ
 
	`åx_undo_ªc_is_mu…i_vÆue
(c⁄° 
byã
 *
undo_ªc
);

410 c⁄° 
byã
 *
	`åx_undo_ªc_gë_mu…i_vÆue
(c⁄° byã *
±r
, 
dfõld_t
 *
fõld
,

411 
mem_hóp_t
 *
hóp
);

412 
	~"åx0ªc.ic
"

	@trx0rec.ic

33 #i‚de‡
UNIV_HOTBACKUP


36 
UNIV_INLINE


37 
ulöt
 
	$åx_undo_ªc_gë_ty≥
(

38 c⁄° 
åx_undo_ªc_t
 *
undo_ªc
)

40  (
	`mach_ªad_‰om_1
(
undo_ªc
 + 2Ë& (
TRX_UNDO_CMPL_INFO_MULT
 - 1));

41 
	}
}

45 
UNIV_INLINE


46 
ulöt
 
	$åx_undo_ªc_gë_cm∂_öfo
(

47 c⁄° 
åx_undo_ªc_t
 *
undo_ªc
)

49  (
	`mach_ªad_‰om_1
(
undo_ªc
 + 2Ë/ 
TRX_UNDO_CMPL_INFO_MULT
);

50 
	}
}

54 
UNIV_INLINE


55 
iboﬁ
 
	$åx_undo_ªc_gë_exã∫_°‹age
(

56 c⁄° 
åx_undo_ªc_t
 *
undo_ªc
)

58 i‡(
	`mach_ªad_‰om_1
(
undo_ªc
 + 2Ë& 
TRX_UNDO_UPD_EXTERN
) {

59  (
TRUE
);

62  (
FALSE
);

63 
	}
}

67 
UNIV_INLINE


68 
undo_no_t
 
	$åx_undo_ªc_gë_undo_no
(

69 c⁄° 
åx_undo_ªc_t
 *
undo_ªc
)

71 c⁄° 
byã
 *
±r
 = 
undo_ªc
 + 2;

72 
uöt8_t
 
ty≥_cm∂
 = 
	`mach_ªad_‰om_1
(
±r
);

74 c⁄° 
boﬁ
 
blob_undo
 = 
ty≥_cm∂
 & 
TRX_UNDO_MODIFY_BLOB
;

76 i‡(
blob_undo
) {

79 
±r
 = 
undo_ªc
 + 4;

81 
±r
 = 
undo_ªc
 + 3;

83  (
	`mach_u64_ªad_much_com¥es£d
(
±r
));

84 
	}
}

86 
UNIV_INLINE


87 
åx_undo_ªc_t
 *
	$åx_undo_ªc_c›y
(c⁄° 
∑ge_t
 *
undo_∑ge
, 
uöt32_t
 
undo_off£t
,

88 
mem_hóp_t
 *
hóp
) {

89 
	`ut_ad
(
undo_off£t
 < 
UNIV_PAGE_SIZE
);

90 
åx_undo_ªc_t
 *
undo_ªc
 = (åx_undo_ªc_à*)(
undo_∑ge
 + 
undo_off£t
);

95 
uöt32_t
 
√xt_undo_off£t
 = 
	`mach_ªad_‰om_2
(
undo_ªc
);

96 
	`ut_a
(
√xt_undo_off£t
 > 
undo_off£t
);

98 
uöt32_t
 
Àn
 = 
√xt_undo_off£t
 - 
undo_off£t
;

99 
	`ut_ad
(
Àn
 < 
UNIV_PAGE_SIZE
);

100  ((
åx_undo_ªc_t
 *)
	`mem_hóp_dup
(
hóp
, 
undo_ªc
, 
Àn
));

101 
	}
}

	@trx0roll.h

33 #i‚de‡
åx0rﬁl_h


34 
	#åx0rﬁl_h


	)

36 
	~"må0må.h
"

37 
	~"åx0sys.h
"

38 
	~"åx0åx.h
"

39 
	~"åx0ty≥s.h
"

40 
	~"univ.i
"

42 #ifde‡
UNIV_HOTBACKUP


43 
	~"que0que.h
"

50 
iboﬁ
 
åx_is_ªcv
(c⁄° 
åx_t
 *
åx
);

53 
åx_ßvït_t
 
åx_ßvït_èke
(
åx_t
 *
åx
);

58 
åx_undo_ªc_t
 *
åx_rﬁl_p›_t›_ªc_of_åx
(

59 
åx_t
 *
åx
,

60 
undo_no_t
 
limô
,

61 
rﬁl_±r_t
 *
rﬁl_±r
,

62 
mem_hóp_t
 *
hóp
);

68 
åx_rﬁlback_‹_˛ón_ªcovîed
(

69 
iboﬁ
 
Æl
);

77 
åx_ªcovîy_rﬁlback_thªad
();

81 
rﬁl_node_t
 *
rﬁl_node_¸óã
(

82 
mem_hóp_t
 *
hóp
);

85 
que_thr_t
 *
åx_rﬁlback_°ï
(que_thr_à*
thr
);

88 
dbîr_t
 
åx_rﬁlback_f‹_mysql
(
åx_t
 *
åx
);

91 
dbîr_t
 
åx_rﬁlback_œ°_sql_°©_f‹_mysql
(

92 
åx_t
 *
åx
);

95 
dbîr_t
 
åx_rﬁlback_to_ßvïoöt
(

96 
åx_t
 *
åx
,

97 
åx_ßvït_t
 *
ßvït
);

108 
dbîr_t
 
	$åx_rﬁlback_to_ßvïoöt_f‹_mysql
(

109 
åx_t
 *
åx
,

110 c⁄° *
ßvïoöt_«me
,

111 
öt64_t
 *
mysql_bölog_ˇche_pos
)

117 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

123 
dbîr_t
 
	`åx_ßvïoöt_f‹_mysql
(

124 
åx_t
 *
åx
,

125 c⁄° *
ßvïoöt_«me
,

126 
öt64_t
 
bölog_ˇche_pos
);

134 
dbîr_t
 
	$åx_ªÀa£_ßvïoöt_f‹_mysql
(

135 
åx_t
 *
åx
,

136 c⁄° *
ßvïoöt_«me
)

137 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

143 
	`åx_rﬁl_ßvïoöts_‰ì
(
åx_t
 *
åx
, 
åx_«med_ßvït_t
 *
ßvï
);

146 
	erﬁl_node_°©e
 {

147 
ROLL_NODE_NONE
 = 0,

148 
ROLL_NODE_SEND
,

150 
ROLL_NODE_WAIT


155 
	srﬁl_node_t
 {

156 
que_comm⁄_t
 
comm⁄
;

157 
rﬁl_node_°©e
 
°©e
;

158 
boﬁ
 
∑πül
;

160 
åx_ßvït_t
 
ßvït
;

163 
que_thr_t
 *
undo_thr
;

167 
	såx_«med_ßvït_t
 {

168 *
«me
;

169 
åx_ßvït_t
 
ßvït
;

171 
öt64_t
 
mysql_bölog_ˇche_pos
;

176 
	`UT_LIST_NODE_T
(
åx_«med_ßvït_t
)

177 
åx_ßvïoöts
;

181 
	~"åx0rﬁl.ic
"

	@trx0roll.ic

33 #ifde‡
UNIV_DEBUG


37 
UNIV_INLINE


38 
boﬁ
 
	$åx_rﬁl_check_undo_ªc_‹dîög
(

39 
undo_no_t
 
cuº_undo_ªc_no
,

41 
•a˚_id_t
 
cuº_undo_•a˚_id
,

44 c⁄° 
åx_t
 *
åx
)

62  (
cuº_undo_•a˚_id
 !
åx
->
undo_r£g_•a˚
 ||

63 
cuº_undo_ªc_no
 + 1 <
åx
->
undo_no
);

64 
	}
}

	@trx0rseg.h

33 #i‚de‡
åx0r£g_h


34 
	#åx0r£g_h


	)

36 
	~<ve˘‹
>

37 
	~"fut0l°.h
"

38 
	~"åx0sys.h
"

39 
	~"åx0ty≥s.h
"

40 
	~"univ.i
"

48 
UNIV_INLINE


49 
åx_r£gf_t
 *
åx_r£gf_gë
(
•a˚_id_t
 
•a˚
, 
∑ge_no_t
 
∑ge_no
,

50 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
);

58 
UNIV_INLINE


59 
åx_r£gf_t
 *
åx_r£gf_gë_√w
(
•a˚_id_t
 
•a˚
, 
∑ge_no_t
 
∑ge_no
,

60 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
);

67 
UNIV_INLINE


68 
∑ge_no_t
 
åx_r£gf_gë_¡h_undo
(
åx_r£gf_t
 *
r£gf
, 
ulöt
 
n
, 
må_t
 *
må
);

75 
UNIV_INLINE


76 
åx_r£gf_£t_¡h_undo
(
åx_r£gf_t
 *
r£gf
, 
ulöt
 
n
, 
∑ge_no_t
 
∑ge_no
,

77 
må_t
 *
må
);

83 
UNIV_INLINE


84 
ulöt
 
åx_r£gf_undo_föd_‰ì
(
åx_r£gf_t
 *
r£gf
, 
må_t
 *
må
);

95 
∑ge_no_t
 
åx_r£g_hódî_¸óã
(
•a˚_id_t
 
•a˚_id
,

96 c⁄° 
∑ge_size_t
 &
∑ge_size
,

97 
∑ge_no_t
 
max_size
, 
ulöt
 
r£g_¶Ÿ
,

98 
må_t
 *
må
);

110 
boﬁ
 
åx_r£g_adju°_rﬁlback_£gmíts
(
ul⁄g
 
èrgë_rﬁlback_£gmíts
);

118 
boﬁ
 
åx_r£g_öô_rﬁlback_£gmíts
(
•a˚_id_t
 
•a˚_id
,

119 
ul⁄g
 
èrgë_rﬁlback_£gmíts
);

132 
åx_r£gs_öô
(
purge_pq_t
 *
purge_queue
);

145 
åx_r£g_t
 *
åx_r£g_mem_¸óã
(
ulöt
 
id
, 
•a˚_id_t
 
•a˚_id
,

146 
∑ge_no_t
 
∑ge_no
, c⁄° 
∑ge_size_t
 &
∑ge_size
,

147 
åx_id_t
 
gtid_åx_no
, 
purge_pq_t
 *
purge_queue
,

148 
må_t
 *
må
);

155 
∑ge_no_t
 
åx_r£g_¸óã
(
•a˚_id_t
 
•a˚_id
, 
ulöt
 
r£g_id
);

160 
åx_r£g_gë_n_undo_èbÀ•a˚s
(
S∑˚_Ids
 *
•a˚s_to_›í
);

165 
åx_r£g_upgøde_undo_èbÀ•a˚s
();

172 
åx_r£g_¨øy_¸óã
(
•a˚_id_t
 
•a˚_id
, 
må_t
 *
må
);

180 
UNIV_INLINE


181 
åx_r£gsf_£t_∑ge_no
(
åx_r£gsf_t
 *
r£gs_hódî
, 
ulöt
 
¶Ÿ
,

182 
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
);

185 
	#TRX_RSEG_N_SLOTS
 (
UNIV_PAGE_SIZE
 / 16)

	)

188 
	#TRX_RSEG_MAX_N_TRXS
 (
TRX_RSEG_N_SLOTS
 / 2)

	)

192 
	#TRX_RSEG_SLOT_PAGE_NO
 \

193 0

	)

197 
	#TRX_RSEG_SLOT_SIZE
 4

	)

200 
	#TRX_RSEG
 
FSEG_PAGE_DATA


	)

204 
	#TRX_RSEG_MAX_SIZE
 \

205 0

	)

207 
	#TRX_RSEG_HISTORY_SIZE
 \

208 4

	)

210 
	#TRX_RSEG_HISTORY
 \

211 8

	)

215 
	#TRX_RSEG_FSEG_HEADER
 (8 + 
FLST_BASE_NODE_SIZE
)

	)

217 
	#TRX_RSEG_UNDO_SLOTS
 (8 + 
FLST_BASE_NODE_SIZE
 + 
FSEG_HEADER_SIZE
)

	)

220 
	#TRX_RSEG_SLOT_END
 \

221 (
TRX_RSEG_UNDO_SLOTS
 + (
TRX_RSEG_SLOT_SIZE
 * 
TRX_RSEG_N_SLOTS
))

	)

226 
	#TRX_RSEG_MAX_TRX_NO
 
TRX_RSEG_SLOT_END


	)

231 
	#RSEG_ARRAY_HEADER
 
FSEG_PAGE_DATA


	)

238 
	#RSEG_ARRAY_VERSION
 0x52534547 + 1

	)

241 
	#RSEG_ARRAY_VERSION_OFFSET
 0

	)

244 
	#RSEG_ARRAY_SIZE_OFFSET
 4

	)

248 
	#RSEG_ARRAY_FSEG_HEADER_OFFSET
 8

	)

254 
	#RSEG_ARRAY_PAGES_OFFSET
 (8 + 
FSEG_HEADER_SIZE
)

	)

257 
	#RSEG_ARRAY_RESERVED_BYTES
 200

	)

260 
	#RSEG_ARRAY_SLOT_SIZE
 4

	)

263 
	~"åx0r£g.ic
"

	@trx0rseg.ic

33 
	~"må0log.h
"

34 
	~"§v0§v.h
"

35 
	~"åx0purge.h
"

36 
	~"åx0sys.h
"

44 
UNIV_INLINE


45 
åx_r£gf_t
 *
	$åx_r£gf_gë
(
•a˚_id_t
 
•a˚
, 
∑ge_no_t
 
∑ge_no
,

46 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
) {

47 
buf_block_t
 *
block
;

48 
åx_r£gf_t
 *
hódî
;

50 
block
 = 
	`buf_∑ge_gë
(
	`∑ge_id_t
(
•a˚
, 
∑ge_no
), 
∑ge_size
, 
RW_X_LATCH
, 
må
);

52 
	`buf_block_dbg_add_Àvñ
(
block
, 
SYNC_RSEG_HEADER
);

54 
hódî
 = 
TRX_RSEG
 + 
	`buf_block_gë_‰ame
(
block
);

56  (
hódî
);

57 
	}
}

65 
UNIV_INLINE


66 
åx_r£gf_t
 *
	$åx_r£gf_gë_√w
(
•a˚_id_t
 
•a˚
, 
∑ge_no_t
 
∑ge_no
,

67 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
) {

68 
buf_block_t
 *
block
;

69 
åx_r£gf_t
 *
hódî
;

71 
block
 = 
	`buf_∑ge_gë
(
	`∑ge_id_t
(
•a˚
, 
∑ge_no
), 
∑ge_size
, 
RW_X_LATCH
, 
må
);

73 
	`buf_block_dbg_add_Àvñ
(
block
, 
SYNC_RSEG_HEADER_NEW
);

75 
hódî
 = 
TRX_RSEG
 + 
	`buf_block_gë_‰ame
(
block
);

77  (
hódî
);

78 
	}
}

82 
UNIV_INLINE


83 
∑ge_no_t
 
	$åx_r£gf_gë_¡h_undo
(

84 
åx_r£gf_t
 *
r£gf
,

85 
ulöt
 
n
,

86 
må_t
 *
må
)

88 
	`ut_a
(
n
 < 
TRX_RSEG_N_SLOTS
);

90  (
	`må_ªad_ulöt
(
r£gf
 + 
TRX_RSEG_UNDO_SLOTS
 + 
n
 * 
TRX_RSEG_SLOT_SIZE
,

91 
MLOG_4BYTES
, 
må
));

92 
	}
}

95 
UNIV_INLINE


96 
	$åx_r£gf_£t_¡h_undo
(

97 
åx_r£gf_t
 *
r£gf
,

98 
ulöt
 
n
,

99 
∑ge_no_t
 
∑ge_no
,

100 
må_t
 *
må
)

102 
	`ut_a
(
n
 < 
TRX_RSEG_N_SLOTS
);

104 
	`mlog_wrôe_ulöt
(
r£gf
 + 
TRX_RSEG_UNDO_SLOTS
 + 
n
 * 
TRX_RSEG_SLOT_SIZE
,

105 
∑ge_no
, 
MLOG_4BYTES
, 
må
);

106 
	}
}

110 
UNIV_INLINE


111 
ulöt
 
	$åx_r£gf_undo_föd_‰ì
(

112 
åx_r£gf_t
 *
r£gf
,

113 
må_t
 *
må
)

115 
ulöt
 
i
;

116 
∑ge_no_t
 
∑ge_no
;

117 
ulöt
 
max_¶Ÿs
 = 
TRX_RSEG_N_SLOTS
;

119 #ifde‡
UNIV_DEBUG


120 i‡(
åx_r£g_n_¶Ÿs_debug
) {

121 
max_¶Ÿs
 = 
	`ut_mö
(
°©ic_ˇ°
<
ulöt
>(
åx_r£g_n_¶Ÿs_debug
),

122 
°©ic_ˇ°
<
ulöt
>(
TRX_RSEG_N_SLOTS
));

126 
i
 = 0; i < 
max_¶Ÿs
; i++) {

127 
∑ge_no
 = 
	`åx_r£gf_gë_¡h_undo
(
r£gf
, 
i
, 
må
);

129 i‡(
∑ge_no
 =
FIL_NULL
) {

130  (
i
);

134  (
ULINT_UNDEFINED
);

135 
	}
}

145 
ölöe
 
•a˚_id_t
 
	$åx_r£g_id_to_•a˚_id
(
ulöt
 
id
, 
boﬁ
 
is_ãmp
) {

147 
	`ut_ad
(
id
 < 
TRX_SYS_N_RSEGS
);

153 i‡(
is_ãmp
) {

154  (
§v_tmp_•a˚
.
	`•a˚_id
());

158 i‡(
id
 == 0) {

159  (
TRX_SYS_SPACE
);

162 i‡(
§v_upgøde_ﬁd_undo_found
) {

164 
åx_r£g_t
 *
r£g
 = 
åx_sys
->
r£gs
.
	`föd
(
id
);

165  (
r£g
->
•a˚_id
);

170 
	`ut_ad
(!
undo
::
•a˚s
->
	`em±y
());

175 
•a˚_id_t
 
•a˚_id
 = 
undo
::
	`num2id
(
°©ic_ˇ°
<•a˚_id_t>(
id
));

176 
	`ut_ad
(
•a˚_id
 !
SPACE_UNKNOWN
);

178  (
•a˚_id
);

179 
	}
}

186 
ölöe
 
åx_r£gsf_t
 *
	$åx_r£gsf_gë
(
•a˚_id_t
 
•a˚_id
, 
må_t
 *
må
) {

187 
buf_block_t
 *
block
;

188 
åx_r£gsf_t
 *
r£gs_hódî
;

190 
	`ut_ad
(
må
 !
nuŒ±r
);

191 
	`ut_ad
(
undo
::
	`is_ª£rved
(
•a˚_id
));

193 
block
 = 
	`buf_∑ge_gë
(
	`∑ge_id_t
(
•a˚_id
, 
FSP_RSEG_ARRAY_PAGE_NO
),

194 
univ_∑ge_size
, 
RW_X_LATCH
, 
må
);

195 
	`buf_block_dbg_add_Àvñ
(
block
, 
SYNC_RSEG_ARRAY_HEADER
);

197 
r£gs_hódî
 = 
RSEG_ARRAY_HEADER
 + 
	`buf_block_gë_‰ame
(
block
);

199  (
r£gs_hódî
);

200 
	}
}

208 
ölöe
 
∑ge_no_t
 
	$åx_r£gsf_gë_∑ge_no
(
åx_r£gsf_t
 *
r£gs_hódî
, 
ulöt
 
¶Ÿ
,

209 
må_t
 *
må
) {

210 
	`ut_ad
(
r£gs_hódî
 !
nuŒ±r
);

211 
	`ut_ad
(
må
 !
nuŒ±r
);

212 
	`ut_ad
(
¶Ÿ
 < 
FSP_MAX_ROLLBACK_SEGMENTS
);

214  (
	`må_ªad_ulöt
(

215 
r£gs_hódî
 + 
RSEG_ARRAY_PAGES_OFFSET
 + 
¶Ÿ
 * 
RSEG_ARRAY_SLOT_SIZE
,

216 
MLOG_4BYTES
, 
må
));

217 
	}
}

225 
UNIV_INLINE


226 
	$åx_r£gsf_£t_∑ge_no
(
åx_r£gsf_t
 *
r£gs_hódî
, 
ulöt
 
¶Ÿ
,

227 
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
) {

228 
	`ut_ad
(
r£gs_hódî
);

230 
	`mlog_wrôe_ulöt
(

231 
r£gs_hódî
 + 
RSEG_ARRAY_PAGES_OFFSET
 + 
¶Ÿ
 * 
RSEG_ARRAY_SLOT_SIZE
,

232 
∑ge_no
, 
MLOG_4BYTES
, 
må
);

233 
	}
}

	@trx0sys.h

33 #i‚de‡
åx0sys_h


34 
	#åx0sys_h


	)

36 
	~"univ.i
"

38 
	~"buf0buf.h
"

39 
	~"fû0fû.h
"

40 
	~"åx0ty≥s.h
"

41 #i‚de‡
UNIV_HOTBACKUP


42 
	~"mem0mem.h
"

43 
	~"må0må.h
"

44 
	~"∑ge0ty≥s.h
"

45 
	~"ut0byã.h
"

46 
	~"ut0l°.h
"

47 
	~"ut0muãx.h
"

49 
	~<©omic
>

50 
	~<ve˘‹
>

51 
	~"åx0åx.h
"

53 #i‚de‡
UNIV_HOTBACKUP


54 
	$UT_LIST_BASE_NODE_T
(
	tåx_t
Ë
	tåx_ut_li°_t
;

57 
˛ass
 
MVCC
;

58 
˛ass
 
RódVõw
;

61 
åx_sys_t
 *
åx_sys
;

66 
UNIV_INLINE


67 
boﬁ
 
	`åx_sys_hdr_∑ge
(c⁄° 
∑ge_id_t
 &
∑ge_id
);

72 
purge_pq_t
 *
	`åx_sys_öô_©_db_°¨t
();

74 
	`åx_sys_¸óã
();

76 
	`åx_sys_¸óã_sys_∑ges
();

81 
∑ge_no_t
 
	`åx_sysf_r£g_föd_∑ge_no
(
ulöt
 
r£g_id
);

86 
ulöt
 
	`åx_sysf_r£g_föd_‰ì
(
må_t
 *
må
);

90 
UNIV_INLINE


91 
åx_sysf_t
 *
	`åx_sysf_gë
(
må_t
 *
må
);

99 
UNIV_INLINE


100 
•a˚_id_t
 
	`åx_sysf_r£g_gë_•a˚
(
åx_sysf_t
 *
sys_hódî
, 
ulöt
 
i
, 
må_t
 *
må
);

108 
UNIV_INLINE


109 
∑ge_no_t
 
	`åx_sysf_r£g_gë_∑ge_no
(
åx_sysf_t
 *
sys_hódî
, 
ulöt
 
i
,

110 
må_t
 *
må
);

118 
UNIV_INLINE


119 
	`åx_sysf_r£g_£t_•a˚
(
åx_sysf_t
 *
sys_hódî
, 
ulöt
 
i
, 
•a˚_id_t
 
•a˚
,

120 
må_t
 *
må
);

129 
UNIV_INLINE


130 
	`åx_sysf_r£g_£t_∑ge_no
(
åx_sysf_t
 *
sys_hódî
, 
ulöt
 
i
,

131 
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
);

135 
UNIV_INLINE


136 
åx_id_t
 
	`åx_sys_gë_√w_åx_id
();

140 
UNIV_INLINE


141 
åx_id_t
 
	`åx_sys_gë_max_åx_id
();

143 #ifde‡
UNIV_DEBUG


145 
uöt
 
åx_r£g_n_¶Ÿs_debug
;

153 
UNIV_INLINE


154 
	`åx_wrôe_åx_id
(
byã
 *
±r
, 
åx_id_t
 
id
);

156 #i‚de‡
UNIV_HOTBACKUP


161 
UNIV_INLINE


162 
åx_id_t
 
	`åx_ªad_åx_id
(

163 c⁄° 
byã
 *
±r
);

169 
UNIV_INLINE


170 
åx_t
 *
	`åx_gë_rw_åx_by_id
(
åx_id_t
 
åx_id
);

177 
UNIV_INLINE


178 
åx_id_t
 
	`åx_rw_mö_åx_id
();

185 
UNIV_INLINE


186 
åx_t
 *
	`åx_rw_is_a˘ive_low
(
åx_id_t
 
åx_id
, 
iboﬁ
 *
c‹ru±
);

202 
UNIV_INLINE


203 
åx_t
 *
	`åx_rw_is_a˘ive
(
åx_id_t
 
åx_id
, 
iboﬁ
 *
c‹ru±
, 
boﬁ
 
do_ªf_cou¡
);

205 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_BLOB_LIGHT_DEBUG


208 
UNIV_INLINE


209 
iboﬁ
 
	$åx_as£π_ªcovîed
(
åx_id_t
 
åx_id
)

210 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

216 
	`åx_sys_≥rsi°_gtid_num
(
åx_id_t
 
gtid_åx_no
);

219 
åx_id_t
 
	`åx_sys_ﬁde°_åx_no
();

223 
	`åx_sys_gë_bölog_¥ï¨ed
(
°d
::
ve˘‹
<
åx_id_t
> &
åx_ids
);

228 
	`åx_sys_ªad_bölog_posôi⁄
(*
fûe
, 
uöt64_t
 &
off£t
);

238 
boﬁ
 
	`åx_sys_wrôe_bölog_posôi⁄
(c⁄° *
œ°_fûe
, 
uöt64_t
 
œ°_off£t
,

239 c⁄° *
fûe
, 
uöt64_t
 
off£t
);

247 
	`åx_sys_upd©e_mysql_bölog_off£t
(
åx_t
 *
åx
, 
må_t
 *
må
);

250 
	`åx_sys_˛o£
();

254 
UNIV_INLINE


255 
boﬁ
 
	`åx_sys_√ed_rﬁlback
();

260 
size_t
 
	`åx_sys_ªcovîed_a˘ive_åxs_cou¡
();

264 
	`åx_sys_bef‹e_¥e_dd_shutdown_vÆid©e
();

268 
	`åx_sys_a·î_¥e_dd_shutdown_vÆid©e
();

272 
	`åx_sys_a·î_background_thªads_shutdown_vÆid©e
();

278 
UNIV_INLINE


279 
	`åx_sys_rw_åx_add
(
åx_t
 *
åx
);

281 #ifde‡
UNIV_DEBUG


284 
boﬁ
 
	`åx_sys_vÆid©e_åx_li°
();

288 
	`åx_sys_undo_•a˚s_öô
();

292 
	`åx_sys_undo_•a˚s_deöô
();

295 
	#TRX_SYS_SYSTEM_RSEG_ID
 0

	)

298 
	#TRX_SYS
 
FSEG_PAGE_DATA


	)

302 
	#TRX_SYS_TRX_ID_STORE
 \

303 0

	)

315 
	#TRX_SYS_FSEG_HEADER
 \

316 8

	)

319 
	#TRX_SYS_RSEGS
 (8 + 
FSEG_HEADER_SIZE
)

	)

328 
c⁄°ex¥
 
size_t
 
TRX_SYS_OLD_N_RSEGS
 = 256;

336 
c⁄°ex¥
 
size_t
 
TRX_SYS_OLD_TMP_RSEGS
 = 32;

339 
	#TRX_SYS_MYSQL_LOG_NAME_LEN
 512

	)

341 
	#TRX_SYS_MYSQL_LOG_MAGIC_N
 873422344

	)

343 #i‡
UNIV_PAGE_SIZE_MIN
 < 4096

347 
	#TRX_SYS_MYSQL_LOG_INFO
 (
UNIV_PAGE_SIZE
 - 1000)

	)

348 
	#TRX_SYS_MYSQL_LOG_MAGIC_N_FLD
 \

349 0

	)

353 
	#TRX_SYS_MYSQL_LOG_OFFSET_HIGH
 \

354 4

	)

356 
	#TRX_SYS_MYSQL_LOG_OFFSET_LOW
 \

357 8

	)

359 
	#TRX_SYS_MYSQL_LOG_NAME
 12

	)

363 
	#TRX_SYS_TRX_NUM_GTID
 \

364 (
TRX_SYS_MYSQL_LOG_INFO
 + 
TRX_SYS_MYSQL_LOG_NAME
 + 
TRX_SYS_MYSQL_LOG_NAME_LEN
)

	)

365 
	#TRX_SYS_TRX_NUM_END
 = (
TRX_SYS_TRX_NUM_GTID
 + 8)

	)

370 
	#TRX_SYS_DOUBLEWRITE
 (
UNIV_PAGE_SIZE
 - 200)

	)

372 
	#TRX_SYS_DOUBLEWRITE_FSEG
 \

373 0

	)

376 
	#TRX_SYS_DOUBLEWRITE_MAGIC
 
FSEG_HEADER_SIZE


	)

381 
	#TRX_SYS_DOUBLEWRITE_BLOCK1
 (4 + 
FSEG_HEADER_SIZE
)

	)

388 
	#TRX_SYS_DOUBLEWRITE_BLOCK2
 (8 + 
FSEG_HEADER_SIZE
)

	)

394 
	#TRX_SYS_DOUBLEWRITE_REPEAT
 \

395 12

	)

408 
	#TRX_SYS_DOUBLEWRITE_SPACE_ID_STORED
 (24 + 
FSEG_HEADER_SIZE
)

	)

412 
	#TRX_SYS_DOUBLEWRITE_MAGIC_N
 536853855

	)

414 
	#TRX_SYS_DOUBLEWRITE_SPACE_ID_STORED_N
 1783657386

	)

417 
	#TRX_SYS_DOUBLEWRITE_BLOCK_SIZE
 
FSP_EXTENT_SIZE


	)

421 
˛ass
 
S∑˚_Ids
 : 
public
 
°d
::
ve˘‹
<
•a˚_id_t
, 
ut_Æloˇt‹
<space_id_t>> {

422 
public
:

423 
	`s‹t
(Ë{ 
°d
::s‹t(
	`begö
(), 
	`íd
()); }

425 
boﬁ
 
	`c⁄èös
(
•a˚_id_t
 
id
) {

426 i‡(
	`size
() == 0) {

427  (
Ál£
);

430 
ôî©‹
 
ô
 = 
°d
::
	`föd
(
	`begö
(), 
	`íd
(), 
id
);

432  (
ô
 !
	`íd
());

435 
ôî©‹
 
	`föd
(
•a˚_id_t
 
id
Ë{  (
°d
::föd(
	`begö
(), 
	`íd
(), id)); }

436 
	}
};

438 #i‚de‡
UNIV_HOTBACKUP


440 
	såx_sys_t
 {

441 
TrxSysMuãx
 
	mmuãx
;

445 
MVCC
 *
	mmvcc
;

447 vﬁ©ûê
åx_id_t
 
	mmax_åx_id
;

453 
	m°d
::
©omic
<
åx_id_t
> 
mö_a˘ive_id
;

456 
åx_ut_li°_t
 
	m£rülißti⁄_li°
;

459 #ifde‡
UNIV_DEBUG


460 
åx_id_t
 
	mrw_max_åx_no
;

464 
	m∑d1
[64];

465 
åx_ut_li°_t
 
	mrw_åx_li°
;

470 
	m∑d2
[64];

471 
åx_ut_li°_t
 
	mmysql_åx_li°
;

481 
åx_ids_t
 
	mrw_åx_ids
;

490 
	m∑d3
[64];

492 
R£gs
 
	mr£gs
;

500 
R£gs
 
	mtmp_r£gs
;

510 
	m°d
::
©omic
<
uöt64_t
> 
r£g_hi°‹y_Àn
;

512 
TrxIdSë
 
	mrw_åx_£t
;

515 
ulöt
 
	mn_¥ï¨ed_åx
;

518 
boﬁ
 
	mfound_¥ï¨ed_åx
;

528 
S∑˚_Ids
 *
åx_sys_undo_•a˚s
;

533 
	#TRX_SYS_TRX_ID_WRITE_MARGIN
 ((
åx_id_t
)256)

	)

536 
	#åx_sys_muãx_own
(Ë(
åx_sys
->
muãx
.
	`is_ow√d
())

	)

539 
	#åx_sys_muãx_íãr
() \

541 
	`muãx_íãr
(&
åx_sys
->
muãx
); \

542 } 0)

	)

545 
	#åx_sys_muãx_exô
() \

547 
åx_sys
->
muãx
.
	`exô
(); \

548 } 0)

	)

550 
	~"åx0sys.ic
"

	@trx0sys.ic

33 
	~"d©a0ty≥.h
"

34 
	~"§v0§v.h
"

35 
	~"åx0åx.h
"

36 #i‚de‡
UNIV_HOTBACKUP


37 
	~"må0log.h
"

40 
byã
 
	tåx_sysf_r£g_t
;

44 
	#TRX_SYS_RSEG_SPACE
 \

45 0

	)

49 
	#TRX_SYS_RSEG_PAGE_NO
 \

50 4

	)

55 
	#TRX_SYS_RSEG_SLOT_SIZE
 8

	)

58 
åx_sys_Êush_max_åx_id
();

63 
UNIV_INLINE


64 
boﬁ
 
	$åx_sys_hdr_∑ge
(c⁄° 
∑ge_id_t
 &
∑ge_id
) {

65  (
∑ge_id
.
	`•a˚
(Ë=
TRX_SYS_SPACE
 &&

66 
∑ge_id
.
	`∑ge_no
(Ë=
TRX_SYS_PAGE_NO
);

67 
	}
}

71 
UNIV_INLINE


72 
åx_sysf_t
 *
	$åx_sysf_gë
(
må_t
 *
må
)

74 
buf_block_t
 *
block
;

75 
åx_sysf_t
 *
hódî
;

77 
	`ut_ad
(
må
);

79 
block
 = 
	`buf_∑ge_gë
(
	`∑ge_id_t
(
TRX_SYS_SPACE
, 
TRX_SYS_PAGE_NO
),

80 
univ_∑ge_size
, 
RW_X_LATCH
, 
må
);

81 
	`buf_block_dbg_add_Àvñ
(
block
, 
SYNC_TRX_SYS_HEADER
);

83 
hódî
 = 
TRX_SYS
 + 
	`buf_block_gë_‰ame
(
block
);

85  (
hódî
);

86 
	}
}

91 
UNIV_INLINE


92 
•a˚_id_t
 
	$åx_sysf_r£g_gë_•a˚
(

93 
åx_sysf_t
 *
sys_hódî
,

94 
ulöt
 
¶Ÿ
,

95 
må_t
 *
må
)

97 
	`ut_ad
(
sys_hódî
);

98 
	`ut_ad
(
¶Ÿ
 < 
TRX_SYS_N_RSEGS
);

100  (
	`må_ªad_ulöt
(
sys_hódî
 + 
TRX_SYS_RSEGS
 +

101 
¶Ÿ
 * 
TRX_SYS_RSEG_SLOT_SIZE
 + 
TRX_SYS_RSEG_SPACE
,

102 
MLOG_4BYTES
, 
må
));

103 
	}
}

108 
UNIV_INLINE


109 
∑ge_no_t
 
	$åx_sysf_r£g_gë_∑ge_no
(

110 
åx_sysf_t
 *
sys_hódî
,

111 
ulöt
 
¶Ÿ
,

112 
må_t
 *
må
)

114 
	`ut_ad
(
sys_hódî
);

115 
	`ut_ad
(
¶Ÿ
 < 
TRX_SYS_N_RSEGS
);

117  (
	`må_ªad_ulöt
(
sys_hódî
 + 
TRX_SYS_RSEGS
 +

118 
¶Ÿ
 * 
TRX_SYS_RSEG_SLOT_SIZE
 +

119 
TRX_SYS_RSEG_PAGE_NO
,

120 
MLOG_4BYTES
, 
må
));

121 
	}
}

125 
UNIV_INLINE


126 
	$åx_sysf_r£g_£t_•a˚
(

127 
åx_sysf_t
 *
sys_hódî
,

128 
ulöt
 
¶Ÿ
,

129 
•a˚_id_t
 
•a˚
,

130 
må_t
 *
må
)

132 
	`ut_ad
(
sys_hódî
);

133 
	`ut_ad
(
¶Ÿ
 < 
TRX_SYS_N_RSEGS
);

135 
	`mlog_wrôe_ulöt
(
sys_hódî
 + 
TRX_SYS_RSEGS
 + 
¶Ÿ
 * 
TRX_SYS_RSEG_SLOT_SIZE
 +

136 
TRX_SYS_RSEG_SPACE
,

137 
•a˚
, 
MLOG_4BYTES
, 
må
);

138 
	}
}

142 
UNIV_INLINE


143 
	$åx_sysf_r£g_£t_∑ge_no
(

144 
åx_sysf_t
 *
sys_hódî
,

145 
ulöt
 
¶Ÿ
,

146 
∑ge_no_t
 
∑ge_no
,

148 
må_t
 *
må
)

150 
	`ut_ad
(
sys_hódî
);

151 
	`ut_ad
(
¶Ÿ
 < 
TRX_SYS_N_RSEGS
);

153 
	`mlog_wrôe_ulöt
(
sys_hódî
 + 
TRX_SYS_RSEGS
 + 
¶Ÿ
 * 
TRX_SYS_RSEG_SLOT_SIZE
 +

154 
TRX_SYS_RSEG_PAGE_NO
,

155 
∑ge_no
, 
MLOG_4BYTES
, 
må
);

156 
	}
}

162 
UNIV_INLINE


163 
	$åx_wrôe_åx_id
(
byã
 *
±r
,

164 
åx_id_t
 
id
)

166 
	`ut_ad
(
id
 > 0);

167 
	`mach_wrôe_to_6
(
±r
, 
id
);

168 
	}
}

170 #i‚de‡
UNIV_HOTBACKUP


175 
UNIV_INLINE


176 
åx_id_t
 
	$åx_ªad_åx_id
(

177 c⁄° 
byã
 *
±r
)

179  (
	`mach_ªad_‰om_6
(
±r
));

180 
	}
}

182 
UNIV_INLINE


183 
åx_t
 *
	$åx_gë_rw_åx_by_id
(
åx_id_t
 
åx_id
) {

184 
	`ut_ad
(
åx_id
 > 0);

185 
	`ut_ad
(
	`åx_sys_muãx_own
());

187 i‡(
åx_sys
->
rw_åx_£t
.
	`em±y
()) {

188  (
nuŒ±r
);

191 
TrxIdSë
::
ôî©‹
 
ô
;

193 
ô
 = 
åx_sys
->
rw_åx_£t
.
	`föd
(
	`TrxTøck
(
åx_id
));

195  (
ô
 =
åx_sys
->
rw_åx_£t
.
	`íd
(Ë? 
nuŒ±r
 : it->
m_åx
);

196 
	}
}

203 
UNIV_INLINE


204 
åx_id_t
 
	$åx_rw_mö_åx_id_low
() {

205 
åx_id_t
 
id
;

207 
	`ut_ad
(
	`åx_sys_muãx_own
());

209 c⁄° 
åx_t
 *
åx
 = 
	`UT_LIST_GET_LAST
(
åx_sys
->
rw_åx_li°
);

211 i‡(
åx
 =
nuŒ±r
) {

212 
id
 = 
åx_sys
->
max_åx_id
;

214 
	`as£π_åx_ö_rw_li°
(
åx
);

215 
id
 = 
åx
->id;

218  (
id
);

219 
	}
}

221 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
UNIV_BLOB_LIGHT_DEBUG


224 
UNIV_INLINE


225 
iboﬁ
 
	$åx_as£π_ªcovîed
(
åx_id_t
 
åx_id
)

227 c⁄° 
åx_t
 *
åx
;

229 
	`åx_sys_muãx_íãr
();

231 
åx
 = 
	`åx_gë_rw_åx_by_id
(
åx_id
);

232 
	`ut_a
(
åx
->
is_ªcovîed
);

234 
	`åx_sys_muãx_exô
();

236  (
TRUE
);

237 
	}
}

245 
UNIV_INLINE


246 
åx_id_t
 
	$åx_rw_mö_åx_id
() {

247 
	`åx_sys_muãx_íãr
();

249 
åx_id_t
 
id
 = 
	`åx_rw_mö_åx_id_low
();

251 
	`åx_sys_muãx_exô
();

253  (
id
);

254 
	}
}

256 
UNIV_INLINE


257 
åx_t
 *
	$åx_rw_is_a˘ive_low
(
åx_id_t
 
åx_id
, 
iboﬁ
 *
c‹ru±
) {

258 
åx_t
 *
åx
;

260 
	`ut_ad
(
	`åx_sys_muãx_own
());

262 i‡(
åx_id
 < 
	`åx_rw_mö_åx_id_low
()) {

263 
åx
 = 
nuŒ±r
;

264 } i‡(
åx_id
 >
åx_sys
->
max_åx_id
) {

268 
åx
 = 
nuŒ±r
;

269 i‡(
c‹ru±
 !
nuŒ±r
) {

270 *
c‹ru±
 = 
TRUE
;

273 
åx
 = 
	`åx_gë_rw_åx_by_id
(
åx_id
);

278 
	`ut_ad
(
åx
 =
nuŒ±r
 || !
	`åx_°©e_eq
—rx, 
TRX_STATE_COMMITTED_IN_MEMORY
));

281  (
åx
);

282 
	}
}

284 
UNIV_INLINE


285 
åx_t
 *
	$åx_rw_is_a˘ive
(
åx_id_t
 
åx_id
, 
iboﬁ
 *
c‹ru±
, 
boﬁ
 
do_ªf_cou¡
) {

286 
åx_t
 *
åx
;

290 i‡(
åx_sys
->
mö_a˘ive_id
.
	`lﬂd
(Ë> 
åx_id
) {

291  (
nuŒ±r
);

294 
	`åx_sys_muãx_íãr
();

296 
åx
 = 
	`åx_rw_is_a˘ive_low
(
åx_id
, 
c‹ru±
);

298 i‡(
åx
 !
nuŒ±r
) {

299 
åx
 = 
	`åx_ª„ªn˚
—rx, 
do_ªf_cou¡
);

302 
	`åx_sys_muãx_exô
();

304  (
åx
);

305 
	}
}

309 
UNIV_INLINE


310 
åx_id_t
 
	$åx_sys_gë_√w_åx_id
() {

311 
	`ut_ad
(
	`åx_sys_muãx_own
());

320 i‡(!(
åx_sys
->
max_åx_id
 % 
TRX_SYS_TRX_ID_WRITE_MARGIN
)) {

321 
	`åx_sys_Êush_max_åx_id
();

324  (
åx_sys
->
max_åx_id
++);

325 
	}
}

327 
ölöe
 
åx_id_t
 
	$åx_sys_gë_max_åx_id
() {

328 
	`ut_ad
(!
	`åx_sys_muãx_own
());

330 i‡(
UNIV_WORD_SIZE
 < 
DATA_TRX_ID_LEN
) {

333 
	`åx_sys_muãx_íãr
();

335 
åx_id_t
 
max_åx_id
 = 
åx_sys
->max_trx_id;

337 
	`åx_sys_muãx_exô
();

339  (
max_åx_id
);

345  (
åx_sys
->
max_åx_id
);

347 
	}
}

351 
UNIV_INLINE


352 
boﬁ
 
	$åx_sys_√ed_rﬁlback
() {

353 
ulöt
 
n_åx
;

355 
	`åx_sys_muãx_íãr
();

357 
n_åx
 = 
	`UT_LIST_GET_LEN
(
åx_sys
->
rw_åx_li°
);

358 
	`ut_ad
(
n_åx
 >
åx_sys
->
n_¥ï¨ed_åx
);

359 
n_åx
 -
åx_sys
->
n_¥ï¨ed_åx
;

361 
	`åx_sys_muãx_exô
();

363  (
n_åx
 > 0);

364 
	}
}

369 
UNIV_INLINE


370 
	$åx_sys_rw_åx_add
(
åx_t
 *
åx
) {

371 
	`ut_ad
(
åx
->
id
 != 0);

373 
åx_sys
->
rw_åx_£t
.
	`ö£π
(
	`TrxTøck
(
åx
->
id
,Årx));

374 
	`ut_d
(
åx
->
ö_rw_åx_li°
 = 
åue
);

375 
	}
}

	@trx0trx.h

33 #i‚de‡
åx0åx_h


34 
	#åx0åx_h


	)

36 
	~<©omic
>

37 
	~<£t
>

39 
	~"ha_¥ŸŸy≥s.h
"

41 
	~"di˘0ty≥s.h
"

42 
	~"åx0ty≥s.h
"

43 
	~"ut0√w.h
"

45 
	~"lock0ty≥s.h
"

46 
	~"log0log.h
"

47 
	~"mem0mem.h
"

48 
	~"que0ty≥s.h
"

49 
	~"åx0xa.h
"

50 
	~"u§0ty≥s.h
"

51 
	~"ut0vec.h
"

52 #i‚de‡
UNIV_HOTBACKUP


53 
	~"·s0·s.h
"

55 
	~"§v0§v.h
"

58 
	gmå_t
;

61 
˛ass
 
	gRódVõw
;

64 
˛ass
 
	gFlushOb£rvî
;

67 
£ss_t
 *
åx_dummy_£ss
;

69 #i‚de‡
UNIV_HOTBACKUP


73 
åx_£t_Êush_ob£rvî
(
åx_t
 *
åx
, 
FlushOb£rvî
 *
ob£rvî
);

78 
åx_£t_dëaûed_îr‹
(
åx_t
 *
åx
, c⁄° *
msg
);

82 
åx_£t_dëaûed_îr‹_‰om_fûe
(

83 
åx_t
 *
åx
,

84 
FILE
 *
fûe
);

87 
UNIV_INLINE


88 c⁄° 
di˘_ödex_t
 *
åx_gë_îr‹_ödex
(

89 c⁄° 
åx_t
 *
åx
);

92 
åx_t
 *
åx_Æloˇã_f‹_mysql
();

95 
åx_t
 *
åx_Æloˇã_f‹_background
();

98 
åx_ªsuºe˘_locks
();

102 
åx_‰ì_ªsuºe˘ed
(
åx_t
 *
åx
);

106 
åx_‰ì_f‹_background
(
åx_t
 *
åx
);

112 
åx_‰ì_¥ï¨ed_‹_a˘ive_ªcovîed
(
åx_t
 *
åx
);

116 
åx_‰ì_f‹_mysql
(
åx_t
 *
åx
);

120 
åx_disc⁄√˘_∂aö
(
åx_t
 *
åx
);

124 
åx_disc⁄√˘_¥ï¨ed
(
åx_t
 *
åx
);

131 
åx_li°s_öô_©_db_°¨t
();

136 
åx_°¨t_if_nŸ_°¨ãd_xa_low
(
åx_t
 *
åx
, 
boﬁ
 
ªad_wrôe
);

141 
åx_°¨t_if_nŸ_°¨ãd_low
(
åx_t
 *
åx
, 
boﬁ
 
ªad_wrôe
);

144 
åx_°¨t_öã∫Æ_low
(
åx_t
 *
åx
);

148 
åx_°¨t_öã∫Æ_ªad_⁄ly_low
(
åx_t
 *
åx
);

150 #ifde‡
UNIV_DEBUG


151 
	#åx_°¨t_if_nŸ_°¨ãd_xa
(
t
, 
rw
) \

153 (
t
)->
°¨t_löe
 = 
__LINE__
; \

154 (
t
)->
°¨t_fûe
 = 
__FILE__
; \

155 
	`åx_°¨t_if_nŸ_°¨ãd_xa_low
((
t
), 
rw
); \

156 } 
Ál£
)

	)

158 
	#åx_°¨t_if_nŸ_°¨ãd
(
t
, 
rw
) \

160 (
t
)->
°¨t_löe
 = 
__LINE__
; \

161 (
t
)->
°¨t_fûe
 = 
__FILE__
; \

162 
	`åx_°¨t_if_nŸ_°¨ãd_low
((
t
), 
rw
); \

163 } 
Ál£
)

	)

165 
	#åx_°¨t_öã∫Æ
(
t
) \

167 (
t
)->
°¨t_löe
 = 
__LINE__
; \

168 (
t
)->
°¨t_fûe
 = 
__FILE__
; \

169 
	`åx_°¨t_öã∫Æ_low
((
t
)); \

170 } 
Ál£
)

	)

172 
	#åx_°¨t_öã∫Æ_ªad_⁄ly
(
t
) \

174 (
t
)->
°¨t_löe
 = 
__LINE__
; \

175 (
t
)->
°¨t_fûe
 = 
__FILE__
; \

176 
	`åx_°¨t_öã∫Æ_ªad_⁄ly_low
(
t
); \

177 } 
Ál£
)

	)

179 
	#åx_°¨t_if_nŸ_°¨ãd
(
t
, 
rw
Ë
	`åx_°¨t_if_nŸ_°¨ãd_low
(—),Ñw)

	)

181 
	#åx_°¨t_öã∫Æ
(
t
Ë
	`åx_°¨t_öã∫Æ_low
(—))

	)

183 
	#åx_°¨t_öã∫Æ_ªad_⁄ly
(
t
Ë
	`åx_°¨t_öã∫Æ_ªad_⁄ly_low
—)

	)

185 
	#åx_°¨t_if_nŸ_°¨ãd_xa
(
t
, 
rw
) \

186 
	`åx_°¨t_if_nŸ_°¨ãd_xa_low
((
t
), (
rw
))

	)

190 
åx_commô
(
åx_t
 *
åx
);

196 
åx_commô_low
(
åx_t
 *
åx
, 
må_t
 *
må
);

201 
åx_˛ónup_©_db_°¨tup
(
åx_t
 *
åx
);

204 
dbîr_t
 
åx_commô_f‹_mysql
(
åx_t
 *
åx
);

210 
dbîr_t
 
åx_¥ï¨e_f‹_mysql
(
åx_t
 *
åx
);

215 
åx_ªcovî_f‹_mysql
(

216 
XA_ªcovî_txn
 *
txn_li°
,

217 
ulöt
 
Àn
,

218 
MEM_ROOT
 *
mem_roŸ
);

225 
åx_t
 *
åx_gë_åx_by_xid
(c⁄° 
XID
 *
xid
);

229 
åx_commô_com∂ëe_f‹_mysql
(
åx_t
 *
åx
);

231 
åx_m¨k_sql_°©_íd
(
åx_t
 *
åx
);

235 
RódVõw
 *
åx_assign_ªad_võw
(
åx_t
 *
åx
);

238 
UNIV_INLINE


239 
RódVõw
 *
åx_gë_ªad_võw
(
åx_t
 *
åx
);

242 
UNIV_INLINE


243 c⁄° 
RódVõw
 *
åx_gë_ªad_võw
(c⁄° 
åx_t
 *
åx
);

246 
åx_commô_‹_rﬁlback_¥ï¨e
(
åx_t
 *
åx
);

249 
commô_node_t
 *
åx_commô_node_¸óã
(

250 
mem_hóp_t
 *
hóp
);

253 
que_thr_t
 *
åx_commô_°ï
(que_thr_à*
thr
);

257 
åx_¥öt_low
(
FILE
 *
f
,

259 c⁄° 
åx_t
 *
åx
,

261 
ulöt
 
max_quîy_Àn
,

264 
ulöt
 
n_ªc_locks
,

266 
ulöt
 
n_åx_locks
,

268 
ulöt
 
hóp_size
);

277 
åx_¥öt_œtched
(
FILE
 *
f
, c⁄° 
åx_t
 *
åx
, 
ulöt
 
max_quîy_Àn
);

285 
åx_¥öt
(
FILE
 *
f
, c⁄° 
åx_t
 *
åx
, 
ulöt
 
max_quîy_Àn
);

289 
UNIV_INLINE


290 
åx_di˘_›_t
 
	$åx_gë_di˘_›î©i⁄
(

291 c⁄° 
åx_t
 *
åx
)

292 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

297 
UNIV_INLINE


298 
	`åx_£t_di˘_›î©i⁄
(
åx_t
 *
åx
, 
åx_di˘_›_t
 
›
);

305 
UNIV_INLINE


306 
boﬁ
 
	$åx_°©e_eq
(c⁄° 
åx_t
 *
åx
,

307 
åx_°©e_t
 
°©e
)

308 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

309 #ifde‡
UNIV_DEBUG


315 
boﬁ
 
	`åx_ˇn_be_h™dÀd_by_cuºít_thªad
(c⁄° 
åx_t
 *
åx
);

320 
iboﬁ
 
	$åx_as£π_°¨ãd
(c⁄° 
åx_t
 *
åx
)

321 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

326 
iboﬁ
 
	`åx_is_öãºu±ed
(c⁄° 
åx_t
 *
åx
);

329 
iboﬁ
 
	`åx_is_°ri˘
(
åx_t
 *
åx
);

335 
	#TRX_WEIGHT
(
t
Ë(—)->
undo_no
 + 
	`UT_LIST_GET_LEN
(—)->
lock
.
åx_locks
))

	)

341 
boﬁ
 
	`åx_weight_ge
(c⁄° 
åx_t
 *
a
,

342 c⁄° 
åx_t
 *
b
);

345 
	#TRX_QUE_STATE_STR_MAX_LEN
 12

	)

350 
UNIV_INLINE


351 c⁄° *
	`åx_gë_que_°©e_°r
(c⁄° 
åx_t
 *
åx
);

361 
UNIV_INLINE


362 
åx_id_t
 
	`åx_gë_id_f‹_¥öt
(c⁄° 
åx_t
 *
åx
);

366 
	`åx_assign_r£g_ãmp
(
åx_t
 *
åx
);

369 
	`åx_poﬁ_öô
();

372 
	`åx_poﬁ_˛o£
();

378 
	`åx_£t_rw_mode
(
åx_t
 *
åx
);

387 
UNIV_INLINE


388 
åx_t
 *
	`åx_ª„ªn˚
—rx_à*
åx
, 
boﬁ
 
do_ªf_cou¡
);

393 
UNIV_INLINE


394 
	`åx_ªÀa£_ª„ªn˚
(
åx_t
 *
åx
);

398 
	#åx_is_ª„ªn˚d
(
t
Ë(—)->
n_ªf
 > 0)

	)

405 
UNIV_INLINE


406 c⁄° 
åx_t
 *
	`åx_¨bôøã
(c⁄°Årx_à*
ªque°‹
, c⁄°Årx_à*
hﬁdî
);

411 
UNIV_INLINE


412 
boﬁ
 
	`åx_is_high_¥i‹ôy
(c⁄° 
åx_t
 *
åx
);

418 
	`åx_kûl_blockög
(
åx_t
 *
åx
);

425 
UNIV_INLINE


426 
uöt64_t
 
	$åx_immuèbÀ_id
(c⁄° 
åx_t
 *
åx
) {

427  (
uöt64_t
{
ªöãΩªt_ˇ°
<
uöçå_t
>(
åx
)});

428 
	}
}

433 
UNIV_INLINE


434 
boﬁ
 
åx_is_r£g_upd©ed
(c⁄° 
åx_t
 *
åx
);

443 
	#åx_lock_waô_timeout_gë
(
t
Ë
	`thd_lock_waô_timeout
(—)->
mysql_thd
)

	)

450 
	#åx_is_autocommô_n⁄_lockög
(
t
) \

451 ((
t
)->
auto_commô
 && (t)->
wûl_lock
 =0)

	)

458 
	#åx_is_ac_∆_ro
(
t
) \

459 ((
t
)->
ªad_⁄ly
 && 
	`åx_is_autocommô_n⁄_lockög
(—)))

	)

463 
	#as£π_åx_ö_rw_li°
(
t
) \

465 
	`ut_ad
(!(
t
)->
ªad_⁄ly
); \

466 
	`ut_ad
((
t
)->
ö_rw_åx_li°
 == \

467 !((
t
)->
ªad_⁄ly
 || !—)->
r£gs
.
m_ªdo
.
r£g
)); \

468 
	`check_åx_°©e
(
t
); \

469 } 0)

	)

473 
	#check_åx_°©e
(
t
) \

475 
	`ut_ad
(!
	`åx_is_autocommô_n⁄_lockög
((
t
))); \

476 (
t
)->
°©e
) { \

477 
TRX_STATE_PREPARED
: \

479 
TRX_STATE_ACTIVE
: \

480 
TRX_STATE_COMMITTED_IN_MEMORY
: \

482 
TRX_STATE_NOT_STARTED
: \

483 
TRX_STATE_FORCED_ROLLBACK
: \

486 
ut_îr‹
; \

487 } 0)

	)

491 
	#as£π_åx_is_‰ì
(
t
) \

493 
	`ut_ad
(
	`åx_°©e_eq
((
t
), 
TRX_STATE_NOT_STARTED
) || \

494 
	`åx_°©e_eq
((
t
), 
TRX_STATE_FORCED_ROLLBACK
)); \

495 
	`ut_ad
(!
	`åx_is_r£g_upd©ed
(
åx
)); \

496 
	`ut_ad
(!
MVCC
::
	`is_võw_a˘ive
((
t
)->
ªad_võw
)); \

497 
	`ut_ad
((
t
)->
lock
.
waô_thr
 =
NULL
); \

498 
	`ut_ad
(
	`UT_LIST_GET_LEN
((
t
)->
lock
.
åx_locks
) == 0); \

499 
	`ut_ad
((
t
)->
di˘_›î©i⁄
 =
TRX_DICT_OP_NONE
); \

500 } 0)

	)

505 
	#as£π_åx_is_öa˘ive
(
t
) \

507 
	`as£π_åx_is_‰ì
((
t
)); \

508 
	`ut_ad
((
t
)->
di˘_›î©i⁄_lock_mode
 == 0); \

509 } 0)

	)

511 #ifde‡
UNIV_DEBUG


515 
	#as£π_åx_n⁄lockög_‹_ö_li°
(
t
) \

517 i‡(
	`åx_is_autocommô_n⁄_lockög
(
t
)) { \

518 
åx_°©e_t
 
t_°©e
 = (
t
)->
°©e
; \

519 
	`ut_ad
((
t
)->
ªad_⁄ly
); \

520 
	`ut_ad
(!(
t
)->
is_ªcovîed
); \

521 
	`ut_ad
(!(
t
)->
ö_rw_åx_li°
); \

522 
	`ut_ad
((
t
)->
ö_mysql_åx_li°
); \

523 
	`ut_ad
(
t_°©e
 =
TRX_STATE_NOT_STARTED
 || \

524 
t_°©e
 =
TRX_STATE_FORCED_ROLLBACK
 || \

525 
t_°©e
 =
TRX_STATE_ACTIVE
); \

527 
	`check_åx_°©e
(
t
); \

529 } 0)

	)

534 
	#as£π_åx_n⁄lockög_‹_ö_li°
(
åx
Ë(()0)

	)

538 
	g°d
::
	tve˘‹
<
	tib_lock_t
 *, 
	tut_Æloˇt‹
<ib_lock_à*>> 
	tlock_poﬁ_t
;

562 
	såx_lock_t
 {

563 
ulöt
 
	mn_a˘ive_thrs
;

565 
åx_que_t
 
	mque_°©e
;

573 
uöt64_t
 
	måx_locks_vîsi⁄
;

597 
	m°d
::
©omic
<
åx_t
 *> 
blockög_åx
;

618 
	m°d
::
©omic
<
lock_t
 *> 
waô_lock
;

646 
uöt32_t
 
	mwaô_lock_ty≥
;

648 
boﬁ
 
	mwas_cho£n_as_dódlock_vi˘im
;

659 
time_t
 
	mwaô_°¨ãd
;

667 
que_thr_t
 *
	mwaô_thr
;

670 
lock_poﬁ_t
 
	mªc_poﬁ
;

673 
lock_poﬁ_t
 
	mèbÀ_poﬁ
;

676 
ulöt
 
	mªc_ˇched
;

679 
ulöt
 
	mèbÀ_ˇched
;

682 
mem_hóp_t
 *
	mlock_hóp
;

695 
åx_lock_li°_t
 
	måx_locks
;

699 
lock_poﬁ_t
 
	mèbÀ_locks
;

705 
ib_ve˘‹_t
 *
	mautoöc_locks
;

710 
	m°d
::
©omic
<
ulöt
> 
n_ªc_locks
;

719 
	m°d
::
©omic
<
boﬁ
> 
öhîô_Æl
;

727 
	m°d
::
©omic
<
åx_scheduÀ_weight_t
> 
scheduÀ_weight
;

729 #ifde‡
UNIV_DEBUG


733 
boﬁ
 
	mö_rﬁlback
;

738 
boﬁ
 
	m°¨t_°mt
;

745 
	g°d
::
	t£t
<
	tdi˘_èbÀ_t
 *, 
	t°d
::
	tÀss
<dict_table_t *>,

746 
	tut_Æloˇt‹
<
	tdi˘_èbÀ_t
 *>>

747 
	tåx_mod_èbÀs_t
;

796 
	såx_undo_±r_t
 {

798 
boﬁ
 
is_em±y
(Ë{  (
	mö£π_undo
 =
nuŒ±r
 && 
upd©e_undo
 ==Çullptr); }

801 
boﬁ
 
is_ö£π_⁄ly
() {

802  (
	mö£π_undo
 !
nuŒ±r
 && 
upd©e_undo
 ==Çullptr);

806 
boﬁ
 
is_upd©e
(Ë{  
	mupd©e_undo
 !
nuŒ±r
; }

808 
åx_r£g_t
 *
	mr£g
;

811 
åx_undo_t
 *
	mö£π_undo
;

813 
åx_undo_t
 *
	mupd©e_undo
;

818 
	såx_r£gs_t
 {

822 
åx_undo_±r_t
 
	mm_ªdo
;

827 
åx_undo_±r_t
 
	mm_n‹edo
;

830 
	eåx_r£g_ty≥_t
 {

831 
	mTRX_RSEG_TYPE_NONE
 = 0,

832 
	mTRX_RSEG_TYPE_REDO
,

833 
	mTRX_RSEG_TYPE_NOREDO


836 
	såx_t
 {

837 
	eisﬁ©i⁄_Àvñ_t
 {

843 
	mREAD_UNCOMMITTED
,

850 
	mREAD_COMMITTED
,

855 
	mREPEATABLE_READ
,

859 
	mSERIALIZABLE


864 
muèbÀ
 
TrxMuãx
 
	mmuãx
;

875 
ib_uöt32_t
 
	mö_dïth
;

878 
ib_uöt32_t
 
	mö_önodb
;

881 
boﬁ
 
	mab‹t
;

885 
åx_id_t
 
	mid
;

887 
åx_id_t
 
	mno
;

958 
åx_°©e_t
 
	m°©e
;

965 
boﬁ
 
	mskù_lock_öhîô™˚
;

967 
RódVõw
 *
	mªad_võw
;

970 
UT_LIST_NODE_T
(
åx_t
)

971 
	måx_li°
;

973 
UT_LIST_NODE_T
(
åx_t
)

974 
	mno_li°
;

980 
åx_lock_t
 
	mlock
;

982 
boﬁ
 
	mis_ªcovîed
;

987 
	m°d
::
©omic
<
os_thªad_id_t
> 
kûÀd_by
;

1001 c⁄° *
	m›_öfo
;

1004 
ulöt
 
	misﬁ©i⁄_Àvñ
;

1005 
boﬁ
 
	mcheck_f‹eigns
;

1014 
boﬁ
 
	mis_ªgi°îed
;

1020 
boﬁ
 
	mcheck_unique_£c⁄d¨y
;

1027 
boﬁ
 
	mÊush_log_œãr
;

1033 
boﬁ
 
	mmu°_Êush_log_œãr
;

1039 
boﬁ
 
	mhas_£¨ch_œtch
;

1046 
åx_di˘_›_t
 
	mdi˘_›î©i⁄
;

1048 
boﬁ
 
	mddl_›î©i⁄
;

1050 
boﬁ
 
	mddl_mu°_Êush
;

1052 
boﬁ
 
	mö_åunˇã
;

1055 
boﬁ
 
	mde˛¨ed_to_be_öside_önodb
;

1060 
ib_uöt32_t
 
	mn_tickës_to_íãr_önodb
;

1065 
ib_uöt32_t
 
	mdi˘_›î©i⁄_lock_mode
;

1071 
time_t
 
	m°¨t_time
;

1074 
l¢_t
 
	mcommô_l¢
;

1077 
THD
 *
	mmysql_thd
;

1080 c⁄° *
	mmysql_log_fûe_«me
;

1085 
uöt64_t
 
	mmysql_log_off£t
;

1090 
ib_uöt32_t
 
	mn_mysql_èbÀs_ö_u£
;

1093 
ib_uöt32_t
 
	mmysql_n_èbÀs_locked
;

1098 #ifde‡
UNIV_DEBUG


1102 
boﬁ
 
	mö_rw_åx_li°
;

1105 
UT_LIST_NODE_T
(
åx_t
)

1106 
	mmysql_åx_li°
;

1108 #ifde‡
UNIV_DEBUG


1109 
boﬁ
 
	mö_mysql_åx_li°
;

1114 
dbîr_t
 
	mîr‹_°©e
;

1119 c⁄° 
di˘_ödex_t
 *
	mîr‹_ödex
;

1122 
ulöt
 
	mîr‹_key_num
;

1125 
£ss_t
 *
	m£ss
;

1126 
que_t
 *
	mgøph
;

1133 
UT_LIST_BASE_NODE_T
(
åx_«med_ßvït_t
)

1134 
	måx_ßvïoöts
;

1137 
UndoMuãx
 
	mundo_muãx
;

1143 
undo_no_t
 
	mundo_no
;

1150 
•a˚_id_t
 
	mundo_r£g_•a˚
;

1153 
åx_ßvït_t
 
	mœ°_sql_°©_°¨t
;

1158 
åx_r£gs_t
 
	mr£gs
;

1159 
undo_no_t
 
	mrﬁl_limô
;

1161 #ifde‡
UNIV_DEBUG


1162 
boﬁ
 
	mö_rﬁlback
;

1165 
ulöt
 
	m∑ges_und⁄e
;

1168 
ulöt
 
	mn_autoöc_rows
;

1172 
boﬁ
 
	mªad_⁄ly
;

1180 
boﬁ
 
	mauto_commô
;

1181 
ib_uöt32_t
 
	mwûl_lock
;

1184 #i‚de‡
UNIV_HOTBACKUP


1186 
·s_åx_t
 *
	m·s_åx
;

1189 
doc_id_t
 
	m·s_√xt_doc_id
;

1191 
ib_uöt32_t
 
	mÊush_èbÀs
;

1195 
boﬁ
 
	möã∫Æ
;

1201 
boﬁ
 
	m≥rsi°s_gtid
;

1203 #ifde‡
UNIV_DEBUG


1204 
ulöt
 
	m°¨t_löe
;

1205 c⁄° *
	m°¨t_fûe
;

1208 
löt
 
	mn_ªf
;

1220 
ulöt
 
	mvîsi⁄
;

1222 
XID
 *
	mxid
;

1225 
åx_mod_èbÀs_t
 
	mmod_èbÀs
;

1229 
boﬁ
 
	m≠i_åx
;

1230 
boﬁ
 
	m≠i_auto_commô
;

1231 
boﬁ
 
	mªad_wrôe
;

1238 
boﬁ
 
	mpurge_sys_åx
;

1240 *
	mdëaûed_îr‹
;

1242 
FlushOb£rvî
 *
	mÊush_ob£rvî
;

1244 #ifde‡
UNIV_DEBUG


1245 
boﬁ
 
	mis_dd_åx
;

1249 
ulöt
 
	mmagic_n
;

1251 
boﬁ
 
is_ªad_uncommôãd
() const {

1252  (
	misﬁ©i⁄_Àvñ
 =
READ_UNCOMMITTED
);

1255 
boﬁ
 
skù_g≠_locks
() const {

1256 
	misﬁ©i⁄_Àvñ
) {

1257 
	mREAD_UNCOMMITTED
:

1258 
READ_COMMITTED
:

1259  (
åue
);

1260 
	mREPEATABLE_READ
:

1261 
SERIALIZABLE
:

1262  (
Ál£
);

1264 
ut_ad
(0);

1265  (
	mÁl£
);

1268 
boﬁ
 
Ælow_£mi_c⁄si°ít
(Ëc⁄° {  (
skù_g≠_locks
()); }

1270 #i‚de‡
UNIV_HOTBACKUP


1273 
	#TRX_ISO_READ_UNCOMMITTED
 
åx_t
::
READ_UNCOMMITTED


	)

1274 
	#TRX_ISO_READ_COMMITTED
 
åx_t
::
READ_COMMITTED


	)

1275 
	#TRX_ISO_REPEATABLE_READ
 
åx_t
::
REPEATABLE_READ


	)

1276 
	#TRX_ISO_SERIALIZABLE
 
åx_t
::
SERIALIZABLE


	)

1282 
ölöe
 
boﬁ
 
	$åx_is_°¨ãd
(c⁄° 
åx_t
 *
åx
) {

1283  (
åx
->
°©e
 !
TRX_STATE_NOT_STARTED
 &&

1284 
åx
->
°©e
 !
TRX_STATE_FORCED_ROLLBACK
);

1285 
	}
}

1288 
	ecommô_node_°©e
 {

1289 
	mCOMMIT_NODE_SEND
 = 1,

1291 
	mCOMMIT_NODE_WAIT


1296 
	scommô_node_t
 {

1297 
que_comm⁄_t
 
	mcomm⁄
;

1298 
commô_node_°©e
 
	m°©e
;

1302 
	#åx_muãx_own
(
t
Ë
	`muãx_own
(&t->
muãx
)

	)

1304 #ifde‡
UNIV_DEBUG


1315 
åx_bef‹e_muãx_íãr
(c⁄° 
åx_t
 *
åx
, 
boﬁ
 
Ælow_™Ÿhî
);

1322 
åx_bef‹e_muãx_exô
(c⁄° 
åx_t
 *
åx
);

1332 
	#åx_muãx_íãr_low
(
t
, 
fú°_of_two
) \

1334 
	`ut_ad
(!
	`åx_muãx_own
(
t
)); \

1335 
	`ut_d
(
	`åx_bef‹e_muãx_íãr
(
t
, 
fú°_of_two
)); \

1336 
	`muãx_íãr
(&
t
->
muãx
); \

1337 } 0)

	)

1340 
	#åx_muãx_íãr
(
t
Ë
	`åx_muãx_íãr_low
—, 
Ál£
)

	)

1343 
	#åx_muãx_íãr_fú°_of_two
(
t
Ë
	`åx_muãx_íãr_low
—, 
åue
)

	)

1346 
	#åx_muãx_exô
(
t
) \

1348 
	`ut_ad
(
	`åx_muãx_own
(
t
)); \

1349 
	`ut_d
(
	`åx_bef‹e_muãx_exô
(
t
)); \

1350 
	`muãx_exô
(&
t
->
muãx
); \

1351 } 0)

	)

1355 ˛as†
	cTrxInI¬oDB
 {

1356 
	mpublic
:

1360 
	$TrxInI¬oDB
(
åx_t
 *
åx
, 
boﬁ
 
dißbÀ
 = 
Ál£
Ë: 
	$m_åx
(
åx
) {

1361 
	`íãr
(
åx
, 
dißbÀ
);

1366 ~
	$TrxInI¬oDB
(Ë{ 
	`exô
(
m_åx
); 
	}
}

1371 
boﬁ
 
	$is_ab‹ãd
(Ëc⁄° {  (
	`is_ab‹ãd
(
m_åx
)); 
	}
}

1375 
boﬁ
 
	$is_rﬁlback_dißbÀd
() const {

1376  ((
m_åx
->
ö_önodb
 & 
TRX_FORCE_ROLLBACK_DISABLE
) > 0);

1377 
	}
}

1382 
boﬁ
 
	$is_ab‹ãd
(c⁄° 
åx_t
 *
åx
) {

1383 i‡(
åx
->
°©e
 =
TRX_STATE_NOT_STARTED
) {

1384  (
Ál£
);

1387 
	`ut_ad
(
§v_ªad_⁄ly_mode
 || 
åx
->
ö_dïth
 > 0);

1388 
	`ut_ad
(
§v_ªad_⁄ly_mode
 || 
åx
->
ö_önodb
 > 0);

1390  (
åx
->
ab‹t
 ||Årx->
°©e
 =
TRX_STATE_FORCED_ROLLBACK
);

1391 
	}
}

1396 
	$begö_°mt
(
åx_t
 *
åx
Ë{ 
	`íãr
—rx, 
Ál£
); 
	}
}

1401 
	$íd_°mt
(
åx_t
 *
åx
Ë{ 
	`exô
—rx); 
	}
}

1406 
boﬁ
 
	$is_async_rﬁlback
(c⁄° 
åx_t
 *
åx
) {

1407  (
åx
->
kûÀd_by
 =
	`os_thªad_gë_cuº_id
());

1408 
	}
}

1410 
	g¥iv©e
:

1414 
	$íãr
(
åx_t
 *
åx
, 
boﬁ
 
dißbÀ
) {

1415 i‡(
§v_ªad_⁄ly_mode
) {

1419 
	`ut_ad
(!
	`is_async_rﬁlback
(
åx
));

1423 i‡(
dißbÀ
) {

1424 
	`åx_muãx_íãr
(
åx
);

1425 i‡(!
	`is_f‹˚d_rﬁlback
(
åx
Ë&& 
	`is_°¨ãd
(trx) &&

1426 !
	`åx_is_autocommô_n⁄_lockög
(
åx
)) {

1427 
	`ut_ad
(
åx
->
kûÀd_by
 == 0);

1434 
åx
->
ö_önodb
 |
TRX_FORCE_ROLLBACK_DISABLE
;

1436 
	`åx_muãx_exô
(
åx
);

1440 ++
åx
->
ö_dïth
;

1444 i‡(
åx
->
ö_dïth
 > 1) {

1448 
	`åx_muãx_íãr
(
åx
);

1450 
	`waô
(
åx
);

1452 
	`ut_ad
((
åx
->
ö_önodb
 & 
TRX_FORCE_ROLLBACK_MASK
) == 0);

1454 ++
åx
->
ö_önodb
;

1456 
	`åx_muãx_exô
(
åx
);

1457 
	}
}

1461 
	$exô
(
åx_t
 *
åx
) {

1462 i‡(
§v_ªad_⁄ly_mode
) {

1468 
	`ut_ad
(
åx
->
ö_dïth
 > 0);

1470 --
åx
->
ö_dïth
;

1472 i‡(
åx
->
ö_dïth
 > 0) {

1476 
	`åx_muãx_íãr
(
åx
);

1478 
	`ut_ad
((
åx
->
ö_önodb
 & 
TRX_FORCE_ROLLBACK_MASK
) > 0);

1480 --
åx
->
ö_önodb
;

1482 
	`åx_muãx_exô
(
åx
);

1483 
	}
}

1487 
boﬁ
 
	$is_f‹˚d_rﬁlback
(c⁄° 
åx_t
 *
åx
) {

1488 
	`ut_ad
(
	`åx_muãx_own
(
åx
));

1490  ((
åx
->
ö_önodb
 & 
TRX_FORCE_ROLLBACK
)) > 0;

1491 
	}
}

1495 
	$waô
(c⁄° 
åx_t
 *
åx
) {

1496 
	`ut_ad
(
	`åx_muãx_own
(
åx
));

1498 
ulöt
 
lo›_cou¡
 = 0;

1500 
ulöt
 
¶ìp_time
 = 20;

1502 
	`is_f‹˚d_rﬁlback
(
åx
)) {

1505 
	`åx_muãx_exô
(
åx
);

1507 
lo›_cou¡
++;

1509 i‡(
lo›_cou¡
 < 100) {

1511 
¶ìp_time
 = 20;

1512 } i‡(
lo›_cou¡
 < 1000) {

1514 
¶ìp_time
 = 1000;

1517 
¶ìp_time
 = 100000;

1520 
	`os_thªad_¶ìp
(
¶ìp_time
);

1522 
	`åx_muãx_íãr
(
åx
);

1524 
	}
}

1528 
boﬁ
 
	$is_°¨ãd
(c⁄° 
åx_t
 *
åx
) {

1529 
	`ut_ad
(
	`åx_muãx_own
(
åx
));

1531  (
	`åx_is_°¨ãd
(
åx
));

1532 
	}
}

1534 
	g¥iv©e
:

1537 
åx_t
 *
m_åx
;

1543 
boﬁ
 
åx_is_mysql_xa
(c⁄° 
åx_t
 *
åx
);

1547 
åx_sys_upd©e_bölog_posôi⁄
(
åx_t
 *
åx
);

1549 
	~"åx0åx.ic
"

	@trx0trx.ic

33 
	~"ªad0ªad.h
"

40 
UNIV_INLINE


41 
boﬁ
 
	$åx_°©e_eq
(c⁄° 
åx_t
 *
åx
,

42 
åx_°©e_t
 
°©e
)

44 #ifde‡
UNIV_DEBUG


45 
åx
->
°©e
) {

46 
TRX_STATE_PREPARED
:

48 
	`ut_ad
(!
	`åx_is_autocommô_n⁄_lockög
(
åx
));

49  (
åx
->
°©e
 == state);

51 
TRX_STATE_ACTIVE
:

53 
	`as£π_åx_n⁄lockög_‹_ö_li°
(
åx
);

54  (
°©e
 =
åx
->state);

56 
TRX_STATE_COMMITTED_IN_MEMORY
:

58 
	`check_åx_°©e
(
åx
);

59  (
°©e
 =
åx
->state);

61 
TRX_STATE_NOT_STARTED
:

62 
TRX_STATE_FORCED_ROLLBACK
:

65 
	`ut_a
(
°©e
 =
TRX_STATE_NOT_STARTED
 ||

66 
°©e
 =
TRX_STATE_FORCED_ROLLBACK
);

68 
	`ut_ad
(!
åx
->
ö_rw_åx_li°
);

70  (
åue
);

72 
ut_îr‹
;

74  (
åx
->
°©e
 == state);

76 
	}
}

81 
UNIV_INLINE


82 c⁄° 
di˘_ödex_t
 *
	$åx_gë_îr‹_ödex
(c⁄° 
åx_t
 *
åx
) {

83  (
åx
->
îr‹_ödex
);

84 
	}
}

89 
UNIV_INLINE


90 c⁄° *
	$åx_gë_que_°©e_°r
(c⁄° 
åx_t
 *
åx
)

93 
åx
->
lock
.
que_°©e
) {

94 
TRX_QUE_RUNNING
:

96 
TRX_QUE_LOCK_WAIT
:

98 
TRX_QUE_ROLLING_BACK
:

100 
TRX_QUE_COMMITTING
:

105 
	}
}

115 
UNIV_INLINE


116 
åx_id_t
 
	$åx_gë_id_f‹_¥öt
(c⁄° 
åx_t
 *
åx
) {

130 c⁄° 
åx_id_t
 
max_åx_id
 = (1ULL << (
DATA_TRX_ID_LEN
 * 
CHAR_BIT
)) - 1;

132 
	`ut_ad
(
åx
->
id
 <
max_åx_id
);

141  (
åx
->
id
 != 0

142 ? 
åx
->
id


143 : 
åx_id_t
{
ªöãΩªt_ˇ°
<
uöçå_t
>(
åx
)} | (
max_åx_id
 + 1));

144 
	}
}

148 
UNIV_INLINE


149 
åx_di˘_›_t
 
	$åx_gë_di˘_›î©i⁄
(

150 c⁄° 
åx_t
 *
åx
)

152 
åx_di˘_›_t
 
›
 = 
°©ic_ˇ°
<åx_di˘_›_t>(
åx
->
di˘_›î©i⁄
);

154 #ifde‡
UNIV_DEBUG


155 
›
) {

156 
TRX_DICT_OP_NONE
:

157 
TRX_DICT_OP_TABLE
:

158 
TRX_DICT_OP_INDEX
:

159  (
›
);

161 
ut_îr‹
;

163  (
›
);

164 
	}
}

166 
UNIV_INLINE


167 
	$åx_£t_di˘_›î©i⁄
(
åx_t
 *
åx
,

168 
åx_di˘_›_t
 
›
)

171 #ifde‡
UNIV_DEBUG


172 
åx_di˘_›_t
 
ﬁd_›
 = 
	`åx_gë_di˘_›î©i⁄
(
åx
);

174 
›
) {

175 
TRX_DICT_OP_NONE
:

176 
ut_îr‹
;

178 
TRX_DICT_OP_TABLE
:

179 
ﬁd_›
) {

180 
TRX_DICT_OP_NONE
:

181 
TRX_DICT_OP_INDEX
:

182 
TRX_DICT_OP_TABLE
:

183 
ok
;

185 
ut_îr‹
;

187 
TRX_DICT_OP_INDEX
:

188 
	`ut_ad
(
ﬁd_›
 =
TRX_DICT_OP_NONE
);

191 
ok
:

194 
åx
->
di˘_›î©i⁄
 = 
›
;

195 
	}
}

198 
UNIV_INLINE


199 
boﬁ
 
	$åx_is_ªdo_r£g_upd©ed
(c⁄° 
åx_t
 *
åx
)

201  (
åx
->
r£gs
.
m_ªdo
.
ö£π_undo
 !
nuŒ±r
 ||

202 
åx
->
r£gs
.
m_ªdo
.
upd©e_undo
 !
nuŒ±r
);

203 
	}
}

206 
UNIV_INLINE


207 
boﬁ
 
	$åx_is_ãmp_r£g_upd©ed
(c⁄° 
åx_t
 *
åx
)

209  (
åx
->
r£gs
.
m_n‹edo
.
ö£π_undo
 !
nuŒ±r
 ||

210 
åx
->
r£gs
.
m_n‹edo
.
upd©e_undo
 !
nuŒ±r
);

211 
	}
}

214 
UNIV_INLINE


215 
boﬁ
 
	$åx_is_r£g_upd©ed
(c⁄° 
åx_t
 *
åx
)

217  (
	`åx_is_ªdo_r£g_upd©ed
(
åx
Ë|| 
	`åx_is_ãmp_r£g_upd©ed
(trx));

218 
	}
}

221 
UNIV_INLINE


222 
boﬁ
 
	$åx_is_r£g_assig√d
(c⁄° 
åx_t
 *
åx
)

224  (
åx
->
r£gs
.
m_ªdo
.
r£g
 !
nuŒ±r
 ||

225 
åx
->
r£gs
.
m_n‹edo
.
r£g
 !
nuŒ±r
);

226 
	}
}

235 
UNIV_INLINE


236 
åx_t
 *
	$åx_ª„ªn˚
(
åx_t
 *
åx
, 
boﬁ
 
do_ªf_cou¡
) {

237 
	`åx_muãx_íãr
(
åx
);

239 i‡(
	`åx_°©e_eq
(
åx
, 
TRX_STATE_COMMITTED_IN_MEMORY
)) {

240 
	`åx_muãx_exô
(
åx
);

241 
åx
 = 
nuŒ±r
;

242 } i‡(
do_ªf_cou¡
) {

243 
	`ut_ad
(
åx
->
n_ªf
 >= 0);

244 ++
åx
->
n_ªf
;

245 
	`åx_muãx_exô
(
åx
);

247 
	`åx_muãx_exô
(
åx
);

250  (
åx
);

251 
	}
}

256 
UNIV_INLINE


257 
	$åx_ªÀa£_ª„ªn˚
(
åx_t
 *
åx
) {

258 
	`åx_muãx_íãr
(
åx
);

260 
	`ut_ad
(
åx
->
n_ªf
 > 0);

261 --
åx
->
n_ªf
;

263 
	`åx_muãx_exô
(
åx
);

264 
	}
}

269 
UNIV_INLINE


270 
RódVõw
 *
	$åx_gë_ªad_võw
(
åx_t
 *
åx
) {

271  (!
MVCC
::
	`is_võw_a˘ive
(
åx
->
ªad_võw
Ë? 
nuŒ±r
 :Årx->read_view);

272 
	}
}

277 
UNIV_INLINE


278 c⁄° 
RódVõw
 *
	$åx_gë_ªad_võw
(c⁄° 
åx_t
 *
åx
) {

279  (!
MVCC
::
	`is_võw_a˘ive
(
åx
->
ªad_võw
Ë? 
nuŒ±r
 :Årx->read_view);

280 
	}
}

285 
UNIV_INLINE


286 
boﬁ
 
	$åx_is_high_¥i‹ôy
(c⁄° 
åx_t
 *
åx
) {

287 i‡(
åx
->
mysql_thd
 =
nuŒ±r
) {

288  (
Ál£
);

291  (
	`thd_åx_¥i‹ôy
(
åx
->
mysql_thd
) > 0);

292 
	}
}

298 
UNIV_INLINE


299 c⁄° 
åx_t
 *
	$åx_¨bôøã
(c⁄° 
åx_t
 *
ªque°‹
, c⁄°Årx_à*
hﬁdî
) {

300 
	`ut_ad
(!
	`åx_is_autocommô_n⁄_lockög
(
hﬁdî
));

301 
	`ut_ad
(!
	`åx_is_autocommô_n⁄_lockög
(
ªque°‹
));

307 i‡(
ªque°‹
->
mysql_thd
 =
nuŒ±r
) {

308 
	`ut_ad
(!
	`åx_is_high_¥i‹ôy
(
ªque°‹
));

310 i‡(
	`åx_is_high_¥i‹ôy
(
hﬁdî
)) {

311  (
ªque°‹
);

313  (
nuŒ±r
);

316 } i‡(
hﬁdî
->
mysql_thd
 =
nuŒ±r
) {

317 
	`ut_ad
(!
	`åx_is_high_¥i‹ôy
(
hﬁdî
));

319 i‡(
	`åx_is_high_¥i‹ôy
(
ªque°‹
)) {

320  (
hﬁdî
);

323  (
nuŒ±r
);

326 c⁄° 
THD
 *
vi˘im
 =

327 
	`thd_åx_¨bôøã
(
ªque°‹
->
mysql_thd
, 
hﬁdî
->mysql_thd);

329 
	`ut_ad
(
vi˘im
 =
nuŒ±r
 || vi˘im =
ªque°‹
->
mysql_thd
 ||

330 
vi˘im
 =
hﬁdî
->
mysql_thd
);

332 i‡(
vi˘im
 !
nuŒ±r
) {

333  (
vi˘im
 =
ªque°‹
->
mysql_thd
 ?Ñeque°‹ : 
hﬁdî
);

336  (
nuŒ±r
);

337 
	}
}

	@trx0types.h

33 #i‚de‡
åx0ty≥s_h


34 
	#åx0ty≥s_h


	)

36 
	~"∑ge0size.h
"

37 
	~"sync0rw.h
"

38 
	~"ut0byã.h
"

39 
	~"ut0muãx.h
"

40 
	~"ut0√w.h
"

42 
	~<©omic
>

43 
	~<queue
>

44 
	~<£t
>

45 
	~<ve˘‹
>

50 
	#TRX_ID_FMT
 
IB_ID_FMT


	)

53 c⁄° 
•a˚_id_t
 
	gTRX_SYS_SPACE
 = 0;

56 
	#TRX_SYS_PAGE_NO
 
FSP_TRX_SYS_PAGE_NO


	)

59 c⁄° 
ulöt
 
	gTRX_MAGIC_N
 = 91118598;

63 c⁄° 
ib_uöt32_t
 
	gTRX_FORCE_ROLLBACK_DISABLE
 = 1 << 29;

68 c⁄° 
ib_uöt32_t
 
	gTRX_FORCE_ROLLBACK_ASYNC
 = 1 << 30;

71 c⁄° 
ib_uöt32_t
 
	gTRX_FORCE_ROLLBACK
 = 1 << 31;

74 c⁄° 
ib_uöt32_t
 
	gTRX_FORCE_ROLLBACK_MASK
 = 0x1FFFFFFF;

77 
	eåx_que_t
 {

78 
	mTRX_QUE_RUNNING
,

79 
	mTRX_QUE_LOCK_WAIT
,

81 
	mTRX_QUE_ROLLING_BACK
,

82 
	mTRX_QUE_COMMITTING


86 
	eåx_°©e_t
 {

88 
	mTRX_STATE_NOT_STARTED
,

92 
	mTRX_STATE_FORCED_ROLLBACK
,

94 
	mTRX_STATE_ACTIVE
,

97 
	mTRX_STATE_PREPARED
,

99 
	mTRX_STATE_COMMITTED_IN_MEMORY


103 
	eåx_di˘_›_t
 {

105 
	mTRX_DICT_OP_NONE
 = 0,

110 
	mTRX_DICT_OP_TABLE
 = 1,

114 
	mTRX_DICT_OP_INDEX
 = 2

120 
	gåx_t
;

122 
	gåx_lock_t
;

124 
	gåx_sys_t
;

126 
	gåx_sig_t
;

128 
	gåx_r£g_t
;

130 
	gåx_undo_t
;

132 
	gåx_purge_t
;

134 
	grﬁl_node_t
;

136 
	gcommô_node_t
;

138 
	gåx_«med_ßvït_t
;

142 
ib_id_t
 
	trow_id_t
;

144 
ib_id_t
 
	tåx_id_t
;

146 
ib_id_t
 
	trﬁl_±r_t
;

148 
ib_id_t
 
	tundo_no_t
;

151 
	#TRX_ID_MAX
 
IB_ID_MAX


	)

154 
	såx_ßvït_t
 {

155 
undo_no_t
 
	mÀa°_undo_no
;

161 
byã
 
	tåx_sysf_t
;

163 
byã
 
	tåx_r£gsf_t
;

165 
byã
 
	tåx_r£gf_t
;

167 
byã
 
	tåx_u£gf_t
;

169 
byã
 
	tåx_ulogf_t
;

171 
byã
 
	tåx_u∑gef_t
;

173 
byã
 
	tåx_undo_ªc_t
;

176 
ib_muãx_t
 
	tR£gMuãx
;

177 
ib_muãx_t
 
	tTrxMuãx
;

178 
ib_muãx_t
 
	tUndoMuãx
;

179 
ib_muãx_t
 
	tPQMuãx
;

180 
ib_muãx_t
 
	tTrxSysMuãx
;

183 
	såx_r£g_t
 {

184 #ifde‡
UNIV_DEBUG


188 
boﬁ
 
vÆid©e_cuº_size
(boﬁ 
èke_muãx
 = 
åue
);

192 
œtch
() {

193 
muãx_íãr
(&
muãx
);

194 
ut_ad
(
vÆid©e_cuº_size
(
Ál£
));

198 
u∆©ch
() {

199 
ut_ad
(
vÆid©e_cuº_size
(
Ál£
));

200 
muãx_exô
(&
muãx
);

206 
de¸_cuº_size
(
∑ge_no_t
 
≈ages
 = 1) {

207 
ut_ad
(
cuº_size
 >
≈ages
);

208 
	mcuº_size
 -
≈ages
;

213 
ö¸_cuº_size
(Ë{ ++
	mcuº_size
; }

217 
∑ge_no_t
 
gë_cuº_size
(Ëc⁄° {  (
	mcuº_size
); }

221 
£t_cuº_size
(
∑ge_no_t
 
≈ages
Ë{ 
	mcuº_size
 =Çpages; }

226 
size_t
 
	mid
{};

230 
R£gMuãx
 
	mmuãx
;

233 
•a˚_id_t
 
	m•a˚_id
{};

236 
∑ge_no_t
 
	m∑ge_no
{};

239 
∑ge_size_t
 
	m∑ge_size
;

242 
∑ge_no_t
 
	mmax_size
{};

244 
	m¥iv©e
:

246 
∑ge_no_t
 
cuº_size
{};

248 
	mpublic
:

252 
UT_LIST_BASE_NODE_T
(
åx_undo_t
Ë
upd©e_undo_li°
;

255 
UT_LIST_BASE_NODE_T
(
åx_undo_t
Ë
	mupd©e_undo_ˇched
;

260 
UT_LIST_BASE_NODE_T
(
åx_undo_t
Ë
	mö£π_undo_li°
;

263 
UT_LIST_BASE_NODE_T
(
åx_undo_t
Ë
	mö£π_undo_ˇched
;

269 
∑ge_no_t
 
	mœ°_∑ge_no
{};

272 
size_t
 
	mœ°_off£t
{};

275 
åx_id_t
 
	mœ°_åx_no
;

278 
boﬁ
 
	mœ°_dñ_m¨ks
{};

281 
	m°d
::
©omic
<
size_t
> 
åx_ªf_cou¡
{};

283 
	m°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const {

284 
out
 << "[åx_r£g_t:Åhis=" << (*)
this
 << ", id=" << 
id


285 << ", s∑˚_id=" << 
•a˚_id
 << ",Öage_no=" << 
∑ge_no


286 << ", cuº_size=" << 
cuº_size
 << "]";

287  (
	mout
);

291 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gåx_r£g_t
 &
	gr£g
) {

292  (
	gr£g
.
¥öt
(
out
));

295 
usög
 
	gR£gs_Ve˘‹
 = 
°d
::
ve˘‹
<
åx_r£g_t
 *, 
	gut_Æloˇt‹
<
	gåx_r£g_t
 *>>;

296 
usög
 
	gR£g_Iãøt‹
 = 
R£gs_Ve˘‹
::
ôî©‹
;

299 ˛as†
	cR£gs
 {

300 
	mpublic
:

302 
	$R£gs
(Ë: 
	`m_r£gs
(), 
	`m_œtch
(), 
	$m_°©e
(
INIT
) {

303 #i‚de‡
UNIV_HOTBACKUP


304 
	`öô
();

308 ~
	$R£gs
() {

309 #i‚de‡
UNIV_HOTBACKUP


310 
	`deöô
();

312 
	}
}

315 
öô
();

318 
deöô
();

322 
˛ór
();

326 
	$push_back
(
åx_r£g_t
 *
r£g
Ë{ 
m_r£gs
.
	`push_back
‘£g); 
	}
}

330 
ulöt
 
	$size
(Ë{  (
m_r£gs
.
	`size
()); 
	}
}

334 
R£g_Iãøt‹
 
	$begö
(Ë{  (
m_r£gs
.
	`begö
()); 
	}
}

338 
R£g_Iãøt‹
 
	$íd
(Ë{  (
m_r£gs
.
	`íd
()); 
	}
}

343 
åx_r£g_t
 *
	$©
(
ulöt
 
¶Ÿ
Ë{  (
m_r£gs
.
	`©
(¶Ÿ)); 
	}
}

349 
åx_r£g_t
 *
föd
(
ulöt
 
r£g_id
);

352 
	$s‹t
() {

353 i‡(
m_r£gs
.
	`em±y
()) {

357 
°d
::
	`s‹t
(

358 
m_r£gs
.
	`begö
(), m_r£gs.
	`íd
(),

359 [](
åx_r£g_t
 *
lhs
,Årx_r£g_à*
rhs
Ë{  (rhs->
id
 >Ühs->id); });

360 
	}
}

363 
	$s_lock
(Ë{ 
	`rw_lock_s_lock
(
m_œtch
); 
	}
}

366 
	$s_u∆ock
(Ë{ 
	`rw_lock_s_u∆ock
(
m_œtch
); 
	}
}

369 
	$x_lock
(Ë{ 
	`rw_lock_x_lock
(
m_œtch
); 
	}
}

372 
	$x_u∆ock
(Ë{ 
	`rw_lock_x_u∆ock
(
m_œtch
); 
	}
}

376 
boﬁ
 
	$is_a˘ive
(Ë{  (
m_°©e
 =
ACTIVE
); 
	}
}

381 
boﬁ
 
	$is_öa˘ive_im∂icô
(Ë{  (
m_°©e
 =
INACTIVE_IMPLICIT
); 
	}
}

386 
boﬁ
 
	$is_öa˘ive_ex∂icô
(Ë{  (
m_°©e
 =
INACTIVE_EXPLICIT
); 
	}
}

391 
boﬁ
 
	$is_em±y
(Ë{  (
m_°©e
 =
EMPTY
); 
	}
}

395 
boﬁ
 
	$is_öô
(Ë{  (
m_°©e
 =
INIT
); 
	}
}

399 
	$£t_a˘ive
(Ë{ 
m_°©e
 = 
ACTIVE
; 
	}
}

406 
	$£t_öa˘ive_im∂icô
() {

407 
	`ut_ad
(
m_°©e
 =
ACTIVE
 || m_°©ê=
INACTIVE_EXPLICIT
);

408 
m_°©e
 = 
INACTIVE_IMPLICIT
;

409 
	}
}

414 
	$£t_öa˘ive_ex∂icô
(Ë{ 
m_°©e
 = 
INACTIVE_EXPLICIT
; 
	}
}

418 
	$£t_em±y
() {

419 
	`ut_ad
(
m_°©e
 =
INACTIVE_EXPLICIT
 || m_°©ê=
ACTIVE
 ||

420 
m_°©e
 =
INIT
 || m_°©ê=
EMPTY
);

421 
m_°©e
 = 
EMPTY
;

422 
	}
}

425 
R£gs_Ve˘‹
 
	gm_r£gs
;

427 
	g¥iv©e
:

434 
rw_lock_t
 *
m_œtch
;

505 
	eundo_•a˚_°©es
 {

506 
	gINIT
,

507 
	gACTIVE
,

508 
	gINACTIVE_IMPLICIT
,

509 
	gINACTIVE_EXPLICIT
,

510 
	gEMPTY


514 
undo_•a˚_°©es
 
	gm_°©e
;

519 ˛as†
	cTrxUndoR£gs
 {

520 
	mpublic
:

522 
	$TrxUndoR£gs
(Ë: 
	$m_åx_no
() {}

524 
ex∂icô
 
	$TrxUndoR£gs
(
åx_id_t
 
åx_no
Ë: 
	$m_åx_no
(
åx_no
) {

526 
	}
}

530 
åx_id_t
 
	$gë_åx_no
(Ëc⁄° {  (
m_åx_no
); 
	}
}

534 
	$push_back
(
åx_r£g_t
 *
r£g
Ë{ 
m_r£gs
.
	`push_back
‘£g); 
	}
}

538 
	$îa£
(
R£g_Iãøt‹
 &
ô
Ë{ 
m_r£gs
.
	`îa£
(ô); 
	}
}

542 
ulöt
 
	$size
(Ëc⁄° {  (
m_r£gs
.
	`size
()); 
	}
}

546 
R£g_Iãøt‹
 
	$begö
(Ë{  (
m_r£gs
.
	`begö
()); 
	}
}

550 
R£g_Iãøt‹
 
	$íd
(Ë{  (
m_r£gs
.
	`íd
()); 
	}
}

554 
	$≠≥nd
(c⁄° 
TrxUndoR£gs
 &
≠≥nd_‰om
) {

555 
	`ut_ad
(
	`gë_åx_no
(Ë=
≠≥nd_‰om
.get_trx_no());

557 
m_r£gs
.
	`ö£π
(m_r£gs.
	`íd
(), 
≠≥nd_‰om
.m_r£gs.
	`begö
(),

558 
≠≥nd_‰om
.
m_r£gs
.
	`íd
());

559 
	}
}

565 
boﬁ
 
	$›î©‹
()(c⁄° 
TrxUndoR£gs
 &
lhs
, c⁄° TrxUndoR£g†&
rhs
) {

566  (
lhs
.
m_åx_no
 > 
rhs
.m_trx_no);

567 
	}
}

573 
	g¥iv©e
:

575 
åx_id_t
 
m_åx_no
;

578 
R£gs_Ve˘‹
 
	gm_r£gs
;

581 
	g°d
::
	t¥i‹ôy_queue
<

582 
	tTrxUndoR£gs
, 
	t°d
::
	tve˘‹
<TrxUndoR£gs, 
	tut_Æloˇt‹
<TrxUndoRsegs>>,

583 
	tTrxUndoR£gs
>

584 
	tpurge_pq_t
;

586 
	g°d
::
	tve˘‹
<
	tåx_id_t
, 
	tut_Æloˇt‹
<åx_id_t>> 
	tåx_ids_t
;

590 
	sTrxTøck
 {

591 
ex∂icô
 
TrxTøck
(
åx_id_t
 
id
, 
åx_t
 *
åx
 = 
nuŒ±r
Ë: 
m_id
(id), 
m_åx
(trx) {

595 
åx_id_t
 
	mm_id
;

596 
åx_t
 *
	mm_åx
;

599 
	sTrxTøckHash
 {

600 
size_t
 
›î©‹
()(c⁄° 
	mTrxTøck
 &
	mkey
Ëc⁄° {  (size_t(
key
.
m_id
)); }

605 
	sTrxTøckHashCmp
 {

606 
boﬁ
 
›î©‹
()(c⁄° 
	mTrxTøck
 &
	mlhs
, c⁄° TrxTøck &
	mrhs
) const {

607  (
	mlhs
.
	mm_id
 =
rhs
.
m_id
);

613 
	sTrxTøckCmp
 {

614 
boﬁ
 
›î©‹
()(c⁄° 
	mTrxTøck
 &
	mlhs
, c⁄° TrxTøck &
	mrhs
) const {

615  (
	mlhs
.
	mm_id
 < 
	mrhs
.m_id);

620 
	g°d
::
	t£t
<
	tTrxTøck
, 
	tTrxTøckCmp
, 
	tut_Æloˇt‹
<TrxTøck>> 
	tTrxIdSë
;

622 
	sTrxVîsi⁄
 {

623 
TrxVîsi⁄
(
åx_t
 *
åx
);

625 
åx_t
 *
	mm_åx
;

626 
ulöt
 
	mm_vîsi⁄
;

629 
	g°d
::
	tve˘‹
<
	tTrxVîsi⁄
, 
	tut_Æloˇt‹
<TrxVîsi⁄>> 
	thô_li°_t
;

	@trx0undo.h

33 #i‚de‡
åx0undo_h


34 
	#åx0undo_h


	)

36 
	~"må0må.h
"

37 
	~"∑ge0ty≥s.h
"

38 
	~"sql/xa.h
"

39 
	~"åx0sys.h
"

40 
	~"åx0ty≥s.h
"

41 
	~"åx0xa.h
"

42 
	~"univ.i
"

44 #i‚de‡
UNIV_HOTBACKUP


47 
UNIV_INLINE


48 
iboﬁ
 
åx_undo_rﬁl_±r_is_ö£π
(
rﬁl_±r_t
 
rﬁl_±r
);

51 
UNIV_INLINE


52 
boﬁ
 
	$åx_undo_åx_id_is_ö£π
(

53 c⁄° 
byã
 *
åx_id
)

54 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

62 
UNIV_INLINE


63 
	`åx_wrôe_rﬁl_±r
(
byã
 *
±r
, 
rﬁl_±r_t
 
rﬁl_±r
);

69 
UNIV_INLINE


70 
rﬁl_±r_t
 
	`åx_ªad_rﬁl_±r
(

71 c⁄° 
byã
 *
±r
);

72 #i‚de‡
UNIV_HOTBACKUP


79 
UNIV_INLINE


80 
∑ge_t
 *
	`åx_undo_∑ge_gë
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

81 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
);

88 
UNIV_INLINE


89 
∑ge_t
 *
	`åx_undo_∑ge_gë_s_œtched
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

90 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
);

98 
UNIV_INLINE


99 
åx_undo_ªc_t
 *
	`åx_undo_∑ge_gë_¥ev_ªc
—rx_undo_ªc_à*
ªc
,

100 
∑ge_no_t
 
∑ge_no
, 
ulöt
 
off£t
);

108 
UNIV_INLINE


109 
åx_undo_ªc_t
 *
	`åx_undo_∑ge_gë_√xt_ªc
—rx_undo_ªc_à*
ªc
,

110 
∑ge_no_t
 
∑ge_no
, 
ulöt
 
off£t
);

118 
UNIV_INLINE


119 
åx_undo_ªc_t
 *
	`åx_undo_∑ge_gë_œ°_ªc
(
∑ge_t
 *
undo_∑ge
, 
∑ge_no_t
 
∑ge_no
,

120 
ulöt
 
off£t
);

128 
UNIV_INLINE


129 
åx_undo_ªc_t
 *
	`åx_undo_∑ge_gë_fú°_ªc
(
∑ge_t
 *
undo_∑ge
,

130 
∑ge_no_t
 
∑ge_no
, 
ulöt
 
off£t
);

134 
åx_undo_ªc_t
 *
	`åx_undo_gë_¥ev_ªc
(

135 
åx_undo_ªc_t
 *
ªc
,

136 
∑ge_no_t
 
∑ge_no
,

137 
ulöt
 
off£t
,

138 
boﬁ
 
sh¨ed
,

139 
må_t
 *
må
);

142 
åx_undo_ªc_t
 *
	`åx_undo_gë_√xt_ªc
(

143 
åx_undo_ªc_t
 *
ªc
,

144 
∑ge_no_t
 
∑ge_no
,

145 
ulöt
 
off£t
,

146 
må_t
 *
må
);

157 
åx_undo_ªc_t
 *
	`åx_undo_gë_fú°_ªc
(
åx_id_t
 *
modifõr_åx_id
,

158 
•a˚_id_t
 
•a˚
,

159 c⁄° 
∑ge_size_t
 &
∑ge_size
,

160 
∑ge_no_t
 
∑ge_no
, 
ulöt
 
off£t
,

161 
ulöt
 
mode
, 
må_t
 *
må
);

165 
buf_block_t
 *
	$åx_undo_add_∑ge
(

166 
åx_t
 *
åx
,

167 
åx_undo_t
 *
undo
,

168 
åx_undo_±r_t
 *
undo_±r
,

170 
må_t
 *
må
)

174 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

177 
	`åx_undo_‰ì_œ°_∑ge_func
(

178 #ifde‡
UNIV_DEBUG


179 c⁄° 
åx_t
 *
åx
,

181 
åx_undo_t
 *
undo
,

182 
må_t
 *
må
);

185 #ifde‡
UNIV_DEBUG


186 
	#åx_undo_‰ì_œ°_∑ge
(
åx
, 
undo
, 
må
) \

187 
	`åx_undo_‰ì_œ°_∑ge_func
(
åx
, 
undo
, 
må
)

	)

189 
	#åx_undo_‰ì_œ°_∑ge
(
åx
, 
undo
, 
må
) \

190 
	`åx_undo_‰ì_œ°_∑ge_func
(
undo
, 
må
)

	)

195 #ifde‡
UNIV_DEBUG


203 
	`åx_undo_åunˇã_íd_func
(

204 #ifde‡
UNIV_DEBUG


205 c⁄° 
åx_t
 *
åx
,

207 
åx_undo_t
 *
undo
, 
undo_no_t
 
limô
);

209 #ifde‡
UNIV_DEBUG


210 
	#åx_undo_åunˇã_íd
(
åx
, 
undo
, 
limô
) \

211 
	`åx_undo_åunˇã_íd_func
(
åx
, 
undo
, 
limô
)

	)

213 
	#åx_undo_åunˇã_íd
(
åx
, 
undo
, 
limô
) \

214 
	`åx_undo_åunˇã_íd_func
(
undo
, 
limô
)

	)

225 
	`åx_undo_åunˇã_°¨t
(
åx_r£g_t
 *
r£g
, 
∑ge_no_t
 
hdr_∑ge_no
,

226 
ulöt
 
hdr_off£t
, 
undo_no_t
 
limô
);

231 
ulöt
 
	`åx_undo_li°s_öô
(

232 
åx_r£g_t
 *
r£g
);

238 
dbîr_t
 
	$åx_undo_assign_undo
(

239 
åx_t
 *
åx
,

240 
åx_undo_±r_t
 *
undo_±r
,

242 
ulöt
 
ty≥
)

244 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

247 
∑ge_t
 *
	`åx_undo_£t_°©e_©_föish
(

248 
åx_undo_t
 *
undo
,

249 
må_t
 *
må
);

257 
∑ge_t
 *
	`åx_undo_£t_°©e_©_¥ï¨e
(
åx_t
 *
åx
, 
åx_undo_t
 *
undo
,

258 
boﬁ
 
rﬁlback
, 
må_t
 *
må
);

270 
	`åx_undo_upd©e_˛ónup
(
åx_t
 *
åx
, 
åx_undo_±r_t
 *
undo_±r
,

271 
∑ge_t
 *
undo_∑ge
, 
boﬁ
 
upd©e_r£g_hi°‹y_Àn
,

273 
ulöt
 
n_added_logs
, 
må_t
 *
må
);

280 
	`åx_undo_ö£π_˛ónup
(
åx_undo_±r_t
 *
undo_±r
, 
boﬁ
 
n‹edo
);

282 #ifde‡
J3VM


288 
	`åx_undo_upd©e_˛ónup_f‹˚
(
åx_undo_±r_t
 *
undo_±r
, 
boﬁ
 
n‹edo
);

295 
	$åx_undo_‰ì_åx_wôh_¥ï¨ed_‹_a˘ive_logs
(

296 
åx_t
 *
åx
, 
ulöt
 
ex≥˘ed_undo_°©e
Ë
UNIV_COLD
;

299 
«me•a˚
 
undo
 {

300 
TabÀ•a˚
;

301 
˛ass
 
Trunˇã
;

302 
	}
}

307 
boﬁ
 
åx_undo_åunˇã_èbÀ•a˚
(
undo
::
TabÀ•a˚
 *
m¨ked_•a˚
);

312 
byã
 *
åx_undo_∑r£_∑ge_öô
(c⁄° byã *
±r
,

313 c⁄° 
byã
 *
íd_±r
,

314 
∑ge_t
 *
∑ge
,

315 
må_t
 *
må
);

323 
byã
 *
åx_undo_∑r£_∑ge_hódî
(
mlog_id_t
 
ty≥
, c⁄° byã *
±r
,

324 c⁄° 
byã
 *
íd_±r
, 
∑ge_t
 *
∑ge
, 
må_t
 *
må
);

327 
åx_undo_mem_‰ì
(
åx_undo_t
 *
undo
);

330 
	#TRX_UNDO_INSERT
 1

	)

331 
	#TRX_UNDO_UPDATE
 \

332 2

	)

337 
	#TRX_UNDO_ACTIVE
 \

338 1

	)

340 
	#TRX_UNDO_CACHED
 2

	)

341 
	#TRX_UNDO_TO_FREE
 3

	)

342 
	#TRX_UNDO_TO_PURGE
 \

343 4

	)

346 
	#TRX_UNDO_PREPARED
 \

347 5

	)

350 #i‚de‡
UNIV_HOTBACKUP


354 
	såx_undo_t
 {

356 ˛as†
	cGtid_°‹age
 {

358 
	mNONE
,

360 
	mCOMMIT
,

363 
	mPREPARE_AND_COMMIT


369 
boﬁ
 
	$gtid_Æloˇãd
(
boﬁ
 
is_¥ï¨e
) const;

374 
°d
::
tu∂e
<, 
size_t
> 
	$gtid_gë_dëaûs
(
boﬁ
 
is_¥ï¨e
) const;

378 
	`£t_¥ï¨ed
(c⁄° 
XID
 *
ö_xid
);

381 
ulöt
 
id
;

383 
ulöt
 
ty≥
;

385 
ulöt
 
°©e
;

387 
iboﬁ
 
dñ_m¨ks
;

395 
åx_id_t
 
åx_id
;

397 
XID
 
xid
;

399 
ulöt
 
Êag
;

403 
Gtid_°‹age
 
m_gtid_°‹age
{Gtid_°‹age::
NONE
};

405 
iboﬁ
 
	gdi˘_›î©i⁄
;

406 
åx_r£g_t
 *
	gr£g
;

408 
•a˚_id_t
 
	g•a˚
;

410 
∑ge_size_t
 
	g∑ge_size
;

411 
∑ge_no_t
 
	ghdr_∑ge_no
;

413 
ulöt
 
	ghdr_off£t
;

415 
∑ge_no_t
 
	gœ°_∑ge_no
;

418 
ulöt
 
	gsize
;

420 
ulöt
 
	gem±y
;

422 
∑ge_no_t
 
	gt›_∑ge_no
;

426 
ulöt
 
	gt›_off£t
;

429 
undo_no_t
 
	gt›_undo_no
;

430 
buf_block_t
 *
	gguess_block
;

433 
	$UT_LIST_NODE_T
(
åx_undo_t
Ë
undo_li°
;

436 
	}
};

443 
dbîr_t
 
åx_undo_gtid_add_upd©e_undo
(
åx_t
 *
åx
, 
boﬁ
 
¥ï¨e
, boﬁ 
rﬁlback
);

449 
åx_undo_gtid_£t
(
åx_t
 *
åx
, 
åx_undo_t
 *
undo
, 
boﬁ
 
is_xa_¥ï¨e
);

453 
åx_undo_gtid_ªad_™d_≥rsi°
(
åx_ulogf_t
 *
undo_log
);

461 
åx_undo_gtid_wrôe
(
åx_t
 *
åx
, 
åx_ulogf_t
 *
undo_hódî
, 
åx_undo_t
 *
undo
,

462 
må_t
 *
må
, 
boﬁ
 
is_xa_¥ï¨e
);

467 
	#TRX_UNDO_PAGE_HDR
 
FSEG_PAGE_DATA


	)

471 
	#TRX_UNDO_PAGE_TYPE
 \

472 0

	)

474 
	#TRX_UNDO_PAGE_START
 \

475 2

	)

480 
	#TRX_UNDO_PAGE_FREE
 \

481 4

	)

484 
	#TRX_UNDO_PAGE_NODE
 \

485 6

	)

488 
	#TRX_UNDO_PAGE_HDR_SIZE
 (6 + 
FLST_NODE_SIZE
)

	)

497 
	#TRX_UNDO_PAGE_REUSE_LIMIT
 (3 * 
UNIV_PAGE_SIZE
 / 4)

	)

511 
	#TRX_UNDO_SEG_HDR
 (
TRX_UNDO_PAGE_HDR
 + 
TRX_UNDO_PAGE_HDR_SIZE
)

	)

515 
	#TRX_UNDO_STATE
 0

	)

517 
	#TRX_UNDO_LAST_LOG
 \

518 2

	)

521 
	#TRX_UNDO_FSEG_HEADER
 \

522 4

	)

524 
	#TRX_UNDO_PAGE_LIST
 (4 + 
FSEG_HEADER_SIZE
)

	)

530 
	#TRX_UNDO_SEG_HDR_SIZE
 (4 + 
FSEG_HEADER_SIZE
 + 
FLST_BASE_NODE_SIZE
)

	)

537 
	#TRX_UNDO_TRX_ID
 0

	)

538 
	#TRX_UNDO_TRX_NO
 \

539 8

	)

542 
	#TRX_UNDO_DEL_MARKS
 \

543 16

	)

547 
	#TRX_UNDO_LOG_START
 \

548 18

	)

554 
	#TRX_UNDO_FLAGS
 \

555 20

	)

558 
	#TRX_UNDO_FLAG_XID
 \

559 0x01

	)

562 
	#TRX_UNDO_FLAG_GTID
 \

563 0x02

	)

565 
	#TRX_UNDO_FLAG_XA_PREPARE_GTID
 \

566 0x04

	)

568 
	#TRX_UNDO_DICT_TRANS
 \

569 21

	)

576 
	#TRX_UNDO_TABLE_ID
 \

577 22

	)

579 
	#TRX_UNDO_NEXT_LOG
 \

580 30

	)

582 
	#TRX_UNDO_PREV_LOG
 \

583 32

	)

585 
	#TRX_UNDO_HISTORY_NODE
 \

586 34

	)

590 
	#TRX_UNDO_LOG_OLD_HDR_SIZE
 (34 + 
FLST_NODE_SIZE
)

	)

604 
	#TRX_UNDO_XA_FORMAT
 (
TRX_UNDO_LOG_OLD_HDR_SIZE
)

	)

606 
	#TRX_UNDO_XA_TRID_LEN
 (
TRX_UNDO_XA_FORMAT
 + 4)

	)

608 
	#TRX_UNDO_XA_BQUAL_LEN
 (
TRX_UNDO_XA_TRID_LEN
 + 4)

	)

610 
	#TRX_UNDO_XA_XID
 (
TRX_UNDO_XA_BQUAL_LEN
 + 4)

	)

612 
	#TRX_UNDO_LOG_XA_HDR_SIZE
 (
TRX_UNDO_XA_XID
 + 
XIDDATASIZE
)

	)

623 
	#TRX_UNDO_LOG_GTID_VERSION
 (
TRX_UNDO_LOG_XA_HDR_SIZE
)

	)

626 
	#TRX_UNDO_LOG_GTID
 (
TRX_UNDO_LOG_XA_HDR_SIZE
 + 1)

	)

629 
	#TRX_UNDO_LOG_GTID_LEN
 64

	)

632 
	#TRX_UNDO_LOG_GTID_HDR_SIZE
 (
TRX_UNDO_LOG_GTID
 + 
TRX_UNDO_LOG_GTID_LEN
)

	)

635 
	#TRX_UNDO_LOG_GTID_XA
 (
TRX_UNDO_LOG_GTID_HDR_SIZE
)

	)

639 
	#TRX_UNDO_LOG_GTID_XA_HDR_SIZE
 \

640 (
TRX_UNDO_LOG_GTID_HDR_SIZE
 + 
TRX_UNDO_LOG_GTID_LEN
)

	)

642 
	~"åx0undo.ic
"

	@trx0undo.ic

33 
	~"d©a0ty≥.h
"

34 
	~"∑ge0∑ge.h
"

35 
	~"åx0purge.h
"

37 #i‚de‡
UNIV_HOTBACKUP


44 
ölöe
 
rﬁl_±r_t
 
	$åx_undo_buûd_rﬁl_±r
(
iboﬁ
 
is_ö£π
, 
•a˚_id_t
 
•a˚_id
,

45 
∑ge_no_t
 
∑ge_no
, 
ulöt
 
off£t
) {

46 
rﬁl_±r_t
 
rﬁl_±r
;

47 
ulöt
 
id
;

49 
	`ut_ad
(
is_ö£π
 == 0 || is_insert == 1);

50 
	`ut_ad
(
off£t
 < 65536);

52 
id
 = (
	`f•_is_undo_èbÀ•a˚
(
•a˚_id
Ë? 
undo
::
	`id2num
(space_id) : 0);

54 
rﬁl_±r
 = (
rﬁl_±r_t
)
is_ö£π
 << 55 | (rﬁl_±r_t)
id
 << 48 |

55 (
rﬁl_±r_t
)
∑ge_no
 << 16 | 
off£t
;

56  (
rﬁl_±r
);

57 
	}
}

60 
ölöe
 
	$åx_undo_decode_rﬁl_±r
(

61 
rﬁl_±r_t
 
rﬁl_±r
,

62 
iboﬁ
 *
is_ö£π
,

63 
ulöt
 *
r£g_id
,

64 
∑ge_no_t
 *
∑ge_no
,

65 
ulöt
 *
off£t
)

68 
	`ut_ad
(
rﬁl_±r
 < (1ULL << 56));

69 *
off£t
 = (
ulöt
)
rﬁl_±r
 & 0xFFFF;

70 
rﬁl_±r
 >>= 16;

71 *
∑ge_no
 = (
ulöt
)
rﬁl_±r
 & 0xFFFFFFFF;

72 
rﬁl_±r
 >>= 32;

73 *
r£g_id
 = (
ulöt
)
rﬁl_±r
 & 0x7F;

74 
rﬁl_±r
 >>= 7;

75 *
is_ö£π
 = (
iboﬁ
)
rﬁl_±r
;

76 
	}
}

80 
UNIV_INLINE


81 
iboﬁ
 
	$åx_undo_rﬁl_±r_is_ö£π
(
rﬁl_±r_t
 
rﬁl_±r
)

83 
	`ut_ad
(
rﬁl_±r
 < (1ULL << 56));

84  ((
iboﬁ
)(
rﬁl_±r
 >> 55));

85 
	}
}

89 
UNIV_INLINE


90 
boﬁ
 
	$åx_undo_åx_id_is_ö£π
(

91 c⁄° 
byã
 *
åx_id
)

93  (
°©ic_ˇ°
<
boﬁ
>(
åx_id
[
DATA_TRX_ID_LEN
] >> 7));

94 
	}
}

100 
UNIV_INLINE


101 
	$åx_wrôe_rﬁl_±r
(
byã
 *
±r
,

103 
rﬁl_±r_t
 
rﬁl_±r
)

105 
	`mach_wrôe_to_7
(
±r
, 
rﬁl_±r
);

106 
	}
}

112 
UNIV_INLINE


113 
rﬁl_±r_t
 
	$åx_ªad_rﬁl_±r
(

114 c⁄° 
byã
 *
±r
)

116  (
	`mach_ªad_‰om_7
(
±r
));

117 
	}
}

119 #i‚de‡
UNIV_HOTBACKUP


126 
UNIV_INLINE


127 
∑ge_t
 *
	$åx_undo_∑ge_gë
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

128 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
) {

129 
buf_block_t
 *
block
 = 
	`buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_X_LATCH
, 
må
);

130 
	`buf_block_dbg_add_Àvñ
(
block
, 
SYNC_TRX_UNDO_PAGE
);

132  (
	`buf_block_gë_‰ame
(
block
));

133 
	}
}

140 
UNIV_INLINE


141 
∑ge_t
 *
	$åx_undo_∑ge_gë_s_œtched
(c⁄° 
∑ge_id_t
 &
∑ge_id
,

142 c⁄° 
∑ge_size_t
 &
∑ge_size
, 
må_t
 *
må
) {

143 
buf_block_t
 *
block
 = 
	`buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_S_LATCH
, 
må
);

144 
	`buf_block_dbg_add_Àvñ
(
block
, 
SYNC_TRX_UNDO_PAGE
);

146  (
	`buf_block_gë_‰ame
(
block
));

147 
	}
}

152 
UNIV_INLINE


153 
ulöt
 
	$åx_undo_∑ge_gë_°¨t
(

154 
∑ge_t
 *
undo_∑ge
,

155 
∑ge_no_t
 
∑ge_no
,

156 
ulöt
 
off£t
)

158 
ulöt
 
°¨t
;

160 i‡(
∑ge_no
 =
	`∑ge_gë_∑ge_no
(
undo_∑ge
)) {

161 
°¨t
 = 
	`mach_ªad_‰om_2
(
off£t
 + 
undo_∑ge
 + 
TRX_UNDO_LOG_START
);

163 
°¨t
 = 
TRX_UNDO_PAGE_HDR
 + 
TRX_UNDO_PAGE_HDR_SIZE
;

166  (
°¨t
);

167 
	}
}

172 
UNIV_INLINE


173 
ulöt
 
	$åx_undo_∑ge_gë_íd
(

174 
∑ge_t
 *
undo_∑ge
,

175 
∑ge_no_t
 
∑ge_no
,

176 
ulöt
 
off£t
)

178 
åx_ulogf_t
 *
log_hdr
;

179 
ulöt
 
íd
;

181 i‡(
∑ge_no
 =
	`∑ge_gë_∑ge_no
(
undo_∑ge
)) {

182 
log_hdr
 = 
undo_∑ge
 + 
off£t
;

184 
íd
 = 
	`mach_ªad_‰om_2
(
log_hdr
 + 
TRX_UNDO_NEXT_LOG
);

186 i‡(
íd
 == 0) {

187 
íd
 =

188 
	`mach_ªad_‰om_2
(
undo_∑ge
 + 
TRX_UNDO_PAGE_HDR
 + 
TRX_UNDO_PAGE_FREE
);

191 
íd
 = 
	`mach_ªad_‰om_2
(
undo_∑ge
 + 
TRX_UNDO_PAGE_HDR
 + 
TRX_UNDO_PAGE_FREE
);

194  (
íd
);

195 
	}
}

200 
UNIV_INLINE


201 
åx_undo_ªc_t
 *
	$åx_undo_∑ge_gë_¥ev_ªc
(

202 
åx_undo_ªc_t
 *
ªc
,

203 
∑ge_no_t
 
∑ge_no
,

204 
ulöt
 
off£t
)

206 
∑ge_t
 *
undo_∑ge
;

207 
ulöt
 
°¨t
;

209 
undo_∑ge
 = (
∑ge_t
 *)
	`ut_Æign_down
(
ªc
, 
UNIV_PAGE_SIZE
);

211 
°¨t
 = 
	`åx_undo_∑ge_gë_°¨t
(
undo_∑ge
, 
∑ge_no
, 
off£t
);

213 i‡(
°¨t
 + 
undo_∑ge
 =
ªc
) {

214  (
nuŒ±r
);

217  (
undo_∑ge
 + 
	`mach_ªad_‰om_2
(
ªc
 - 2));

218 
	}
}

223 
UNIV_INLINE


224 
åx_undo_ªc_t
 *
	$åx_undo_∑ge_gë_√xt_ªc
(

225 
åx_undo_ªc_t
 *
ªc
,

226 
∑ge_no_t
 
∑ge_no
,

227 
ulöt
 
off£t
)

229 
∑ge_t
 *
undo_∑ge
;

230 
ulöt
 
íd
;

231 
ulöt
 
√xt
;

233 
undo_∑ge
 = (
∑ge_t
 *)
	`ut_Æign_down
(
ªc
, 
UNIV_PAGE_SIZE
);

235 
íd
 = 
	`åx_undo_∑ge_gë_íd
(
undo_∑ge
, 
∑ge_no
, 
off£t
);

237 
√xt
 = 
	`mach_ªad_‰om_2
(
ªc
);

239 i‡(
√xt
 =
íd
) {

240  (
nuŒ±r
);

243  (
undo_∑ge
 + 
√xt
);

244 
	}
}

249 
UNIV_INLINE


250 
åx_undo_ªc_t
 *
	$åx_undo_∑ge_gë_œ°_ªc
(

251 
∑ge_t
 *
undo_∑ge
,

252 
∑ge_no_t
 
∑ge_no
,

253 
ulöt
 
off£t
)

255 
ulöt
 
°¨t
;

256 
ulöt
 
íd
;

258 
°¨t
 = 
	`åx_undo_∑ge_gë_°¨t
(
undo_∑ge
, 
∑ge_no
, 
off£t
);

259 
íd
 = 
	`åx_undo_∑ge_gë_íd
(
undo_∑ge
, 
∑ge_no
, 
off£t
);

261 i‡(
°¨t
 =
íd
) {

262  (
nuŒ±r
);

265  (
undo_∑ge
 + 
	`mach_ªad_‰om_2
(undo_∑gê+ 
íd
 - 2));

266 
	}
}

271 
UNIV_INLINE


272 
åx_undo_ªc_t
 *
	$åx_undo_∑ge_gë_fú°_ªc
(

273 
∑ge_t
 *
undo_∑ge
,

274 
∑ge_no_t
 
∑ge_no
,

275 
ulöt
 
off£t
)

277 
ulöt
 
°¨t
;

278 
ulöt
 
íd
;

280 
°¨t
 = 
	`åx_undo_∑ge_gë_°¨t
(
undo_∑ge
, 
∑ge_no
, 
off£t
);

281 
íd
 = 
	`åx_undo_∑ge_gë_íd
(
undo_∑ge
, 
∑ge_no
, 
off£t
);

283 i‡(
°¨t
 =
íd
) {

284  (
nuŒ±r
);

287  (
undo_∑ge
 + 
°¨t
);

288 
	}
}

292 
ölöe
 
	gåx_undo_t
::
	$£t_¥ï¨ed
(c⁄° 
XID
 *
ö_xid
) {

293 
°©e
 = 
TRX_UNDO_PREPARED
;

294 
xid
 = *
ö_xid
;

295 
Êag
 |
TRX_UNDO_FLAG_XID
;

296 
	}
}

	@trx0xa.h

32 #i‚de‡
XA_H


33 
	#XA_H


	)

35 
	~"sql/xa.h
"

40 #i‚de‡
XIDDATASIZE


43 
	#XIDDATASIZE
 \

44 128

	)

46 
	#MAXGTRIDSIZE
 64

	)

47 
	#MAXBQUALSIZE
 64

	)

	@univ.i

41 #i‚de‡
univ_i


42 
	#univ_i


	)

44 #ifde‡
UNIV_HOTBACKUP


45 
	~"hb_univ.i
"

50 
	#_IB_TO_STR
(
s
Ë#s

	)

51 
	#IB_TO_STR
(
s
Ë
	`_IB_TO_STR
(s)

	)

53 
	#INNODB_VERSION_MAJOR
 
MYSQL_VERSION_MAJOR


	)

54 
	#INNODB_VERSION_MINOR
 
MYSQL_VERSION_MINOR


	)

55 
	#INNODB_VERSION_BUGFIX
 
MYSQL_VERSION_PATCH


	)

63 
	#INNODB_VERSION_SHORT
 (
INNODB_VERSION_MAJOR
 << 8 | 
INNODB_VERSION_MINOR
)

	)

65 
	#INNODB_VERSION_STR
 \

66 
	`IB_TO_STR
(
INNODB_VERSION_MAJOR
) \

67 "." 
	`IB_TO_STR
(
INNODB_VERSION_MINOR
Ë"." IB_TO_STR(
INNODB_VERSION_BUGFIX
)

	)

69 
	#REFMAN
 \

70 "hâp://dev.mysql.com/doc/ªfm™/" 
	`IB_TO_STR
( \

71 
MYSQL_VERSION_MAJOR
Ë"." 
	`IB_TO_STR
(
MYSQL_VERSION_MINOR
Ë"/í/"

	)

73 #ifde‡
MYSQL_DYNAMIC_PLUGIN


80 
	#ha_önoba£
 
ha_önodb


	)

83 #i‡
deföed
(
_WIN32
)

84 
	~<wödows.h
>

94 
	~"m_°rög.h
"

95 #i‚de‡
UNIV_HOTBACKUP


96 
	~"my_thªad.h
"

100 
	~<sys/°©.h
>

102 
	~"my_psi_c⁄fig.h
"

104 #i‚de‡
_WIN32


105 
	~<sched.h
>

106 
	~<sys/mm™.h
>

110 #i‚de‡
_WIN32


111 #i‚de‡
UNIV_HOTBACKUP


112 
	~"my_c⁄fig.h
"

116 #i‚de‡
UNIV_HOTBACKUP


117 
	~<öây≥s.h
>

118 
	~<°döt.h
>

119 #ifde‡
HAVE_UNISTD_H


120 
	~<uni°d.h
>

127 #i‡
deföed
(
HAVE_PSI_INTERFACE
Ë&& !deföed(
UNIV_LIBRARY
)

128 #ifde‡
HAVE_PSI_MUTEX_INTERFACE


129 
	#UNIV_PFS_MUTEX


	)

132 #i‡
deföed
 
HAVE_PSI_RWLOCK_INTERFACE
 && deföed 
UNIV_PFS_MUTEX


135 
	#UNIV_PFS_RWLOCK


	)

138 #ifde‡
HAVE_PSI_FILE_INTERFACE


139 
	#UNIV_PFS_IO


	)

142 #ifde‡
HAVE_PSI_THREAD_INTERFACE


143 
	#UNIV_PFS_THREAD


	)

146 #ifde‡
HAVE_PSI_MEMORY_INTERFACE


147 
	#UNIV_PFS_MEMORY


	)

150 
	~"mysql/psi/mysql_fûe.h
"

151 
	~"mysql/psi/mysql_muãx.h
"

152 
	~"mysql/psi/mysql_rwlock.h
"

153 
	~"mysql/psi/mysql_thªad.h
"

155 
	~"pfs_fûe_¥ovidî.h
"

156 
	~"pfs_muãx_¥ovidî.h
"

157 
	~"pfs_rwlock_¥ovidî.h
"

159 
	~"pfs_thªad_¥ovidî.h
"

163 #ifde‡
_WIN32


164 
	#YY_NO_UNISTD_H
 1

	)

171 #¥agm®
poöãrs_to_membîs
(
fuŒ_gíîÆôy
, 
sögÀ_öhîô™˚
)

191 #i‡
deföed
 
HAVE_VALGRIND


192 
	#UNIV_DEBUG_VALGRIND


	)

195 #ifde‡
DBUG_OFF


196 #unde‡
UNIV_DEBUG


197 #ñi‡!
deföed
 
UNIV_DEBUG


198 
	#UNIV_DEBUG


	)

202 
	#UNIV_DEBUG_VALGRIND


	)

204 
	#UNIV_DEBUG_PRINT


	)

206 
	#UNIV_AHI_DEBUG


	)

208 
	#UNIV_BUF_DEBUG


	)

210 
	#UNIV_BLOB_LIGHT_DEBUG


	)

212 
	#UNIV_DEBUG_LOCK_VALIDATE


	)

215 
	#UNIV_LRU_DEBUG


	)

216 
	#UNIV_HASH_DEBUG


	)

217 
	#UNIV_LOG_LSN_DEBUG


	)

220 
	#UNIV_IBUF_DEBUG


	)

221 
	#UNIV_IBUF_COUNT_DEBUG


	)

224 
	#UNIV_PERF_DEBUG


	)

227 
	#UNIV_SEARCH_PERF_STAT


	)

229 
	#UNIV_SRV_PRINT_LATCH_WAITS


	)

231 
	#UNIV_BTR_PRINT


	)

233 
	#UNIV_ZIP_DEBUG


	)

235 
	#UNIV_ZIP_COPY


	)

237 
	#UNIV_AIO_DEBUG


	)

240 
	#UNIV_STATS_DEBUG


	)

243 
	#FTS_INTERNAL_DIAG_PRINT


	)

245 
	#UNIV_DEBUG_DEDICATED


	)

249 
	#UNIV_BTR_DEBUG


	)

250 
	#UNIV_LIGHT_MEM_DEBUG


	)

254 #i‡
deföed
(
COMPILER_HINTS
Ë&& deföed 
__GNUC__
 && \

255 (
	g__GNUC__
 > 4 || __GNUC__ =4 && 
__GNUC_MINOR__
 >= 3)

265 
	#UNIV_COLD
 
	`MY_ATTRIBUTE
((
cﬁd
))

	)

267 
	#UNIV_COLD


	)

270 #ifde‡
UNIV_HOTBACKUP


271 
	#UNIV_INLINE
 
ölöe


	)

273 
	#UNIV_INLINE
 
ölöe


	)

276 #ifde‡
_WIN32


277 #ifde‡
_WIN64


278 
c⁄°ex¥
 
size_t
 
UNIV_WORD_SIZE
 = 8;

280 
c⁄°ex¥
 
size_t
 
	gUNIV_WORD_SIZE
 = 4;

284 
c⁄°ex¥
 
size_t
 
	gUNIV_WORD_SIZE
 = 
SIZEOF_LONG
;

289 
	#UNIV_MEM_ALIGNMENT
 8

	)

297 
	#UNIV_PAGE_SIZE_SHIFT
 
§v_∑ge_size_shi·


	)

300 
	#UNIV_PAGE_SIZE
 ((
ulöt
)
§v_∑ge_size
)

	)

304 
	#UNIV_ZIP_SIZE_SHIFT_MIN
 10

	)

312 
	#UNIV_ZIP_SIZE_SHIFT_MAX
 14

	)

316 
	#UNIV_PAGE_SIZE_SHIFT_MIN
 12

	)

318 
	#UNIV_PAGE_SIZE_SHIFT_MAX
 16

	)

320 
	#UNIV_PAGE_SIZE_SHIFT_DEF
 14

	)

322 
	#UNIV_PAGE_SIZE_SHIFT_ORIG
 14

	)

324 
	#UNIV_PAGE_SSIZE_ORIG
 (
UNIV_PAGE_SIZE_SHIFT_ORIG
 - 9)

	)

327 
	#UNIV_PAGE_SIZE_MIN
 (1 << 
UNIV_PAGE_SIZE_SHIFT_MIN
)

	)

329 
c⁄°ex¥
 
size_t
 
	gUNIV_PAGE_SIZE_MAX
 = (1 << 
UNIV_PAGE_SIZE_SHIFT_MAX
);

331 
	#UNIV_PAGE_SIZE_DEF
 (1 << 
UNIV_PAGE_SIZE_SHIFT_DEF
)

	)

333 
	#UNIV_PAGE_SIZE_ORIG
 (1 << 
UNIV_PAGE_SIZE_SHIFT_ORIG
)

	)

336 
	#UNIV_ZIP_SIZE_MIN
 (1 << 
UNIV_ZIP_SIZE_SHIFT_MIN
)

	)

339 
	#UNIV_ZIP_SIZE_MAX
 (1 << 
UNIV_ZIP_SIZE_SHIFT_MAX
)

	)

345 
	#UNIV_PAGE_SSIZE_MAX
 \

346 
°©ic_ˇ°
<
ulöt
>(
UNIV_PAGE_SIZE_SHIFT
 - 
UNIV_ZIP_SIZE_SHIFT_MIN
 + 1)

	)

349 
	#UNIV_PAGE_SSIZE_MIN
 \

350 
°©ic_ˇ°
<
ulöt
>(
UNIV_PAGE_SIZE_SHIFT_MIN
 - 
UNIV_ZIP_SIZE_SHIFT_MIN
 + 1)

	)

353 
	#UNIV_MAX_PARALLELISM
 32

	)

357 
	#FILENAME_CHARSET_MAXNAMLEN
 5

	)

364 
	#MAX_TABLE_NAME_LEN
 320

	)

368 
	#MAX_DATABASE_NAME_LEN
 
MAX_TABLE_NAME_LEN


	)

375 
	#MAX_FULL_NAME_LEN
 (
MAX_TABLE_NAME_LEN
 + 
MAX_DATABASE_NAME_LEN
 + 14)

	)

379 
	#MAX_COMPRESSION_LEN
 4

	)

387 
	#byã
 

	)

396 #ifde‡
_WIN32


398 
	#UINT32PF
 "%lu"

	)

399 
	#UINT32PFS
 "lu"

	)

400 
	#UINT64PF
 "%Œu"

	)

401 
	#UINT64PFx
 "%016Œx"

	)

402 
	t__öt64
 
	tib_uöt64_t
;

403 
	t__öt32
 
	tib_uöt32_t
;

406 
	#UINT32PF
 "%" 
PRIu32


	)

407 
	#UINT32PFS
 
PRIu32


	)

408 
	#UINT64PF
 "%" 
PRIu64


	)

409 
	#UINT64PFx
 "%016" 
PRIx64


	)

410 
uöt64_t
 
	tib_uöt64_t
;

411 
uöt32_t
 
	tib_uöt32_t
;

414 
	#IB_ID_FMT
 
UINT64PF


	)

416 #ifde‡
_WIN64


417 
	t__öt64
 
	tulöt
;

418 
__öt64
 
	tlöt
;

419 
	#ULINTPFS
 "Œu"

	)

421 
	tulöt
;

422 
	tlöt
;

423 
	#ULINTPFS
 "lu"

	)

426 
	#ULINTPF
 "%" 
ULINTPFS


	)

428 #i‚de‡
_WIN32


429 #i‡
SIZEOF_LONG
 !
SIZEOF_VOIDP


435 
c⁄°ex¥
 
ulöt
 
	gULINT_UNDEFINED
 = -1;

437 
c⁄°ex¥
 
ul⁄g
 
	gULONG_UNDEFINED
 = -1;

440 
c⁄°ex¥
 
uöt64_t
 
	gUINT64_UNDEFINED
 = -1;

443 
c⁄°ex¥
 
uöt32_t
 
	gUINT32_UNDEFINED
 = -1;

446 
	#ULINT32_MASK
 0xFFFFFFFF

	)

449 
	#ULINT_MAX
 ((
ulöt
)(-2))

	)

452 
	#IB_UINT64_MAX
 ((
ib_uöt64_t
)(~0ULL))

	)

455 
ib_uöt64_t
 
	tib_id_t
;

456 
	#IB_ID_MAX
 
IB_UINT64_MAX


	)

459 
uöt32_t
 
	t∑ge_no_t
;

461 
uöt32_t
 
	t•a˚_id_t
;

463 
	#SPACE_ID_PF
 
UINT32PF


	)

464 
	#SPACE_ID_PFS
 
UINT32PFS


	)

465 
	#PAGE_NO_PF
 
UINT32PF


	)

466 
	#PAGE_ID_PF
 "∑gê" 
SPACE_ID_PF
 ":" 
PAGE_NO_PF


	)

470 
	#iboﬁ
 
ulöt


	)

472 #i‚de‡
TRUE


474 
	#TRUE
 1

	)

475 
	#FALSE
 0

	)

479 
	#UNIV_NOTHROW


	)

486 
c⁄°ex¥
 
uöt32_t
 
	gUNIV_SQL_NULL
 = 
UINT32_UNDEFINED
;

489 
c⁄°ex¥
áutÿ
	gUNIV_SQL_ADD_COL_DEFAULT
 = 
UNIV_SQL_NULL
 - 1;

493 
c⁄°ex¥
áutÿ
	gUNIV_NO_INDEX_VALUE
 = 
UNIV_SQL_ADD_COL_DEFAULT
 - 1;

498 c⁄° 
uöt32_t
 
	gUNIV_MULTI_VALUE_ARRAY_MARKER
 = 
UNIV_NO_INDEX_VALUE
 - 1;

505 
	#UNIV_EXTERN_STORAGE_FIELD
 (
UNIV_SQL_NULL
 - 
UNIV_PAGE_SIZE_DEF
)

	)

507 #i‡
deföed
(
__GNUC__
)

509 
	#UNIV_UNUSED
 
	`MY_ATTRIBUTE
((
unu£d
))

	)

511 
	#UNIV_UNUSED


	)

515 #i‡
deföed
(
COMPILER_HINTS
Ë&& deföed(
__GNUC__
)

517 
	#UNIV_EXPECT
(
ex¥
, 
c⁄°™t
Ë
	`__buûtö_ex≥˘
”x¥, c⁄°™t)

	)

519 
	#UNIV_LIKELY_NULL
(
±r
Ë
	`__buûtö_ex≥˘
((
ulöt
Ìå, 0)

	)

522 
	#UNIV_PREFETCH_R
(
addr
Ë
	`__buûtö_¥e„tch
◊ddr, 0, 3)

	)

525 
	#UNIV_PREFETCH_RW
(
addr
Ë
	`__buûtö_¥e„tch
◊ddr, 1, 3)

	)

528 #ñi‡(
deföed
(
__SUNPRO_C
Ë|| deföed(
__SUNPRO_CC
))

530 
	~<sun_¥e„tch.h
>

532 
	#UNIV_EXPECT
(
ex¥
, 
vÆue
Ë”x¥)

	)

533 
	#UNIV_LIKELY_NULL
(
ex¥
Ë”x¥)

	)

535 #i‡
deföed
(
COMPILER_HINTS
)

537 
	#UNIV_PREFETCH_R
(
addr
Ë(()0)

	)

538 
	#UNIV_PREFETCH_RW
(
addr
Ë
	`sun_¥e„tch_wrôe_m™y
◊ddr)

	)

540 
	#UNIV_PREFETCH_R
(
addr
Ë(()0)

	)

541 
	#UNIV_PREFETCH_RW
(
addr
Ë(()0)

	)

544 #ñi‡
deföed
 
__WIN__
 && deföed 
COMPILER_HINTS


545 
	~<xmmöåö.h
>

547 
	#UNIV_EXPECT
(
ex¥
, 
vÆue
Ë”x¥)

	)

548 
	#UNIV_LIKELY_NULL
(
ex¥
Ë”x¥)

	)

551 
	#UNIV_PREFETCH_R
(
addr
Ë
	`_mm_¥e„tch
((*Ôddr, 
_MM_HINT_T0
)

	)

552 
	#UNIV_PREFETCH_RW
(
addr
Ë
	`_mm_¥e„tch
((*Ôddr, 
_MM_HINT_T0
)

	)

555 
	#UNIV_EXPECT
(
ex¥
, 
vÆue
Ë”x¥)

	)

556 
	#UNIV_LIKELY_NULL
(
ex¥
Ë”x¥)

	)

557 
	#UNIV_PREFETCH_R
(
addr
Ë(()0)

	)

558 
	#UNIV_PREFETCH_RW
(
addr
Ë(()0)

	)

562 
	#UNIV_LIKELY
(
c⁄d
Ë
	`UNIV_EXPECT
(c⁄d, 
TRUE
)

	)

564 
	#UNIV_UNLIKELY
(
c⁄d
Ë
	`UNIV_EXPECT
(c⁄d, 
FALSE
)

	)

567 
	#UT_ARR_SIZE
(
a
Ë(◊Ë/ (◊)[0]))

	)

573 #ifde‡
_WIN32


574 
ulöt
 
	tos_thªad_ªt_t
;

575 
	#OS_PATH_SEPARATOR_STR
 "\\"

	)

576 
	#OS_PATH_SEPARATOR
 '\\'

	)

577 
	#OS_PATH_SEPARATOR_ALT
 '/'

	)

579 *
	tos_thªad_ªt_t
;

580 
	#OS_PATH_SEPARATOR_STR
 "/"

	)

581 
	#OS_PATH_SEPARATOR
 '/'

	)

582 
	#OS_PATH_SEPARATOR_ALT
 '\\'

	)

585 
	~<°dio.h
>

587 
	~"db0îr.h
"

588 
	~"sync0ty≥s.h
"

589 
	~"ut0dbg.h
"

590 
	~"ut0l°.h
"

591 
	~"ut0ut.h
"

593 #ifde‡
UNIV_DEBUG_VALGRIND


594 
	~<vÆgröd/memcheck.h
>

596 
	#UNIV_MEM_VALID
(
addr
, 
size
Ë
	`VALGRIND_MAKE_MEM_DEFINED
◊ddr, size)

	)

597 
	#UNIV_MEM_INVALID
(
addr
, 
size
Ë
	`VALGRIND_MAKE_MEM_UNDEFINED
◊ddr, size)

	)

598 
	#UNIV_MEM_FREE
(
addr
, 
size
Ë
	`VALGRIND_MAKE_MEM_NOACCESS
◊ddr, size)

	)

599 
	#UNIV_MEM_ALLOC
(
addr
, 
size
Ë
	`VALGRIND_MAKE_MEM_UNDEFINED
◊ddr, size)

	)

600 
	#UNIV_MEM_DESC
(
addr
, 
size
Ë
	`VALGRIND_CREATE_BLOCK
◊ddr, size, #addr)

	)

601 
	#UNIV_MEM_UNDESC
(
b
Ë
	`VALGRIND_DISCARD
(b)

	)

602 
	#UNIV_MEM_ASSERT_RW_LOW
(
addr
, 
size
, 
should_ab‹t
) \

604 c⁄° *
_p
 = \

605 (c⁄° *)(
ulöt
)
	`VALGRIND_CHECK_MEM_IS_DEFINED
(
addr
, 
size
); \

606 i‡(
	`UNIV_LIKELY_NULL
(
_p
)) { \

607 
	`Ârötf
(
°dîr
, "%s:%d: %p[%u] undeföedáà%ld\n", 
__FILE__
, 
__LINE__
, \

608 (c⁄° *)(
addr
), ()(
size
), \

609 ()(((c⁄° *)
_p
Ë- ((c⁄° *)(
addr
)))); \

610 i‡(
should_ab‹t
) { \

611 
ut_îr‹
; \

614 } 0)

	)

615 
	#UNIV_MEM_ASSERT_RW
(
addr
, 
size
Ë
	`UNIV_MEM_ASSERT_RW_LOW
◊ddr, size, 
Ál£
)

	)

616 
	#UNIV_MEM_ASSERT_RW_ABORT
(
addr
, 
size
) \

617 
	`UNIV_MEM_ASSERT_RW_LOW
(
addr
, 
size
, 
åue
)

	)

618 
	#UNIV_MEM_ASSERT_W
(
addr
, 
size
) \

620 c⁄° *
_p
 = \

621 (c⁄° *)(
ulöt
)
	`VALGRIND_CHECK_MEM_IS_ADDRESSABLE
(
addr
, 
size
); \

622 i‡(
	`UNIV_LIKELY_NULL
(
_p
)) \

623 
	`Ârötf
(
°dîr
, "%s:%d: %p[%u] unwrôabÀáà%ld\n", 
__FILE__
, 
__LINE__
, \

624 (c⁄° *)(
addr
), ()(
size
), \

625 ()(((c⁄° *)
_p
Ë- ((c⁄° *)(
addr
)))); \

626 } 0)

	)

627 
	#UNIV_MEM_TRASH
(
addr
, 
c
, 
size
) \

629 *
p
 = (
addr
); \

630 
	`ut_d
(
	`mem£t
(
p
, 
c
, 
size
)); \

631 
	`UNIV_MEM_INVALID
(
addr
, 
size
); \

632 } 0)

	)

634 
	#UNIV_MEM_VALID
(
addr
, 
size
) \

636 } 0)

	)

637 
	#UNIV_MEM_INVALID
(
addr
, 
size
) \

639 } 0)

	)

640 
	#UNIV_MEM_FREE
(
addr
, 
size
) \

642 } 0)

	)

643 
	#UNIV_MEM_ALLOC
(
addr
, 
size
) \

645 } 0)

	)

646 
	#UNIV_MEM_DESC
(
addr
, 
size
) \

648 } 0)

	)

649 
	#UNIV_MEM_UNDESC
(
b
) \

651 } 0)

	)

652 
	#UNIV_MEM_ASSERT_RW_LOW
(
addr
, 
size
, 
should_ab‹t
) \

654 } 0)

	)

655 
	#UNIV_MEM_ASSERT_RW
(
addr
, 
size
) \

657 } 0)

	)

658 
	#UNIV_MEM_ASSERT_RW_ABORT
(
addr
, 
size
) \

660 } 0)

	)

661 
	#UNIV_MEM_ASSERT_W
(
addr
, 
size
) \

663 } 0)

	)

664 
	#UNIV_MEM_TRASH
(
addr
, 
c
, 
size
) \

666 } 0)

	)

668 
	#UNIV_MEM_ASSERT_AND_FREE
(
addr
, 
size
) \

670 
	`UNIV_MEM_ASSERT_W
(
addr
, 
size
); \

671 
	`UNIV_MEM_FREE
(
addr
, 
size
); \

672 } 0)

	)

673 
	#UNIV_MEM_ASSERT_AND_ALLOC
(
addr
, 
size
) \

675 
	`UNIV_MEM_ASSERT_W
(
addr
, 
size
); \

676 
	`UNIV_MEM_ALLOC
(
addr
, 
size
); \

677 } 0)

	)

679 
ul⁄g
 
§v_∑ge_size_shi·
;

680 
ul⁄g
 
§v_∑ge_size
;

682 c⁄° 
size_t
 
	gUNIV_SECTOR_SIZE
 = 512;

686 
	#SPDIMS
 2

	)

689 
	#INNODB_DD_TABLE
(
«me
, 
n_ödexes
) \

690 { 
«me
, 
n_ödexes
 }

	)

694 
	gãm∂©e
 <
ty≥«me
 
	gT
>

695 
	$ˇŒ_de°ru˘‹
(
T
 *
p
) {

696 
p
->~
	`T
();

697 
	}
}

699 
	gãm∂©e
 <
ty≥«me
 
	gT
>

700 
c⁄°ex¥
áutÿ
to_öt
(
T
 
v
Ë-> 
ty≥«me
 
	g°d
::
undîlyög_ty≥
<T>::
ty≥
 {

701  (
°©ic_ˇ°
<
ty≥«me
 
°d
::
undîlyög_ty≥
<
T
>::
ty≥
>(
v
));

707 
c⁄°ex¥
 
ib_time_m⁄Ÿ⁄ic_t
 
	gPRINT_INTERVAL_SECS
 = 10;

709 #i‡
deföed
(
UNIV_LIBRARY
Ë&& !deföed(
UNIV_NO_ERR_MSGS
)

713 
	#UNIV_NO_ERR_MSGS


	)

	@usr0sess.h

33 #i‚de‡
u§0£ss_h


34 
	#u§0£ss_h


	)

36 
	~"d©a0d©a.h
"

37 
	~"que0ty≥s.h
"

38 
	~"ªm0ªc.h
"

39 
	~"§v0§v.h
"

40 
	~"åx0ty≥s.h
"

41 
	~"univ.i
"

42 
	~"u§0ty≥s.h
"

43 
	~"ut0byã.h
"

47 
£ss_t
 *
£ss_›í
();

49 
£ss_˛o£
(
£ss_t
 *
£ss
);

53 
	s£ss_t
 {

54 
ulöt
 
	m°©e
;

55 
åx_t
 *
	måx
;

63 
	#SESS_ACTIVE
 1

	)

64 
	#SESS_ERROR
 \

65 2

	)

	@usr0types.h

33 #i‚de‡
u§0ty≥s_h


34 
	#u§0ty≥s_h


	)

36 
	g£ss_t
;

	@ut0bitset.h

33 #i‚de‡
ut0bô£t_h


34 
	#ut0bô£t_h


	)

38 ˛as†
	cBô£t
 {

39 
	mpublic
:

41 
	$Bô£t
(Ë: 
	`m_bô£t
(
nuŒ±r
), 
	$m_size
(0) {}

44 ~
	$Bô£t
(Ë{
	}
}

49 
	$öô
(
byã
 *
bô£t
, 
size_t
 
size
) {

50 
m_bô£t
 = 
bô£t
;

51 
m_size
 = 
size
;

52 
m_ˇ∑côy
 = 
size
;

53 
	}
}

58 
	$c›y
(c⁄° 
byã
 *
bô£t
, 
size_t
 
size
) {

59 
	`ut_ad
(
m_ˇ∑côy
 >
size
);

60 
	`mem˝y
(
m_bô£t
, 
bô£t
, 
size
);

61 
m_size
 = 
size
;

62 
	}
}

67 
	$£t
(
size_t
 
pos
, 
boﬁ
 
v
 = 
åue
) {

68 
	`ut_ad
(
pos
 / 8 < 
m_size
);

69 
m_bô£t
[
pos
 / 8] &= ~(0x1 << (pos & 0x7));

70 
m_bô£t
[
pos
 / 8] |(
°©ic_ˇ°
<
uöt
>(
v
) << (pos & 0x7));

71 
	}
}

74 
	$£t
(Ë{ 
	`mem£t
(
m_bô£t
, 0xFF, 
m_size
); 
	}
}

77 
	$ª£t
(Ë{ 
	`mem£t
(
m_bô£t
, 0, 
m_size
); 
	}
}

82 
boﬁ
 
	$ã°
(
size_t
 
pos
) const {

83 
	`ut_ad
(
pos
 / 8 < 
m_size
);

84  ((
m_bô£t
[
pos
 / 8] >> (pos & 0x7)) & 0x1);

85 
	}
}

89 
size_t
 
	$size
(Ëc⁄° {  (
m_size
); 
	}
}

93 
size_t
 
	$ˇ∑côy
(Ëc⁄° {  (
m_ˇ∑côy
); 
	}
}

97 c⁄° 
byã
 *
	$bô£t
(Ëc⁄° {  (
m_bô£t
); 
	}
}

104 
	gBô£t
 &
	g›î©‹
=(c⁄° 
Bô£t
 &
‰om
) {

105 
ut_ad
(
m_ˇ∑côy
 >
‰om
.
m_size
);

106 
mem˝y
(
m_bô£t
, 
‰om
.m_bô£t, from.
m_size
);

107 
	gm_size
 = 
‰om
.
m_size
;

109  (*
	gthis
);

112 
	g¥iv©e
:

114 
byã
 *
m_bô£t
;

117 
size_t
 
	gm_size
;

121 
size_t
 
	gm_ˇ∑côy
;

	@ut0bool_scope_guard.h

31 #i‚de‡
ut0boﬁ_sc›e_gu¨d_h


32 
	#ut0boﬁ_sc›e_gu¨d_h


	)

34 
«me•a˚
 
	gut
 {

38 ˛as†
	cboﬁ_sc›e_gu¨d_t
 {

41 
boﬁ
 *
	gm_a˘ive
;

43 
	gpublic
:

47 
ex∂icô
 
boﬁ_sc›e_gu¨d_t
(
boﬁ
 &
a˘ive
Ë: 
m_a˘ive
(&active) {

48 *
m_a˘ive
 = 
åue
;

50 ~
boﬁ_sc›e_gu¨d_t
() {

51 i‡(
	gm_a˘ive
 !
nuŒ±r
) {

52 *
m_a˘ive
 = 
Ál£
;

53 
	gm_a˘ive
 = 
nuŒ±r
;

56 
boﬁ_sc›e_gu¨d_t
(boﬁ_sc›e_gu¨d_àc⁄° &Ë
dñëe
;

57 
	gboﬁ_sc›e_gu¨d_t
 &
	g›î©‹
=(
boﬁ_sc›e_gu¨d_t
 c⁄° &Ë
dñëe
;

58 
	gboﬁ_sc›e_gu¨d_t
 &
	g›î©‹
=(
boﬁ_sc›e_gu¨d_t
 &&Ë
dñëe
;

59 
boﬁ_sc›e_gu¨d_t
(boﬁ_sc›e_gu¨d_à&&
ﬁd
) {

60 
	gm_a˘ive
 = 
ﬁd
.
m_a˘ive
;

61 
	gﬁd
.
	gm_a˘ive
 = 
nuŒ±r
;

	@ut0byte.h

33 #i‚de‡
ut0byã_h


34 
	#ut0byã_h


	)

36 
	~"univ.i
"

37 
	~"ut0ut.h
"

43 
UNIV_INLINE


44 
ib_uöt64_t
 
ut_uŒ_¸óã
(
ulöt
 
high
, ulöà
low
);

50 
UNIV_INLINE


51 
ib_uöt64_t
 
ut_uöt64_Æign_down
(ib_uöt64_à
n
, 
ulöt
 
Æign_no
);

57 
UNIV_INLINE


58 
ib_uöt64_t
 
ut_uöt64_Æign_up
(ib_uöt64_à
n
, 
ulöt
 
Æign_no
);

64 
UNIV_INLINE


65 *
ut_Æign
(c⁄° *
±r
, 
ulöt
 
Æign_no
);

71 
UNIV_INLINE


72 *
ut_Æign_down
(c⁄° *
±r
, 
ulöt
 
Æign_no
);

79 
UNIV_INLINE


80 
ulöt
 
ut_Æign_off£t
(c⁄° *
±r
, ulöà
Æign_no
);

86 
UNIV_INLINE


87 
iboﬁ
 
ut_bô_gë_¡h
(
ulöt
 
a
, ulöà
n
);

94 
UNIV_INLINE


95 
ulöt
 
ut_bô_£t_¡h
(ulöà
a
, ulöà
n
, 
iboﬁ
 
vÆ
);

97 
	~"ut0byã.ic
"

	@ut0byte.ic

35 
UNIV_INLINE


36 
ib_uöt64_t
 
	$ut_uŒ_¸óã
(
ulöt
 
high
,

37 
ulöt
 
low
)

39 
	`ut_ad
(
high
 <
ULINT32_MASK
);

40 
	`ut_ad
(
low
 <
ULINT32_MASK
);

41  (((
ib_uöt64_t
)
high
Ë<< 32 | 
low
);

42 
	}
}

46 
UNIV_INLINE


47 
ib_uöt64_t
 
	$ut_uöt64_Æign_down
(
ib_uöt64_t
 
n
,

48 
ulöt
 
Æign_no
)

51 
	`ut_ad
(
Æign_no
 > 0);

52 
	`ut_ad
(
	`ut_is_2pow
(
Æign_no
));

54  (
n
 & ~((
ib_uöt64_t
)
Æign_no
 - 1));

55 
	}
}

59 
UNIV_INLINE


60 
ib_uöt64_t
 
	$ut_uöt64_Æign_up
(
ib_uöt64_t
 
n
,

61 
ulöt
 
Æign_no
)

64 
ib_uöt64_t
 
Æign_1
 = (ib_uöt64_t)
Æign_no
 - 1;

66 
	`ut_ad
(
Æign_no
 > 0);

67 
	`ut_ad
(
	`ut_is_2pow
(
Æign_no
));

69  ((
n
 + 
Æign_1
) & ~align_1);

70 
	}
}

74 
UNIV_INLINE


75 *
	$ut_Æign
(c⁄° *
±r
,

76 
ulöt
 
Æign_no
)

78 
	`ut_ad
(
Æign_no
 > 0);

79 
	`ut_ad
(((
Æign_no
 - 1) &álign_no) == 0);

80 
	`ut_ad
(
±r
);

82 
	`ut_ad
((*Ë=(
ulöt
));

84  ((*)((((
ulöt
)
±r
Ë+ 
Æign_no
 - 1) & ~(align_no - 1)));

85 
	}
}

90 
UNIV_INLINE


91 *
	$ut_Æign_down
(c⁄° *
±r
,

92 
ulöt
 
Æign_no
)

94 
	`ut_ad
(
Æign_no
 > 0);

95 
	`ut_ad
(((
Æign_no
 - 1) &álign_no) == 0);

96 
	`ut_ad
(
±r
);

98 
	`ut_ad
((*Ë=(
ulöt
));

100  ((*)((((
ulöt
)
±r
)Ë& ~(
Æign_no
 - 1)));

101 
	}
}

106 
UNIV_INLINE


107 
ulöt
 
	$ut_Æign_off£t
(c⁄° *
±r
,

108 
ulöt
 
Æign_no
)

110 
	`ut_ad
(
Æign_no
 > 0);

111 
	`ut_ad
(((
Æign_no
 - 1) &álign_no) == 0);

112 
	`ut_ad
(
±r
);

114 
	`ut_ad
((*Ë=(
ulöt
));

116  (((
ulöt
)
±r
Ë& (
Æign_no
 - 1));

117 
	}
}

121 
UNIV_INLINE


122 
iboﬁ
 
	$ut_bô_gë_¡h
(
ulöt
 
a
,

123 
ulöt
 
n
)

125 
	`ut_ad
(
n
 < 8 * (
ulöt
));

126 #i‡
TRUE
 != 1

129  (1 & (
a
 >> 
n
));

130 
	}
}

134 
UNIV_INLINE


135 
ulöt
 
	$ut_bô_£t_¡h
(
ulöt
 
a
,

136 
ulöt
 
n
,

137 
iboﬁ
 
vÆ
)

139 
	`ut_ad
(
n
 < 8 * (
ulöt
));

140 #i‡
TRUE
 != 1

143 i‡(
vÆ
) {

144  (((
ulöt
)1 << 
n
Ë| 
a
);

146  (~((
ulöt
)1 << 
n
Ë& 
a
);

148 
	}
}

	@ut0class_life_cycle.h

30 #i‚de‡
ut0˛ass_li„_cy˛e_h


31 
	#ut0˛ass_li„_cy˛e_h


	)

33 
«me•a˚
 
	gut
 {

40 ˛as†
	cN⁄_c›yabÀ
 {

41 
	gpublic
:

42 
N⁄_c›yabÀ
(c⁄° N⁄_c›yabÀ &Ë
dñëe
;

43 
	gN⁄_c›yabÀ
 &
	g›î©‹
=(c⁄° 
N⁄_c›yabÀ
 &Ë
dñëe
;

45 
	g¥Ÿe˘ed
:

46 
N⁄_c›yabÀ
() = ;

47 ~
N⁄_c›yabÀ
() = ;

	@ut0counter.h

34 #i‚de‡
ut0cou¡î_h


35 
	#ut0cou¡î_h


	)

37 
	~<my_rdtsc.h
>

39 
	~"univ.i
"

41 
	~"os0thªad.h
"

42 
	~"ut0˝u_ˇche.h
"

43 
	~"ut0dbg.h
"

45 
	~<¨øy
>

46 
	~<©omic
>

47 
	~<fun˘i⁄Æ
>

50 
	#IB_N_SLOTS
 64

	)

53 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
, 
	gN
>

54 
	sgíîic_ödexî_t
 {

58 
size_t
 
off£t
(size_à
ödex
Ë
	mUNIV_NOTHROW
 {

59  (((
	mödex
 % 
	mN
Ë+ 1Ë* (
	mut
::
INNODB_CACHE_LINE_SIZE
 / (
Ty≥
)));

65 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
 = 
ulöt
, 
	gN
 = 1>

66 
cou¡î_ödexî_t
 : 
public
 
gíîic_ödexî_t
<
Ty≥
, 
	gN
> {

69 íum { 
	gÁ°
 = 1 };

72 
size_t
 
gë_∫d_ödex
(Ë
	gUNIV_NOTHROW
 {

73 
size_t
 
	gc
 = 
°©ic_ˇ°
<size_t>(
my_timî_cy˛es
());

75 i‡(
	gc
 != 0) {

76  (
c
);

80 #i‡!
deföed
(
_WIN32
)

81  (
size_t
(
os_thªad_gë_cuº_id
()));

83 
LARGE_INTEGER
 
	g˙t
;

84 
QuîyPîf‹m™˚Cou¡î
(&
˙t
);

86  (
	g°©ic_ˇ°
<
	gsize_t
>(
	g˙t
.
	gQuadP¨t
));

93 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
 = 
ulöt
, 
	gN
 = 1>

94 
	ssögÀ_ödexî_t
 {

97 íum { 
Á°
 = 0 };

100 
size_t
 
off£t
(size_à
ödex
Ë
	mUNIV_NOTHROW
 {

101 
ut_ad
(
N
 == 1);

102  ((
	mut
::
INNODB_CACHE_LINE_SIZE
 / (
Ty≥
)));

106 
size_t
 
gë_∫d_ödex
(Ë
	mUNIV_NOTHROW
 {

107 
ut_ad
(
N
 == 1);

112 
	#deÁu…_ödexî_t
 
cou¡î_ödexî_t


	)

118 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
, 
	gN
 = 
IB_N_SLOTS
,

119 
	gãm∂©e
 <
	gty≥«me
, > 
˛ass
 
	gIndexî
 = 
deÁu…_ödexî_t
>

120 ˛as†
	cib_cou¡î_t
 {

121 
public
:

122 
	$ib_cou¡î_t
(Ë{ 
	`mem£t
(
m_cou¡î
, 0x0, (m_counter)); }

124 ~
	$ib_cou¡î_t
(Ë{ 
	`ut_ad
(
	`vÆid©e
()); 
	}
}

126 
boﬁ
 
	$is_Á°
(Ë{  (
Indexî
<
Ty≥
, 
N
>::
Á°
); 
	}
}

128 
boﬁ
 
	$vÆid©e
(Ë
UNIV_NOTHROW
 {

129 #ifde‡
UNIV_DEBUG


130 
size_t
 
n
 = (
ut
::
INNODB_CACHE_LINE_SIZE
 / (
Ty≥
));

133 
size_t
 
i
 = 0; i < 
	`UT_ARR_SIZE
(
m_cou¡î
); i +
n
) {

134 
size_t
 
j
 = 1; j < 
n
 - 1; ++j) {

135 
	`ut_ad
(
m_cou¡î
[
i
 + 
j
] == 0);

139  (
åue
);

140 
	}
}

143 
	$öc
(Ë
UNIV_NOTHROW
 { 
	`add
(1); 
	}
}

147 
	$add
(
Ty≥
 
n
Ë
UNIV_NOTHROW
 {

148 
size_t
 
i
 = 
m_pﬁicy
.
	`off£t
(m_pﬁicy.
	`gë_∫d_ödex
());

150 
	`ut_ad
(
i
 < 
	`UT_ARR_SIZE
(
m_cou¡î
));

152 
m_cou¡î
[
i
] +
n
;

153 
	}
}

159 
	$add
(
size_t
 
ödex
, 
Ty≥
 
n
Ë
UNIV_NOTHROW
 {

160 
size_t
 
i
 = 
m_pﬁicy
.
	`off£t
(
ödex
);

162 
	`ut_ad
(
i
 < 
	`UT_ARR_SIZE
(
m_cou¡î
));

164 
m_cou¡î
[
i
] +
n
;

165 
	}
}

168 
	$dec
(Ë
UNIV_NOTHROW
 { 
	`sub
(1); 
	}
}

172 
	$sub
(
Ty≥
 
n
Ë
UNIV_NOTHROW
 {

173 
size_t
 
i
 = 
m_pﬁicy
.
	`off£t
(m_pﬁicy.
	`gë_∫d_ödex
());

175 
	`ut_ad
(
i
 < 
	`UT_ARR_SIZE
(
m_cou¡î
));

177 
m_cou¡î
[
i
] -
n
;

178 
	}
}

184 
	$sub
(
size_t
 
ödex
, 
Ty≥
 
n
Ë
UNIV_NOTHROW
 {

185 
size_t
 
i
 = 
m_pﬁicy
.
	`off£t
(
ödex
);

187 
	`ut_ad
(
i
 < 
	`UT_ARR_SIZE
(
m_cou¡î
));

189 
m_cou¡î
[
i
] -
n
;

190 
	}
}

193 
›î©‹
 
	$Ty≥
(Ëc⁄° 
UNIV_NOTHROW
 {

194 
Ty≥
 
tŸÆ
 = 0;

196 
size_t
 
i
 = 0; i < 
N
; ++i) {

197 
tŸÆ
 +
m_cou¡î
[
m_pﬁicy
.
	`off£t
(
i
)];

200  (
tŸÆ
);

201 
	}
}

203 
Ty≥
 
	g›î©‹
[](
size_t
 
	gödex
Ëc⁄° 
	gUNIV_NOTHROW
 {

204 
size_t
 
	gi
 = 
m_pﬁicy
.
off£t
(
ödex
);

206 
ut_ad
(
i
 < 
UT_ARR_SIZE
(
m_cou¡î
));

208  (
	gm_cou¡î
[
i
]);

211 
	g¥iv©e
:

213 
Indexî
<
Ty≥
, 
	gN
> 
	gm_pﬁicy
;

216 
Ty≥
 
	gm_cou¡î
[(
N
 + 1Ë* (
ut
::
INNODB_CACHE_LINE_SIZE
 / (Type))];

220 
«me•a˚
 
	gCou¡î
 {

222 
usög
 
	gTy≥
 = 
uöt64_t
;

224 
usög
 
	gN
 = 
°d
::
©omic
<
Ty≥
>;

226 
°©ic_as£π
(
ut
::
INNODB_CACHE_LINE_SIZE
 >(
N
),

229 
usög
 
	gPad
 = 
byã
[
ut
::
INNODB_CACHE_LINE_SIZE
 - (
N
)];

232 
	sSh¨d
 {

234 
Pad
 
	gm_∑d
;

237 
N
 
	gm_n
{};

240 
usög
 
	gFun˘i⁄
 = 
°d
::
fun˘i⁄
<(c⁄° 
Ty≥
)>;

243 
c⁄°ex¥
áutÿ
	gMem‹y_‹dî
 = 
°d
::
mem‹y_‹dî_ªœxed
;

245 
	gãm∂©e
 <
size_t
 
	gCOUNT
 = 128>

246 
	sSh¨ds
 {

248 
°d
::
¨øy
<
Sh¨d
, 
COUNT
> 
m_¨r
{};

251 
	g°d
::
mem‹y_‹dî
 
m_mem‹y_‹dî
{
Mem‹y_‹dî
};

255 
£t_‹dî
(
°d
::
mem‹y_‹dî
 memory_order) {

256 
m_mem‹y_‹dî
 = 
mem‹y_‹dî
;

265 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

266 
ölöe
 
Ty≥
 
add
(
Sh¨ds
<
COUNT
> &
sh¨ds
, 
size_t
 
id
, size_à
n
) {

267 autÿ&
	gsh¨d_¨r
 = 
sh¨ds
.
m_¨r
;

268 autÿ
	g‹dî
 = 
sh¨ds
.
m_mem‹y_‹dî
;

270  (
	gsh¨d_¨r
[
id
 % 
sh¨d_¨r
.
size
()].
	gm_n
.
„tch_add
(
n
, 
‹dî
));

278 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

279 
ölöe
 
Ty≥
 
sub
(
Sh¨ds
<
COUNT
> &
sh¨ds
, 
size_t
 
id
, size_à
n
) {

280 
ut_ad
(
gë
(
sh¨ds
, 
id
Ë>
n
);

282 autÿ&
	gsh¨d_¨r
 = 
sh¨ds
.
m_¨r
;

283 autÿ
	g‹dî
 = 
sh¨ds
.
m_mem‹y_‹dî
;

284  (
	gsh¨d_¨r
[
id
 % 
sh¨d_¨r
.
size
()].
	gm_n
.
„tch_sub
(
n
, 
‹dî
));

291 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

292 
ölöe
 
Ty≥
 
öc
(
Sh¨ds
<
COUNT
> &
sh¨ds
, 
size_t
 
id
) {

293  (
add
(
sh¨ds
, 
id
, 1));

300 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

301 
ölöe
 
Ty≥
 
dec
(
Sh¨ds
<
COUNT
> &
sh¨ds
, 
size_t
 
id
) {

302  (
sub
(
sh¨ds
, 
id
, 1));

309 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

310 
ölöe
 
Ty≥
 
gë
(c⁄° 
Sh¨ds
<
COUNT
> &
sh¨ds
, 
size_t
 
id
Ë
	gn€x˚±
 {

311 autÿ&
	gsh¨d_¨r
 = 
sh¨ds
.
m_¨r
;

312 autÿ
	g‹dî
 = 
sh¨ds
.
m_mem‹y_‹dî
;

314  (
	gsh¨d_¨r
[
id
 % 
sh¨d_¨r
.
size
()].
	gm_n
.
lﬂd
(
‹dî
));

321 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

322 
ölöe
 
f‹_óch
(c⁄° 
Sh¨ds
<
COUNT
> &
sh¨ds
, 
Fun˘i⁄
 &&
f
Ë
	gn€x˚±
 {

323 c⁄°áutÿ&
	gsh¨d
 : 
sh¨ds
.
m_¨r
) {

324 
f
(
sh¨d
.
m_n
);

331 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

332 
ölöe
 
Ty≥
 
tŸÆ
(c⁄° 
Sh¨ds
<
COUNT
> &
sh¨ds
Ë
	gn€x˚±
 {

333 
Ty≥
 
	gn
 = 0;

335 
f‹_óch
(
sh¨ds
, [&](c⁄° 
Ty≥
 
cou¡
Ë{ 
n
 += count; });

337  (
	gn
);

342 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

343 
ölöe
 
˛ór
(
Sh¨ds
<
COUNT
> &
sh¨ds
Ë
	gn€x˚±
 {

344 autÿ&
	gsh¨d
 : 
sh¨ds
.
m_¨r
) {

345 
sh¨d
.
m_n
.
°‹e
(0, 
sh¨ds
.
m_mem‹y_‹dî
);

352 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

353 
ölöe
 
c›y
(
Sh¨ds
<
COUNT
> &
d°
, c⁄° Sh¨ds<COUNT> &
§c
Ë
	gn€x˚±
 {

354 
size_t
 
	gi
{0};

355 
f‹_óch
(
§c
, [&](c⁄° 
Ty≥
 
cou¡
) {

356 
d°
.
m_¨r
[
i
++].
m_n
.
°‹e
(
cou¡
, d°.
m_mem‹y_‹dî
);

363 
	gãm∂©e
 <
size_t
 
	gCOUNT
>

364 
ölöe
 
add
(
Sh¨ds
<
COUNT
> &
d°
, c⁄° Sh¨ds<COUNT> &
§c
Ë
	gn€x˚±
 {

365 
size_t
 
	gi
{0};

366 
f‹_óch
(
§c
, [&](c⁄° 
Ty≥
 
cou¡
) {

367 
d°
.
m_¨r
[
i
++].
m_n
.
„tch_add
(
cou¡
, d°.
m_mem‹y_‹dî
);

	@ut0cpu_cache.h

30 #i‚de‡
ut0˝u_ˇche_h


31 
	#ut0˝u_ˇche_h


	)

33 
	~"ut0ut.h
"

34 
«me•a˚
 
	gut
 {

37 #ifde‡
__powîpc__


38 
c⁄°ex¥
 
size_t
 
	gINNODB_CACHE_LINE_SIZE
 = 128;

40 
c⁄°ex¥
 
size_t
 
	gINNODB_CACHE_LINE_SIZE
 = 64;

50 
	gãm∂©e
 <
ty≥«me
 
	gT
>

51 
	gCachñöe_∑dded
 : 
public
 
T
 {

52 
∑d
[
INNODB_CACHE_LINE_SIZE
];

	@ut0crc32.h

33 #i‚de‡
ut0¸c32_h


34 
	#ut0¸c32_h


	)

36 
	~"univ.i
"

40 
ut_¸c32_öô
();

47 
	$uöt32_t
 (*
	tut_¸c32_func_t
)(c⁄° 
	tbyã
 *
	t±r
, 
	tulöt
 
	tÀn
);

50 
ut_¸c32_func_t
 
ut_¸c32
;

54 
ut_¸c32_func_t
 
ut_¸c32_Àgacy_big_ídün
;

58 
ut_¸c32_func_t
 
ut_¸c32_byã_by_byã
;

62 
boﬁ
 
ut_¸c32_˝u_íabÀd
;

	@ut0dbg.h

33 #i‚de‡
ut0dbg_h


34 
	#ut0dbg_h


	)

38 
	~<fun˘i⁄Æ
>

39 
	~"os0thªad.h
"

43 
ut_£t_as£π_ˇŒback
(
°d
::
fun˘i⁄
<()> &
ˇŒback
);

49 [[
n‹ëu∫
]] 
ut_dbg_as£πi⁄_Áûed
(c⁄° *
ex¥
, c⁄° *
fûe
,

50 
ulöt
 
löe
);

54 
	#ut_a
(
EXPR
) \

56 i‡(
	`UNIV_UNLIKELY
(!(
ulöt
)(
EXPR
))) { \

57 
	`ut_dbg_as£πi⁄_Áûed
(#EXPR, 
__FILE__
, (
ulöt
)
__LINE__
); \

59 } 0)

	)

62 
	#ut_îr‹
 
	`ut_dbg_as£πi⁄_Áûed
(0, 
__FILE__
, (
ulöt
)
__LINE__
)

	)

64 #ifde‡
UNIV_DEBUG


66 
	#ut_ad
(
EXPR
Ë
	`ut_a
(EXPR)

	)

68 
	#ut_d
(
EXPR
Ë
	)
EXPR

70 
	#ut_o
(
EXPR
)

	)

73 
	#ut_ad
(
EXPR
)

	)

75 
	#ut_d
(
EXPR
)

	)

77 
	#ut_o
(
EXPR
Ë
	)
EXPR

81 #ifde‡
UNIV_DEBUG


82 
	#DBUG_INJECT_CRASH
(
¥efix
, 
cou¡
) \

84 
buf
[64]; \

85 
	`¢¥ötf
(
buf
,  buf, 
¥efix
 "_%u", 
cou¡
); \

86 
	`DBUG_EXECUTE_IF
(
buf
, 
	`DBUG_SUICIDE
();); \

87 } 0)

	)

89 
	#DBUG_INJECT_CRASH_WITH_LOG_FLUSH
(
¥efix
, 
cou¡
) \

91 
buf
[64]; \

92 
	`¢¥ötf
(
buf
,  buf, 
¥efix
 "_%u", 
cou¡
); \

93 
	`DBUG_EXECUTE_IF
(
buf
, 
	`log_buf„r_Êush_to_disk
(); 
	`DBUG_SUICIDE
();); \

94 } 0)

	)

96 
	#DBUG_INJECT_CRASH
(
¥efix
, 
cou¡
)

	)

97 
	#DBUG_INJECT_CRASH_WITH_LOG_FLUSH
(
¥efix
, 
cou¡
)

	)

102 
	#UT_NOT_USED
(
A
ËA = 
	)
A

104 #i‡
deföed
(
HAVE_SYS_TIME_H
Ë&& deföed(
HAVE_SYS_RESOURCE_H
)

106 
	#HAVE_UT_CHRONO_T


	)

108 
	~<sys/ªsour˚.h
>

109 
	~<sys/time.h
>

110 
	~<sys/ty≥s.h
>

118 ˛as†
	cut_chr⁄o_t
 {

119 
	mpublic
:

122 
	$ut_chr⁄o_t
(c⁄° *
«me
Ë: 
	`m_«me
“ame), 
	$m_show_‰om_de°ru˘‹
(
åue
) {

123 
	`ª£t
();

127 
	$ª£t
() {

128 
	`gëtimeofday
(&
m_tv
, 
nuŒ±r
);

130 
	`gërußge
(
RUSAGE_SELF
, &
m_ru
);

131 
	}
}

134 
	$show
() {

135 
rußge
 
ru_now
;

136 
timevÆ
 
tv_now
;

137 
timevÆ
 
tv_diff
;

139 
	`gërußge
(
RUSAGE_SELF
, &
ru_now
);

141 
	`gëtimeofday
(&
tv_now
, 
nuŒ±r
);

143 #i‚de‡
timîsub


144 
	#timîsub
(
a
, 
b
, 
r
) \

146 (
r
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

147 (
r
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

148 i‡((
r
)->
tv_u£c
 < 0) { \

149 (
r
)->
tv_£c
--; \

150 (
r
)->
tv_u£c
 += 1000000; \

152 } 0)

	)

155 
	#CHRONO_PRINT
(
ty≥
, 
tvp
) \

156 
	`Ârötf
(
°dîr
, "%s: %s% 5ld.%06ld sec\n", 
m_«me
, 
ty≥
, \

157 
°©ic_ˇ°
<>((
tvp
)->
tv_£c
), sètic_ˇ°<>(—vp)->
tv_u£c
))

	)

159 
	`timîsub
(&
tv_now
, &
m_tv
, &
tv_diff
);

160 
	`CHRONO_PRINT
("ªÆ", &
tv_diff
);

162 
	`timîsub
(&
ru_now
.
ru_utime
, &
m_ru
.ru_utime, &
tv_diff
);

163 
	`CHRONO_PRINT
("u£r", &
tv_diff
);

165 
	`timîsub
(&
ru_now
.
ru_°ime
, &
m_ru
.ru_°ime, &
tv_diff
);

166 
	`CHRONO_PRINT
("sy†", &
tv_diff
);

167 
	}
}

170 
	$íd
(Ë{ 
m_show_‰om_de°ru˘‹
 = 
Ál£
; 
	}
}

173 ~
	$ut_chr⁄o_t
() {

174 i‡(
m_show_‰om_de°ru˘‹
) {

175 
	`show
();

177 
	}
}

179 
	g¥iv©e
:

181 c⁄° *
m_«me
;

184 
boﬁ
 
	gm_show_‰om_de°ru˘‹
;

187 
rußge
 
	gm_ru
;

190 
timevÆ
 
	gm_tv
;

	@ut0link_buf.h

44 #i‚de‡
ut0lök_buf_h


45 
	#ut0lök_buf_h


	)

47 
	~<©omic
>

48 
	~<c°döt
>

50 
	~"ut0cou¡î.h
"

51 
	~"ut0dbg.h
"

52 
	~"ut0√w.h
"

53 
	~"ut0ut.h
"

76 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
 = 
uöt64_t
>

77 ˛as†
	cLök_buf
 {

78 
public
:

82 
Posôi⁄
 
	tDi°™˚
;

88 
ex∂icô
 
Lök_buf
(
size_t
 
ˇ∑côy
);

90 
Lök_buf
();

92 
Lök_buf
(Lök_bu‡&&
rhs
);

94 
Lök_buf
(c⁄° Lök_bu‡&
rhs
Ë
dñëe
;

96 
	mLök_buf
 &
	m›î©‹
=(
Lök_buf
 &&
rhs
);

98 
	mLök_buf
 &
	m›î©‹
=(c⁄° 
Lök_buf
 &
rhs
Ë
dñëe
;

101 ~
Lök_buf
();

109 
add_lök
(
Posôi⁄
 
‰om
, Posôi⁄ 
to
);

118 
add_lök_adv™˚_èû
(
Posôi⁄
 
‰om
, Posôi⁄ 
to
);

131 
	mãm∂©e
 <
ty≥«me
 
	mSt›_c⁄dôi⁄
>

132 
boﬁ
 
adv™˚_èû_u¡û
(
St›_c⁄dôi⁄
 
°›_c⁄dôi⁄
,

133 
uöt32_t
 
max_ªåy
 = 1);

141 
boﬁ
 
adv™˚_èû
();

144 
size_t
 
	$ˇ∑côy
() const;

147 
Posôi⁄
 
	$èû
() const;

156 
boﬁ
 
	`has_•a˚
(
Posôi⁄
 
posôi⁄
);

160 
	`vÆid©e_no_löks
(
Posôi⁄
 
begö
, Posôi⁄ 
íd
);

163 
	`vÆid©e_no_löks
();

165 
¥iv©e
:

172 
size_t
 
	$¶Ÿ_ödex
(
Posôi⁄
 
posôi⁄
) const;

181 
boﬁ
 
	`√xt_posôi⁄
(
Posôi⁄
 
posôi⁄
, Posôi⁄ &
√xt
);

184 
	`‰ì
();

187 
size_t
 
m_ˇ∑côy
;

190 
°d
::
©omic
<
Di°™˚
> *
m_löks
;

193 
	$Æig«s
(
ut
::
INNODB_CACHE_LINE_SIZE
Ë
°d
::
©omic
<
Posôi⁄
> 
m_èû
;

196 
ãm∂©e
 <
ty≥«me
 
Posôi⁄
>

197 
Lök_buf
<
Posôi⁄
>::
	$Lök_buf
(
size_t
 
ˇ∑côy
)

198 : 
	`m_ˇ∑côy
(
ˇ∑côy
), 
	$m_èû
(0) {

199 i‡(
ˇ∑côy
 == 0) {

200 
m_löks
 = 
nuŒ±r
;

204 
	`ut_a
((
ˇ∑côy
 & (capacity - 1)) == 0);

206 
m_löks
 = 
	`UT_NEW_ARRAY_NOKEY
(
°d
::
©omic
<
Di°™˚
>, 
ˇ∑côy
);

208 
size_t
 
i
 = 0; i < 
ˇ∑côy
; ++i) {

209 
m_löks
[
i
].
	`°‹e
(0);

211 
	}
}

213 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

214 
	gLök_buf
<
	gPosôi⁄
>::
	$Lök_buf
(Ë: 
	$Lök_buf
(0Ë{
	}
}

216 
ãm∂©e
 <
ty≥«me
 
Posôi⁄
>

217 
Lök_buf
<
Posôi⁄
>::
	$Lök_buf
(
Lök_buf
 &&
rhs
)

218 : 
	`m_ˇ∑côy
(
rhs
.
m_ˇ∑côy
), 
	`m_èû
‘hs.
m_èû
.
	$lﬂd
()) {

219 
m_löks
 = 
rhs
.m_links;

220 
rhs
.
m_löks
 = 
nuŒ±r
;

221 
	}
}

223 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

224 
	gLök_buf
<
	gPosôi⁄
> &Lök_buf<Posôi⁄>::
›î©‹
=(
Lök_buf
 &&
rhs
) {

225 
‰ì
();

227 
	gm_ˇ∑côy
 = 
rhs
.
m_ˇ∑côy
;

229 
	gm_èû
.
°‹e
(
rhs
.
m_èû
.
lﬂd
());

231 
	gm_löks
 = 
rhs
.
m_löks
;

232 
	grhs
.
	gm_löks
 = 
nuŒ±r
;

234  *
	gthis
;

237 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

238 
	gLök_buf
<
	gPosôi⁄
>::~
	$Lök_buf
() {

239 
	`‰ì
();

240 
	}
}

242 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

243 
	gLök_buf
<
	gPosôi⁄
>::
	$‰ì
() {

244 i‡(
m_löks
 !
nuŒ±r
) {

245 
	`UT_DELETE_ARRAY
(
m_löks
);

246 
m_löks
 = 
nuŒ±r
;

248 
	}
}

250 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

251 
ölöe
 
	gLök_buf
<
	gPosôi⁄
>::
	$add_lök
(
Posôi⁄
 
‰om
, Posôi⁄ 
to
) {

252 
	`ut_ad
(
to
 > 
‰om
);

253 
	`ut_ad
(
to
 - 
‰om
 <
°d
::
numîic_limôs
<
Di°™˚
>::
	`max
());

255 c⁄°áutÿ
ödex
 = 
	`¶Ÿ_ödex
(
‰om
);

257 autÿ&
¶Ÿ
 = 
m_löks
[
ödex
];

259 
¶Ÿ
.
	`°‹e
(
to
);

260 
	}
}

262 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

263 
ölöe
 
boﬁ
 
	gLök_buf
<
	gPosôi⁄
>::
	$√xt_posôi⁄
(
Posôi⁄
 
posôi⁄
,

264 
Posôi⁄
 &
√xt
) {

265 c⁄°áutÿ
ödex
 = 
	`¶Ÿ_ödex
(
posôi⁄
);

267 autÿ&
¶Ÿ
 = 
m_löks
[
ödex
];

269 
√xt
 = 
¶Ÿ
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

271  
√xt
 <
posôi⁄
;

272 
	}
}

274 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

275 
ölöe
 
	gLök_buf
<
	gPosôi⁄
>::
	$add_lök_adv™˚_èû
(
Posôi⁄
 
‰om
,

276 
Posôi⁄
 
to
) {

277 
	`ut_ad
(
to
 > 
‰om
);

278 
	`ut_ad
(
to
 - 
‰om
 <
°d
::
numîic_limôs
<
Di°™˚
>::
	`max
());

280 autÿ
posôi⁄
 = 
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

282 
	`ut_ad
(
posôi⁄
 <
‰om
);

284 i‡(
posôi⁄
 =
‰om
) {

286 
m_èû
.
	`°‹e
(
to
, 
°d
::
mem‹y_‹dî_ªÀa£
);

288 autÿ
ödex
 = 
	`¶Ÿ_ödex
(
‰om
);

289 autÿ&
¶Ÿ
 = 
m_löks
[
ödex
];

292 
¶Ÿ
.
	`°‹e
(
to
, 
°d
::
mem‹y_‹dî_ªÀa£
);

294 autÿ
°›_c⁄dôi⁄
 = [&](
Posôi⁄
 
¥ev_pos
, Posôi⁄ 
√xt_pos
) {

295  (
¥ev_pos
 > 
‰om
);

298 
	`adv™˚_èû_u¡û
(
°›_c⁄dôi⁄
);

300 
	}
}

302 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

303 
	gãm∂©e
 <
ty≥«me
 
	gSt›_c⁄dôi⁄
>

304 
boﬁ
 
	gLök_buf
<
	gPosôi⁄
>::
	$adv™˚_èû_u¡û
(
St›_c⁄dôi⁄
 
°›_c⁄dôi⁄
,

305 
uöt32_t
 
max_ªåy
) {

307 autÿ
posôi⁄
 = 
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

308 autÿ
‰om
 = 
posôi⁄
;

310 
uöt32_t
 
ªåy
 = 0;

311 
åue
) {

312 autÿ
ödex
 = 
	`¶Ÿ_ödex
(
posôi⁄
);

313 autÿ&
¶Ÿ
 = 
m_löks
[
ödex
];

315 autÿ
√xt_lﬂd
 = 
¶Ÿ
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

317 i‡(
√xt_lﬂd
 >
posôi⁄
 + 
m_ˇ∑côy
) {

320 
posôi⁄
 = 
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

321 i‡(
posôi⁄
 !
‰om
) {

322 
‰om
 = 
posôi⁄
;

327 i‡(
√xt_lﬂd
 <
posôi⁄
 || 
	`°›_c⁄dôi⁄
(position,Çext_load)) {

329  
Ál£
;

333 i‡(
¶Ÿ
.
	`com∑ª_exch™ge_°r⁄g
(
√xt_lﬂd
, 
posôi⁄
,

334 
°d
::
mem‹y_‹dî_acq_ªl
)) {

340 
posôi⁄
 = 
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

341 i‡(
posôi⁄
 =
‰om
) {

343 
posôi⁄
 = 
√xt_lﬂd
;

348 
ªåy
++;

349 i‡(
ªåy
 > 
max_ªåy
) {

351  
Ál£
;

354 
	`UT_RELAX_CPU
();

355 
posôi⁄
 = 
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

356 i‡(
posôi⁄
 =
‰om
) {

358  
Ál£
;

360 
‰om
 = 
posôi⁄
;

363 
åue
) {

364 
Posôi⁄
 
√xt
;

366 
boﬁ
 
°›
 = 
	`√xt_posôi⁄
(
posôi⁄
, 
√xt
);

368 i‡(
°›
 || 
	`°›_c⁄dôi⁄
(
posôi⁄
, 
√xt
)) {

372 
posôi⁄
 = 
√xt
;

375 
	`ut_a
(
‰om
 =
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
));

378 
m_èû
.
	`°‹e
(
posôi⁄
, 
°d
::
mem‹y_‹dî_ªÀa£
);

380 i‡(
posôi⁄
 =
‰om
) {

381  
Ál£
;

384  
åue
;

385 
	}
}

387 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

388 
ölöe
 
boﬁ
 
	gLök_buf
<
	gPosôi⁄
>::
	$adv™˚_èû
() {

389 autÿ
°›_c⁄dôi⁄
 = [](
Posôi⁄
 
‰om
, Posôi⁄ 
to
Ë{  
Ál£
; };

391  
	`adv™˚_èû_u¡û
(
°›_c⁄dôi⁄
);

392 
	}
}

394 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

395 
ölöe
 
size_t
 
	gLök_buf
<
	gPosôi⁄
>::
	$ˇ∑côy
() const {

396  
m_ˇ∑côy
;

397 
	}
}

399 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

400 
ölöe
 
Posôi⁄
 
	gLök_buf
<
	gPosôi⁄
>::
	$èû
() const {

401  
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

402 
	}
}

404 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

405 
ölöe
 
boﬁ
 
	gLök_buf
<
	gPosôi⁄
>::
	$has_•a˚
(
Posôi⁄
 
posôi⁄
) {

406 autÿ
èû
 = 
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

407 i‡(
èû
 + 
m_ˇ∑côy
 > 
posôi⁄
) {

408  
åue
;

411 autÿ
°›_c⁄dôi⁄
 = [](
Posôi⁄
 
‰om
, Posôi⁄ 
to
Ë{  
Ál£
; };

412 
	`adv™˚_èû_u¡û
(
°›_c⁄dôi⁄
, 0);

414 
èû
 = 
m_èû
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

415  
èû
 + 
m_ˇ∑côy
 > 
posôi⁄
;

416 
	}
}

418 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

419 
ölöe
 
size_t
 
	gLök_buf
<
	gPosôi⁄
>::
	$¶Ÿ_ödex
(
Posôi⁄
 
posôi⁄
) const {

420  
posôi⁄
 & (
m_ˇ∑côy
 - 1);

421 
	}
}

423 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

424 
	gLök_buf
<
	gPosôi⁄
>::
	$vÆid©e_no_löks
(
Posôi⁄
 
begö
, Posôi⁄ 
íd
) {

425 c⁄°áutÿ
èû
 = 
m_èû
.
	`lﬂd
();

429 
íd
 = 
°d
::
	`mö
”nd, 
begö
 + 
m_ˇ∑côy
);

431 ; 
begö
 < 
íd
; ++begin) {

432 c⁄° 
size_t
 
ödex
 = 
	`¶Ÿ_ödex
(
begö
);

434 c⁄°áutÿ&
¶Ÿ
 = 
m_löks
[
ödex
];

436 
	`ut_a
(
¶Ÿ
.
	`lﬂd
(Ë<
èû
);

438 
	}
}

440 
	gãm∂©e
 <
ty≥«me
 
	gPosôi⁄
>

441 
	gLök_buf
<
	gPosôi⁄
>::
	$vÆid©e_no_löks
() {

442 
	`vÆid©e_no_löks
(0, 
m_ˇ∑côy
);

443 
	}
}

	@ut0list.h

52 #i‚de‡
IB_LIST_H


53 
	#IB_LIST_H


	)

55 
	~"mem0mem.h
"

57 
	gib_li°_t
;

58 
	gib_li°_node_t
;

63 
ib_li°_t
 *
ib_li°_¸óã
();

66 
ib_li°_‰ì
(
ib_li°_t
 *
li°
);

70 
ib_li°_node_t
 *
ib_li°_add_œ°
(

71 
ib_li°_t
 *
li°
,

72 *
d©a
,

73 
mem_hóp_t
 *
hóp
);

78 
ib_li°_ªmove
(
ib_li°_t
 *
li°
, 
ib_li°_node_t
 *
node
);

82 
UNIV_INLINE


83 
ib_li°_node_t
 *
ib_li°_gë_fú°
(
ib_li°_t
 *
li°
);

87 
UNIV_INLINE


88 
ib_li°_node_t
 *
ib_li°_gë_œ°
(
ib_li°_t
 *
li°
);

92 
UNIV_INLINE


93 
iboﬁ
 
ib_li°_is_em±y
(

95 c⁄° 
ib_li°_t
 *
li°
);

98 
	sib_li°_t
 {

99 
ib_li°_node_t
 *
	mfú°
;

100 
ib_li°_node_t
 *
	mœ°
;

104 
	sib_li°_node_t
 {

105 
ib_li°_node_t
 *
	m¥ev
;

106 
ib_li°_node_t
 *
	m√xt
;

107 *
	md©a
;

113 
	sib_li°_hñ≥r_t
 {

114 
mem_hóp_t
 *
	mhóp
;

115 *
	md©a
;

118 
	~"ut0li°.ic
"

	@ut0list.ic

35 
UNIV_INLINE


36 
ib_li°_node_t
 *
	$ib_li°_gë_fú°
(
ib_li°_t
 *
li°
)

38  (
li°
->
fú°
);

39 
	}
}

43 
UNIV_INLINE


44 
ib_li°_node_t
 *
	$ib_li°_gë_œ°
(
ib_li°_t
 *
li°
)

46  (
li°
->
œ°
);

47 
	}
}

51 
UNIV_INLINE


52 
iboﬁ
 
	$ib_li°_is_em±y
(

54 c⁄° 
ib_li°_t
 *
li°
)

56  (!(
li°
->
fú°
 ||Üi°->
œ°
));

57 
	}
}

	@ut0lock_free_hash.h

33 #i‚de‡
ut0lock_‰ì_hash_h


34 
	#ut0lock_‰ì_hash_h


	)

36 
	#BOOST_ATOMIC_NO_LIB


	)

38 
	~"univ.i
"

40 
	~<©omic
>

41 
	~<li°
>

43 
	~"os0numa.h
"

44 
	~"ut0muãx.h
"

45 
	~"ut0√w.h
"

46 
	~"ut0∫d.h
"

49 ˛as†
	cut_hash_öãrÁ˚_t
 {

50 
	mpublic
:

53 c⁄° 
öt64_t
 
NOT_FOUND
 = 
INT64_MAX
;

56 
	mvútuÆ
 ~
	$ut_hash_öãrÁ˚_t
() {}

61 
vútuÆ
 
öt64_t
 
	$gë
(
uöt64_t
 
key
) const = 0;

67 
vútuÆ
 
	`£t
(
uöt64_t
 
key
, 
öt64_t
 
vÆ
) = 0;

71 
vútuÆ
 
	`dñ
(
uöt64_t
 
key
) = 0;

76 
vútuÆ
 
	`öc
(
uöt64_t
 
key
) = 0;

81 
vútuÆ
 
	`dec
(
uöt64_t
 
key
) = 0;

83 #ifde‡
UT_HASH_IMPLEMENT_PRINT_STATS


86 
vútuÆ
 
	`¥öt_°©s
() = 0;

88 
	}
};

95 ˛as†
	cut_lock_‰ì_˙t_t
 {

96 
	mpublic
:

98 
	$ut_lock_‰ì_˙t_t
() {

103 
m_numa_avaûabÀ
 = 
Ál£
;

105 i‡(
m_numa_avaûabÀ
) {

106 
m_˙t_size
 = 
	`os_numa_num_c⁄figuªd_˝us
();

113 
m_˙t_size
 = 256;

116 
m_˙t
 = 
	`UT_NEW_ARRAY
(
°d
::
©omic
<
öt64_t
> *, 
m_˙t_size
,

117 
mem_key_ut_lock_‰ì_hash_t
);

119 
size_t
 
i
 = 0; i < 
m_˙t_size
; i++) {

120 c⁄° 
size_t
 
s
 = (
°d
::
©omic
<
öt64_t
>);

121 *
mem
;

123 i‡(
m_numa_avaûabÀ
) {

124 c⁄° 
node
 = 
	`os_numa_node_of_˝u
(
°©ic_ˇ°
<>(
i
));

126 
mem
 = 
	`os_numa_Æloc_⁄node
(
s
, 
node
);

128 
mem
 = 
	`ut_mÆloc
(
s
, 
mem_key_ut_lock_‰ì_hash_t
);

131 
	`ut_a
(
mem
 !
nuŒ±r
);

133 
m_˙t
[
i
] = 
	`√w
 (
mem
Ë
°d
::
©omic
<
öt64_t
>;

135 
m_˙t
[
i
]->
	`°‹e
(0, 
°d
::
mem‹y_‹dî_ªœxed
);

140 ~
	$ut_lock_‰ì_˙t_t
() {

141 
usög
 
«me•a˚
 
°d
;

143 
size_t
 
i
 = 0; i < 
m_˙t_size
; i++) {

144 
m_˙t
[
i
]->~
©omic
<
öt64_t
>();

146 i‡(
m_numa_avaûabÀ
) {

147 
	`os_numa_‰ì
(
m_˙t
[
i
], (
°d
::
©omic
<
öt64_t
>));

149 
	`ut_‰ì
(
m_˙t
[
i
]);

153 
	`UT_DELETE_ARRAY
(
m_˙t
);

154 
	}
}

157 
	$öc
() {

158 c⁄° 
size_t
 
i
 = 
	`n_˙t_ödex
();

160 
m_˙t
[
i
]->
	`„tch_add
(1, 
°d
::
mem‹y_‹dî_ªœxed
);

161 
	}
}

164 
	$dec
() {

165 c⁄° 
size_t
 
i
 = 
	`n_˙t_ödex
();

167 
m_˙t
[
i
]->
	`„tch_sub
(1, 
°d
::
mem‹y_‹dî_ªœxed
);

168 
	}
}

172 
öt64_t
 
	$gë
() const {

173 
öt64_t
 
ªt
 = 0;

175 
size_t
 
i
 = 0; i < 
m_˙t_size
; i++) {

176 
ªt
 +
m_˙t
[
i
]->
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

179  (
ªt
);

180 
	}
}

182 
	g¥iv©e
:

185 
size_t
 
	$n_˙t_ödex
() const {

186 
size_t
 
˝u
;

188 #ifde‡
HAVE_OS_GETCPU


189 
˝u
 = 
°©ic_ˇ°
<
size_t
>(
	`os_gë˝u
());

191 i‡(
˝u
 >
m_˙t_size
) {

194 
˝u
 %
m_˙t_size
;

197 
˝u
 = 
°©ic_ˇ°
<
size_t
>(
	`ut_∫d_gí_ulöt
(Ë% 
m_˙t_size
);

200  (
˝u
);

201 
	}
}

204 
boﬁ
 
	gm_numa_avaûabÀ
;

208 
	g°d
::
©omic
<
öt64_t
> **
m_˙t
;

209 
size_t
 
	gm_˙t_size
;

214 
	gãm∂©e
 <
ty≥«me
 
	gT
>

215 ˛as†
	cut_lock_‰ì_li°_node_t
 {

216 
	mpublic
:

217 
ut_lock_‰ì_li°_node_t
<
	tT
> *
	t√xt_t
;

221 
ex∂icô
 
	$ut_lock_‰ì_li°_node_t
(
size_t
 
n_ñemíts
)

222 : 
	`m_n_ba£_ñemíts
(
n_ñemíts
), 
	`m_≥ndög_‰ì
(
Ál£
), 
	$m_√xt
(
nuŒ±r
) {

223 
m_ba£
 = 
	`UT_NEW_ARRAY
(
T
, 
m_n_ba£_ñemíts
, 
mem_key_ut_lock_‰ì_hash_t
);

225 
	`ut_ad
(
n_ñemíts
 > 0);

229 ~
	$ut_lock_‰ì_li°_node_t
(Ë{ 
	`UT_DELETE_ARRAY
(
m_ba£
); 
	}
}

242 
√xt_t
 
	$grow
(
öt64_t
 
dñëed_vÆ
, 
boﬁ
 *
grown_by_this_thªad
) {

243 
size_t
 
√w_size
;

245 i‡(
m_n_ba£_ñemíts
 > 1024 &&

246 
	`n_dñëed
(
dñëed_vÆ
Ë> 
m_n_ba£_ñemíts
 * 3 / 4) {

249 
√w_size
 = 
m_n_ba£_ñemíts
;

251 
√w_size
 = 
m_n_ba£_ñemíts
 * 2;

254 
√xt_t
 
√w_¨r
 = 
	`UT_NEW
(
ut_lock_‰ì_li°_node_t
<
T
>(
√w_size
),

255 
mem_key_ut_lock_‰ì_hash_t
);

260 
√xt_t
 
ex≥˘ed
 = 
nuŒ±r
;

261 i‡(!
m_√xt
.
	`com∑ª_exch™ge_°r⁄g
(
ex≥˘ed
, 
√w_¨r
,

262 
°d
::
mem‹y_‹dî_ªœxed
)) {

264 
	`UT_DELETE
(
√w_¨r
);

268 
	`ut_ad
(
ex≥˘ed
 !
nuŒ±r
);

270 *
grown_by_this_thªad
 = 
Ál£
;

272  (
ex≥˘ed
);

274 *
grown_by_this_thªad
 = 
åue
;

275  (
√w_¨r
);

277 
	}
}

291 
boﬁ
 
	$begö_ac˚ss
() {

292 
m_n_ªf
.
	`öc
();

294 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_acq_ªl
);

296 i‡(
m_≥ndög_‰ì
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
)) {

301 
m_n_ªf
.
	`dec
();

302  (
Ál£
);

305  (
åue
);

306 
	}
}

309 
	$íd_ac˚ss
() {

310 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_ªÀa£
);

312 
m_n_ªf
.
	`dec
();

313 
	}
}

317 
öt64_t
 
	$n_ªf
() {

318 
öt64_t
 
ªt
 = 
m_n_ªf
.
	`gë
();

320 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_acq_ªl
);

322  (
ªt
);

323 
	}
}

326 
T
 *
	gm_ba£
;

329 
size_t
 
	gm_n_ba£_ñemíts
;

333 
	g°d
::
©omic_boﬁ
 
m_≥ndög_‰ì
;

338 
	g°d
::
©omic
<
√xt_t
> 
m_√xt
;

340 
	g¥iv©e
:

346 
size_t
 
	$n_dñëed
(
öt64_t
 
dñëed_vÆ
) const {

347 
size_t
 
ªt
 = 0;

349 
size_t
 
i
 = 0; i < 
m_n_ba£_ñemíts
; i++) {

350 c⁄° 
öt64_t
 
vÆ
 = 
m_ba£
[
i
].
m_vÆ
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

352 i‡(
vÆ
 =
dñëed_vÆ
) {

353 
ªt
++;

357  (
ªt
);

358 
	}
}

364 
ut_lock_‰ì_˙t_t
 
	gm_n_ªf
;

421 ˛as†
	cut_lock_‰ì_hash_t
 : 
public
 
ut_hash_öãrÁ˚_t
 {

422 
public
:

429 
ex∂icô
 
	$ut_lock_‰ì_hash_t
(
size_t
 
öôül_size
, 
boﬁ
 
dñ_whí_zîo
)

430 : 
	$m_dñ_whí_zîo
(
dñ_whí_zîo
)

431 #ifde‡
UT_HASH_IMPLEMENT_PRINT_STATS


433 
	`m_n_£¨ch
(0),

434 
	$m_n_£¨ch_ôî©i⁄s
(0)

437 
	`ut_a
(
öôül_size
 > 0);

438 
	`ut_a
(
	`ut_is_2pow
(
öôül_size
));

440 
m_d©a
.
	`°‹e
(
	`UT_NEW
(
	`¨r_node_t
(
öôül_size
), 
mem_key_ut_lock_‰ì_hash_t
),

441 
°d
::
mem‹y_‹dî_ªœxed
);

443 
	`muãx_¸óã
(
LATCH_ID_LOCK_FREE_HASH
, &
m_›timize_œtch
);

445 
m_hﬁlow_obje˘s
 =

446 
	`UT_NEW
(
	`hﬁlow_t
(
	`hﬁlow_Æloc_t
(
mem_key_ut_lock_‰ì_hash_t
)),

447 
mem_key_ut_lock_‰ì_hash_t
);

451 ~
	$ut_lock_‰ì_hash_t
(Ë
ovîride
 {

452 
	`muãx_de°roy
(&
m_›timize_œtch
);

454 
¨r_node_t
 *
¨r
 = 
m_d©a
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

457 
¨r_node_t
 *
√xt
 = 
¨r
->
m_√xt
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

459 
	`UT_DELETE
(
¨r
);

461 
¨r
 = 
√xt
;

462 } 
¨r
 !
nuŒ±r
);

464 !
m_hﬁlow_obje˘s
->
	`em±y
()) {

465 
	`UT_DELETE
(
m_hﬁlow_obje˘s
->
	`‰⁄t
());

466 
m_hﬁlow_obje˘s
->
	`p›_‰⁄t
();

468 
	`UT_DELETE
(
m_hﬁlow_obje˘s
);

469 
	}
}

474 
öt64_t
 
	$gë
(
uöt64_t
 
key
Ëc⁄° 
ovîride
 {

475 
	`ut_ad
(
key
 !
UNUSED
);

476 
	`ut_ad
(
key
 !
AVOID
);

478 
¨r_node_t
 *
¨r
 = 
m_d©a
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

481 c⁄° 
key_vÆ_t
 *
tu∂e
 = 
	`gë_tu∂e
(
key
, &
¨r
);

483 i‡(
tu∂e
 =
nuŒ±r
) {

484  (
NOT_FOUND
);

493 
öt64_t
 
v
 = 
tu∂e
->
m_vÆ
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

495 i‡(
v
 =
DELETED
) {

496 
¨r
->
	`íd_ac˚ss
();

497  (
NOT_FOUND
);

498 } i‡(
v
 !
GOTO_NEXT_ARRAY
) {

499 
¨r
->
	`íd_ac˚ss
();

500  (
v
);

513 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_acquúe
);

515 
¨r_node_t
 *
√xt
 = 
¨r
->
m_√xt
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

517 
	`ut_a
(
√xt
 !
nuŒ±r
);

519 
¨r
->
	`íd_ac˚ss
();

521 
¨r
 = 
√xt
;

523 
	}
}

536 
	$£t
(
uöt64_t
 
key
, 
öt64_t
 
vÆ
Ë
ovîride
 {

537 
	`ut_ad
(
key
 !
UNUSED
);

538 
	`ut_ad
(
key
 !
AVOID
);

539 
	`ut_ad
(
vÆ
 !
NOT_FOUND
);

540 
	`ut_ad
(
vÆ
 !
DELETED
);

541 
	`ut_ad
(
vÆ
 !
GOTO_NEXT_ARRAY
);

543 
	`ö£π_‹_upd©e
(
key
, 
vÆ
, 
Ál£
, 
m_d©a
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

544 
	}
}

564 
	$dñ
(
uöt64_t
 
key
Ë
ovîride
 {

565 
	`ut_ad
(
key
 !
UNUSED
);

566 
	`ut_ad
(
key
 !
AVOID
);

568 
¨r_node_t
 *
¨r
 = 
m_d©a
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

571 
key_vÆ_t
 *
tu∂e
 = 
	`gë_tu∂e
(
key
, &
¨r
);

573 i‡(
tu∂e
 =
nuŒ±r
) {

578 
öt64_t
 
v
 = 
tu∂e
->
m_vÆ
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

581 i‡(
v
 =
GOTO_NEXT_ARRAY
) {

585 i‡(
tu∂e
->
m_vÆ
.
	`com∑ª_exch™ge_°r⁄g
(
v
, 
DELETED
,

586 
°d
::
mem‹y_‹dî_ªœxed
)) {

587 
¨r
->
	`íd_ac˚ss
();

607 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_acquúe
);

609 
¨r_node_t
 *
√xt
 = 
¨r
->
m_√xt
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

611 
	`ut_a
(
√xt
 !
nuŒ±r
);

613 
¨r
->
	`íd_ac˚ss
();

615 
¨r
 = 
√xt
;

617 
	}
}

634 
	$öc
(
uöt64_t
 
key
Ë
ovîride
 {

635 
	`ut_ad
(
key
 !
UNUSED
);

636 
	`ut_ad
(
key
 !
AVOID
);

638 
	`ö£π_‹_upd©e
(
key
, 1, 
åue
, 
m_d©a
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

639 
	}
}

648 
	$dec
(
uöt64_t
 
key
Ë
ovîride
 {

649 
	`ut_ad
(
key
 !
UNUSED
);

650 
	`ut_ad
(
key
 !
AVOID
);

652 
	`ö£π_‹_upd©e
(
key
, -1, 
åue
, 
m_d©a
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
));

653 
	}
}

655 #ifde‡
UT_HASH_IMPLEMENT_PRINT_STATS


658 
	$¥öt_°©s
() {

659 c⁄° 
ulöt
 
n_£¨ch
 = 
m_n_£¨ch
;

660 c⁄° 
ulöt
 
n_£¨ch_ôî©i⁄s
 = 
m_n_£¨ch_ôî©i⁄s
;

662 
ib
::
öfo
 
	`öfo
(
ER_IB_MSG_LOCK_FREE_HASH_USAGE_STATS
);

663 
öfo
 << "Lock fªêhash ußgê°©s:Çumbî o‡£¨ches=" << 
n_£¨ch


664 << ",Çumbî o‡£¨ch iãøti⁄s=" << 
n_£¨ch_ôî©i⁄s
;

665 i‡(
n_£¨ch
 != 0) {

666 
öfo
 << "average iterationsÖer search: "

667 << ()
n_£¨ch_ôî©i⁄s
 / 
n_£¨ch
;

669 
	}
}

672 
	g¥iv©e
:

674 c⁄° 
uöt64_t
 
UNUSED
 = 
UINT64_MAX
;

681 c⁄° 
uöt64_t
 
	gAVOID
 = 
UNUSED
 - 1;

686 c⁄° 
öt64_t
 
	gDELETED
 = 
NOT_FOUND
 - 1;

691 c⁄° 
öt64_t
 
	gGOTO_NEXT_ARRAY
 = 
DELETED
 - 1;

694 
	skey_vÆ_t
 {

695 
key_vÆ_t
(Ë: 
m_key
(
UNUSED
), 
m_vÆ
(
NOT_FOUND
) {}

698 
	g°d
::
©omic
<
uöt64_t
> 
m_key
;

701 
	g°d
::
©omic
<
öt64_t
> 
m_vÆ
;

706 
	gut_lock_‰ì_li°_node_t
<
	tkey_vÆ_t
> 
	t¨r_node_t
;

716 
size_t
 
	$guess_posôi⁄
(
uöt64_t
 
key
, 
size_t
 
¨r_size
) const {

722  (
°©ic_ˇ°
<
size_t
>(
	`ut_fﬁd_uŒ
(
key
Ë& (
¨r_size
 - 1)));

723 
	}
}

730 
key_vÆ_t
 *
	$gë_tu∂e_‰om_¨øy
(
key_vÆ_t
 *
¨r
, 
size_t
 
¨r_size
,

731 
uöt64_t
 
key
) const {

732 #ifde‡
UT_HASH_IMPLEMENT_PRINT_STATS


733 ++
m_n_£¨ch
;

736 c⁄° 
size_t
 
°¨t
 = 
	`guess_posôi⁄
(
key
, 
¨r_size
);

737 c⁄° 
size_t
 
íd
 = 
°¨t
 + 
¨r_size
;

739 
size_t
 
i
 = 
°¨t
; i < 
íd
; i++) {

740 #ifde‡
UT_HASH_IMPLEMENT_PRINT_STATS


741 ++
m_n_£¨ch_ôî©i⁄s
;

745 c⁄° 
size_t
 
cur_pos
 = 
i
 & (
¨r_size
 - 1);

747 
key_vÆ_t
 *
cur_tu∂e
 = &
¨r
[
cur_pos
];

749 c⁄° 
uöt64_t
 
cur_key
 = 
cur_tu∂e
->
m_key
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

751 i‡(
cur_key
 =
key
) {

752  (
cur_tu∂e
);

753 } i‡(
cur_key
 =
UNUSED
 || cur_key =
AVOID
) {

754  (
nuŒ±r
);

758  (
nuŒ±r
);

759 
	}
}

767 
key_vÆ_t
 *
	$gë_tu∂e
(
uöt64_t
 
key
, 
¨r_node_t
 **
¨r
) const {

769 !(*
¨r
)->
	`begö_ac˚ss
()) {

772 *
¨r
 = 
m_d©a
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

775 
key_vÆ_t
 *
t
 =

776 
	`gë_tu∂e_‰om_¨øy
((*
¨r
)->
m_ba£
, (*¨r)->
m_n_ba£_ñemíts
, 
key
);

778 i‡(
t
 !
nuŒ±r
) {

781  (
t
);

784 
¨r_node_t
 *
√xt
 = (*
¨r
)->
m_√xt
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

786 (*
¨r
)->
	`íd_ac˚ss
();

788 i‡(
√xt
 =
nuŒ±r
) {

789  (
nuŒ±r
);

792 *
¨r
 = 
√xt
;

794 
	}
}

805 
key_vÆ_t
 *
	$ö£π_‹_gë_posôi⁄_ö_¨øy
(
key_vÆ_t
 *
¨r
, 
size_t
 
¨r_size
,

806 
uöt64_t
 
key
) {

807 #ifde‡
UT_HASH_IMPLEMENT_PRINT_STATS


808 ++
m_n_£¨ch
;

811 c⁄° 
size_t
 
°¨t
 = 
	`guess_posôi⁄
(
key
, 
¨r_size
);

812 c⁄° 
size_t
 
íd
 = 
°¨t
 + 
¨r_size
;

814 
size_t
 
i
 = 
°¨t
; i < 
íd
; i++) {

815 #ifde‡
UT_HASH_IMPLEMENT_PRINT_STATS


816 ++
m_n_£¨ch_ôî©i⁄s
;

820 c⁄° 
size_t
 
cur_pos
 = 
i
 & (
¨r_size
 - 1);

822 
key_vÆ_t
 *
cur_tu∂e
 = &
¨r
[
cur_pos
];

824 c⁄° 
uöt64_t
 
cur_key
 = 
cur_tu∂e
->
m_key
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

826 i‡(
cur_key
 =
key
) {

827  (
cur_tu∂e
);

830 i‡(
cur_key
 =
UNUSED
) {

831 
uöt64_t
 
ex≥˘ed
 = 
UNUSED
;

832 i‡(
cur_tu∂e
->
m_key
.
	`com∑ª_exch™ge_°r⁄g
(

833 
ex≥˘ed
, 
key
, 
°d
::
mem‹y_‹dî_ªœxed
)) {

834  (
cur_tu∂e
);

841 i‡(
ex≥˘ed
 =
key
) {

842  (
cur_tu∂e
);

854  (
nuŒ±r
);

855 
	}
}

861 
	$c›y_to_™Ÿhî_¨øy
(
¨r_node_t
 *
§c_¨r
,áº_node_à*
d°_¨r
) {

862 
size_t
 
i
 = 0; i < 
§c_¨r
->
m_n_ba£_ñemíts
; i++) {

863 
key_vÆ_t
 *
t
 = &
§c_¨r
->
m_ba£
[
i
];

865 
uöt64_t
 
k
 = 
t
->
m_key
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

868 i‡(
k
 =
UNUSED
 && 
t
->
m_key
.
	`com∑ª_exch™ge_°r⁄g
(

869 
k
, 
AVOID
, 
°d
::
mem‹y_‹dî_ªœxed
)) {

873 
öt64_t
 
v
 = 
t
->
m_vÆ
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

888 
boﬁ
 
c›õd
 = 
Ál£
;

891 i‡(
v
 !
DELETED
 || 
c›õd
) {

892 
	`ö£π_‹_upd©e
(
k
, 
v
, 
Ál£
, 
d°_¨r
, false);

893 
c›õd
 = 
åue
;

905 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_ªÀa£
);

912 i‡(
t
->
m_vÆ
.
	`com∑ª_exch™ge_°r⁄g
(
v
, 
GOTO_NEXT_ARRAY
,

913 
°d
::
mem‹y_‹dî_ªœxed
)) {

925 
	}
}

935 
boﬁ
 
	$upd©e_tu∂e
(
key_vÆ_t
 *
t
, 
öt64_t
 
vÆ_to_£t
, 
boﬁ
 
is_dñè
) {

936 
öt64_t
 
cur_vÆ
 = 
t
->
m_vÆ
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

939 i‡(
cur_vÆ
 =
GOTO_NEXT_ARRAY
) {

940  (
Ál£
);

943 
öt64_t
 
√w_vÆ
;

945 i‡(
is_dñè
 && 
cur_vÆ
 !
NOT_FOUND
 && cur_vÆ !
DELETED
) {

946 i‡(
m_dñ_whí_zîo
 && 
cur_vÆ
 + 
vÆ_to_£t
 == 0) {

947 
√w_vÆ
 = 
DELETED
;

949 
√w_vÆ
 = 
cur_vÆ
 + 
vÆ_to_£t
;

952 
√w_vÆ
 = 
vÆ_to_£t
;

955 i‡(
t
->
m_vÆ
.
	`com∑ª_exch™ge_°r⁄g
(
cur_vÆ
, 
√w_vÆ
,

956 
°d
::
mem‹y_‹dî_ªœxed
)) {

957  (
åue
);

963 
	}
}

973 
	$›timize
() {

974 
	`muãx_íãr
(&
m_›timize_œtch
);

977 
¨r_node_t
 *
¨r
 = 
m_d©a
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

979 
¨r_node_t
 *
√xt
 = 
¨r
->
m_√xt
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

981 i‡(
√xt
 =
nuŒ±r
) {

990 
	`c›y_to_™Ÿhî_¨øy
(
¨r
, 
√xt
);

992 
¨r
->
m_≥ndög_‰ì
.
	`°‹e
(
åue
, 
°d
::
mem‹y_‹dî_ªÀa£
);

994 
¨r_node_t
 *
ex≥˘ed
 = 
¨r
;

998 
	`ut_a
(
m_d©a
.
	`com∑ª_exch™ge_°r⁄g
(
ex≥˘ed
, 
√xt
,

999 
°d
::
mem‹y_‹dî_ªœxed
));

1006 
¨r
->
	`n_ªf
() > 0) {

1010 
	`UT_DELETE_ARRAY
(
¨r
->
m_ba£
);

1014 
¨r
->
m_ba£
 = 
nuŒ±r
;

1016 
m_hﬁlow_obje˘s
->
	`push_back
(
¨r
);

1019 
	`muãx_exô
(&
m_›timize_œtch
);

1020 
	}
}

1040 
	$ö£π_‹_upd©e
(
uöt64_t
 
key
, 
öt64_t
 
vÆ
, 
boﬁ
 
is_dñè
,

1041 
¨r_node_t
 *
¨r
, 
boﬁ
 
›timize_Ælowed
 = 
åue
) {

1042 
boﬁ
 
ˇŒ_›timize
 = 
Ál£
;

1048 !
¨r
->
	`begö_ac˚ss
()) {

1051 
¨r
 =áº->
m_√xt
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

1054 
key_vÆ_t
 *
t
 = 
	`ö£π_‹_gë_posôi⁄_ö_¨øy
(

1055 
¨r
->
m_ba£
,áº->
m_n_ba£_ñemíts
, 
key
);

1064 i‡(
t
 !
nuŒ±r
 && 
	`upd©e_tu∂e
—, 
vÆ
, 
is_dñè
)) {

1065 
¨r
->
	`íd_ac˚ss
();

1069 
¨r_node_t
 *
√xt
 = 
¨r
->
m_√xt
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

1071 i‡(
√xt
 !
nuŒ±r
) {

1072 
¨r
->
	`íd_ac˚ss
();

1073 
¨r
 = 
√xt
;

1078 
°d
::
	`©omic_thªad_„n˚
(°d::
mem‹y_‹dî_acquúe
);

1082 
boﬁ
 
grown_by_this_thªad
;

1084 
√xt
 = 
¨r
->
	`grow
(
DELETED
, &
grown_by_this_thªad
);

1086 i‡(
grown_by_this_thªad
) {

1087 
ˇŒ_›timize
 = 
åue
;

1090 
¨r
->
	`íd_ac˚ss
();

1092 
¨r
 = 
√xt
;

1095 i‡(
›timize_Ælowed
 && 
ˇŒ_›timize
) {

1096 
	`›timize
();

1098 
	}
}

1101 
	g°d
::
©omic
<
¨r_node_t
 *> 
m_d©a
;

1103 
	gut_Æloˇt‹
<
	t¨r_node_t
 *> 
	thﬁlow_Æloc_t
;

1104 
	g°d
::
	tli°
<
	t¨r_node_t
 *, 
	thﬁlow_Æloc_t
> 
	thﬁlow_t
;

1112 
hﬁlow_t
 *
	gm_hﬁlow_obje˘s
;

1122 
ib_muãx_t
 
	gm_›timize_œtch
;

1126 
boﬁ
 
	gm_dñ_whí_zîo
;

1128 #ifde‡
UT_HASH_IMPLEMENT_PRINT_STATS


1134 
muèbÀ
 
	g°d
::
©omic
<
uöt64_t
> 
m_n_£¨ch
;

1137 
muèbÀ
 
	g°d
::
©omic
<
uöt64_t
> 
m_n_£¨ch_ôî©i⁄s
;

	@ut0lst.h

34 #i‚de‡
ut0l°_h


35 
	#ut0l°_h


	)

39 
	~"ut0dbg.h
"

47 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

48 
	sut_li°_node
 {

49 
Ty≥
 *
	m¥ev
;

51 
Ty≥
 *
	m√xt
;

54 
ªvî£
() {

55 
Ty≥
 *
	mtmp
 = 
¥ev
;

56 
	m¥ev
 = 
√xt
;

57 
	m√xt
 = 
tmp
;

62 
	#UT_LIST_NODE_T
(
t
Ë
ut_li°_node
<t>

	)

70 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
,Åy≥«mê
	gNodePå
>

71 
	sut_li°_ba£
 {

72 
Ty≥
 
	tñem_ty≥
;

73 
NodePå
 
	tnode_±r
;

74 
	mut_li°_node
<
	tTy≥
> 
	tnode_ty≥
;

76 
ulöt
 
	mcou¡
{0};

77 
ñem_ty≥
 *
	m°¨t
{
	mnuŒ±r
};

79 
ñem_ty≥
 *
	míd
{
	mnuŒ±r
};

81 
node_±r
 
	mnode
{
	mnuŒ±r
};

83 #ifde‡
UNIV_DEBUG


84 
ulöt
 
	möô
{0};

89 
ªvî£
() {

90 
Ty≥
 *
	mtmp
 = 
°¨t
;

91 
	m°¨t
 = 
íd
;

92 
	míd
 = 
tmp
;

96 
	#UT_LIST_BASE_NODE_T
(
t
Ë
ut_li°_ba£
<t, 
ut_li°_node
<t>Å::*>

	)

98 #ifde‡
UNIV_DEBUG


99 
	#UT_LIST_INITIALISED
 0xCAFE

	)

100 
	#UT_LIST_INITIALISE
(
b
Ë(b).
öô
 = 
UT_LIST_INITIALISED


	)

101 
	#UT_LIST_IS_INITIALISED
(
b
Ë
	`ut_a
(((b).
öô
 =
UT_LIST_INITIALISED
))

	)

103 
	#UT_LIST_INITIALISE
(
b
)

	)

104 
	#UT_LIST_IS_INITIALISED
(
b
)

	)

112 
	#UT_LIST_INIT
(
b
, 
pmf
) \

114 (
b
).
cou¡
 = 0; \

115 (
b
).
°¨t
 = 0; \

116 (
b
).
íd
 = 0; \

117 (
b
).
node
 = 
pmf
; \

118 
	`UT_LIST_INITIALISE
(
b
); \

119 }

	)

125 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

126 
	sGíîicGëNode
 {

127 
	mut_li°_node
<
	tTy≥
> 
	tnode_ty≥
;

129 
GíîicGëNode
(
node_ty≥
 
Ty≥
::*
node
Ë: 
m_node
(node) {}

131 
node_ty≥
 &
›î©‹
()(
Ty≥
 &
ñem
Ë{  (ñem.*
m_node
); }

133 
node_ty≥
 
	mTy≥
::*
m_node
;

139 
	gãm∂©e
 <
ty≥«me
 
	gLi°
>

140 
	$ut_li°_¥ïíd
(
Li°
 &
li°
, 
ty≥«me
 Li°::
ñem_ty≥
 *
ñem
) {

141 
ty≥«me
 
Li°
::
node_ty≥
 &
ñem_node
 = 
ñem
->*
li°
.
node
;

143 
	`UT_LIST_IS_INITIALISED
(
li°
);

145 
ñem_node
.
¥ev
 = 
nuŒ±r
;

146 
ñem_node
.
√xt
 = 
li°
.
°¨t
;

148 i‡(
li°
.
°¨t
 !
nuŒ±r
) {

149 
ty≥«me
 
Li°
::
node_ty≥
 &
ba£_node
 = 
li°
.
°¨t
->*li°.
node
;

151 
	`ut_ad
(
li°
.
°¨t
 !
ñem
);

153 
ba£_node
.
¥ev
 = 
ñem
;

156 
li°
.
°¨t
 = 
ñem
;

158 i‡(
li°
.
íd
 =
nuŒ±r
) {

159 
li°
.
íd
 = 
ñem
;

162 ++
li°
.
cou¡
;

163 
	}
}

168 
	#UT_LIST_ADD_FIRST
(
LIST
, 
ELEM
Ë
	`ut_li°_¥ïíd
(LIST, ELEM)

	)

174 
	gãm∂©e
 <
ty≥«me
 
	gLi°
,Åy≥«mê
	gFun˘‹
>

175 
	$ut_li°_≠≥nd
(
Li°
 &
li°
, 
ty≥«me
 Li°::
ñem_ty≥
 *
ñem
,

176 
Fun˘‹
 
gë_node
) {

177 
ty≥«me
 
Li°
::
node_ty≥
 &
node
 = 
	`gë_node
(*
ñem
);

179 
	`UT_LIST_IS_INITIALISED
(
li°
);

181 
node
.
√xt
 = 
nuŒ±r
;

182 
node
.
¥ev
 = 
li°
.
íd
;

184 i‡(
li°
.
íd
 !
nuŒ±r
) {

185 
ty≥«me
 
Li°
::
node_ty≥
 &
ba£_node
 = 
	`gë_node
(*
li°
.
íd
);

187 
	`ut_ad
(
li°
.
íd
 !
ñem
);

189 
ba£_node
.
√xt
 = 
ñem
;

192 
li°
.
íd
 = 
ñem
;

194 i‡(
li°
.
°¨t
 =
nuŒ±r
) {

195 
li°
.
°¨t
 = 
ñem
;

198 ++
li°
.
cou¡
;

199 
	}
}

204 
	gãm∂©e
 <
ty≥«me
 
	gLi°
>

205 
	$ut_li°_≠≥nd
(
Li°
 &
li°
, 
ty≥«me
 Li°::
ñem_ty≥
 *
ñem
) {

206 
	`ut_li°_≠≥nd
(
li°
, 
ñem
,

207 
GíîicGëNode
<
ty≥«me
 
Li°
::
ñem_ty≥
>(
li°
.
node
));

208 
	}
}

213 
	#UT_LIST_ADD_LAST
(
LIST
, 
ELEM
Ë
	`ut_li°_≠≥nd
(LIST, ELEM)

	)

219 
	gãm∂©e
 <
ty≥«me
 
	gLi°
>

220 
	$ut_li°_ö£π
(
Li°
 &
li°
, 
ty≥«me
 Li°::
ñem_ty≥
 *
ñem1
,

221 
ty≥«me
 
Li°
::
ñem_ty≥
 *
ñem2
) {

222 
	`ut_ad
(
ñem1
 !
ñem2
);

223 
	`UT_LIST_IS_INITIALISED
(
li°
);

225 
ty≥«me
 
Li°
::
node_ty≥
 &
ñem1_node
 = 
ñem1
->*
li°
.
node
;

226 
ty≥«me
 
Li°
::
node_ty≥
 &
ñem2_node
 = 
ñem2
->*
li°
.
node
;

228 
ñem2_node
.
¥ev
 = 
ñem1
;

229 
ñem2_node
.
√xt
 = 
ñem1_node
.next;

231 i‡(
ñem1_node
.
√xt
 !
nuŒ±r
) {

232 
ty≥«me
 
Li°
::
node_ty≥
 &
√xt_node
 = 
ñem1_node
.
√xt
->*
li°
.
node
;

234 
√xt_node
.
¥ev
 = 
ñem2
;

237 
ñem1_node
.
√xt
 = 
ñem2
;

239 i‡(
li°
.
íd
 =
ñem1
) {

240 
li°
.
íd
 = 
ñem2
;

243 ++
li°
.
cou¡
;

244 
	}
}

250 
	#UT_LIST_INSERT_AFTER
(
LIST
, 
ELEM1
, 
ELEM2
) \

251 
	`ut_li°_ö£π
(
LIST
, 
ELEM1
, 
ELEM2
)

	)

257 
	gãm∂©e
 <
ty≥«me
 
	gLi°
,Åy≥«mê
	gFun˘‹
>

258 
	$ut_li°_ªmove
(
Li°
 &
li°
, 
ty≥«me
 Li°::
node_ty≥
 &
node
,

259 
Fun˘‹
 
gë_node
) {

260 
	`ut_a
(
li°
.
cou¡
 > 0);

261 
	`UT_LIST_IS_INITIALISED
(
li°
);

263 i‡(
node
.
√xt
 !
nuŒ±r
) {

264 
ty≥«me
 
Li°
::
node_ty≥
 &
√xt_node
 = 
	`gë_node
(*
node
.
√xt
);

266 
√xt_node
.
¥ev
 = 
node
.prev;

268 
li°
.
íd
 = 
node
.
¥ev
;

271 i‡(
node
.
¥ev
 !
nuŒ±r
) {

272 
ty≥«me
 
Li°
::
node_ty≥
 &
¥ev_node
 = 
	`gë_node
(*
node
.
¥ev
);

274 
¥ev_node
.
√xt
 = 
node
.next;

276 
li°
.
°¨t
 = 
node
.
√xt
;

279 
node
.
√xt
 = 
nuŒ±r
;

280 
node
.
¥ev
 = 
nuŒ±r
;

282 --
li°
.
cou¡
;

283 
	}
}

289 
	gãm∂©e
 <
ty≥«me
 
	gLi°
,Åy≥«mê
	gFun˘‹
>

290 
	$ut_li°_ªmove
(
Li°
 &
li°
, 
ty≥«me
 Li°::
ñem_ty≥
 *
ñem
,

291 
Fun˘‹
 
gë_node
) {

292 
	`ut_li°_ªmove
(
li°
, 
	`gë_node
(*
ñem
), 
gë_node
);

293 
	}
}

298 
	gãm∂©e
 <
ty≥«me
 
	gLi°
>

299 
	$ut_li°_ªmove
(
Li°
 &
li°
, 
ty≥«me
 Li°::
ñem_ty≥
 *
ñem
) {

300 
	`ut_li°_ªmove
(
li°
, 
ñem
->*li°.
node
,

301 
GíîicGëNode
<
ty≥«me
 
Li°
::
ñem_ty≥
>(
li°
.
node
));

302 
	}
}

307 
	#UT_LIST_REMOVE
(
LIST
, 
ELEM
Ë
	`ut_li°_ªmove
(LIST, ELEM)

	)

313 
	#UT_LIST_GET_NEXT
(
NAME
, 
N
Ë(((N)->NAME).
√xt
)

	)

319 
	#UT_LIST_GET_PREV
(
NAME
, 
N
Ë(((N)->NAME).
¥ev
)

	)

325 
	#UT_LIST_GET_LEN
(
BASE
Ë(BASE).
cou¡


	)

330 
	#UT_LIST_GET_FIRST
(
BASE
Ë(BASE).
°¨t


	)

335 
	#UT_LIST_GET_LAST
(
BASE
Ë(BASE).
íd


	)

337 
	sNuŒVÆid©e
 {

338 
›î©‹
()(c⁄° *
	mñem
) {}

344 
	gãm∂©e
 <
ty≥«me
 
	gLi°
, 
˛ass
 
	gFun˘‹
>

345 
	$ut_li°_m≠
(c⁄° 
Li°
 &
li°
, 
Fun˘‹
 &
fun˘‹
) {

346 
ulöt
 
cou¡
 = 0;

348 
	`UT_LIST_IS_INITIALISED
(
li°
);

350 
ty≥«me
 
Li°
::
ñem_ty≥
 *
ñem
 = 
li°
.
°¨t
;ÉÀm !
nuŒ±r
;

351 
ñem
 = (ñem->*
li°
.
node
).
√xt
, ++
cou¡
) {

352 
	`fun˘‹
(
ñem
);

355 
	`ut_a
(
cou¡
 =
li°
.count);

356 
	}
}

358 
	gãm∂©e
 <
ty≥«me
 
	gLi°
>

359 
	$ut_li°_ªvî£
(
Li°
 &
li°
) {

360 
	`UT_LIST_IS_INITIALISED
(
li°
);

362 
ty≥«me
 
Li°
::
ñem_ty≥
 *
ñem
 = 
li°
.
°¨t
;ÉÀm !
nuŒ±r
;

363 
ñem
 = (ñem->*
li°
.
node
).
¥ev
) {

364 (
ñem
->*
li°
.
node
).
	`ªvî£
();

367 
li°
.
	`ªvî£
();

368 
	}
}

370 
	#UT_LIST_REVERSE
(
LIST
Ë
	`ut_li°_ªvî£
(LIST)

	)

376 
	gãm∂©e
 <
ty≥«me
 
	gLi°
, 
˛ass
 
	gFun˘‹
>

377 
	$ut_li°_vÆid©e
(c⁄° 
Li°
 &
li°
, 
Fun˘‹
 &
fun˘‹
) {

378 
	`ut_li°_m≠
(
li°
, 
fun˘‹
);

381 
ulöt
 
cou¡
 = 0;

383 
ty≥«me
 
Li°
::
ñem_ty≥
 *
ñem
 = 
li°
.
íd
;ÉÀm !
nuŒ±r
;

384 
ñem
 = (ñem->*
li°
.
node
).
¥ev
) {

385 ++
cou¡
;

388 
	`ut_a
(
cou¡
 =
li°
.count);

389 
	}
}

393 
	#UT_LIST_CHECK
(
LIST
) \

395 
NuŒVÆid©e
 
nuŒV
; \

396 
	`ut_li°_vÆid©e
(
LIST
, 
nuŒV
); \

397 } 0)

	)

403 
	gãm∂©e
 <
ty≥«me
 
	gLi°
>

404 
	$ut_li°_move_to_‰⁄t
(
Li°
 &
li°
, 
ty≥«me
 Li°::
ñem_ty≥
 *
ñem
) {

405 
	`ut_ad
(
	`ut_li°_exi°s
(
li°
, 
ñem
));

407 i‡(
	`UT_LIST_GET_FIRST
(
li°
Ë!
ñem
) {

408 
	`ut_li°_ªmove
(
li°
, 
ñem
);

409 
	`ut_li°_¥ïíd
(
li°
, 
ñem
);

411 
	}
}

413 #ifde‡
UNIV_DEBUG


417 
	gãm∂©e
 <
ty≥«me
 
	gLi°
>

418 
boﬁ
 
	$ut_li°_exi°s
(
Li°
 &
li°
, 
ty≥«me
 Li°::
ñem_ty≥
 *
ñem
) {

419 
ty≥«me
 
Li°
::
ñem_ty≥
 *
e1
;

421 
e1
 = 
	`UT_LIST_GET_FIRST
(
li°
);É1 !
nuŒ±r
;

422 
e1
 = (e1->*
li°
.
node
).
√xt
) {

423 i‡(
ñem
 =
e1
) {

424  (
åue
);

427  (
Ál£
);

428 
	}
}

431 
	#UT_LIST_MOVE_TO_FRONT
(
LIST
, 
ELEM
Ë
	`ut_li°_move_to_‰⁄t
(LIST, ELEM)

	)

	@ut0mem.h

33 #i‚de‡
ut0mem_h


34 
	#ut0mem_h


	)

36 
	~"univ.i
"

37 #i‚de‡
UNIV_HOTBACKUP


38 
	~"os0evít.h
"

39 
	~"ut0muãx.h
"

48 
UNIV_INLINE


49 *
ut_mem˝y
(*
de°
, c⁄° *
§c
, 
ulöt
 
n
);

57 
UNIV_INLINE


58 *
ut_memmove
(*
de°
, c⁄° *
§c
, 
ulöt
 
n
);

66 
UNIV_INLINE


67 
ut_memcmp
(c⁄° *
°r1
, c⁄° *
°r2
, 
ulöt
 
n
);

73 
UNIV_INLINE


74 *
ut_°r˝y
(*
de°
, c⁄° *
§c
);

79 
UNIV_INLINE


80 
ulöt
 
ut_°æí
(c⁄° *
°r
);

87 
UNIV_INLINE


88 
ut_°rcmp
(c⁄° *
°r1
, c⁄° *
°r2
);

94 
ulöt
 
ut_°æ˝y
(*
d°
,

95 c⁄° *
§c
,

96 
ulöt
 
size
);

100 *
ut_°r3ˇt
(

103 c⁄° *
s1
,

104 c⁄° *
s2
,

105 c⁄° *
s3
);

116 
UNIV_INLINE


117 
ulöt
 
ut_øw_to_hex
(c⁄° *
øw
, ulöà
øw_size
, *
hex
, ulöà
hex_size
);

128 
UNIV_INLINE


129 
ulöt
 
ut_°r_sql_f‹m©
(c⁄° *
°r
, ulöà
°r_Àn
, *
buf
,

130 
ulöt
 
buf_size
);

132 
	~"ut0mem.ic
"

	@ut0mem.ic

33 
	~"mach0d©a.h
"

34 
	~"ut0byã.h
"

42 
UNIV_INLINE


43 *
	$ut_mem˝y
(*
de°
, c⁄° *
§c
, 
ulöt
 
n
) {

44  (
	`mem˝y
(
de°
, 
§c
, 
n
));

45 
	}
}

53 
UNIV_INLINE


54 *
	$ut_memmove
(*
de°
, c⁄° *
§c
, 
ulöt
 
n
) {

55  (
	`memmove
(
de°
, 
§c
, 
n
));

56 
	}
}

64 
UNIV_INLINE


65 
	$ut_memcmp
(c⁄° *
°r1
, c⁄° *
°r2
, 
ulöt
 
n
) {

66  (
	`memcmp
(
°r1
, 
°r2
, 
n
));

67 
	}
}

73 
UNIV_INLINE


74 *
	$ut_°r˝y
(*
de°
, c⁄° *
§c
Ë{  (
	`°r˝y
(de°, src)); 
	}
}

79 
UNIV_INLINE


80 
ulöt
 
	$ut_°æí
(c⁄° *
°r
Ë{  (
	`°æí
(°r)); 
	}
}

87 
UNIV_INLINE


88 
	$ut_°rcmp
(c⁄° *
°r1
, c⁄° *
°r2
) {

89  (
	`°rcmp
(
°r1
, 
°r2
));

90 
	}
}

97 
UNIV_INLINE


98 
ulöt
 
	$ut_øw_to_hex
(c⁄° *
øw
,

99 
ulöt
 
øw_size
,

100 *
hex
,

101 
ulöt
 
hex_size
)

103 #ifde‡
WORDS_BIGENDIAN


105 
	#MK_UINT16
(
a
, 
b
Ë(((
uöt16
)◊)Ë<< 8 | (uöt16)(b))

	)

107 
	#UINT16_GET_A
(
u
Ë(()((uË>> 8))

	)

108 
	#UINT16_GET_B
(
u
Ë(()((u)&0xFF))

	)

112 
	#MK_UINT16
(
a
, 
b
Ë(((
uöt16
)(b)Ë<< 8 | (uöt16)◊))

	)

114 
	#UINT16_GET_A
(
u
Ë(()((u)&0xFF))

	)

115 
	#UINT16_GET_B
(
u
Ë(()((uË>> 8))

	)

119 
	#MK_ALL_UINT16_WITH_A
(
a
) \

120 
	`MK_UINT16
(
a
, '0'), MK_UINT16(a, '1'), MK_UINT16(a, '2'), MK_UINT16(a, '3'), \

121 
	`MK_UINT16
(
a
, '4'), MK_UINT16(a, '5'), MK_UINT16(a, '6'), \

122 
	`MK_UINT16
(
a
, '7'), MK_UINT16(a, '8'), MK_UINT16(a, '9'), \

123 
	`MK_UINT16
(
a
, 'A'), MK_UINT16(a, 'B'), MK_UINT16(a, 'C'), \

124 
	`MK_UINT16
(
a
, 'D'), MK_UINT16◊, 'E'), MK_UINT16◊, 'F')

	)

126 c⁄° 
uöt16
 
hex_m≠
[256] = {

127 
	`MK_ALL_UINT16_WITH_A
('0'), MK_ALL_UINT16_WITH_A('1'),

128 
	`MK_ALL_UINT16_WITH_A
('2'), MK_ALL_UINT16_WITH_A('3'),

129 
	`MK_ALL_UINT16_WITH_A
('4'), MK_ALL_UINT16_WITH_A('5'),

130 
	`MK_ALL_UINT16_WITH_A
('6'), MK_ALL_UINT16_WITH_A('7'),

131 
	`MK_ALL_UINT16_WITH_A
('8'), MK_ALL_UINT16_WITH_A('9'),

132 
	`MK_ALL_UINT16_WITH_A
('A'), MK_ALL_UINT16_WITH_A('B'),

133 
	`MK_ALL_UINT16_WITH_A
('C'), MK_ALL_UINT16_WITH_A('D'),

134 
	`MK_ALL_UINT16_WITH_A
('E'), MK_ALL_UINT16_WITH_A('F')};

135 c⁄° *
øwc
;

136 
ulöt
 
ªad_byãs
;

137 
ulöt
 
wrôe_byãs
;

138 
ulöt
 
i
;

140 
øwc
 = (c⁄° *)
øw
;

142 i‡(
hex_size
 == 0) {

146 i‡(
hex_size
 <2 * 
øw_size
) {

147 
ªad_byãs
 = 
hex_size
 / 2;

148 
wrôe_byãs
 = 
hex_size
;

150 
ªad_byãs
 = 
øw_size
;

151 
wrôe_byãs
 = 2 * 
øw_size
 + 1;

154 
	#LOOP_READ_BYTES
(
ASSIGN
) \

155 
i
 = 0; i < 
ªad_byãs
; i++) { \

156 
ASSIGN
; \

157 
hex
 += 2; \

158 
øwc
++; \

159 }

	)

161 i‡(
	`ut_Æign_off£t
(
hex
, 2) == 0) {

162 
	`LOOP_READ_BYTES
(*(
uöt16
 *)
hex
 = 
hex_m≠
[*
øwc
]);

164 
	`LOOP_READ_BYTES
(*
hex
 = 
	`UINT16_GET_A
(
hex_m≠
[*
øwc
]);

165 *(
hex
 + 1Ë
	`UINT16_GET_B
(
hex_m≠
[*
øwc
]));

168 i‡(
hex_size
 <2 * 
øw_size
 && hex_size % 2 == 0) {

169 
hex
--;

172 *
hex
 = '\0';

174  (
wrôe_byãs
);

175 
	}
}

182 
UNIV_INLINE


183 
ulöt
 
	$ut_°r_sql_f‹m©
(c⁄° *
°r
,

184 
ulöt
 
°r_Àn
,

185 *
buf
,

186 
ulöt
 
buf_size
)

189 
ulöt
 
°r_i
;

190 
ulöt
 
buf_i
;

192 
buf_i
 = 0;

194 
buf_size
) {

197 i‡(
°r_Àn
 == 0) {

198 
buf
[
buf_i
] = '\'';

199 
buf_i
++;

200 
buf
[
buf_i
] = '\'';

201 
buf_i
++;

207 
buf
[
buf_i
] = '\0';

208 
buf_i
++;

212  (
buf_i
);

217 
buf
[0] = '\'';

218 
buf_i
 = 1;

220 
°r_i
 = 0; så_ò< 
°r_Àn
; str_i++) {

221 
ch
;

223 i‡(
buf_size
 - 
buf_i
 == 2) {

227 
ch
 = 
°r
[
°r_i
];

229 
ch
) {

232 i‡(
buf_size
 - 
buf_i
 < 4) {

233 
func_exô
;

235 
buf
[
buf_i
] = '\\';

236 
buf_i
++;

237 
buf
[
buf_i
] = '0';

238 
buf_i
++;

243 i‡(
buf_size
 - 
buf_i
 < 4) {

244 
func_exô
;

246 
buf
[
buf_i
] = 
ch
;

247 
buf_i
++;

251 
buf
[
buf_i
] = 
ch
;

252 
buf_i
++;

256 
func_exô
:

258 
buf
[
buf_i
] = '\'';

259 
buf_i
++;

260 
buf
[
buf_i
] = '\0';

261 
buf_i
++;

263  (
buf_i
);

264 
	}
}

	@ut0mpmcbq.h

26 #i‚de‡
ut0mpmcbq_h


27 
	#ut0mpmcbq_h


	)

29 
	~"ut0˝u_ˇche.h
"

31 
	~<©omic
>

36 
	gãm∂©e
 <
ty≥«me
 
	gT
>

37 ˛as†
	cmpmc_bq
 {

38 
	mpublic
:

41 
ex∂icô
 
	$mpmc_bq
(
size_t
 
n_ñems
)

42 : 
	`m_rög
(
ªöãΩªt_ˇ°
<
Cñl
 *>(
	`UT_NEW_ARRAY_NOKEY
(
Alig√d
, 
n_ñems
))),

43 
	`m_ˇ∑côy
(
n_ñems
 - 1) {

45 
	`ut_a
((
n_ñems
 >= 2) && ((n_elems & (n_elems - 1)) == 0));

47 
size_t
 
i
 = 0; i < 
n_ñems
; ++i) {

48 
m_rög
[
i
].
m_pos
.
	`°‹e
(i, 
°d
::
mem‹y_‹dî_ªœxed
);

51 
m_íqueue_pos
.
	`°‹e
(0, 
°d
::
mem‹y_‹dî_ªœxed
);

52 
m_dequeue_pos
.
	`°‹e
(0, 
°d
::
mem‹y_‹dî_ªœxed
);

56 ~
	$mpmc_bq
(Ë{ 
	`UT_DELETE_ARRAY
(
m_rög
); 
	}
}

61 
boﬁ
 
	$íqueue
(
T
 c⁄° &
d©a
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

68 
size_t
 
pos
 = 
m_íqueue_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

70 
Cñl
 *
˚Œ
;

73 
˚Œ
 = &
m_rög
[
pos
 & 
m_ˇ∑côy
];

75 
size_t
 
£q
;

77 
£q
 = 
˚Œ
->
m_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

79 
öçå_t
 
diff
 = (öçå_t)
£q
 - (öçå_t)
pos
;

83 i‡(
diff
 == 0) {

89 i‡(
m_íqueue_pos
.
	`com∑ª_exch™ge_wók
(
pos
,Öos + 1,

90 
°d
::
mem‹y_‹dî_ªœxed
)) {

94 } i‡(
diff
 < 0) {

97  (
Ál£
);

100 
pos
 = 
m_íqueue_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

104 
˚Œ
->
m_d©a
 = 
d©a
;

108 
˚Œ
->
m_pos
.
	`°‹e
(
pos
 + 1, 
°d
::
mem‹y_‹dî_ªÀa£
);

110  (
åue
);

111 
	}
}

116 
boﬁ
 
	$dequeue
(
T
 &
d©a
Ë
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

117 
Cñl
 *
˚Œ
;

118 
size_t
 
pos
 = 
m_dequeue_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

121 
˚Œ
 = &
m_rög
[
pos
 & 
m_ˇ∑côy
];

123 
size_t
 
£q
 = 
˚Œ
->
m_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

125 autÿ
diff
 = (
öçå_t
)
£q
 - (öçå_t)(
pos
 + 1);

127 i‡(
diff
 == 0) {

133 i‡(
m_dequeue_pos
.
	`com∑ª_exch™ge_wók
(
pos
,Öos + 1,

134 
°d
::
mem‹y_‹dî_ªœxed
)) {

138 } i‡(
diff
 < 0) {

140  (
Ál£
);

144 
pos
 = 
m_dequeue_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

148 
d©a
 = 
˚Œ
->
m_d©a
;

153 
˚Œ
->
m_pos
.
	`°‹e
(
pos
 + 
m_ˇ∑côy
 + 1, 
°d
::
mem‹y_‹dî_ªÀa£
);

155  (
åue
);

156 
	}
}

159 
size_t
 
	$ˇ∑côy
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

160  (
m_ˇ∑côy
 + 1);

161 
	}
}

164 
boﬁ
 
	$em±y
(Ëc⁄° 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

165 
size_t
 
pos
 = 
m_dequeue_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

168 autÿ
˚Œ
 = &
m_rög
[
pos
 & 
m_ˇ∑côy
];

170 
size_t
 
£q
 = 
˚Œ
->
m_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_acquúe
);

172 autÿ
diff
 = (
öçå_t
)
£q
 - (öçå_t)(
pos
 + 1);

174 i‡(
diff
 == 0) {

175  (
Ál£
);

176 } i‡(
diff
 < 0) {

177  (
åue
);

179 
pos
 = 
m_dequeue_pos
.
	`lﬂd
(
°d
::
mem‹y_‹dî_ªœxed
);

183  (
Ál£
);

184 
	}
}

186 
	g¥iv©e
:

187 
usög
 
Pad
 = 
byã
[
ut
::
INNODB_CACHE_LINE_SIZE
];

189 
	sCñl
 {

190 
	g°d
::
©omic
<
size_t
> 
m_pos
;

191 
T
 
	gm_d©a
;

194 
usög
 
	gAlig√d
 =

195 
ty≥«me
 
°d
::
Æig√d_°‹age
<(
Cñl
),

196 
	g°d
::
Æignmít_of
<
Cñl
>::
vÆue
>::
ty≥
;

198 
Pad
 
	gm_∑d0
;

199 
Cñl
 *c⁄° 
	gm_rög
;

200 
size_t
 c⁄° 
	gm_ˇ∑côy
;

201 
Pad
 
	gm_∑d1
;

202 
	g°d
::
©omic
<
size_t
> 
m_íqueue_pos
;

203 
Pad
 
	gm_∑d2
;

204 
	g°d
::
©omic
<
size_t
> 
m_dequeue_pos
;

205 
Pad
 
	gm_∑d3
;

207 
mpmc_bq
(mpmc_bq &&Ë
dñëe
;

208 
mpmc_bq
(c⁄° mpmc_bq &Ë
dñëe
;

209 
	gmpmc_bq
 &
	g›î©‹
=(
mpmc_bq
 &&Ë
dñëe
;

210 
	gmpmc_bq
 &
	g›î©‹
=(c⁄° 
mpmc_bq
 &Ë
dñëe
;

	@ut0mutex.h

33 #i‚de‡
ut0muãx_h


34 
	#ut0muãx_h


	)

36 
	~"my_öây≥s.h
"

38 
ul⁄g
 
§v_•ö_waô_dñay
;

39 
ul⁄g
 
§v_n_•ö_waô_rounds
;

40 
ul⁄g
 
§v_f‹˚_ªcovîy_¸ash
;

42 #ifde‡
UNIV_LIBRARY


44 
	#muãx_¸óã
(
I
, 
M
Ë()
	)
M

45 
	#muãx_íãr
(
M
Ë()
	)
M

46 
	#muãx_íãr_no•ö
(
M
Ë()
	)
M

47 
	#muãx_íãr_nowaô
(
M
Ë()
	)
M

48 
	#muãx_exô
(
M
Ë()
	)
M

49 
	#muãx_‰ì
(
M
Ë()
	)
M

51 #ifde‡
UNIV_DEBUG


52 
	#muãx_vÆid©e
(
M
Ë(M)

	)

55 
	#muãx_own
(
M
Ë((MË|| 
Ál£
)

	)

57 
OSMuãx
 
	tSysMuãx
;

58 
OSMuãx
 
	tib_muãx_t
;

59 
OSMuãx
 
	tib_bpmuãx_t
;

63 
	~<£t
>

64 
	~"ib0muãx.h
"

65 
	~"os0©omic.h
"

66 
	~"sync0pﬁicy.h
"

72 
	#UT_MUTEX_TYPE
(
M
, 
P
, 
T
Ë
PﬁicyMuãx
<
	tM
<
	tP
>> 
	tT
;

	)

74 
OSMuãx
 
	tEvítMuãx
;

76 #ifde‡
HAVE_IB_LINUX_FUTEX


77 
	$UT_MUTEX_TYPE
(
TTASFuãxMuãx
, 
GíîicPﬁicy
, 
FuãxMuãx
)

78 
	$UT_MUTEX_TYPE
(
TTASFuãxMuãx
, 
BlockMuãxPﬁicy
, 
BlockFuãxMuãx
)

81 
	$UT_MUTEX_TYPE
(
OSTøckMuãx
, 
GíîicPﬁicy
, 
SysMuãx
)

82 
	$UT_MUTEX_TYPE
(
OSTøckMuãx
, 
BlockMuãxPﬁicy
, 
BlockSysMuãx
)

84 
	$UT_MUTEX_TYPE
(
TTASEvítMuãx
, 
GíîicPﬁicy
, 
SyncAºayMuãx
)

85 
	$UT_MUTEX_TYPE
(
TTASEvítMuãx
, 
BlockMuãxPﬁicy
, 
BlockSyncAºayMuãx
)

87 #i‚de‡
UNIV_HOTBACKUP


88 #ifde‡
MUTEX_FUTEX


90 
FuãxMuãx
 
	tib_muãx_t
;

91 
BlockFuãxMuãx
 
	tib_bpmuãx_t
;

92 
	#MUTEX_TYPE
 "U£†fuãxes"

	)

93 #ñi‡
	`deföed
(
MUTEX_SYS
)

94 
SysMuãx
 
	tib_muãx_t
;

95 
BlockSysMuãx
 
	tib_bpmuãx_t
;

96 
	#MUTEX_TYPE
 "U£†sy°em muãxes"

	)

97 #ñi‡
	`deföed
(
MUTEX_EVENT
)

98 
SyncAºayMuãx
 
	tib_muãx_t
;

99 
BlockSyncAºayMuãx
 
	tib_bpmuãx_t
;

100 
	#MUTEX_TYPE
 "U£†evíàmuãxes"

	)

105 
	~"ut0muãx.ic
"

107 
ul⁄g
 
§v_•ö_waô_dñay
;

108 
ul⁄g
 
§v_n_•ö_waô_rounds
;

110 
	#muãx_¸óã
(
I
, 
M
Ë
	`muãx_öô
((M), (I), 
__FILE__
, 
__LINE__
)

	)

112 
	#muãx_íãr
(
M
) \

113 (
M
)->
	`íãr
(
§v_n_•ö_waô_rounds
, 
§v_•ö_waô_dñay
, 
__FILE__
, 
__LINE__
)

	)

115 
	#muãx_íãr_no•ö
(
M
Ë(M)->
	`íãr
(0, 0, 
__FILE__
, 
__LINE__
)

	)

117 
	#muãx_íãr_nowaô
(
M
Ë(M)->
	`åylock
(
__FILE__
, 
__LINE__
)

	)

119 
	#muãx_exô
(
M
Ë(M)->
	`exô
()

	)

121 
	#muãx_‰ì
(
M
Ë
	`muãx_de°roy
(M)

	)

124 
	sIB_muãx_gu¨d
 {

127 
ex∂icô
 
	`IB_muãx_gu¨d
(
ib_muãx_t
 *
ö_muãx
Ë: 
	`m_muãx
(in_mutex) {

128 
	`muãx_íãr
(
ö_muãx
);

132 ~
	`IB_muãx_gu¨d
(Ë{ 
	`muãx_exô
(
m_muãx
); }

135 
	`IB_muãx_gu¨d
(
IB_muãx_gu¨d
 c⁄° &Ë
dñëe
;

138 
IB_muãx_gu¨d
 &
›î©‹
=(IB_muãx_gu¨d c⁄° &Ë
dñëe
;

140 
¥iv©e
:

142 
ib_muãx_t
 *
m_muãx
;

145 #ifde‡
UNIV_DEBUG


148 
	#muãx_vÆid©e
(
M
Ë(M)->
	`vÆid©e
()

	)

153 
	#muãx_own
(
M
Ë(M)->
	`is_ow√d
()

	)

155 
	#muãx_own
(
M
Ë

	)

156 
	#muãx_vÆid©e
(
M
Ë

	)

159 
	~"../meb/muãx.h
"

160 
meb
::
	tMuãx
 
	tib_muãx_t
;

161 
meb
::
	tMuãx
 
	tib_bpmuãx_t
;

165 ˛as†
	cMuãxM⁄ô‹
 {

166 
public
:

168 
	$MuãxM⁄ô‹
() {}

171 ~
	$MuãxM⁄ô‹
(Ë{
	}
}

174 
íabÀ
();

177 
dißbÀ
();

180 
ª£t
();

185 
	gãm∂©e
 <
ty≥«me
 
	gCÆlback
>

186 
boﬁ
 
	$ôî©e
(
CÆlback
 &
ˇŒback
Ëc⁄° 
UNIV_NOTHROW
 {

187 
L©chMëaD©a
::
ôî©‹
 
íd
 = 
œtch_mëa
.
	`íd
();

189 
L©chMëaD©a
::
ôî©‹
 
ô
 = 
œtch_mëa
.
	`begö
(); ià!
íd
; ++it) {

192 i‡(*
ô
 =
NULL
) {

196 
œtch_mëa_t
 *
œtch_mëa
 = *
ô
;

198 
boﬁ
 
ªt
 = 
	`ˇŒback
(*
œtch_mëa
);

200 i‡(!
ªt
) {

201  (
ªt
);

205  (
åue
);

206 
	}
}

210 
MuãxM⁄ô‹
 *
muãx_m⁄ô‹
;

212 #i‚de‡
UNIV_HOTBACKUP


223 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

224 
	$muãx_öô
(
Muãx
 *
muãx
, 
œtch_id_t
 
id
, c⁄° *
fûe_«me
,

225 
uöt32_t
 
löe
) {

226 
	`√w
 (
muãx
Ë
	`Muãx
();

228 
muãx
->
	`öô
(
id
, 
fûe_«me
, 
löe
);

229 
	}
}

235 
	gãm∂©e
 <
ty≥«me
 
	gMuãx
>

236 
	$muãx_de°roy
(
Muãx
 *
muãx
) {

237 
muãx
->
	`de°roy
();

238 
	}
}

	@ut0mutex.ic

39 
	~"sync0¨r.h
"

40 
	~"sync0debug.h
"

46 
	gãm∂©e
 <ãm∂©ê<
	gty≥«me
> 
˛ass
 
	gPﬁicy
>

47 
boﬁ
 
	gTTASEvítMuãx
<
	gPﬁicy
>::
	$waô
(c⁄° *
fûíame
, 
uöt32_t
 
löe
,

48 
uöt32_t
 
•ö
Ë
UNIV_NOTHROW
 {

49 
sync_˚Œ_t
 *
˚Œ
;

50 
sync_¨øy_t
 *
sync_¨r
;

173 
sync_¨r
 = 
	`sync_¨øy_gë_™d_ª£rve_˚Œ
(

174 
this
,

175 (
m_pﬁicy
.
	`gë_id
(Ë=
LATCH_ID_BUF_BLOCK_MUTEX
 ||

176 
m_pﬁicy
.
	`gë_id
(Ë=
LATCH_ID_BUF_POOL_ZIP
)

177 ? 
SYNC_BUF_BLOCK


178 : 
SYNC_MUTEX
,

179 
fûíame
, 
löe
, &
˚Œ
);

188 
	`£t_waôîs
();

192 
uöt32_t
 
i
 = 0; i < 
•ö
; ++i) {

193 i‡(
	`åy_lock
()) {

194 
	`sync_¨øy_‰ì_˚Œ
(
sync_¨r
, 
˚Œ
);

201  (
åue
);

210 
	`sync_¨øy_waô_evít
(
sync_¨r
, 
˚Œ
);

212  (
Ál£
);

213 
	}
}

217 
	gãm∂©e
 <ãm∂©ê<
	gty≥«me
> 
˛ass
 
	gPﬁicy
>

218 
	gTTASEvítMuãx
<
	gPﬁicy
>::
	$sig«l
(Ë
UNIV_NOTHROW
 {

219 
	`˛ór_waôîs
();

223 
	`os_evít_£t
(
m_evít
);

225 
	`sync_¨øy_obje˘_sig«Œed
();

226 
	}
}

	@ut0new.h

126 #i‚de‡
ut0√w_h


127 
	#ut0√w_h


	)

129 
	~<Æg‹ôhm
>

130 
	~<˚ºno
>

131 
	~<c°ddef
>

132 
	~<c°dlib
>

133 
	~<c°rög
>

134 
	~<limôs
>

135 
	~<m≠
>

136 
	~<ty≥_åaôs
>

137 
	~<un‹dîed_£t
>

139 
	~"my_ba£«me.h
"

140 
	~"mysql/comp⁄íts/£rvi˚s/bôs/psi_bôs.h
"

141 
	~"mysql/psi/mysql_mem‹y.h
"

142 
	~"mysql/psi/psi_mem‹y.h
"

144 
	~"os0¥oc.h
"

145 
	~"os0thªad.h
"

146 
	~"univ.i
"

147 
	~"ut0byã.h
"

148 
	~"ut0˝u_ˇche.h
"

149 
	~"ut0ut.h
"

151 
	#OUT_OF_MEMORY_MSG
 \

154 " mem‹y s∑˚ i†limôedÅÿ2 GB o∏4 GB."

	)

157 c⁄° 
size_t
 
Æloc_max_ªåõs
;

171 
PSI_mem‹y_key
 
mem_key_ahi
;

172 
PSI_mem‹y_key
 
mem_key_¨chive
;

173 
PSI_mem‹y_key
 
mem_key_buf_buf_poﬁ
;

174 
PSI_mem‹y_key
 
mem_key_buf_°©_≥r_ödex_t
;

176 
PSI_mem‹y_key
 
mem_key_˛⁄e
;

177 
PSI_mem‹y_key
 
mem_key_di˘_°©s_bg_ªˇlc_poﬁ_t
;

178 
PSI_mem‹y_key
 
mem_key_di˘_°©s_ödex_m≠_t
;

179 
PSI_mem‹y_key
 
mem_key_di˘_°©s_n_diff_⁄_Àvñ
;

180 
PSI_mem‹y_key
 
mem_key_fû_•a˚_t
;

181 
PSI_mem‹y_key
 
mem_key_ªdo_log_¨chive_queue_ñemít
;

182 
PSI_mem‹y_key
 
mem_key_Ÿhî
;

183 
PSI_mem‹y_key
 
mem_key_∑πôi⁄ög
;

184 
PSI_mem‹y_key
 
mem_key_row_log_buf
;

185 
PSI_mem‹y_key
 
mem_key_row_mîge_s‹t
;

186 
PSI_mem‹y_key
 
mem_key_°d
;

187 
PSI_mem‹y_key
 
mem_key_åx_sys_t_rw_åx_ids
;

188 
PSI_mem‹y_key
 
mem_key_undo_•a˚s
;

189 
PSI_mem‹y_key
 
mem_key_ut_lock_‰ì_hash_t
;

194 
ut_√w_boŸ
();

201 
ut_√w_boŸ_ß„
();

203 #ifde‡
UNIV_PFS_MEMORY


206 
c⁄°ex¥
 c⁄° *
	gauto_evít_«mes
[] = {

399 
c⁄°ex¥
 
size_t
 
	gn_auto
 = 
UT_ARR_SIZE
(
auto_evít_«mes
);

400 
PSI_mem‹y_key
 
auto_evít_keys
[
n_auto
];

401 
PSI_mem‹y_öfo
 
pfs_öfo_auto
[
n_auto
];

404 #i‡
deföed
(
__GNUG__
) && (__GNUG__ == 5)

412 
c⁄°ex¥
 
boﬁ
 
	$ut_°rög_begös_wôh
(c⁄° *
a
, c⁄° *
b
, 
size_t
 
b_Àn
,

413 
size_t
 
ödex
 = 0) {

414  (
ödex
 =
b_Àn
 || (
a
[ödex] =
b
[index] &&

415 
	`ut_°rög_begös_wôh
(
a
, 
b
, 
b_Àn
, 
ödex
 + 1)));

416 
	}
}

423 
c⁄°ex¥
 
size_t
 
	$ut_Àn_wôhout_exãnsi⁄
(c⁄° *
fûe
, 
size_t
 
ödex
 = 0) {

424  ((
fûe
[
ödex
] == '\0' || file[index] == '.')

425 ? 
ödex


426 : 
	`ut_Àn_wôhout_exãnsi⁄
(
fûe
, 
ödex
 + 1));

427 
	}
}

435 
c⁄°ex¥
 
PSI_mem‹y_key
 
	$ut_√w_gë_key_by_ba£_fûe
(c⁄° *
fûe
,

436 
size_t
 
Àn
,

437 
size_t
 
ödex
 = 0) {

438  ((
ödex
 =
n_auto
)

439 ? 
PSI_NOT_INSTRUMENTED


440 : (
	`ut_°rög_begös_wôh
(
auto_evít_«mes
[
ödex
], 
fûe
, 
Àn
)

441 ? 
auto_evít_keys
[
ödex
]

442 : 
	`ut_√w_gë_key_by_ba£_fûe
(
fûe
, 
Àn
, 
ödex
 + 1)));

443 
	}
}

449 
c⁄°ex¥
 
PSI_mem‹y_key
 
	$ut_√w_gë_key_by_fûe
(c⁄° *
fûe
) {

450  (
	`ut_√w_gë_key_by_ba£_fûe
(
fûe
, 
	`ut_Àn_wôhout_exãnsi⁄
(file)));

451 
	}
}

453 
	#UT_NEW_THIS_FILE_PSI_KEY
 
	`ut_√w_gë_key_by_fûe
(
MY_BASENAME
)

	)

462 
c⁄°ex¥
 
boﬁ
 
	$ut_°rög_begös_wôh
(c⁄° *
a
, c⁄° *
b
,

463 
size_t
 
b_Àn
) {

464 
size_t
 
i
 = 0; i < 
b_Àn
; ++i) {

465 i‡(
a
[
i
] !
b
[i]) {

466  
Ál£
;

469  
åue
;

470 
	}
}

475 
c⁄°ex¥
 
size_t
 
	$ut_Àn_wôhout_exãnsi⁄
(c⁄° *
fûe
) {

476 
size_t
 
i
 = 0;; ++i) {

477 i‡(
fûe
[
i
] == '\0' || file[i] == '.') {

478  
i
;

481 
	}
}

488 
c⁄°ex¥
 
	$ut_√w_gë_key_by_ba£_fûe
(c⁄° *
fûe
, 
size_t
 
Àn
) {

489 
size_t
 
i
 = 0; i < 
n_auto
; ++i) {

490 i‡(
	`ut_°rög_begös_wôh
(
auto_evít_«mes
[
i
], 
fûe
, 
Àn
)) {

491  
°©ic_ˇ°
<>(
i
);

495 
	}
}

501 
c⁄°ex¥
 
	$ut_√w_gë_key_by_fûe
(c⁄° *
fûe
) {

502  
	`ut_√w_gë_key_by_ba£_fûe
(
fûe
, 
	`ut_Àn_wôhout_exãnsi⁄
(file));

503 
	}
}

508 
	gãm∂©e
 <
	gVÆue
>

509 
	sf‹˚_c⁄°ex¥
 {

510 
c⁄°ex¥
 
	mvÆue
 = 
VÆue
;

513 
	#UT_NEW_THIS_FILE_PSI_INDEX
 \

514 (
f‹˚_c⁄°ex¥
<
	`ut_√w_gë_key_by_fûe
(
MY_BASENAME
)>::
vÆue
)

	)

516 
	#UT_NEW_THIS_FILE_PSI_KEY
 \

517 (
UT_NEW_THIS_FILE_PSI_INDEX
 == -1 \

518 ? 
PSI_NOT_INSTRUMENTED
 \

519 : 
auto_evít_keys
[
UT_NEW_THIS_FILE_PSI_INDEX
])

	)

540 
	$Æig«s
(
°d
::
max_Æign_t
Ë
ut_√w_pfx_t
 {

541 #ifde‡
UNIV_PFS_MEMORY


548 
PSI_mem‹y_key
 
m_key
;

557 
PSI_thªad
 *
m_ow√r
;

568 
size_t
 
m_size
;

569 
	}
};

572 
	gãm∂©e
 <
˛ass
 
	gT
>

573 ˛as†
	cut_Æloˇt‹
 {

574 
	mpublic
:

575 
T
 *
	tpoöãr
;

576 c⁄° 
	tT
 *
	tc⁄°_poöãr
;

577 
	mT
 &
	tª„ªn˚
;

578 c⁄° 
	tT
 &
	tc⁄°_ª„ªn˚
;

579 
T
 
	tvÆue_ty≥
;

580 
size_t
 
	tsize_ty≥
;

581 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

583 
°©ic_as£π
(
Æignof
(
T
Ë<Æignof(
°d
::
max_Æign_t
),

588 
ex∂icô
 
	$ut_Æloˇt‹
(
PSI_mem‹y_key
 
key
 = 
PSI_NOT_INSTRUMENTED
)

590 #ifde‡
UNIV_PFS_MEMORY


591 
	`m_key
(
key
),

593 
	$m_oom_Áèl
(
åue
) {

598 
ãm∂©e
 <
˛ass
 
U
>

599 
	`ut_Æloˇt‹
(c⁄° 
ut_Æloˇt‹
<
U
> &
Ÿhî
)

601 #ifde‡
UNIV_PFS_MEMORY


602 
	`m_key
(
Ÿhî
.
	`gë_mem_key
()),

604 
	`m_oom_Áèl
(
Ÿhî
.
	$is_oom_Áèl
()) {

605 
	}
}

610 
	gut_Æloˇt‹
 &
	$£t_oom_nŸ_Áèl
() {

611 
m_oom_Áèl
 = 
Ál£
;

612  (*
this
);

613 
	}
}

617 
boﬁ
 
	$is_oom_Áèl
(Ëc⁄° {  (
m_oom_Áèl
); 
	}
}

619 #ifde‡
UNIV_PFS_MEMORY


622 
PSI_mem‹y_key
 
	$gë_mem_key
() const {

624  (
m_key
);

625 
	}
}

630 
size_ty≥
 
	$max_size
() const {

631 c⁄° 
size_ty≥
 
s_max
 = 
°d
::
numîic_limôs
<size_ty≥>::
	`max
();

633 #ifde‡
UNIV_PFS_MEMORY


634  ((
s_max
 - (
ut_√w_pfx_t
)Ë/ (
T
));

636  (
s_max
 / (
T
));

638 
	}
}

656 
poöãr
 
	$Æloˇã
(
size_ty≥
 
n_ñemíts
, 
c⁄°_poöãr
 
höt
 = 
nuŒ±r
,

657 
PSI_mem‹y_key
 
key
 = 
PSI_NOT_INSTRUMENTED
,

658 
boﬁ
 
£t_to_zîo
 = 
Ál£
, boﬁ 
throw_⁄_îr‹
 = 
åue
) {

659 i‡(
n_ñemíts
 == 0) {

660  (
nuŒ±r
);

663 i‡(
n_ñemíts
 > 
	`max_size
()) {

664 i‡(
throw_⁄_îr‹
) {

665 
	`throw
(
°d
::
	`bad_Æloc
());

667  (
nuŒ±r
);

671 *
±r
;

672 
size_t
 
tŸÆ_byãs
 = 
n_ñemíts
 * (
T
);

674 #ifde‡
UNIV_PFS_MEMORY


675 
tŸÆ_byãs
 +(
ut_√w_pfx_t
);

678 
size_t
 
ªåõs
 = 1;;Ñetries++) {

679 i‡(
£t_to_zîo
) {

680 
±r
 = 
	`ˇŒoc
(1, 
tŸÆ_byãs
);

682 
±r
 = 
	`mÆloc
(
tŸÆ_byãs
);

685 i‡(
±r
 !
nuŒ±r
 || 
ªåõs
 >
Æloc_max_ªåõs
) {

689 
	`os_thªad_¶ìp
(1000000 );

692 i‡(
±r
 =
nuŒ±r
) {

693 
ib
::
	`Áèl_‹_îr‹
(
m_oom_Áèl
)

694 << "C™nŸáŒoˇã " << 
tŸÆ_byãs
 << " bytes of memoryáfter "

695 << 
Æloc_max_ªåõs
 << "Ñetries over " <<álloc_max_retries

696 << " sec⁄ds. OSÉº‹: " << 
	`°ªº‹
(
î∫o
) << " (" <<Érrno << "). "

697 << 
OUT_OF_MEMORY_MSG
;

698 i‡(
throw_⁄_îr‹
) {

699 
	`throw
(
°d
::
	`bad_Æloc
());

701  (
nuŒ±r
);

705 #ifde‡
UNIV_PFS_MEMORY


706 
ut_√w_pfx_t
 *
pfx
 = 
°©ic_ˇ°
<ut_√w_pfx_à*>(
±r
);

707 
	`Æloˇã_åa˚
(
tŸÆ_byãs
, 
key
, 
pfx
);

708  (
ªöãΩªt_ˇ°
<
poöãr
>(
pfx
 + 1));

710  (
ªöãΩªt_ˇ°
<
poöãr
>(
±r
));

712 
	}
}

717 
	$dóŒoˇã
(
poöãr
 
±r
, 
size_ty≥
 
n_ñemíts
 = 0) {

718 i‡(
±r
 =
nuŒ±r
) {

722 #ifde‡
UNIV_PFS_MEMORY


723 
ut_√w_pfx_t
 *
pfx
 = 
ªöãΩªt_ˇ°
<ut_√w_pfx_à*>(
±r
) - 1;

725 
	`dóŒoˇã_åa˚
(
pfx
);

727 
	`‰ì
(
pfx
);

729 
	`‰ì
(
±r
);

731 
	}
}

735 
	$c⁄°ru˘
(
poöãr
 
p
, c⁄° 
T
 &
vÆ
Ë{ 
	`√w
 (pË
	`T
(vÆ); 
	}
}

738 
	$de°roy
(
poöãr
 
p
Ë{Ö->~
	`T
(); 
	}
}

741 
poöãr
 
	$addªss
(
ª„ªn˚
 
x
Ëc⁄° {  (&x); 
	}
}

744 
c⁄°_poöãr
 
	$addªss
(
c⁄°_ª„ªn˚
 
x
Ëc⁄° {  (&x); 
	}
}

746 
	gãm∂©e
 <
˛ass
 
	gU
>

747 
	sªböd
 {

748 
	gut_Æloˇt‹
<
	tU
> 
	tŸhî
;

753 #ifde‡
UNIV_PFS_MEMORY


763 
poöãr
 
	$ªÆloˇã
(*
±r
, 
size_ty≥
 
n_ñemíts
, 
PSI_mem‹y_key
 
key
) {

764 i‡(
n_ñemíts
 == 0) {

765 
	`dóŒoˇã
(
°©ic_ˇ°
<
poöãr
>(
±r
));

766  (
nuŒ±r
);

769 i‡(
±r
 =
nuŒ±r
) {

770  (
	`Æloˇã
(
n_ñemíts
, 
nuŒ±r
, 
key
, 
Ál£
, false));

773 i‡(
n_ñemíts
 > 
	`max_size
()) {

774  (
nuŒ±r
);

777 
ut_√w_pfx_t
 *
pfx_ﬁd
;

778 
ut_√w_pfx_t
 *
pfx_√w
;

779 
size_t
 
tŸÆ_byãs
;

781 
pfx_ﬁd
 = 
ªöãΩªt_ˇ°
<
ut_√w_pfx_t
 *>(
±r
) - 1;

783 
tŸÆ_byãs
 = 
n_ñemíts
 * (
T
Ë+ (
ut_√w_pfx_t
);

785 
size_t
 
ªåõs
 = 1;;Ñetries++) {

786 
pfx_√w
 = 
°©ic_ˇ°
<
ut_√w_pfx_t
 *>(
	`ªÆloc
(
pfx_ﬁd
, 
tŸÆ_byãs
));

788 i‡(
pfx_√w
 !
nuŒ±r
 || 
ªåõs
 >
Æloc_max_ªåõs
) {

792 
	`os_thªad_¶ìp
(1000000 );

795 i‡(
pfx_√w
 =
nuŒ±r
) {

796 
ib
::
	`Áèl_‹_îr‹
(
m_oom_Áèl
)

797 << "C™nŸÑóŒoˇã " << 
tŸÆ_byãs
 << " bytes of memoryáfter "

798 << 
Æloc_max_ªåõs
 << "Ñetries over " <<álloc_max_retries

799 << " sec⁄ds. OSÉº‹: " << 
	`°ªº‹
(
î∫o
) << " (" <<Érrno << "). "

800 << 
OUT_OF_MEMORY_MSG
;

802  (
nuŒ±r
);

807 
	`dóŒoˇã_åa˚
(
pfx_√w
);

810 
	`Æloˇã_åa˚
(
tŸÆ_byãs
, 
key
, 
pfx_√w
);

812  (
ªöãΩªt_ˇ°
<
poöãr
>(
pfx_√w
 + 1));

813 
	}
}

823 
poöãr
 
	$√w_¨øy
(
size_ty≥
 
n_ñemíts
, 
PSI_mem‹y_key
 
key
) {

824 
	`°©ic_as£π
(
°d
::
is_deÁu…_c⁄°ru˘ibÀ
<
T
>::
vÆue
,

827 
T
 *
p
 = 
	`Æloˇã
(
n_ñemíts
, 
nuŒ±r
, 
key
, 
Ál£
, false);

829 i‡(
p
 =
nuŒ±r
) {

830  (
nuŒ±r
);

833 
T
 *
fú°
 = 
p
;

834 
size_ty≥
 
i
;

836 
åy
 {

837 
i
 = 0; i < 
n_ñemíts
; i++) {

838 
	`√w
 (
p
Ë
T
;

839 ++
p
;

841 } 
	`ˇtch
 (...) {

842 
size_ty≥
 
j
 = 0; j < 
i
; j++) {

843 --
p
;

844 
p
->~
	`T
();

847 
	`dóŒoˇã
(
fú°
);

849 
throw
;

852  (
fú°
);

853 
	}
}

858 
	$dñëe_¨øy
(
T
 *
±r
) {

859 i‡(
±r
 =
nuŒ±r
) {

863 c⁄° 
size_ty≥
 
n_ñemíts
 = 
	`n_ñemíts_Æloˇãd
(
±r
);

865 
T
 *
p
 = 
±r
 + 
n_ñemíts
 - 1;

867 
size_ty≥
 
i
 = 0; i < 
n_ñemíts
; i++) {

868 
p
->~
	`T
();

869 --
p
;

872 
	`dóŒoˇã
(
±r
);

873 
	}
}

885 
poöãr
 
	$Æloˇã_œrge
(
size_ty≥
 
n_ñemíts
, 
ut_√w_pfx_t
 *
pfx
) {

886 i‡(
n_ñemíts
 =0 ||Ç_ñemít†> 
	`max_size
()) {

887  (
nuŒ±r
);

890 
ulöt
 
n_byãs
 = 
n_ñemíts
 * (
T
);

892 
poöãr
 
±r
 = 
ªöãΩªt_ˇ°
<poöãr>(
	`os_mem_Æloc_œrge
(&
n_byãs
));

894 #ifde‡
UNIV_PFS_MEMORY


895 i‡(
±r
 !
nuŒ±r
) {

896 
	`Æloˇã_åa˚
(
n_byãs
, 
PSI_NOT_INSTRUMENTED
, 
pfx
);

899 
pfx
->
m_size
 = 
n_byãs
;

902  (
±r
);

903 
	}
}

910 
	$dóŒoˇã_œrge
(
poöãr
 
±r
, c⁄° 
ut_√w_pfx_t
 *
pfx
) {

911 #ifde‡
UNIV_PFS_MEMORY


912 
	`dóŒoˇã_åa˚
(
pfx
);

915 
	`os_mem_‰ì_œrge
(
±r
, 
pfx
->
m_size
);

916 
	}
}

918 
	g¥iv©e
:

919 #ifde‡
UNIV_PFS_MEMORY


924 
size_ty≥
 
	$n_ñemíts_Æloˇãd
(
c⁄°_poöãr
 
±r
) {

925 c⁄° 
ut_√w_pfx_t
 *
pfx
 = 
ªöãΩªt_ˇ°
<c⁄° ut_√w_pfx_à*>(
±r
) - 1;

927 c⁄° 
size_ty≥
 
u£r_byãs
 = 
pfx
->
m_size
 - (
ut_√w_pfx_t
);

929 
	`ut_ad
(
u£r_byãs
 % (
T
) == 0);

931  (
u£r_byãs
 / (
T
));

932 
	}
}

939 
	$Æloˇã_åa˚
(
size_t
 
size
, 
PSI_mem‹y_key
 
key
, 
ut_√w_pfx_t
 *
pfx
) {

940 i‡(
m_key
 !
PSI_NOT_INSTRUMENTED
) {

941 
key
 = 
m_key
;

944 
pfx
->
m_key
 = 
	`PSI_MEMORY_CALL
(
mem‹y_Æloc
)(
key
, 
size
, &pfx->
m_ow√r
);

946 
pfx
->
m_size
 = 
size
;

947 
	}
}

951 
	$dóŒoˇã_åa˚
(c⁄° 
ut_√w_pfx_t
 *
pfx
) {

952 
	`PSI_MEMORY_CALL
(
mem‹y_‰ì
)(
pfx
->
m_key
,Öfx->
m_size
,Öfx->
m_ow√r
);

953 
	}
}

957 
	gãm∂©e
 <
˛ass
 
	gU
>

958 
	g›î©‹
=(c⁄° 
ut_Æloˇt‹
<
U
> &);

960 #ifde‡
UNIV_PFS_MEMORY


962 
PSI_mem‹y_key
 
	gm_key
;

967 
boﬁ
 
	gm_oom_Áèl
;

973 
	gãm∂©e
 <
ty≥«me
 
	gT
>

974 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
ut_Æloˇt‹
<
T
> &
lhs
, c⁄° 
	gut_Æloˇt‹
<
	gT
> &
	grhs
) {

975  (
	gåue
);

979 
	gãm∂©e
 <
ty≥«me
 
	gT
>

980 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
ut_Æloˇt‹
<
T
> &
lhs
, c⁄° 
	gut_Æloˇt‹
<
	gT
> &
	grhs
) {

981  (!(
	glhs
 =
rhs
));

984 #ifde‡
UNIV_PFS_MEMORY


998 
	#UT_NEW
(
ex¥
, 
key
) \

1002 ::
	`√w
 (
ut_Æloˇt‹
<
	`de˛ty≥
(
ex¥
)>(
key
).
	`Æloˇã
(1, 
NULL
, key, 
Ál£
, \

1003 
Ál£
)Ë
ex¥


	)

1017 
	#UT_NEW_NOKEY
(
ex¥
Ë
	`UT_NEW
”x¥, 
PSI_NOT_INSTRUMENTED
)

	)

1023 
	#UT_DELETE
(
±r
Ë
	`ut_dñëe
’å)

	)

1027 
	gãm∂©e
 <
ty≥«me
 
	gT
>

1028 
ölöe
 
	$ut_dñëe
(
T
 *
±r
) {

1029 i‡(
±r
 =
nuŒ±r
) {

1033 
ut_Æloˇt‹
<
T
> 
Æloˇt‹
;

1035 
Æloˇt‹
.
	`de°roy
(
±r
);

1036 
Æloˇt‹
.
	`dóŒoˇã
(
±r
);

1037 
	}
}

1046 
	#UT_NEW_ARRAY
(
ty≥
, 
n_ñemíts
, 
key
) \

1047 
ut_Æloˇt‹
<
ty≥
>(
key
).
	`√w_¨øy
(
n_ñemíts
, 
UT_NEW_THIS_FILE_PSI_KEY
)

	)

1055 
	#UT_NEW_ARRAY_NOKEY
(
ty≥
, 
n_ñemíts
) \

1056 
	`UT_NEW_ARRAY
(
ty≥
, 
n_ñemíts
, 
PSI_NOT_INSTRUMENTED
)

	)

1062 
	#UT_DELETE_ARRAY
(
±r
Ë
	`ut_dñëe_¨øy
’å)

	)

1067 
	gãm∂©e
 <
ty≥«me
 
	gT
>

1068 
ölöe
 
	$ut_dñëe_¨øy
(
T
 *
±r
) {

1069 
ut_Æloˇt‹
<
T
>().
	`dñëe_¨øy
(
±r
);

1070 
	}
}

1095 
	#ut_mÆloc
(
n_byãs
, 
key
) \

1096 
°©ic_ˇ°
<*>(
ut_Æloˇt‹
<
byã
>(
key
).
	`Æloˇã
( \

1097 
n_byãs
, 
NULL
, 
UT_NEW_THIS_FILE_PSI_KEY
, 
Ál£
, fÆ£))

	)

1099 
	#ut_zÆloc
(
n_byãs
, 
key
) \

1100 
°©ic_ˇ°
<*>(
ut_Æloˇt‹
<
byã
>(
key
).
	`Æloˇã
( \

1101 
n_byãs
, 
NULL
, 
UT_NEW_THIS_FILE_PSI_KEY
, 
åue
, 
Ál£
))

	)

1103 
	#ut_mÆloc_nokey
(
n_byãs
) \

1104 
°©ic_ˇ°
<*>( \

1105 
ut_Æloˇt‹
<
byã
>(
PSI_NOT_INSTRUMENTED
) \

1106 .
	`Æloˇã
(
n_byãs
, 
NULL
, 
UT_NEW_THIS_FILE_PSI_KEY
, 
Ál£
, fÆ£))

	)

1108 
	#ut_zÆloc_nokey
(
n_byãs
) \

1109 
°©ic_ˇ°
<*>( \

1110 
ut_Æloˇt‹
<
byã
>(
PSI_NOT_INSTRUMENTED
) \

1111 .
	`Æloˇã
(
n_byãs
, 
NULL
, 
UT_NEW_THIS_FILE_PSI_KEY
, 
åue
, 
Ál£
))

	)

1113 
	#ut_zÆloc_nokey_noÁèl
(
n_byãs
) \

1114 
°©ic_ˇ°
<*>( \

1115 
ut_Æloˇt‹
<
byã
>(
PSI_NOT_INSTRUMENTED
) \

1116 .
	`£t_oom_nŸ_Áèl
() \

1117 .
	`Æloˇã
(
n_byãs
, 
NULL
, 
UT_NEW_THIS_FILE_PSI_KEY
, 
åue
, 
Ál£
))

	)

1119 
	#ut_ªÆloc
(
±r
, 
n_byãs
) \

1120 
°©ic_ˇ°
<*>(
ut_Æloˇt‹
<
byã
>(
PSI_NOT_INSTRUMENTED
) \

1121 .
	`ªÆloˇã
(
±r
, 
n_byãs
, 
UT_NEW_THIS_FILE_PSI_KEY
))

	)

1123 
	#ut_‰ì
(
±r
) \

1124 
ut_Æloˇt‹
<
byã
>(
PSI_NOT_INSTRUMENTED
) \

1125 .
	`dóŒoˇã
(
ªöãΩªt_ˇ°
<
byã
 *>(
±r
))

	)

1131 
	#UT_NEW
(
ex¥
, 
key
Ë::
	`√w
 (
°d
::
nŸhrow
Ë
	)
expr

1132 
	#UT_NEW_NOKEY
(
ex¥
Ë::
	`√w
 (
°d
::
nŸhrow
Ë
	)
expr

1133 
	#UT_DELETE
(
±r
Ë::
dñëe
 
	)
ptr

1135 
	#UT_NEW_ARRAY
(
ty≥
, 
n_ñemíts
, 
key
) \

1136 ::
	`√w
 (
°d
::
nŸhrow
Ë
ty≥
[
n_ñemíts
]

	)

1138 
	#UT_NEW_ARRAY_NOKEY
(
ty≥
, 
n_ñemíts
) \

1139 ::
	`√w
 (
°d
::
nŸhrow
Ë
ty≥
[
n_ñemíts
]

	)

1141 
	#UT_DELETE_ARRAY
(
±r
Ë::
dñëe
[] 
	)
ptr

1143 
	#ut_mÆloc
(
n_byãs
, 
key
Ë::
	`mÆloc
“_byãs)

	)

1145 
	#ut_zÆloc
(
n_byãs
, 
key
Ë::
	`ˇŒoc
(1,Ç_byãs)

	)

1147 
	#ut_mÆloc_nokey
(
n_byãs
Ë::
	`mÆloc
“_byãs)

	)

1149 
	#ut_zÆloc_nokey
(
n_byãs
Ë::
	`ˇŒoc
(1,Ç_byãs)

	)

1151 
	#ut_zÆloc_nokey_noÁèl
(
n_byãs
Ë::
	`ˇŒoc
(1,Ç_byãs)

	)

1153 
	#ut_ªÆloc
(
±r
, 
n_byãs
Ë::
	`ªÆloc
’å,Ç_byãs)

	)

1155 
	#ut_‰ì
(
±r
Ë::
	`‰ì
’å)

	)

1162 
UNIV_INLINE


1163 *
ut_Æign
(c⁄° *
±r
, 
ulöt
 
Æign_no
);

1169 
	gãm∂©e
 <
ty≥«me
 
	gT_Ty≥
, 
size_t
 
	gT_Align_to
>

1170 ˛as†
	cÆig√d_mem‹y
 {

1171 
	mpublic
:

1172 
vútuÆ
 ~
	$Æig√d_mem‹y
() {

1173 i‡(!
this
->
	`is_obje˘_em±y
()) {

1174 
this
->
	`‰ì_mem‹y
();

1178 
vútuÆ
 
	`de°roy
() = 0;

1181 
›î©‹
 
T_Ty≥
 *() const {

1182 
	`ut_a
(
m_obje˘
 !
nuŒ±r
);

1183  
m_obje˘
;

1184 
	}
}

1188 
T_Ty≥
 *
	g›î©‹
->() const {

1189 
ut_a
(
m_obje˘
 !
nuŒ±r
);

1190  
	gm_obje˘
;

1193 
	g¥Ÿe˘ed
:

1195 
boﬁ
 
	$is_obje˘_em±y
(Ëc⁄° {  
m_obje˘
 =
nuŒ±r
; 
	}
}

1201 
T_Ty≥
 *
	$Æloˇã
(
size_t
 
size
) {

1202 
	`°©ic_as£π
(
T_Align_to
 > 0, "IncorrectálignmentÖarameter");

1203 
	`ut_a
(
m_mem‹y
 =
nuŒ±r
);

1204 
	`ut_a
(
m_obje˘
 =
nuŒ±r
);

1206 
m_mem‹y
 = 
	`ut_zÆloc_nokey
(
size
 + 
T_Align_to
 - 1);

1207 
m_obje˘
 = 
°©ic_ˇ°
<
T_Ty≥
 *>(::
	`ut_Æign
(
m_mem‹y
, 
T_Align_to
));

1208  
m_obje˘
;

1209 
	}
}

1212 
	$‰ì_mem‹y
() {

1213 
	`ut_a
(
m_mem‹y
 !
nuŒ±r
);

1214 
	`ut_a
(
m_obje˘
 !
nuŒ±r
);

1216 
	`ut_‰ì
(
m_mem‹y
);

1218 
m_mem‹y
 = 
nuŒ±r
;

1219 
m_obje˘
 = 
nuŒ±r
;

1220 
	}
}

1222 
	g¥iv©e
:

1224 
T_Ty≥
 *
m_obje˘
 = 
nuŒ±r
;

1227 *
	gm_mem‹y
 = 
nuŒ±r
;

1233 
	gãm∂©e
 <
ty≥«me
 
	gT_Ty≥
, 
size_t
 
	gT_Align_to
 = 
ut
::
INNODB_CACHE_LINE_SIZE
>

1234 
˛ass
 
Æig√d_poöãr
 : 
public
 
Æig√d_mem‹y
<
T_Ty≥
, 
	gT_Align_to
> {

1235 
	gpublic
:

1236 ~
Æig√d_poöãr
(Ë
ovîride
 {

1237 i‡(!
this
->
is_obje˘_em±y
()) {

1238 
this
->
de°roy
();

1244 
	gãm∂©e
 <
	gty≥«me
... 
	gT_Args
>

1245 
¸óã
(
T_Args
... 
¨gs
) {

1246 
√w
 (
this
->
Æloˇã
((
T_Ty≥
))ËT_Ty≥(
°d
::
f‹w¨d
(
¨gs
)...);

1250 
de°roy
(Ë
	govîride
 {

1251 (*
	gthis
)->~
T_Ty≥
();

1252 
	gthis
->
‰ì_mem‹y
();

1260 
	gãm∂©e
 <
ty≥«me
 
	gT_Ty≥
, 
size_t
 
	gT_Align_to
 = 
ut
::
INNODB_CACHE_LINE_SIZE
>

1261 
˛ass
 
Æig√d_¨øy_poöãr
 : 
public
 
Æig√d_mem‹y
<
T_Ty≥
, 
	gT_Align_to
> {

1262 
	gpublic
:

1266 
¸óã
(
size_t
 
size
) {

1267 #i‡!(
deföed
 
__GNUC__
 && __GNUC__ <= 4)

1268 
°©ic_as£π
(
°d
::
is_åivüŒy_deÁu…_c⁄°ru˘ibÀ
<
T_Ty≥
>::
vÆue
,

1272 
	gm_size
 = 
size
;

1273 
	gthis
->
Æloˇã
((
T_Ty≥
Ë* 
m_size
);

1277 
de°roy
(Ë
	govîride
 {

1278 
°©ic_as£π
(
°d
::
is_åivüŒy_de°ru˘ibÀ
<
T_Ty≥
>::
vÆue
,

1281 
	gthis
->
‰ì_mem‹y
();

1286 
	gT_Ty≥
 &
	g›î©‹
[](
size_t
 
	gödex
) const {

1287 
ut_a
(
ödex
 < 
m_size
);

1288  ((
	gT_Ty≥
 *)*
	gthis
)[
ödex
];

1291 
	g¥iv©e
:

1293 
size_t
 
m_size
;

1296 
«me•a˚
 
	gut
 {

1302 
usög
 
	go°rög°ªam
 =

1303 
°d
::
basic_o°rög°ªam
<, 
	g°d
::
ch¨_åaôs
<>, 
	gut_Æloˇt‹
<>>;

1306 
	gãm∂©e
 <
ty≥«me
 
	gT
>

1307 
usög
 
	gve˘‹
 = 
°d
::
ve˘‹
<
T
, 
	gut_Æloˇt‹
<
	gT
>>;

1309 
	gãm∂©e
 <
ty≥«me
 
	gKey
>

1310 
usög
 
	gun‹dîed_£t
 = 
°d
::
un‹dîed_£t
<
Key
, 
	g°d
::
hash
<Key>,

1311 
	g°d
::
equÆ_to
<
Key
>, 
	gut_Æloˇt‹
<
	gKey
>>;

	@ut0pool.h

33 #i‚de‡
ut0poﬁ_h


34 
	#ut0poﬁ_h


	)

36 
	~<fun˘i⁄Æ
>

37 
	~<queue
>

38 
	~<ve˘‹
>

40 
	~"ut0√w.h
"

45 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
,Åy≥«mê
	gFa˘‹y
,Åy≥«mê
	gLockSå©egy
>

46 
	sPoﬁ
 {

47 
Ty≥
 
	tvÆue_ty≥
;

51 
	sEÀmít
 {

52 
Poﬁ
 *
	mm_poﬁ
;

53 
vÆue_ty≥
 
	mm_ty≥
;

58 
Poﬁ
(
size_t
 
size
Ë: 
m_íd
(), 
m_°¨t
(), 
m_size
(size), 
m_œ°
() {

59 
ut_a
(
size
 >(
EÀmít
));

61 
	mm_lock_°øãgy
.
¸óã
();

63 
ut_a
(
m_°¨t
 =
nuŒ±r
);

65 
	mm_°¨t
 = 
ªöãΩªt_ˇ°
<
EÀmít
 *>(
ut_zÆloc_nokey
(
m_size
));

67 
	mm_œ°
 = 
m_°¨t
;

69 
	mm_íd
 = &
m_°¨t
[
m_size
 / (*m_start)];

76 
öô
(
ut_mö
(
size_t
(16), size_t(
m_íd
 - 
m_°¨t
)));

78 
ut_ad
(
m_pqueue
.
size
(Ë<
size_t
(
m_œ°
 - 
m_°¨t
));

82 ~
Poﬁ
() {

83 
	mm_lock_°øãgy
.
de°roy
();

85 
EÀmít
 *
	mñem
 = 
m_°¨t
;ÉÀm !
m_œ°
; ++elem) {

86 
ut_ad
(
ñem
->
m_poﬁ
 =
this
);

87 
	mFa˘‹y
::
de°roy
(&
ñem
->
m_ty≥
);

90 
ut_‰ì
(
m_°¨t
);

91 
	mm_íd
 = 
m_œ°
 = 
m_°¨t
 = 
nuŒ±r
;

92 
	mm_size
 = 0;

97 
Ty≥
 *
gë
() {

98 
EÀmít
 *
	mñem
;

100 
	mm_lock_°øãgy
.
íãr
();

102 i‡(!
	mm_pqueue
.
em±y
()) {

103 
	mñem
 = 
m_pqueue
.
t›
();

104 
	mm_pqueue
.
p›
();

106 } i‡(
	mm_œ°
 < 
	mm_íd
) {

108 
öô
(
m_íd
 - 
m_œ°
);

110 
ut_ad
(!
m_pqueue
.
em±y
());

112 
	mñem
 = 
m_pqueue
.
t›
();

113 
	mm_pqueue
.
p›
();

115 
	mñem
 = 
nuŒ±r
;

118 
	mm_lock_°øãgy
.
exô
();

120  (
	mñem
 !
nuŒ±r
 ? &
ñem
->
m_ty≥
 :Çullptr);

125 
mem_‰ì
(
vÆue_ty≥
 *
±r
) {

126 
EÀmít
 *
	mñem
;

127 
byã
 *
	mp
 = 
ªöãΩªt_ˇ°
<byã *>(
±r
 + 1);

129 
	mñem
 = 
ªöãΩªt_ˇ°
<
EÀmít
 *>(
p
 - (*
ñem
));

131 
	mñem
->
	mm_poﬁ
->
put
(
ñem
);

134 
	m¥Ÿe˘ed
:

136 
Poﬁ
(const Pool &);

137 
	mPoﬁ
 &
	m›î©‹
=(c⁄° 
Poﬁ
 &);

139 
	m¥iv©e
:

141 
°d
::
	t¥i‹ôy_queue
<
	tEÀmít
 *,

142 
	t°d
::
	tve˘‹
<
	tEÀmít
 *, 
	tut_Æloˇt‹
<Element *>>,

143 
	t°d
::
	tgª©î
<
	tEÀmít
 *>>

144 
	tpqueue_t
;

148 
put
(
EÀmít
 *
ñem
) {

149 
	mm_lock_°øãgy
.
íãr
();

151 
ut_ad
(
ñem
 >
m_°¨t
 &&ÉÀm < 
m_œ°
);

153 
ut_ad
(
Fa˘‹y
::
debug
(&
ñem
->
m_ty≥
));

155 
	mm_pqueue
.
push
(
ñem
);

157 
	mm_lock_°øãgy
.
exô
();

162 
öô
(
size_t
 
n_ñems
) {

163 
ut_ad
(
size_t
(
m_íd
 - 
m_œ°
Ë>
n_ñems
);

165 
size_t
 
	mi
 = 0; i < 
	mn_ñems
; ++i, ++
	mm_œ°
) {

166 
	mm_œ°
->
	mm_poﬁ
 = 
this
;

167 
	mFa˘‹y
::
öô
(&
m_œ°
->
m_ty≥
);

168 
	mm_pqueue
.
push
(
m_œ°
);

171 
ut_ad
(
m_œ°
 <
m_íd
);

174 
	m¥iv©e
:

176 
EÀmít
 *
m_íd
;

179 
EÀmít
 *
	mm_°¨t
;

182 
size_t
 
	mm_size
;

185 
EÀmít
 *
	mm_œ°
;

188 
pqueue_t
 
	mm_pqueue
;

191 
LockSå©egy
 
	mm_lock_°øãgy
;

194 
	gãm∂©e
 <
ty≥«me
 
	gPoﬁ
,Åy≥«mê
	gLockSå©egy
>

195 
	sPoﬁM™agî
 {

196 
Poﬁ
 
	tPoﬁTy≥
;

197 
ty≥«me
 
	tPoﬁTy≥
::
	tvÆue_ty≥
 value_type;

199 
PoﬁM™agî
(
size_t
 
size
Ë: 
m_size
(sizeË{ 
¸óã
(); }

201 ~
PoﬁM™agî
() {

202 
de°roy
();

204 
ut_a
(
m_poﬁs
.
em±y
());

209 
vÆue_ty≥
 *
gë
() {

210 
size_t
 
	mödex
 = 0;

211 
size_t
 
	mdñay
 = 1;

212 
vÆue_ty≥
 *
	m±r
 = 
nuŒ±r
;

215 
	mm_lock_°øãgy
.
íãr
();

217 
ut_ad
(!
m_poﬁs
.
em±y
());

219 
size_t
 
	mn_poﬁs
 = 
m_poﬁs
.
size
();

221 
PoﬁTy≥
 *
	mpoﬁ
 = 
m_poﬁs
[
ödex
 % 
n_poﬁs
];

223 
	mm_lock_°øãgy
.
exô
();

225 
	m±r
 = 
poﬁ
->
gë
();

227 i‡(
	m±r
 =
nuŒ±r
 && (
ödex
 / 
n_poﬁs
) > 2) {

228 i‡(!
add_poﬁ
(
n_poﬁs
)) {

229 
ib
::
îr‹
(
ER_IB_MSG_FAILED_TO_ALLOCATE_WAIT
, 
m_size
, 
dñay
);

235 
os_thªad_¶ìp
(
dñay
 * 1000000);

237 i‡(
	mdñay
 < 32) {

238 
	mdñay
 <<= 1;

242 
	mdñay
 = 1;

246 ++
	mödex
;

248 } 
	m±r
 =
nuŒ±r
);

250  (
	m±r
);

253 
mem_‰ì
(
vÆue_ty≥
 *
±r
Ë{ 
	mPoﬁTy≥
::mem_free(ptr); }

255 
	m¥iv©e
:

260 
boﬁ
 
add_poﬁ
(
size_t
 
n_poﬁs
) {

261 
boﬁ
 
added
 = 
Ál£
;

263 
	mm_lock_°øãgy
.
íãr
();

265 i‡(
	mn_poﬁs
 < 
	mm_poﬁs
.
size
()) {

267 
	madded
 = 
åue
;

269 
PoﬁTy≥
 *
	mpoﬁ
;

271 
ut_ad
(
n_poﬁs
 =
m_poﬁs
.
size
());

273 
	mpoﬁ
 = 
UT_NEW_NOKEY
(
PoﬁTy≥
(
m_size
));

275 i‡(
	mpoﬁ
 !
nuŒ±r
) {

276 
ut_ad
(
n_poﬁs
 <
m_poﬁs
.
size
());

278 
	mm_poﬁs
.
push_back
(
poﬁ
);

280 
	mib
::
öfo
(
ER_IB_MSG_NUM_POOLS
, 
m_poﬁs
.
size
());

282 
	madded
 = 
åue
;

286 
ut_ad
(
n_poﬁs
 < 
m_poﬁs
.
size
(Ë|| !
added
);

288 
	mm_lock_°øãgy
.
exô
();

290  (
	madded
);

294 
¸óã
() {

295 
ut_a
(
m_size
 > (
vÆue_ty≥
));

296 
	mm_lock_°øãgy
.
¸óã
();

298 
add_poﬁ
(0);

302 
de°roy
() {

303 
ty≥«me
 
	mPoﬁs
::
ôî©‹
 
ô
;

304 
ty≥«me
 
	mPoﬁs
::
ôî©‹
 
íd
 = 
m_poﬁs
.end();

306 
	mô
 = 
m_poﬁs
.
begö
(); ià!
íd
; ++it) {

307 
PoﬁTy≥
 *
	mpoﬁ
 = *
ô
;

309 
UT_DELETE
(
poﬁ
);

312 
	mm_poﬁs
.
˛ór
();

314 
	mm_lock_°øãgy
.
de°roy
();

317 
	m¥iv©e
:

319 
PoﬁM™agî
(const PoolManager &);

320 
	mPoﬁM™agî
 &
	m›î©‹
=(c⁄° 
PoﬁM™agî
 &);

322 
	m°d
::
	tve˘‹
<
	tPoﬁTy≥
 *, 
	tut_Æloˇt‹
<PoﬁTy≥ *>> 
	tPoﬁs
;

325 
size_t
 
	mm_size
;

328 
Poﬁs
 
	mm_poﬁs
;

331 
LockSå©egy
 
	mm_lock_°øãgy
;

	@ut0rbt.h

32 #i‚de‡
INNOBASE_UT0RBT_H


33 
	#INNOBASE_UT0RBT_H


	)

35 #i‡!
deföed
(
IB_RBT_TESTING
)

36 
	~"univ.i
"

37 
	~"ut0mem.h
"

39 
	~<as£π.h
>

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

44 
	#ut_mÆloc
 
mÆloc


	)

45 
	#ut_‰ì
 
‰ì


	)

46 
	#ulöt
 

	)

47 
	#ut_a
(
c
Ë
	`as£π
(c)

	)

48 
	#ut_îr‹
 
	`as£π
(0)

	)

49 
	#iboﬁ
 

	)

50 
	#TRUE
 1

	)

51 
	#FALSE
 0

	)

54 
	gib_rbt_node_t
;

55 (*
	tib_rbt_¥öt_node
)(c⁄° 
	tib_rbt_node_t
 *
	tnode
);

56 (*
	tib_rbt_com∑ª
)(c⁄° *
	tp1
, c⁄° *
	tp2
);

57 (*
	tib_rbt_¨g_com∑ª
)(c⁄° *, c⁄° *
	tp1
, c⁄° *
	tp2
);

60 
	eib_rbt_cﬁ‹_t
 { 
IB_RBT_RED
, 
IB_RBT_BLACK
 };

63 
	sib_rbt_node_t
 {

64 
ib_rbt_cﬁ‹_t
 
cﬁ‹
;

66 
ib_rbt_node_t
 *
À·
;

67 
ib_rbt_node_t
 *
right
;

68 
ib_rbt_node_t
 *
∑ª¡
;

70 
vÆue
[1];

74 
	sib_rbt_t
 {

75 
ib_rbt_node_t
 *
nû
;

79 
ib_rbt_node_t
 *
roŸ
;

83 
ulöt
 
n_nodes
;

85 
ib_rbt_com∑ª
 
com∑ª
;

86 
ib_rbt_¨g_com∑ª
 
com∑ª_wôh_¨g
;

88 
ulöt
 
sizeof_vÆue
;

89 *
cmp_¨g
;

94 
	sib_rbt_bound_t
 {

95 c⁄° 
ib_rbt_node_t
 *
œ°
;

97 
ªsu…
;

103 
	#rbt_size
(
t
Ë—->
n_nodes
)

	)

106 
	#rbt_em±y
(
t
Ë(
	`rbt_size
—Ë=0)

	)

109 
	#rbt_vÆue
(
t
, 
n
Ë(— *)&n->
vÆue
[0])

	)

112 
	#rbt_com∑ª
(
t
, 
k
, 
n
Ë—->
	`com∑ª
(k,Ç->
vÆue
))

	)

115 
	`rbt_‰ì
(
ib_rbt_t
 *
åì
);

118 
ib_rbt_t
 *
	`rbt_¸óã
(
size_t
 
sizeof_vÆue
,

119 
ib_rbt_com∑ª
 
com∑ª
);

123 
ib_rbt_t
 *
	`rbt_¸óã_¨g_cmp
(
size_t
 
sizeof_vÆue
,

124 
ib_rbt_¨g_com∑ª
 
com∑ª
,

125 *
cmp_¨g
);

127 
iboﬁ
 
	`rbt_dñëe
(

129 
ib_rbt_t
 *
åì
,

130 c⁄° *
key
);

134 
ib_rbt_node_t
 *
	`rbt_ªmove_node
(

135 
ib_rbt_t
 *
åì
,

136 c⁄° 
ib_rbt_node_t
 *
node
);

142 c⁄° 
ib_rbt_node_t
 *
	`rbt_ö£π
(
ib_rbt_t
 *
åì
,

143 c⁄° *
key
,

144 c⁄° *
vÆue
);

148 c⁄° 
ib_rbt_node_t
 *
	`rbt_add_node
(
ib_rbt_t
 *
åì
,

149 
ib_rbt_bound_t
 *
∑ª¡
,

150 c⁄° *
vÆue
);

154 c⁄° 
ib_rbt_node_t
 *
	`rbt_fú°
(c⁄° 
ib_rbt_t
 *
åì
);

157 c⁄° 
ib_rbt_node_t
 *
	`rbt_œ°
(c⁄° 
ib_rbt_t
 *
åì
);

160 c⁄° 
ib_rbt_node_t
 *
	`rbt_√xt
(c⁄° 
ib_rbt_t
 *
åì
,

161 c⁄° 
ib_rbt_node_t
 *

162 
cuºít
);

165 c⁄° 
ib_rbt_node_t
 *
	`rbt_¥ev
(c⁄° 
ib_rbt_t
 *
åì
,

166 c⁄° 
ib_rbt_node_t
 *

167 
cuºít
);

172 
	`rbt_£¨ch
(c⁄° 
ib_rbt_t
 *
åì
,

173 
ib_rbt_bound_t
 *
∑ª¡
,

174 c⁄° *
key
);

179 
	`rbt_£¨ch_cmp
(c⁄° 
ib_rbt_t
 *
åì
,

180 
ib_rbt_bound_t
 *
∑ª¡
,

181 c⁄° *
key
,

182 
ib_rbt_com∑ª
 
com∑ª
,

183 
ib_rbt_¨g_com∑ª
 
¨g_com∑ª
);

187 
ulöt
 
	`rbt_mîge_uniq
(
ib_rbt_t
 *
d°
,

188 c⁄° 
ib_rbt_t
 *
§c
);

189 #i‡
deföed
 
UNIV_DEBUG
 || deföed 
IB_RBT_TESTING


193 
iboﬁ
 
	`rbt_vÆid©e
(c⁄° 
ib_rbt_t
 *
åì
);

	@ut0rnd.h

33 #i‚de‡
ut0∫d_h


34 
	#ut0∫d_h


	)

36 
	~"univ.i
"

37 
	~"ut0byã.h
"

41 
	#UT_END_OF_FIELD
 257

	)

45 
UNIV_INLINE


46 
ulöt
 
ut_∫d_gí_√xt_ulöt
(

47 
ulöt
 
∫d
);

53 
UNIV_INLINE


54 
ulöt
 
ut_∫d_gí_ulöt
();

60 
UNIV_INLINE


61 
ulöt
 
ut_∫d_öãrvÆ
(ulöà
low
, ulöà
high
);

69 
UNIV_INLINE


70 
ulöt
 
ut_hash_ulöt
(ulöà
key
, ulöà
èbÀ_size
);

75 
UNIV_INLINE


76 
ulöt
 
ut_fﬁd_uŒ
(
ib_uöt64_t
 
d
);

80 
UNIV_INLINE


81 
ulöt
 
	$ut_fﬁd_°rög
(c⁄° *
°r
)

82 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

88 
ulöt
 
	`ut_föd_¥ime
(ulöà
n
);

94 
UNIV_INLINE


95 
ulöt
 
	`ut_fﬁd_ulöt_∑ú
(ulöà
n1
, ulöà
n2
);

101 
UNIV_INLINE


102 
ulöt
 
	`ut_fﬁd_bö¨y
(c⁄° 
byã
 *
°r
, ulöà
Àn
);

104 
	~"ut0∫d.ic
"

	@ut0rnd.ic

33 
	#UT_HASH_RANDOM_MASK
 1463735687

	)

34 
	#UT_HASH_RANDOM_MASK2
 1653893711

	)

36 
	#UT_RND1
 151117737

	)

37 
	#UT_RND2
 119785373

	)

38 
	#UT_RND3
 85689495

	)

39 
	#UT_RND4
 76595339

	)

40 
	#UT_SUM_RND2
 98781234

	)

41 
	#UT_SUM_RND3
 126792457

	)

42 
	#UT_SUM_RND4
 63498502

	)

43 
	#UT_XOR_RND1
 187678878

	)

44 
	#UT_XOR_RND2
 143537923

	)

46 
	~<my_thªad_loˇl.h
>

49 
thªad_loˇl
 
ulöt
 
ut_∫d_ulöt_cou¡î
;

54 
UNIV_INLINE


55 
ulöt
 
	$ut_∫d_gí_√xt_ulöt
(

56 
ulöt
 
∫d
)

58 
ulöt
 
n_bôs
;

60 
n_bôs
 = 8 * (
ulöt
);

62 
∫d
 = 
UT_RND2
 *Ñnd + 
UT_SUM_RND3
;

63 
∫d
 = 
UT_XOR_RND1
 ^Ñnd;

64 
∫d
 = (∫d << 20Ë+ (∫d >> (
n_bôs
 - 20));

65 
∫d
 = 
UT_RND3
 *Ñnd + 
UT_SUM_RND4
;

66 
∫d
 = 
UT_XOR_RND2
 ^Ñnd;

67 
∫d
 = (∫d << 20Ë+ (∫d >> (
n_bôs
 - 20));

68 
∫d
 = 
UT_RND1
 *Ñnd + 
UT_SUM_RND2
;

70  (
∫d
);

71 
	}
}

78 
ulöt
 
	$ut_∫d_gí_ulöt
() {

79 
ulöt
 
∫d
 = 
ut_∫d_ulöt_cou¡î
;

80 i‡(
∫d
 == 0) {

81 
∫d
 = 65654363;

84 
∫d
 = 
UT_RND1
 *Ñnd + 
UT_RND2
;

86 
ut_∫d_ulöt_cou¡î
 = 
∫d
;

88  (
	`ut_∫d_gí_√xt_ulöt
(
∫d
));

89 
	}
}

94 
UNIV_INLINE


95 
ulöt
 
	$ut_∫d_öãrvÆ
(

96 
ulöt
 
low
,

97 
ulöt
 
high
)

99 
ulöt
 
∫d
;

101 
	`ut_ad
(
high
 >
low
);

103 i‡(
low
 =
high
) {

104  (
low
);

107 
∫d
 = 
	`ut_∫d_gí_ulöt
();

109  (
low
 + (
∫d
 % (
high
 -Üow)));

110 
	}
}

116 
UNIV_INLINE


117 
ulöt
 
	$ut_hash_ulöt
(
ulöt
 
key
,

118 
ulöt
 
èbÀ_size
)

120 
	`ut_ad
(
èbÀ_size
);

121 
key
 = key ^ 
UT_HASH_RANDOM_MASK2
;

123  (
key
 % 
èbÀ_size
);

124 
	}
}

128 
UNIV_INLINE


129 
ulöt
 
	$ut_fﬁd_uŒ
(
ib_uöt64_t
 
d
)

131  (
	`ut_fﬁd_ulöt_∑ú
((
ulöt
)
d
 & 
ULINT32_MASK
, (ulint)(d >> 32)));

132 
	}
}

136 
UNIV_INLINE


137 
ulöt
 
	$ut_fﬁd_°rög
(c⁄° *
°r
)

139 
ulöt
 
fﬁd
 = 0;

141 
	`ut_ad
(
°r
);

143 *
°r
 != '\0') {

144 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
));

145 
°r
++;

148  (
fﬁd
);

149 
	}
}

153 
UNIV_INLINE


154 
ulöt
 
	$ut_fﬁd_ulöt_∑ú
(
ulöt
 
n1
,

155 
ulöt
 
n2
)

158 ((((
n1
 ^ 
n2
 ^ 
UT_HASH_RANDOM_MASK2
Ë<< 8Ë+Ç1Ë^ 
UT_HASH_RANDOM_MASK
) +

159 
n2
);

160 
	}
}

164 
UNIV_INLINE


165 
ulöt
 
	$ut_fﬁd_bö¨y
(c⁄° 
byã
 *
°r
,

166 
ulöt
 
Àn
)

168 
ulöt
 
fﬁd
 = 0;

169 c⁄° 
byã
 *
°r_íd
 = 
°r
 + (
Àn
 & 0xFFFFFFF8);

171 
	`ut_ad
(
°r
 || !
Àn
);

173 
°r
 < 
°r_íd
) {

174 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

175 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

176 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

177 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

178 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

179 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

180 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

181 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

184 
Àn
 & 0x7) {

186 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

189 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

192 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

195 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

198 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

201 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

204 
fﬁd
 = 
	`ut_fﬁd_ulöt_∑ú
(fﬁd, (
ulöt
)(*
°r
++));

207  (
fﬁd
);

208 
	}
}

	@ut0sort.h

33 #i‚de‡
ut0s‹t_h


34 
	#ut0s‹t_h


	)

36 
	~"univ.i
"

58 
	#UT_SORT_FUNCTION_BODY
(
SORT_FUN
, 
ARR
, 
AUX_ARR
, 
LOW
, 
HIGH
, 
CMP_FUN
) \

60 
ulöt
 
ut_s‹t_mid77
; \

61 
ulöt
 
ut_s‹t_i77
; \

62 
ulöt
 
ut_s‹t_low77
; \

63 
ulöt
 
ut_s‹t_high77
; \

65 
	`ut_ad
((
LOW
Ë< (
HIGH
)); \

66 
	`ut_ad
(
ARR
); \

67 
	`ut_ad
(
AUX_ARR
); \

69 i‡((
LOW
Ë=(
HIGH
)-1) { \

71 } i‡((
LOW
Ë=(
HIGH
)-2) { \

72 i‡(
	`CMP_FUN
((
ARR
)[
LOW
], (ARR)[(
HIGH
)-1]) > 0) { \

73 (
AUX_ARR
)[
LOW
] = (
ARR
)[LOW]; \

74 (
ARR
)[
LOW
] = (ARR)[(
HIGH
)-1]; \

75 (
ARR
)[(
HIGH
)-1] = (
AUX_ARR
)[
LOW
]; \

80 
ut_s‹t_mid77
 = ((
LOW
Ë+ (
HIGH
)) / 2; \

82 
	`SORT_FUN
((
ARR
), (
AUX_ARR
), (
LOW
), 
ut_s‹t_mid77
); \

83 
	`SORT_FUN
((
ARR
), (
AUX_ARR
), 
ut_s‹t_mid77
, (
HIGH
)); \

85 
ut_s‹t_low77
 = (
LOW
); \

86 
ut_s‹t_high77
 = 
ut_s‹t_mid77
; \

88 
ut_s‹t_i77
 = (
LOW
); ut_s‹t_i77 < (
HIGH
); ut_sort_i77++) { \

89 i‡(
ut_s‹t_low77
 >
ut_s‹t_mid77
) { \

90 (
AUX_ARR
)[
ut_s‹t_i77
] = (
ARR
)[
ut_s‹t_high77
]; \

91 
ut_s‹t_high77
++; \

92 } i‡(
ut_s‹t_high77
 >(
HIGH
)) { \

93 (
AUX_ARR
)[
ut_s‹t_i77
] = (
ARR
)[
ut_s‹t_low77
]; \

94 
ut_s‹t_low77
++; \

95 } i‡(
	`CMP_FUN
((
ARR
)[
ut_s‹t_low77
], (ARR)[
ut_s‹t_high77
]) > 0) { \

96 (
AUX_ARR
)[
ut_s‹t_i77
] = (
ARR
)[
ut_s‹t_high77
]; \

97 
ut_s‹t_high77
++; \

99 (
AUX_ARR
)[
ut_s‹t_i77
] = (
ARR
)[
ut_s‹t_low77
]; \

100 
ut_s‹t_low77
++; \

104 
	`mem˝y
((*)((
ARR
Ë+ (
LOW
)), (
AUX_ARR
) + (LOW), \

105 ((
HIGH
Ë- (
LOW
)Ë*  *(
ARR
)); \

106 }

	)

	@ut0stage.h

33 #i‚de‡
ut0°age_h


34 
	#ut0°age_h


	)

36 
	~<m©h.h
>

37 
	~<Æg‹ôhm
>

39 
	~"di˘0mem.h
"

40 
	~"mysql/psi/mysql_°age.h
"

41 
	~"row0log.h
"

42 
	~"§v0§v.h
"

43 
	~"univ.i
"

45 #ifde‡
HAVE_PSI_STAGE_INTERFACE


77 ˛as†
	cut_°age_Æãr_t
 {

78 
	mpublic
:

81 
ex∂icô
 
	$ut_°age_Æãr_t
(c⁄° 
di˘_ödex_t
 *
pk
)

82 : 
	`m_¥ogªss
(
nuŒ±r
),

83 
	`m_pk
(
pk
),

84 
	`m_n_pk_ªcs
(0),

85 
	`m_n_pk_∑ges
(0),

86 
	`m_n_ªcs_¥o˚s£d
(0),

87 
	`m_n_Êush_∑ges
(0),

88 
	$m_cur_pha£
(
NOT_STARTED
) {}

91 ~
	`ut_°age_Æãr_t
();

96 
	`begö_pha£_ªad_pk
(
ulöt
 
n_s‹t_ödexes
);

103 
	`n_pk_ªcs_öc
();

108 
	`öc
(
ulöt
 
öc_vÆ
 = 1);

113 
	`íd_pha£_ªad_pk
();

119 
	`begö_pha£_s‹t
(
s‹t_mu…i_Á˘‹
);

122 
	`begö_pha£_ö£π
();

127 
	`begö_pha£_Êush
(
ulöt
 
n_Êush_∑ges
);

130 
	`begö_pha£_log_ödex
();

133 
	`begö_pha£_log_èbÀ
();

136 
	`begö_pha£_íd
();

138 
¥iv©e
:

140 
	`ªe°im©e
();

144 
	`ch™ge_pha£
(c⁄° 
PSI_°age_öfo
 *
√w_°age
);

147 
PSI_°age_¥ogªss
 *
m_¥ogªss
;

150 c⁄° 
di˘_ödex_t
 *
m_pk
;

154 
ulöt
 
m_n_pk_ªcs
;

157 
ulöt
 
m_n_pk_∑ges
;

160 
m_n_ªcs_≥r_∑ge
;

163 
ulöt
 
m_n_s‹t_ödexes
;

168 
ulöt
 
m_s‹t_mu…i_Á˘‹
;

173 
ulöt
 
m_n_ªcs_¥o˚s£d
;

176 
ulöt
 
m_n_Êush_∑ges
;

180 
NOT_STARTED
 = 0,

181 
READ_PK
 = 1,

182 
SORT
 = 2,

183 
INSERT
 = 3,

184 
FLUSH
 = 4,

185 
LOG_INDEX
 = 5,

186 
LOG_TABLE
 = 6,

187 
END
 = 7,

188 
	}
} 
	gm_cur_pha£
;

192 
ölöe
 
	gut_°age_Æãr_t
::~
	$ut_°age_Æãr_t
() {

193 i‡(
m_¥ogªss
 =
nuŒ±r
) {

198 
	`mysql_°age_£t_w‹k_com∂ëed
(
m_¥ogªss
,

199 
	`mysql_°age_gë_w‹k_e°im©ed
(
m_¥ogªss
));

201 
	`mysql_íd_°age
();

202 
	}
}

207 
ölöe
 
	gut_°age_Æãr_t
::
	$begö_pha£_ªad_pk
(
ulöt
 
n_s‹t_ödexes
) {

208 
m_n_s‹t_ödexes
 = 
n_s‹t_ödexes
;

210 
m_cur_pha£
 = 
READ_PK
;

212 
m_¥ogªss
 =

213 
	`mysql_£t_°age
(
§v_°age_Æãr_èbÀ_ªad_pk_öã∫Æ_s‹t
.
m_key
);

215 
	`mysql_°age_£t_w‹k_com∂ëed
(
m_¥ogªss
, 0);

217 
	`ªe°im©e
();

218 
	}
}

225 
ölöe
 
	gut_°age_Æãr_t
::
	$n_pk_ªcs_öc
(Ë{ 
m_n_pk_ªcs
++; 
	}
}

230 
ölöe
 
	gut_°age_Æãr_t
::
	$öc
(
ulöt
 
öc_vÆ
 ) {

231 i‡(
m_¥ogªss
 =
nuŒ±r
) {

235 
ulöt
 
mu…i_Á˘‹
 = 1;

236 
boﬁ
 
should_¥o˚ed
 = 
åue
;

238 
m_cur_pha£
) {

239 
NOT_STARTED
:

240 
ut_îr‹
;

241 
READ_PK
:

242 
m_n_pk_∑ges
++;

243 
	`ut_ad
(
öc_vÆ
 == 1);

248 
öc_vÆ
 = 1 + 
m_n_s‹t_ödexes
;

250 
SORT
:

251 
mu…i_Á˘‹
 = 
m_s‹t_mu…i_Á˘‹
;

253 
INSERT
: {

262 c⁄° 
evîy_¡h
 = 
m_n_ªcs_≥r_∑ge
 * 
mu…i_Á˘‹
;

264 c⁄° 
ulöt
 
k
 = 
°©ic_ˇ°
<ulöt>(
	`round
(
m_n_ªcs_¥o˚s£d
 / 
evîy_¡h
));

266 c⁄° 
ulöt
 
¡h
 = 
°©ic_ˇ°
<ulöt>(
	`round
(
k
 * 
evîy_¡h
));

268 
should_¥o˚ed
 = 
m_n_ªcs_¥o˚s£d
 =
¡h
;

270 
m_n_ªcs_¥o˚s£d
++;

274 
FLUSH
:

276 
LOG_INDEX
:

278 
LOG_TABLE
:

280 
END
:

284 i‡(
should_¥o˚ed
) {

285 
	`mysql_°age_öc_w‹k_com∂ëed
(
m_¥ogªss
, 
öc_vÆ
);

286 
	`ªe°im©e
();

288 
	}
}

293 
ölöe
 
	gut_°age_Æãr_t
::
	$íd_pha£_ªad_pk
() {

294 
	`ªe°im©e
();

296 i‡(
m_n_pk_∑ges
 == 0) {

300 
m_n_ªcs_≥r_∑ge
 = 1.0;

302 
m_n_ªcs_≥r_∑ge
 =

303 
°d
::
	`max
(
°©ic_ˇ°
<>(
m_n_pk_ªcs
Ë/ 
m_n_pk_∑ges
, 1.0);

305 
	}
}

311 
ölöe
 
	gut_°age_Æãr_t
::
	$begö_pha£_s‹t
(
s‹t_mu…i_Á˘‹
) {

312 i‡(
s‹t_mu…i_Á˘‹
 <= 1.0) {

313 
m_s‹t_mu…i_Á˘‹
 = 1;

315 
m_s‹t_mu…i_Á˘‹
 = 
°©ic_ˇ°
<
ulöt
>(
	`round
(
s‹t_mu…i_Á˘‹
));

318 
	`ch™ge_pha£
(&
§v_°age_Æãr_èbÀ_mîge_s‹t
);

319 
	}
}

322 
ölöe
 
	gut_°age_Æãr_t
::
	$begö_pha£_ö£π
() {

323 
	`ch™ge_pha£
(&
§v_°age_Æãr_èbÀ_ö£π
);

324 
	}
}

329 
ölöe
 
	gut_°age_Æãr_t
::
	$begö_pha£_Êush
(
ulöt
 
n_Êush_∑ges
) {

330 
m_n_Êush_∑ges
 = 
n_Êush_∑ges
;

332 
	`ªe°im©e
();

334 
	`ch™ge_pha£
(&
§v_°age_Æãr_èbÀ_Êush
);

335 
	}
}

338 
ölöe
 
	gut_°age_Æãr_t
::
	$begö_pha£_log_ödex
() {

339 
	`ch™ge_pha£
(&
§v_°age_Æãr_èbÀ_log_ödex
);

340 
	}
}

343 
ölöe
 
	gut_°age_Æãr_t
::
	$begö_pha£_log_èbÀ
() {

344 
	`ch™ge_pha£
(&
§v_°age_Æãr_èbÀ_log_èbÀ
);

345 
	}
}

348 
ölöe
 
	gut_°age_Æãr_t
::
	$begö_pha£_íd
() {

349 
	`ch™ge_pha£
(&
§v_°age_Æãr_èbÀ_íd
);

350 
	}
}

353 
ölöe
 
	gut_°age_Æãr_t
::
	$ªe°im©e
() {

354 i‡(
m_¥ogªss
 =
nuŒ±r
) {

360 i‡(
m_cur_pha£
 =
LOG_TABLE
) {

361 
	`mysql_°age_£t_w‹k_e°im©ed
(
m_¥ogªss
,

362 
	`mysql_°age_gë_w‹k_com∂ëed
(
m_¥ogªss
) +

363 
	`row_log_e°im©e_w‹k
(
m_pk
));

373 c⁄° 
ulöt
 
n_pk_∑ges
 =

374 
m_cur_pha£
 !
READ_PK
 ? 
m_n_pk_∑ges
 : 
m_pk
->
°©_n_Àaf_∑ges
;

379 i‡(
m_n_Êush_∑ges
 == 0) {

380 
m_n_Êush_∑ges
 = 
n_pk_∑ges
 / 2;

383 
ul⁄gl⁄g
 
e°im©e
 =

384 
n_pk_∑ges
 *

386 + 
m_n_s‹t_ödexes


388 + 
m_n_s‹t_ödexes
 * 2 ) +

389 
m_n_Êush_∑ges
 + 
	`row_log_e°im©e_w‹k
(
m_pk
);

392 
e°im©e
 = 
°d
::
	`max
”°im©e, 
	`mysql_°age_gë_w‹k_com∂ëed
(
m_¥ogªss
));

394 
	`mysql_°age_£t_w‹k_e°im©ed
(
m_¥ogªss
, 
e°im©e
);

395 
	}
}

399 
ölöe
 
	gut_°age_Æãr_t
::
	$ch™ge_pha£
(c⁄° 
PSI_°age_öfo
 *
√w_°age
) {

400 i‡(
m_¥ogªss
 =
nuŒ±r
) {

404 i‡(
√w_°age
 =&
§v_°age_Æãr_èbÀ_ªad_pk_öã∫Æ_s‹t
) {

405 
m_cur_pha£
 = 
READ_PK
;

406 } i‡(
√w_°age
 =&
§v_°age_Æãr_èbÀ_mîge_s‹t
) {

407 
m_cur_pha£
 = 
SORT
;

408 } i‡(
√w_°age
 =&
§v_°age_Æãr_èbÀ_ö£π
) {

409 
m_cur_pha£
 = 
INSERT
;

410 } i‡(
√w_°age
 =&
§v_°age_Æãr_èbÀ_Êush
) {

411 
m_cur_pha£
 = 
FLUSH
;

412 } i‡(
√w_°age
 =&
§v_°age_Æãr_èbÀ_log_ödex
) {

413 
m_cur_pha£
 = 
LOG_INDEX
;

414 } i‡(
√w_°age
 =&
§v_°age_Æãr_èbÀ_log_èbÀ
) {

415 
m_cur_pha£
 = 
LOG_TABLE
;

416 } i‡(
√w_°age
 =&
§v_°age_Æãr_èbÀ_íd
) {

417 
m_cur_pha£
 = 
END
;

419 
ut_îr‹
;

422 c⁄° 
ul⁄gl⁄g
 
c
 = 
	`mysql_°age_gë_w‹k_com∂ëed
(
m_¥ogªss
);

423 c⁄° 
ul⁄gl⁄g
 
e
 = 
	`mysql_°age_gë_w‹k_e°im©ed
(
m_¥ogªss
);

425 
m_¥ogªss
 = 
	`mysql_£t_°age
(
√w_°age
->
m_key
);

427 
	`mysql_°age_£t_w‹k_com∂ëed
(
m_¥ogªss
, 
c
);

428 
	`mysql_°age_£t_w‹k_e°im©ed
(
m_¥ogªss
, 
e
);

429 
	}
}

433 ˛as†
	cut_°age_Æãr_ts
 {

434 
	mpublic
:

436 
	$ut_°age_Æãr_ts
()

437 : 
	`m_¥ogªss
(
nuŒ±r
),

438 
	`m_w‹k_e°im©ed
(0),

439 
	`m_w‹k_d⁄e
(0),

440 
	$m_cur_pha£
(
NOT_STARTED
) {}

443 
ölöe
 ~
	$ut_°age_Æãr_ts
() {

444 i‡(
m_¥ogªss
 =
nuŒ±r
) {

447 
	`mysql_íd_°age
();

448 
	}
}

450 
	$öô
(
key
) {

451 
	`ut_ad
(
key
 != -1);

452 
	`ut_ad
(
m_cur_pha£
 =
NOT_STARTED
);

454 
m_¥ogªss
 = 
nuŒ±r
;

455 
m_w‹k_e°im©ed
 = 0;

456 
m_w‹k_d⁄e
 = 0;

458 
m_¥ogªss
 = 
	`mysql_£t_°age
(
key
);

460 
	`ch™ge_pha£
();

461 
	}
}

463 
	$£t_e°im©e
(
ulöt
 
unôs
) {

464 i‡(
m_¥ogªss
 =
nuŒ±r
) {

468 
	`ut_ad
(
m_cur_pha£
 =
INITIATED
);

469 
m_w‹k_e°im©ed
 = 
unôs
;

470 
	`mysql_°age_£t_w‹k_e°im©ed
(
m_¥ogªss
, 
m_w‹k_e°im©ed
);

472 
	`ch™ge_pha£
();

473 
	}
}

475 
	$upd©e_w‹k
(
ulöt
 
unôs
) {

476 i‡(
m_¥ogªss
 =
nuŒ±r
) {

480 
	`ut_ad
(
m_cur_pha£
 =
WORK_ESTIMATED
);

482 
m_w‹k_d⁄e
 +
unôs
;

483 
	`ut_ad
(
m_w‹k_d⁄e
 <
m_w‹k_e°im©ed
);

484 
	`mysql_°age_£t_w‹k_com∂ëed
(
m_¥ogªss
, 
m_w‹k_d⁄e
);

486 i‡(
m_w‹k_d⁄e
 =
m_w‹k_e°im©ed
) {

488 
	`ch™ge_pha£
();

490 
	}
}

492 
	$ch™ge_pha£
() {

493 i‡(
m_¥ogªss
 =
nuŒ±r
) {

494 
	`ut_ad
(
m_cur_pha£
 =
NOT_STARTED
);

498 
m_cur_pha£
) {

499 
NOT_STARTED
:

500 
m_cur_pha£
 = 
INITIATED
;

502 
INITIATED
:

503 
m_cur_pha£
 = 
WORK_ESTIMATED
;

505 
WORK_ESTIMATED
:

506 
m_cur_pha£
 = 
WORK_COMPLETED
;

508 
WORK_COMPLETED
:

510 
ut_îr‹
;

512 
	}
}

514 
boﬁ
 
	$is_com∂ëed
() {

515 i‡(
m_¥ogªss
 =
nuŒ±r
) {

516  
åue
;

519  (
m_cur_pha£
 =
WORK_COMPLETED
);

520 
	}
}

522 
	g¥iv©e
:

524 
PSI_°age_¥ogªss
 *
m_¥ogªss
;

527 
ulöt
 
	gm_w‹k_e°im©ed
;

530 
ulöt
 
	gm_w‹k_d⁄e
;

534 
	gNOT_STARTED
 = 0,

535 
	gINITIATED
 = 1,

536 
	gWORK_ESTIMATED
 = 2,

537 
	gWORK_COMPLETED
 = 3,

538 } 
	gm_cur_pha£
;

543 ˛as†
	cut_°age_Æãr_t
 {

544 
	mpublic
:

545 
ex∂icô
 
	$ut_°age_Æãr_t
(c⁄° 
di˘_ödex_t
 *
pk
) {}

547 
	$begö_pha£_ªad_pk
(
ulöt
 
n_s‹t_ödexes
Ë{
	}
}

549 
	$n_pk_ªcs_öc
(Ë{
	}
}

551 
	$öc
(
ulöt
 
öc_vÆ
 = 1Ë{
	}
}

553 
	$íd_pha£_ªad_pk
(Ë{
	}
}

555 
	$begö_pha£_s‹t
(
s‹t_mu…i_Á˘‹
Ë{
	}
}

557 
	$begö_pha£_ö£π
(Ë{
	}
}

559 
	$begö_pha£_Êush
(
ulöt
 
n_Êush_∑ges
Ë{
	}
}

561 
	$begö_pha£_log_ödex
(Ë{
	}
}

563 
	$begö_pha£_log_èbÀ
(Ë{
	}
}

565 
	$begö_pha£_íd
(Ë{
	}
}

568 ˛as†
	cut_°age_Æãr_ts
 {

569 
	mpublic
:

571 
	$ut_°age_Æãr_ts
() {}

574 
ölöe
 ~
	$ut_°age_Æãr_ts
(Ë{
	}
}

576 
	$öô
(
key
Ë{
	}
}

578 
	$£t_e°im©e
(
uöt
 
unôs
Ë{
	}
}

580 
	$upd©e_w‹k
(
uöt
 
unôs
Ë{
	}
}

582 
	$ch™ge_pha£
(Ë{
	}
}

	@ut0test.h

118 #i‚de‡
ut0ã°_h


119 
	#ut0ã°_h


	)

120 #ifde‡
UNIV_DEBUG


122 
	~<°rög
>

123 
	~<ve˘‹
>

124 
	~"cuºít_thd.h
"

125 
	~"fû0fû.h
"

126 
	~"mysql/∂ugö.h
"

130 
	#TPREFIX
 "[ib::Te°î] "

	)

132 
	#TLOG
(
x
) \

134 
°d
::
cout
 << "[TLOG]Åhªad=" << std::
this_thªad
::
	`gë_id
(Ë<< ": " << 
x
 \

135 << 
°d
::
ídl
; \

136 }

	)

142 
	#XLOG
(
x
) \

144 
	`TLOG
(
x
) \

145 
sout
 << 
x
; \

146 }

	)

148 
«me•a˚
 
	gib
 {

152 
	sTe°î
 {

153 
	gpublic
:

155 
	eRë_t
 {

156 
RET_PASS
 = 0,

157 
	gRET_FAIL
 = 1,

160 
	gRET_CMD_TBD
 = 2

164 
Te°î
(Ë
	gn€x˚±
;

170 
Rë_t
 
run
(
ul⁄g
 
cmd
Ë
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

176 
Rë_t
 
run
(c⁄° 
°d
::
°rög
 &
cmd
Ë
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

180 c⁄° *
gë_œ°_log
(Ëc⁄° 
n€x˚±
 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
)) {

181  
	gm_log
.
c_°r
();

186 
upd©e_thd_v¨übÀ
(Ë
	gn€x˚±
;

188 
	g¥iv©e
:

190 
öô
(Ë
n€x˚±
;

195 
Rë_t
 
›í_èbÀ
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


196 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

200 
˛o£_èbÀ
(
di˘_èbÀ_t
 *
èbÀ
Ë
	gn€x˚±
;

205 
Rë_t
 
föd_•a˚_id
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


206 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

211 
Rë_t
 
föd_roŸ_∑ge_no
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


212 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

217 
Rë_t
 
föd_⁄disk_∑ge_ty≥
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


218 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

223 
Rë_t
 
föd_fû_∑ge_l¢
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


224 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

229 
Rë_t
 
föd_Êush_sync_l¢
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


230 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

235 
Rë_t
 
¥öt_dblwr_has_í¸y±ed_∑ges
(

236 
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


237 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

242 
Rë_t
 
föd_èbÀ•a˚_fûe_«me
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


243 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

248 
	#DISPATCH_FUNCTION
(
func_
) \

251 
Rë_t
 
	`func_
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±
 
	`MY_ATTRIBUTE
( \

252 (
w¨n_unu£d_ªsu…
))

	)

255 
DISPATCH_FUNCTION
(
föd_èbÀ•a˚_physiˇl_∑ge_size
);

258 
DISPATCH_FUNCTION
(
make_⁄disk_roŸ_∑ge_zî€s
);

262 
DISPATCH_FUNCTION
(
make_∑ge_dúty
);

267 
Rë_t
 
c‹ru±_⁄disk_roŸ_∑ge
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


268 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

273 
Rë_t
 
c‹ru±_⁄disk_∑ge0
(
°d
::
ve˘‹
<°d::
°rög
> &
tokís
Ë
n€x˚±


274 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

280 
DISPATCH_FUNCTION
(
dblwr_f‹˚_¸ash
);

283 
de°roy
(Ë
	gn€x˚±
;

285 
	g¥iv©e
:

290 
di˘_èbÀ_t
 *
is_èbÀ_›í
(c⁄° 
°d
::
°rög
 &
èbÀ_«me
Ëc⁄° 
n€x˚±


291 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

295 
£t_ouçut
(c⁄° 
°d
::
o°rög°ªam
 &
sout
Ë
n€x˚±
;

299 
£t_ouçut
(c⁄° 
°d
::
°rög
 &
log
Ë
n€x˚±
;

303 
≠≥nd_ouçut
(c⁄° 
°d
::
°rög
 &
log
Ë
n€x˚±
;

306 
˛ór_ouçut
(Ë
	gn€x˚±
;

314 
Rë_t
 
˛ór_∑ge_¥efix
(c⁄° 
•a˚_id_t
 
•a˚_id
, 
∑ge_no_t
 
∑ge_no
,

315 c⁄° 
size_t
 
¥efix_Àngth
);

317 
	g¥iv©e
:

319 
°d
::
li°
<
di˘_èbÀ_t
 *, 
	gut_Æloˇt‹
<
	gdi˘_èbÀ_t
 *>> 
	gm_›í_èbÀs
{};

322 
THD
 *
	gm_thd
{};

327 
	g°d
::
°rög
 
m_log
{};

330 
	g°d
::
°rög
 
m_comm™d
{};

332 
usög
 
	gFun˘i⁄_execut‹
 = 
Rë_t
 (
Te°î
::*)(
°d
::
ve˘‹
<°d::
°rög
> &);

333 
usög
 
	gPaú
 = 
°d
::
∑ú
<c⁄° std::
°rög
, 
	gFun˘i⁄_execut‹
>;

334 
usög
 
	gAŒoˇt‹
 = 
ut_Æloˇt‹
<
Paú
>;

337 
	g°d
::
m≠
<
°d
::
°rög
, 
	gFun˘i⁄_execut‹
, std::
Àss
<°d::°rög>, 
	gAŒoˇt‹
>

338 
	gm_di•©ch
;

344 
öãΩªãr_run
(c⁄° *
comm™d
Ë
n€x˚±


345 
MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

356 
ib_öãΩªãr_upd©e
(
MYSQL_THD
 
thd
, 
SYS_VAR
 *
v¨
, *
v¨_±r
,

357 c⁄° *
ßve
);

366 
ib_öãΩªãr_check
(
THD
 *
thd
, 
SYS_VAR
 *
v¨
, *
ßve
,

367 
°_mysql_vÆue
 *
vÆue
);

	@ut0ut.h

42 #i‚de‡
ut0ut_h


43 
	#ut0ut_h


	)

47 
	~<°rög.h
>

48 
	~<Æg‹ôhm
>

49 
	~<cm©h
>

50 
	~<iom™ù
>

51 
	~<ôî©‹
>

52 
	~<o°ªam
>

53 
	~<s°ªam
>

54 
	~<ty≥_åaôs
>

56 
	~"db0îr.h
"

58 #i‚de‡
UNIV_HOTBACKUP


59 
	~"os0©omic.h
"

62 
	~<time.h
>

64 
	~<˘y≥.h
>

66 
	~<°d¨g.h
>

67 
	~"ut/ut.h
"

68 
	~"ut0dbg.h
"

70 #i‚de‡
UNIV_NO_ERR_MSGS


71 
	~"mysql/comp⁄íts/£rvi˚s/log_buûtös.h
"

72 
	~"mysqld_îr‹.h
"

73 
	~"sql/dîr‹.h
"

77 
	#TEMP_INDEX_PREFIX_STR
 "\377"

	)

82 c⁄° *
§v_gë_£rvî_îrmsgs
(
îrcode
);

85 
time_t
 
	tib_time_t
;

89 
öt64_t
 
	tib_time_m⁄Ÿ⁄ic_t
;

93 
öt64_t
 
	tib_time_m⁄Ÿ⁄ic_ms_t
;

97 
öt64_t
 
	tib_time_m⁄Ÿ⁄ic_us_t
;

99 #i‚de‡
UNIV_HOTBACKUP


100 #i‡
deföed
(
HAVE_PAUSE_INSTRUCTION
)

105 #ifde‡
__SUNPRO_CC


106 
	#UT_RELAX_CPU
(Ë
	`asm
("∑u£")

	)

108 
	#UT_RELAX_CPU
(Ë
__asm__
 
	`__vﬁ©ûe__
("∑u£")

	)

111 #ñi‡
deföed
(
HAVE_FAKE_PAUSE_INSTRUCTION
)

112 
	#UT_RELAX_CPU
(Ë
__asm__
 
	`__vﬁ©ûe__
("ªp;Ç›")

	)

113 #ñi‡
deföed
 
_WIN32


117 
	#UT_RELAX_CPU
(Ë
	`YõldPro˚ss‹
()

	)

118 #ñi‡
deföed
(
__Ørch64__
)

125 
	#UT_RELAX_CPU
(Ë
__asm__
 
	`__vﬁ©ûe__
("isb" ::: "mem‹y")

	)

127 
	#UT_RELAX_CPU
(Ë
__asm__
 
	`__vﬁ©ûe__
("" ::: "mem‹y")

	)

130 #i‡
deföed
(
HAVE_HMT_PRIORITY_INSTRUCTION
)

131 
	#UT_LOW_PRIORITY_CPU
(Ë
__asm__
 
	`__vﬁ©ûe__
("‹ 1,1,1")

	)

132 
	#UT_RESUME_PRIORITY_CPU
(Ë
__asm__
 
	`__vﬁ©ûe__
("‹ 2,2,2")

	)

134 
	#UT_LOW_PRIORITY_CPU
(Ë(()0)

	)

135 
	#UT_RESUME_PRIORITY_CPU
(Ë(()0)

	)

142 
	#UT_WAIT_FOR
(
c⁄d
, 
max_waô_us
) \

144 c⁄°áutÿ
°¨t_us
 = 
	`ut_time_m⁄Ÿ⁄ic_us
(); \

145 !(
c⁄d
)) { \

146 c⁄°áutÿ
diff
 = 
	`ut_time_m⁄Ÿ⁄ic_us
(Ë- 
°¨t_us
; \

147 c⁄°áutÿ
limô
 = 
max_waô_us
; \

148 i‡(
limô
 <0 || (
diff
 > 0 && ((
uöt64_t
)diff) > ((uint64_t)limit))) { \

151 
	`os_thªad_¶ìp
(2000 ); \

153 } 0)

	)

155 
	#UT_RELAX_CPU
(Ë

	)

158 
	#ut_max
 
°d
::
max


	)

159 
	#ut_mö
 
°d
::
mö


	)

168 
UNIV_INLINE


169 
ut_∑ú_mö
(
ulöt
 *
mö_hi
, ulöà*
mö_lo
, ulöà
a_hi
, ulöà
a_lo
,

170 
ulöt
 
b_hi
, ulöà
b_lo
);

176 
UNIV_INLINE


177 
ut_ulöt_cmp
(
ulöt
 
a
, ulöà
b
);

188 
UNIV_INLINE


189 
	$ut_∑ú_cmp
(
ulöt
 
a_h
, ulöà
a_l
, ulöà
b_h
, ulöà
b_l
)

190 
	`MY_ATTRIBUTE
((
w¨n_unu£d_ªsu…
));

196 
	#ut_2pow_ªmaödî
(
n
, 
m
Ë(“Ë& ((m)-1))

	)

202 
	#ut_2pow_round
(
n
, 
m
Ë(“Ë& ~((m)-1))

	)

207 
	#ut_ˇlc_Æign_down
(
n
, 
m
Ë
	`ut_2pow_round
“, m)

	)

213 
	#ut_ˇlc_Æign
(
n
, 
m
Ë((“Ë+ ((m)-1)Ë& ~((m)-1))

	)

217 
UNIV_INLINE


218 
ulöt
 
	`ut_2_log
(ulöà
n
);

223 
UNIV_INLINE


224 
uöt32_t
 
	`ut_2_exp
(uöt32_à
n
);

229 
ulöt
 
	`ut_2_powî_up
(ulöà
n
);

235 
	#UT_BITS_IN_BYTES
(
b
Ë(((bË+ 7Ë/ 8)

	)

240 
ib_time_t
 
	`ut_time
();

244 
ib_time_m⁄Ÿ⁄ic_us_t
 
	`ut_time_m⁄Ÿ⁄ic_us
();

248 
ib_time_m⁄Ÿ⁄ic_ms_t
 
	`ut_time_m⁄Ÿ⁄ic_ms
();

252 
ib_time_m⁄Ÿ⁄ic_t
 
	`ut_time_m⁄Ÿ⁄ic
();

256 
	`ut_dif·ime
(
ib_time_t
 
time2
,

257 
ib_time_t
 
time1
);

262 
	#ut_is_2pow
(
n
Ë
	`UNIV_LIKELY
(!(“Ë& (“)-1)))

	)

266 
	sut_°rcmp_fun˘‹
 {

267 
boﬁ
 
	`›î©‹
()(c⁄° *
a
, c⁄° *
b
) const {

268  (
	`°rcmp
(
a
, 
b
) < 0);

272 
«me•a˚
 
ut
 {

280 
ul⁄g
 
•ö_waô_∑u£_mu…ùlõr
;

281 
	}
}

290 
ulöt
 
ut_dñay
(ulöà
dñay
);

293 
	gåx_t
;

303 
	g°d
::
°rög
 
ut_gë_«me
(c⁄° 
åx_t
 *
åx
, c⁄° *
«me
);

309 
ut_¥öt_«me
(
FILE
 *
f
,

310 c⁄° 
åx_t
 *
åx
,

311 c⁄° *
«me
);

322 *
ut_f‹m©_«me
(c⁄° *
«me
, *
f‹m©ãd
, 
ulöt
 
f‹m©ãd_size
);

327 
ut_c›y_fûe
(
FILE
 *
de°
, FILE *
§c
);

332 
ut_f‹m©_byã_vÆue
(
uöt64_t
 
d©a_byãs
, 
°d
::
°rög
 &
d©a_°r
);

334 #ifde‡
_WIN32


341 
ut_v¢¥ötf
(*
°r
,

342 
size_t
 
size
,

343 c⁄° *
fmt
,

344 
va_li°
 
≠
);

352 
	#ut_v¢¥ötf
(
buf
, 
size
, 
fmt
, 
≠
Ë(()
	`v¢¥ötf
(buf, size, fmt,áp))

	)

358 c⁄° *
ut_°ªº
(
dbîr_t
 
num
);

360 
«me•a˚
 
	gib
 {

362 #ifde‡
UNIV_DEBUG


368 
ölöe
 c⁄° *
gë_fú°_f‹m©
(c⁄° *
fmt
) {

369 c⁄° *
	gpos
 = 
°rchr
(
fmt
, '%');

370 i‡(
	gpos
 !
nuŒ±r
 && 
pos
[1] == '%') {

371  (
gë_fú°_f‹m©
(
pos
 + 2));

373  (
	gpos
);

380 
ölöe
 
boﬁ
 
vîify_fmt_m©ch
(c⁄° *
fmt
) {

381  (
gë_fú°_f‹m©
(
fmt
Ë=
nuŒ±r
);

392 
	gãm∂©e
 <
ty≥«me
 
	gHód
, 
	gty≥«me
... 
	gTaû
>

393 
boﬁ
 
vîify_fmt_m©ch
(c⁄° *
fmt
, 
Hód
 &&
hód
, 
Taû
 &&... 
èû
) {

394 
usög
 
	gH
 =

395 
ty≥«me
 
°d
::
ªmove_cv
<ty≥«mê°d::
ªmove_ª„ªn˚
<
Hód
>::
ty≥
>::type;

396 c⁄° *
	gpos
 = 
gë_fú°_f‹m©
(
fmt
);

397 i‡(
	gpos
 =
nuŒ±r
) {

398  (
Ál£
);

405 c⁄° 
	g°d
::
°rög
 
skùabÀ
("-+ #0123456789.*");

407 
	gpos
++;

408 *
	gpos
 !'\0' && 
skùabÀ
.
föd_fú°_of
(*
pos
Ë!
°d
::
°rög
::
≈os
) {

409 
pos
++;

411 i‡(*
	gpos
 == '\0') {

412  (
Ál£
);

414 
boﬁ
 
	gis_ok
 = 
åue
;

415 i‡(
	gpos
[0] == 'l') {

416 i‡(
pos
[1] == 'l') {

417 i‡(
pos
[2] == 'd') {

418 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

419 } i‡(
	gpos
[2] ='u' || 
pos
[2] == 'x') {

420 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

422 
	gis_ok
 = 
Ál£
;

424 } i‡(
	gpos
[1] == 'd') {

425 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

426 } i‡(
	gpos
[1] == 'u') {

427 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

428 } i‡(
	gpos
[1] == 'x') {

429 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

430 } i‡(
	gpos
[1] == 'f') {

431 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

433 
	gis_ok
 = 
Ál£
;

435 } i‡(
	gpos
[0] == 'd') {

436 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

437 } i‡(
	gpos
[0] == 'u') {

438 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

439 } i‡(
	gpos
[0] == 'x') {

440 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

441 } i‡(
	gpos
[0] == 'X') {

442 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

443 } i‡(
	gpos
[0] == 'i') {

444 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

445 } i‡(
	gpos
[0] == 'f') {

446 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

447 } i‡(
	gpos
[0] == 'c') {

448 
is_ok
 = 
°d
::
is_ßme
<
H
, >::
vÆue
;

449 } i‡(
	gpos
[0] == 'p') {

450 
is_ok
 = 
°d
::
is_poöãr
<
H
>::
vÆue
;

451 } i‡(
	gpos
[0] == 's') {

452 
is_ok
 = (
°d
::
is_ßme
<
H
, *>::
vÆue
 ||

453 
°d
::
is_ßme
<
H
, c⁄° *>::
vÆue
 ||

454 (
°d
::
is_¨øy
<
H
>::
vÆue
 &&

455 
°d
::
is_ßme
<
ty≥«me
 std::
ªmove_cv
<

456 
ty≥«me
 
°d
::
ªmove_exã¡
<
H
>::
ty≥
>::type,

457 >::
vÆue
));

458 } i‡(
	gpos
[0] == 'z') {

459 i‡(
pos
[1] == 'u') {

460 
is_ok
 = 
°d
::
is_ßme
<
H
, 
	gsize_t
>::
vÆue
;

461 } i‡(
	gpos
[1] == 'x') {

462 
is_ok
 = 
°d
::
is_ßme
<
H
, 
	gsize_t
>::
vÆue
;

463 } i‡(
	gpos
[1] == 'd') {

464 
is_ok
 = 
°d
::
is_ßme
<
H
, 
	gssize_t
>::
vÆue
;

466 
	gis_ok
 = 
Ál£
;

469 
	gis_ok
 = 
Ál£
;

471  (
	gis_ok
 && 
vîify_fmt_m©ch
(
pos
 + 1, 
°d
::
f‹w¨d
<
Taû
>(
èû
)...));

479 
	shex
 {

480 
ex∂icô
 
hex
(
uötmax_t
 
t
Ë: 
m_vÆ
(t) {}

481 c⁄° 
uötmax_t
 
m_vÆ
;

490 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
lhs
, c⁄° 
	ghex
 &
	grhs
) {

491 
	g°d
::
ios_ba£
::
fmtÊags
 
ff
 = 
lhs
.
Êags
();

492 
	glhs
 << 
	g°d
::
showba£
 << 
°d
::
hex
 << 
rhs
.
m_vÆ
;

493 
	glhs
.
£tf
(
ff
);

494  (
	glhs
);

501 ˛as†
	cloggî
 {

502 
	gpublic
:

504 
vútuÆ
 ~
loggî
();

506 #i‚de‡
UNIV_NO_ERR_MSGS


511 
	gãm∂©e
 <
	g˛ass
... 
	gArgs
>

512 
	gloggî
 &
log
(
îr
, 
Args
 &&... 
¨gs
) {

513 
ut_a
(
m_îr
 =
ER_IB_MSG_0
);

515 
	gm_îr
 = 
îr
;

517 
	gm_oss
 << 
msg
(
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...);

519  (*
	gthis
);

524 
	gãm∂©e
 <
ty≥«me
 
	gT
>

525 
	gloggî
 &
	g›î©‹
<<(c⁄° 
	gT
 &
	grhs
) {

526 
	gm_oss
 << 
	grhs
;

527  (*
	gthis
);

534 
	g°d
::
o°ªam
 &
wrôe
(c⁄° *
buf
, 
°d
::
°ªamsize
 
cou¡
) {

535  (
m_oss
.
wrôe
(
buf
, 
cou¡
));

542 
	g°d
::
o°ªam
 &
wrôe
(c⁄° 
byã
 *
buf
, 
°d
::
°ªamsize
 
cou¡
) {

543  (
m_oss
.
wrôe
(
ªöãΩªt_ˇ°
<c⁄° *>(
buf
), 
cou¡
));

546 
	gpublic
:

548 
°d
::
o°rög°ªam
 
m_oss
;

550 #i‚de‡
UNIV_NO_ERR_MSGS


552 
	gm_îr
{};

555 
logÀvñ
 
	gm_Àvñ
{
	gINFORMATION_LEVEL
};

558 #ifde‡
UNIV_HOTBACKUP


560 
	gm_åa˚_Àvñ
{};

563 
	g¥Ÿe˘ed
:

564 #i‚de‡
UNIV_NO_ERR_MSGS


568 
ãm∂©e
 <
˛ass
... 
Args
>

569 
°d
::
°rög
 
msg
(
îr
, 
Args
 &&... 
¨gs
) {

570 c⁄° *
	gfmt
 = 
§v_gë_£rvî_îrmsgs
(
îr
);

572 
	gªt
;

573 
	gbuf
[
LOG_BUFF_MAX
];

574 #ifde‡
UNIV_DEBUG


575 i‡(
gë_fú°_f‹m©
(
fmt
Ë!
nuŒ±r
) {

576 i‡(!
vîify_fmt_m©ch
(
fmt
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...)) {

577 
Ârötf
(
°dîr
, "Thêf‹m© '%s' d€†nŸ m©chárgumíts\n", 
fmt
);

578 
	gut_îr‹
;

582 
	gªt
 = 
¢¥ötf
(
buf
, (buf), 
fmt
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...);

584 
	g°d
::
°rög
 
°r
;

586 i‡(
	gªt
 > 0 && (
	gsize_t
Ïë < (
	gbuf
)) {

587 
	g°r
.
≠≥nd
(
buf
);

590  (
	g°r
);

593 
	g¥Ÿe˘ed
:

597 
log_evít
(
°d
::
°rög
 
msg
);

602 
loggî
(
logÀvñ
 
Àvñ
, 
îr
Ë: 
m_îr
”º), 
m_Àvñ
(level) {

613 
	gm_oss
 << 
msg
(
îr
, "");

620 
	gãm∂©e
 <
	g˛ass
... 
	gArgs
>

621 
ex∂icô
 
loggî
(
logÀvñ
 
Àvñ
, 
îr
, 
Args
 &&... 
¨gs
)

622 : 
m_îr
(
îr
), 
m_Àvñ
(
Àvñ
) {

623 
	gm_oss
 << 
msg
(
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...);

628 
ex∂icô
 
loggî
(
logÀvñ
 
Àvñ
Ë: 
m_îr
(
ER_IB_MSG_0
), 
m_Àvñ
(level) {}

644 ˛as†
	cöfo
 : 
public
 
loggî
 {

645 
public
:

646 #i‚de‡
UNIV_NO_ERR_MSGS


649 
öfo
(Ë: 
loggî
(
INFORMATION_LEVEL
) {}

654 
ãm∂©e
 <
˛ass
... 
Args
>

655 
ex∂icô
 
öfo
(
îr
, 
Args
 &&... 
¨gs
)

656 : 
loggî
(
INFORMATION_LEVEL
, 
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...) {}

659 ~
öfo
(Ë
ovîride
;

665 ˛as†
	cw¨n
 : 
public
 
loggî
 {

666 
public
:

667 #i‚de‡
UNIV_NO_ERR_MSGS


669 
w¨n
(Ë: 
loggî
(
WARNING_LEVEL
) {}

674 
ãm∂©e
 <
˛ass
... 
Args
>

675 
ex∂icô
 
w¨n
(
îr
, 
Args
 &&... 
¨gs
)

676 : 
loggî
(
WARNING_LEVEL
, 
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...) {}

680 ~
w¨n
(Ë
ovîride
;

686 ˛as†
	cîr‹
 : 
public
 
loggî
 {

687 
public
:

688 #i‚de‡
UNIV_NO_ERR_MSGS


690 
îr‹
(Ë: 
loggî
(
ERROR_LEVEL
) {}

695 
ãm∂©e
 <
˛ass
... 
Args
>

696 
ex∂icô
 
îr‹
(
îr
, 
Args
 &&... 
¨gs
)

697 : 
loggî
(
ERROR_LEVEL
, 
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...) {}

701 ~
îr‹
(Ë
ovîride
;

708 ˛as†
	cÁèl
 : 
public
 
loggî
 {

709 
public
:

710 #i‚de‡
UNIV_NO_ERR_MSGS


712 
Áèl
(Ë: 
loggî
(
ERROR_LEVEL
) {}

717 
ãm∂©e
 <
˛ass
... 
Args
>

718 
ex∂icô
 
Áèl
(
îr
, 
Args
 &&... 
¨gs
)

719 : 
loggî
(
ERROR_LEVEL
, 
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...) {}

722 ~
Áèl
(Ë
ovîride
;

725 ~
Áèl
(Ë
	govîride
;

731 ˛as†
	cîr‹_‹_w¨n
 : 
public
 
loggî
 {

732 
public
:

733 #i‚de‡
UNIV_NO_ERR_MSGS


737 
îr‹_‹_w¨n
(
boﬁ
 
¥ed
Ë: 
loggî
’ªd ? 
ERROR_LEVEL
 : 
WARNING_LEVEL
) {}

743 
ãm∂©e
 <
˛ass
... 
Args
>

744 
ex∂icô
 
îr‹_‹_w¨n
(
boﬁ
 
¥ed
, 
îr
, 
Args
 &&... 
¨gs
)

745 : 
loggî
(
¥ed
 ? 
ERROR_LEVEL
 : 
WARNING_LEVEL
, 
îr
,

746 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...) {}

753 ˛as†
	cÁèl_‹_îr‹
 : 
public
 
loggî
 {

754 
public
:

755 #i‚de‡
UNIV_NO_ERR_MSGS


758 
Áèl_‹_îr‹
(
boﬁ
 
Áèl
Ë: 
loggî
(
ERROR_LEVEL
), 
m_Áèl
(fatal) {}

764 
	gãm∂©e
 <
	g˛ass
... 
	gArgs
>

765 
ex∂icô
 
Áèl_‹_îr‹
(
boﬁ
 
Áèl
, 
îr
, 
Args
 &&... 
¨gs
)

766 : 
loggî
(
ERROR_LEVEL
, 
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...), 
m_Áèl
(
Áèl
) {}

769 ~
Áèl_‹_îr‹
(Ë
	govîride
;

772 
Áèl_‹_îr‹
(
boﬁ
 
Áèl
Ë: 
m_Áèl
(fatal) {}

774 
¥iv©e
:

776 c⁄° 
boﬁ
 
m_Áèl
;

779 #ifde‡
UNIV_HOTBACKUP


782 ˛as†
	cåa˚_1
 : 
public
 
loggî
 {

783 
public
:

784 #i‚de‡
UNIV_NO_ERR_MSGS


786 
åa˚_1
(Ë: 
loggî
(
INFORMATION_LEVEL
Ë{ 
m_åa˚_Àvñ
 = 1; }

791 
	gãm∂©e
 <
	g˛ass
... 
	gArgs
>

792 
ex∂icô
 
åa˚_1
(
îr
, 
Args
 &&... 
¨gs
)

793 : 
loggî
(
INFORMATION_LEVEL
, 
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...) {

794 
m_åa˚_Àvñ
 = 1;

799 
åa˚_1
();

805 ˛as†
	cåa˚_2
 : 
public
 
loggî
 {

806 
public
:

807 #i‚de‡
UNIV_NO_ERR_MSGS


809 
åa˚_2
(Ë: 
loggî
(
INFORMATION_LEVEL
Ë{ 
m_åa˚_Àvñ
 = 2; }

814 
	gãm∂©e
 <
	g˛ass
... 
	gArgs
>

815 
ex∂icô
 
åa˚_2
(
îr
, 
Args
 &&... 
¨gs
)

816 : 
loggî
(
INFORMATION_LEVEL
, 
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...) {

817 
m_åa˚_Àvñ
 = 2;

821 
åa˚_2
();

827 ˛as†
	cåa˚_3
 : 
public
 
loggî
 {

828 
public
:

829 #i‚de‡
UNIV_NO_ERR_MSGS


831 
åa˚_3
(Ë: 
loggî
(
INFORMATION_LEVEL
Ë{ 
m_åa˚_Àvñ
 = 3; }

836 
	gãm∂©e
 <
	g˛ass
... 
	gArgs
>

837 
ex∂icô
 
åa˚_3
(
îr
, 
Args
 &&... 
¨gs
)

838 : 
loggî
(
INFORMATION_LEVEL
, 
îr
, 
°d
::
f‹w¨d
<
Args
>(
¨gs
)...) {

839 
m_åa˚_Àvñ
 = 3;

844 
åa˚_3
();

852 ˛as†
	cTimî
 {

853 
	gpublic
:

854 
usög
 
SC
 = 
°d
::
chr⁄o
::
°ódy_˛ock
;

856 
	gpublic
:

858 
Timî
(Ë
n€x˚±
 { 
ª£t
(); }

861 
ª£t
(Ë{ 
	gm_°¨t
 = 
SC
::
now
(); }

864 
	gãm∂©e
 <
ty≥«me
 
	gT
 = 
°d
::
chr⁄o
::
mûli£c⁄ds
>

865 
öt64_t
 
ñ≠£d
(Ëc⁄° 
n€x˚±
 {

866  
°d
::
chr⁄o
::
duøti⁄_ˇ°
<
T
>(
SC
::
now
(Ë- 
m_°¨t
).
cou¡
();

873 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gTøôs
>

874 
‰õnd
 
	g°d
::
basic_o°ªam
<
T
, 
	gTøôs
> &
	g›î©‹
<<(

875 
	g°d
::
basic_o°ªam
<
T
, 
	gTøôs
> &
	gout
, c⁄° 
	gTimî
 &
	gtimî
Ë
	gn€x˚±
 {

876  
	gout
 << 
	gtimî
.
ñ≠£d
();

879 
	g¥iv©e
:

881 
SC
::
time_poöt
 
m_°¨t
;

886 #ifde‡
UNIV_HOTBACKUP


890 
meb_•rötf_time°amp_wôhout_exåa_ch¨s
(*
buf
);

893 
	sWaô_°©s
 {

894 
uöt64_t
 
	mwaô_lo›s
;

896 
ex∂icô
 
Waô_°©s
(
uöt64_t
 
waô_lo›s
 = 0) : wait_loops(wait_loops) {}

898 
Waô_°©s
 &
›î©‹
+=(c⁄° Waô_°©†&
rhs
) {

899 
waô_lo›s
 +
rhs
.wait_loops;

900  (*
	mthis
);

903 
Waô_°©s
 
	m›î©‹
+(c⁄° 
	mWaô_°©s
 &
	mrhs
) const {

904  (
	mWaô_°©s
{
	mwaô_lo›s
 + 
	mrhs
.wait_loops});

907 
boﬁ
 
™y_waôs
(Ëc⁄° {  (
	mwaô_lo›s
 != 0); }

910 
	~"ut0ut.ic
"

	@ut0ut.ic

33 
	~<Æg‹ôhm
>

35 
	~"os0thªad.h
"

36 
	~"ut0dbg.h
"

38 #i‚de‡
UNIV_HOTBACKUP


46 
UNIV_INLINE


47 
	$ut_∑ú_mö
(
ulöt
 *
mö_hi
, ulöà*
mö_lo
, ulöà
a_hi
, ulöà
a_lo
,

48 
ulöt
 
b_hi
, ulöà
b_lo
) {

49 i‡(
a_hi
 =
b_hi
) {

50 *
mö_hi
 = 
a_hi
;

51 *
mö_lo
 = 
°d
::
	`mö
(
a_lo
, 
b_lo
);

52 } i‡(
a_hi
 < 
b_hi
) {

53 *
mö_hi
 = 
a_hi
;

54 *
mö_lo
 = 
a_lo
;

56 *
mö_hi
 = 
b_hi
;

57 *
mö_lo
 = 
b_lo
;

59 
	}
}

64 
UNIV_INLINE


65 
	$ut_ulöt_cmp
(
ulöt
 
a
,

66 
ulöt
 
b
)

68 i‡(
a
 < 
b
) {

70 } i‡(
a
 =
b
) {

75 
	}
}

86 
UNIV_INLINE


87 
	$ut_∑ú_cmp
(
ulöt
 
a_h
, ulöà
a_l
, ulöà
b_h
, ulöà
b_l
) {

88 i‡(
a_h
 < 
b_h
) {

91 i‡(
a_h
 > 
b_h
) {

94  (
	`ut_ulöt_cmp
(
a_l
, 
b_l
));

95 
	}
}

100 
UNIV_INLINE


101 
ulöt
 
	$ut_2_log
(
ulöt
 
n
)

103 
ulöt
 
ªs
;

105 
ªs
 = 0;

107 
	`ut_ad
(
n
 > 0);

109 
n
 =Ç - 1;

112 
n
 =Ç / 2;

114 i‡(
n
 == 0) {

118 
ªs
++;

121  (
ªs
 + 1);

122 
	}
}

127 
UNIV_INLINE


128 
uöt32_t
 
	$ut_2_exp
(
uöt32_t
 
n
Ë{  (1 <<Ç); 
	}
}

130 #i‚de‡
UNIV_HOTBACKUP


140 
	gãm∂©e
 <
ty≥«me
 
	gC⁄dôi⁄
>

141 
ölöe
 
Waô_°©s
 
ut_waô_f‹
(
uöt64_t
 
•ös_limô
, uöt64_à
¶ìp
,

142 
C⁄dôi⁄
 
c⁄dôi⁄
 = {}) {

143 
uöt64_t
 
¶ìps
 = 0, 
	g•ös
 = 0;

144 #ifde‡
_WIN32


145 
uöt64_t
 
	g√xt_Àvñ
 = 64;

147 
uöt64_t
 
	g√xt_Àvñ
 = 4;

150 !
c⁄dôi⁄
(
•ös
 =
•ös_limô
)) {

151 i‡(
•ös
 =
•ös_limô
) {

152 ++
¶ìps
;

154 i‡(
	g¶ìps
 =
√xt_Àvñ
) {

155 
¶ìp
 = 
°d
::
mö
(¶ì∞* 2, 
uöt64_t
{100 * 1000});

157 #ifde‡
_WIN32


158 
	g√xt_Àvñ
 += 64;

160 
	g√xt_Àvñ
 += 4;

164 
os_thªad_¶ìp
(
¶ìp
);

167 ++
	g•ös
;

169 
UT_RELAX_CPU
();

173  (
	gWaô_°©s
{
	g¶ìps
});

	@ut0vec.h

33 #i‚de‡
IB_VECTOR_H


34 
	#IB_VECTOR_H


	)

36 
	~"mem0mem.h
"

37 
	~"univ.i
"

39 
	gib_Æloc_t
;

40 
	gib_ve˘‹_t
;

42 *(*
	tib_mem_Æloc_t
)(

44 
	tib_Æloc_t
 *
	tÆloˇt‹
,

45 
	tulöt
 
	tsize
);

47 (*
	tib_mem_‰ì_t
)(

48 
	tib_Æloc_t
 *
	tÆloˇt‹
,

49 *
	t±r
);

51 *(*
	tib_mem_ªsize_t
)(

53 
	tib_Æloc_t
 *
	tÆloˇt‹
,

54 *
	t±r
,

55 
	tulöt
 
	tﬁd_size
,

56 
	tulöt
 
	t√w_size
);

58 (*
	tib_com∑ª_t
)(const *, const *);

67 
	#ib_ve˘‹_gëp
(
v
, 
n
Ë(*(**)
	`ib_ve˘‹_gë
(v,Ç))

	)

68 
	#ib_ve˘‹_gëp_c⁄°
(
v
, 
n
Ë(*(**)
	`ib_ve˘‹_gë_c⁄°
(v,Ç))

	)

70 
	#ib_ve˘‹_Æloˇt‹
(
v
Ë(v->
Æloˇt‹
)

	)

74 
ib_ve˘‹_t
 *
	`ib_ve˘‹_¸óã
(

76 
ib_Æloc_t
 *
Æloc
,

78 
ulöt
 
sizeof_vÆue
, ulöà
size
);

83 
UNIV_INLINE


84 
	`ib_ve˘‹_‰ì
(
ib_ve˘‹_t
 *
vec
);

89 
UNIV_INLINE


90 *
	`ib_ve˘‹_push
(

92 
ib_ve˘‹_t
 *
vec
,

93 c⁄° *
ñem
);

97 
UNIV_INLINE


98 *
	`ib_ve˘‹_p›
(

100 
ib_ve˘‹_t
 *
vec
);

106 
UNIV_INLINE


107 *
	`ib_ve˘‹_ªmove
(
ib_ve˘‹_t
 *
vec
, c⁄° *
ñem
);

111 
UNIV_INLINE


112 
ulöt
 
	`ib_ve˘‹_size
(

114 c⁄° 
ib_ve˘‹_t
 *
vec
);

118 
	`ib_ve˘‹_ªsize
(

120 
ib_ve˘‹_t
 *
vec
);

125 
UNIV_INLINE


126 
iboﬁ
 
	`ib_ve˘‹_is_em±y
(c⁄° 
ib_ve˘‹_t
 *
vec
);

132 
UNIV_INLINE


133 *
	`ib_ve˘‹_gë
(
ib_ve˘‹_t
 *
vec
, 
ulöt
 
n
);

138 
UNIV_INLINE


139 c⁄° *
	`ib_ve˘‹_gë_c⁄°
(c⁄° 
ib_ve˘‹_t
 *
vec
,

140 
ulöt
 
n
);

143 
UNIV_INLINE


144 *
	`ib_ve˘‹_gë_œ°
(
ib_ve˘‹_t
 *
vec
);

150 
UNIV_INLINE


151 
	`ib_ve˘‹_£t
(
ib_ve˘‹_t
 *
vec
, 
ulöt
 
n
, *
ñem
);

155 
UNIV_INLINE


156 
	`ib_ve˘‹_ª£t
(
ib_ve˘‹_t
 *
vec
);

160 
UNIV_INLINE


161 *
	`ib_ve˘‹_œ°
(

163 
ib_ve˘‹_t
 *
vec
);

167 
UNIV_INLINE


168 c⁄° *
	`ib_ve˘‹_œ°_c⁄°
(

170 c⁄° 
ib_ve˘‹_t
 *
vec
);

174 
UNIV_INLINE


175 
	`ib_ve˘‹_s‹t
(

176 
ib_ve˘‹_t
 *
vec
,

177 
ib_com∑ª_t
 
com∑ª
);

181 
UNIV_INLINE


182 
	`ib_hóp_‰ì
(
ib_Æloc_t
 *
Æloˇt‹
,

183 *
±r
);

187 
UNIV_INLINE


188 *
	`ib_hóp_mÆloc
(

190 
ib_Æloc_t
 *
Æloˇt‹
,

191 
ulöt
 
size
);

197 
UNIV_INLINE


198 *
	`ib_hóp_ªsize
(

201 
ib_Æloc_t
 *
Æloˇt‹
,

202 *
ﬁd_±r
,

203 
ulöt
 
ﬁd_size
,

204 
ulöt
 
√w_size
);

208 
UNIV_INLINE


209 
ib_Æloc_t
 *
	`ib_hóp_Æloˇt‹_¸óã
(

211 
mem_hóp_t
 *
hóp
);

215 
UNIV_INLINE


216 
	`ib_hóp_Æloˇt‹_‰ì
(

217 
ib_Æloc_t
 *
ib_ut_Æloc
);

220 
	sib_Æloc_t
 {

221 
ib_mem_Æloc_t
 
mem_mÆloc
;

222 
ib_mem_‰ì_t
 
mem_ªÀa£
;

223 
ib_mem_ªsize_t
 
mem_ªsize
;

224 *
¨g
;

229 
	sib_ve˘‹_t
 {

230 
ib_Æloc_t
 *
Æloˇt‹
;

232 *
d©a
;

233 
ulöt
 
u£d
;

234 
ulöt
 
tŸÆ
;

236 
ulöt
 
sizeof_vÆue
;

239 
	~"ut0vec.ic
"

	@ut0vec.ic

33 
	~"ut0√w.h
"

35 
	#IB_VEC_OFFSET
(
v
, 
i
Ë(
vec
->
sizeof_vÆue
 * i)

	)

39 
UNIV_INLINE


40 *
	$ib_hóp_mÆloc
(
ib_Æloc_t
 *
Æloˇt‹
,

41 
ulöt
 
size
)

43 
mem_hóp_t
 *
hóp
 = (mem_hóp_à*)
Æloˇt‹
->
¨g
;

45  (
	`mem_hóp_Æloc
(
hóp
, 
size
));

46 
	}
}

50 
UNIV_INLINE


51 
	$ib_hóp_‰ì
(
ib_Æloc_t
 *
Æloˇt‹
 
UNIV_UNUSED
,

52 *
±r
 
UNIV_UNUSED
)

55 
	}
}

62 
UNIV_INLINE


63 *
	$ib_hóp_ªsize
(
ib_Æloc_t
 *
Æloˇt‹
,

64 *
ﬁd_±r
,

65 
ulöt
 
ﬁd_size
,

66 
ulöt
 
√w_size
)

68 *
√w_±r
;

69 
mem_hóp_t
 *
hóp
 = (mem_hóp_à*)
Æloˇt‹
->
¨g
;

71 
	`ut_a
(
√w_size
 >
ﬁd_size
);

72 
√w_±r
 = 
	`mem_hóp_Æloc
(
hóp
, 
√w_size
);

73 
	`mem˝y
(
√w_±r
, 
ﬁd_±r
, 
ﬁd_size
);

75  (
√w_±r
);

76 
	}
}

80 
UNIV_INLINE


81 
ib_Æloc_t
 *
	$ib_hóp_Æloˇt‹_¸óã
(
mem_hóp_t
 *
hóp
)

83 
ib_Æloc_t
 *
hóp_Æloc
;

85 
hóp_Æloc
 = (
ib_Æloc_t
 *)
	`mem_hóp_Æloc
(
hóp
, (*heap_alloc));

87 
hóp_Æloc
->
¨g
 = 
hóp
;

88 
hóp_Æloc
->
mem_ªÀa£
 = 
ib_hóp_‰ì
;

89 
hóp_Æloc
->
mem_mÆloc
 = 
ib_hóp_mÆloc
;

90 
hóp_Æloc
->
mem_ªsize
 = 
ib_hóp_ªsize
;

92  (
hóp_Æloc
);

93 
	}
}

97 
UNIV_INLINE


98 
	$ib_hóp_Æloˇt‹_‰ì
(

99 
ib_Æloc_t
 *
ib_ut_Æloc
)

101 
	`mem_hóp_‰ì
((
mem_hóp_t
 *)
ib_ut_Æloc
->
¨g
);

102 
	}
}

106 
UNIV_INLINE


107 
ulöt
 
	$ib_ve˘‹_size
(

109 c⁄° 
ib_ve˘‹_t
 *
vec
)

111  (
vec
->
u£d
);

112 
	}
}

115 
UNIV_INLINE


116 *
	$ib_ve˘‹_gë
(
ib_ve˘‹_t
 *
vec
,

117 
ulöt
 
n
)

119 
	`ut_a
(
n
 < 
vec
->
u£d
);

121  ((
byã
 *)
vec
->
d©a
 + 
	`IB_VEC_OFFSET
(vec, 
n
));

122 
	}
}

127 
UNIV_INLINE


128 c⁄° *
	$ib_ve˘‹_gë_c⁄°
(c⁄° 
ib_ve˘‹_t
 *
vec
,

129 
ulöt
 
n
)

131 
	`ut_a
(
n
 < 
vec
->
u£d
);

133  ((
byã
 *)
vec
->
d©a
 + 
	`IB_VEC_OFFSET
(vec, 
n
));

134 
	}
}

137 
UNIV_INLINE


138 *
	$ib_ve˘‹_gë_œ°
(
ib_ve˘‹_t
 *
vec
)

140 
	`ut_a
(
vec
->
u£d
 > 0);

142  ((
byã
 *)
	`ib_ve˘‹_gë
(
vec
, vec->
u£d
 - 1));

143 
	}
}

146 
UNIV_INLINE


147 
	$ib_ve˘‹_£t
(
ib_ve˘‹_t
 *
vec
,

148 
ulöt
 
n
,

149 *
ñem
)

151 *
¶Ÿ
;

153 
	`ut_a
(
n
 < 
vec
->
u£d
);

155 
¶Ÿ
 = ((
byã
 *)
vec
->
d©a
 + 
	`IB_VEC_OFFSET
(vec, 
n
));

156 
	`mem˝y
(
¶Ÿ
, 
ñem
, 
vec
->
sizeof_vÆue
);

157 
	}
}

161 
UNIV_INLINE


162 
	$ib_ve˘‹_ª£t
(

164 
ib_ve˘‹_t
 *
vec
)

166 
vec
->
u£d
 = 0;

167 
	}
}

171 
UNIV_INLINE


172 *
	$ib_ve˘‹_œ°
(

174 
ib_ve˘‹_t
 *
vec
)

176 
	`ut_a
(
	`ib_ve˘‹_size
(
vec
) > 0);

178  (
	`ib_ve˘‹_gë
(
vec
, 
	`ib_ve˘‹_size
(vec) - 1));

179 
	}
}

183 
UNIV_INLINE


184 c⁄° *
	$ib_ve˘‹_œ°_c⁄°
(

186 c⁄° 
ib_ve˘‹_t
 *
vec
)

188 
	`ut_a
(
	`ib_ve˘‹_size
(
vec
) > 0);

190  (
	`ib_ve˘‹_gë_c⁄°
(
vec
, 
	`ib_ve˘‹_size
(vec) - 1));

191 
	}
}

195 
UNIV_INLINE


196 *
	$ib_ve˘‹_p›
(

198 
ib_ve˘‹_t
 *
vec
)

200 *
ñem
;

202 
	`ut_a
(
vec
->
u£d
 > 0);

204 
ñem
 = 
	`ib_ve˘‹_œ°
(
vec
);

205 --
vec
->
u£d
;

207  (
ñem
);

208 
	}
}

213 
UNIV_INLINE


214 *
	$ib_ve˘‹_push
(

216 
ib_ve˘‹_t
 *
vec
,

217 c⁄° *
ñem
)

219 *
œ°
;

221 i‡(
vec
->
u£d
 >vec->
tŸÆ
) {

222 
	`ib_ve˘‹_ªsize
(
vec
);

225 
œ°
 = (
byã
 *)
vec
->
d©a
 + 
	`IB_VEC_OFFSET
(vec, vec->
u£d
);

227 #ifde‡
UNIV_DEBUG


228 
	`mem£t
(
œ°
, 0, 
vec
->
sizeof_vÆue
);

231 i‡(
ñem
) {

232 
	`mem˝y
(
œ°
, 
ñem
, 
vec
->
sizeof_vÆue
);

235 ++
vec
->
u£d
;

237  (
œ°
);

238 
	}
}

242 
UNIV_INLINE


243 *
	$ib_ve˘‹_ªmove
(
ib_ve˘‹_t
 *
vec
,

244 c⁄° *
ñem
)

246 *
cuºít
 = 
nuŒ±r
;

247 *
√xt
;

248 
ulöt
 
i
;

249 
ulöt
 
ﬁd_u£d_cou¡
 = 
vec
->
u£d
;

251 
i
 = 0; i < 
vec
->
u£d
; i++) {

252 
cuºít
 = 
	`ib_ve˘‹_gë
(
vec
, 
i
);

254 i‡(*(**)
cuºít
 =
ñem
) {

255 i‡(
i
 =
vec
->
u£d
 - 1) {

256  (
	`ib_ve˘‹_p›
(
vec
));

259 
√xt
 = 
	`ib_ve˘‹_gë
(
vec
, 
i
 + 1);

260 
	`memmove
(
cuºít
, 
√xt
, 
vec
->
sizeof_vÆue
 * (vec->
u£d
 - 
i
 - 1));

261 --
vec
->
u£d
;

266  ((
ﬁd_u£d_cou¡
 !
vec
->
u£d
Ë? 
cuºít
 : 
nuŒ±r
);

267 
	}
}

271 
UNIV_INLINE


272 
	$ib_ve˘‹_s‹t
(

274 
ib_ve˘‹_t
 *
vec
,

275 
ib_com∑ª_t
 
com∑ª
)

277 
	`qs‹t
(
vec
->
d©a
, vec->
u£d
, vec->
sizeof_vÆue
, 
com∑ª
);

278 
	}
}

283 
UNIV_INLINE


284 
	$ib_ve˘‹_‰ì
(
ib_ve˘‹_t
 *
vec
)

290 
	`ut_ad
(
vec
->
Æloˇt‹
->
¨g
 !
nuŒ±r
);

292 
	`mem_hóp_‰ì
((
mem_hóp_t
 *)
vec
->
Æloˇt‹
->
¨g
);

293 
	}
}

298 
UNIV_INLINE


299 
iboﬁ
 
	$ib_ve˘‹_is_em±y
(c⁄° 
ib_ve˘‹_t
 *
vec
)

301  (
	`ib_ve˘‹_size
(
vec
) == 0);

302 
	}
}

	@ut0wqueue.h

38 #i‚de‡
IB_WORK_QUEUE_H


39 
	#IB_WORK_QUEUE_H


	)

41 
	~"mem0mem.h
"

42 
	~"sync0sync.h
"

43 
	~"ut0li°.h
"

46 
	gib_li°_t
;

47 
	gib_wqueue_t
;

51 
ib_wqueue_t
 *
ib_wqueue_¸óã
();

54 
ib_wqueue_‰ì
(
ib_wqueue_t
 *
wq
);

60 
ib_wqueue_add
(
ib_wqueue_t
 *
wq
, *
ôem
, 
mem_hóp_t
 *
hóp
);

64 
iboﬁ
 
ib_wqueue_is_em±y
(

67 c⁄° 
ib_wqueue_t
 *
wq
);

71 *
ib_wqueue_timedwaô
(

73 
ib_wqueue_t
 *
wq
,

74 
ib_time_t
 
waô_ö_u£cs
);

	@zlob0first.h

26 #i‚de‡
zlob0fú°_h


27 
	#zlob0fú°_h


	)

29 
	~"fû0ty≥s.h
"

30 
	~"fut0l°.h
"

31 
	~"lob0im∂.h
"

32 
	~"univ.i
"

34 
«me•a˚
 
	glob
 {

37 
	sz_fú°_∑ge_t
 {

39 c⁄° 
ulöt
 
	gOFFSET_VERSION
 = 
FIL_PAGE_DATA
;

43 c⁄° 
ulöt
 
	gOFFSET_FLAGS
 = 
FIL_PAGE_DATA
 + 1;

46 c⁄° 
uöt32_t
 
	gOFFSET_LOB_VERSION
 = 
OFFSET_FLAGS
 + 1;

49 c⁄° 
ulöt
 
	gOFFSET_LAST_TRX_ID
 = 
OFFSET_LOB_VERSION
 + 4;

52 c⁄° 
ulöt
 
	gOFFSET_LAST_UNDO_NO
 = 
OFFSET_LAST_TRX_ID
 + 6;

55 c⁄° 
ulöt
 
	gOFFSET_DATA_LEN
 = 
OFFSET_LAST_UNDO_NO
 + 4;

58 c⁄° 
ulöt
 
	gOFFSET_TRX_ID
 = 
OFFSET_DATA_LEN
 + 4;

61 c⁄° 
ulöt
 
	gOFFSET_INDEX_PAGE_NO
 = 
OFFSET_TRX_ID
 + 6;

64 c⁄° 
ulöt
 
	gOFFSET_FRAG_NODES_PAGE_NO
 = 
OFFSET_INDEX_PAGE_NO
 + 4;

67 c⁄° 
ulöt
 
	gOFFSET_FREE_LIST
 = 
OFFSET_FRAG_NODES_PAGE_NO
 + 4;

70 c⁄° 
ulöt
 
	gOFFSET_INDEX_LIST
 = 
OFFSET_FREE_LIST
 + 
FLST_BASE_NODE_SIZE
;

73 c⁄° 
ulöt
 
	gOFFSET_FREE_FRAG_LIST
 =

74 
OFFSET_INDEX_LIST
 + 
FLST_BASE_NODE_SIZE
;

77 c⁄° 
ulöt
 
	gOFFSET_FRAG_LIST
 =

78 
OFFSET_FREE_FRAG_LIST
 + 
FLST_BASE_NODE_SIZE
;

81 c⁄° 
ulöt
 
	gOFFSET_INDEX_BEGIN
 =

82 
OFFSET_FRAG_LIST
 + 
FLST_BASE_NODE_SIZE
;

86 
ulöt
 
gë_n_ödex_íåõs
() const;

90 
ulöt
 
gë_n_‰ag_íåõs
() const;

92 
ulöt
 
size_of_ödex_íåõs
() const;

94 
ulöt
 
size_of_‰ag_íåõs
() const {

95  (
	gz_‰ag_íåy_t
::
SIZE
 * 
gë_n_‰ag_íåõs
());

98 
ulöt
 
begö_‰ag_íåõs
() const {

99  (
	gOFFSET_INDEX_BEGIN
 + 
size_of_ödex_íåõs
());

102 
ulöt
 
begö_d©a
() const {

103  (
begö_‰ag_íåõs
(Ë+ 
size_of_‰ag_íåõs
());

106 
boﬁ
 
is_em±y
() const {

107 
Ê°_ba£_node_t
 *
	gÊ°
 = 
ödex_li°
();

108  (
Ê°_gë_Àn
(
Ê°
) == 0);

113 
ulöt
 
gë_ödex_li°_Àngth
() const {

114 
Ê°_ba£_node_t
 *
	gÊ°
 = 
ödex_li°
();

115  (
Ê°_gë_Àn
(
Ê°
));

118 
£t_vîsi⁄_0
() {

119 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_VERSION
, 0, 
MLOG_1BYTE
, 
m_må
);

122 
byã
 *
begö_d©a_±r
(Ëc⁄° {  (
‰ame
(Ë+ 
begö_d©a
()); }

125 
ulöt
 
∑ylﬂd
() {

126 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

127 
ut_ad
(
begö_d©a
(Ë+ 
FIL_PAGE_DATA_END
 < 
∑ge_size
.
physiˇl
());

128  (
	g∑ge_size
.
physiˇl
(Ë- 
begö_d©a
(Ë- 
	gFIL_PAGE_DATA_END
);

131 
z_fú°_∑ge_t
(Ë: 
m_block
(
nuŒ±r
), 
m_må
“uŒ±r), 
m_ödex
(nullptr) {}

133 
z_fú°_∑ge_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

134 : 
m_block
(
nuŒ±r
), 
m_må
(
må
), 
m_ödex
(
ödex
) {}

136 
z_fú°_∑ge_t
(
buf_block_t
 *
block
Ë: 
m_block
(block) {}

138 
z_fú°_∑ge_t
(
buf_block_t
 *
block
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

139 : 
m_block
(
block
), 
m_må
(
må
), 
m_ödex
(
ödex
) {}

141 
buf_block_t
 *
Æloc
(
boﬁ
 
bulk
);

143 
imp‹t
(
åx_id_t
 
åx_id
);

145 
∑ge_ty≥_t
 
gë_∑ge_ty≥
() const {

146  (
mach_ªad_‰om_2
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
));

152 
buf_block_t
 *
lﬂd_x
(
∑ge_no_t
 
∑ge_no
) {

153 
∑ge_id_t
 
∑ge_id
(
di˘_ödex_gë_•a˚
(
m_ödex
), 
∑ge_no
);

154 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

155 
	gm_block
 = 
buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_X_LATCH
, 
m_må
);

156  (
	gm_block
);

163 
buf_block_t
 *
lﬂd_x
(
må_t
 *
må
) const {

164 
ut_ad
(
må_memo_c⁄èös
(
m_må
, 
m_block
, 
MTR_MEMO_PAGE_X_FIX
));

165 
buf_block_t
 *
	gtmp
 = 
buf_∑ge_gë
(
m_block
->
∑ge
.
id
, 
m_ödex
->
gë_∑ge_size
(),

166 
RW_X_LATCH
, 
må
);

167 
ut_ad
(
tmp
 =
m_block
);

168  (
	gtmp
);

175 
buf_block_t
 *
lﬂd_x
(c⁄° 
∑ge_id_t
 &
∑ge_id
, c⁄° 
∑ge_size_t
 &
∑ge_size
);

180 
buf_block_t
 *
lﬂd_s
(
∑ge_no_t
 
∑ge_no
) {

181 
ut_ad
(
m_block
 =
nuŒ±r
);

183 
∑ge_id_t
 
∑ge_id
(
di˘_ödex_gë_•a˚
(
m_ödex
), 
∑ge_no
);

184 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

185 
	gm_block
 = 
buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_S_LATCH
, 
m_må
);

186  (
	gm_block
);

190 
dóŒoc
();

193 
£t_√xt_∑ge_nuŒ
(Ë{ 
£t_√xt_∑ge_no
(
FIL_NULL
, 
m_må
); }

196 
£t_¥ev_∑ge_nuŒ
(Ë{ 
£t_¥ev_∑ge_no
(
FIL_NULL
, 
m_må
); }

201 
£t_√xt_∑ge_no
(
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
) {

202 
ut_ad
(
må
 !
nuŒ±r
);

203 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_NEXT
, 
∑ge_no
, 
MLOG_4BYTES
, 
må
);

209 
£t_¥ev_∑ge_no
(
∑ge_no_t
 
∑ge_no
, 
må_t
 *
må
) {

210 
ut_ad
(
må
 !
nuŒ±r
);

211 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_PREV
, 
∑ge_no
, 
MLOG_4BYTES
, 
må
);

217 
£t_•a˚_id_no_ªdo
(
•a˚_id_t
 
•a˚_id
) {

218 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_SPACE_ID
, 
•a˚_id
, 
MLOG_4BYTES
,

219 
nuŒ±r
);

222 
öô
() {

223 
ut_ad
(
m_må
 !
nuŒ±r
);

225 
£t_∑ge_ty≥
();

226 
£t_vîsi⁄_0
();

227 
£t_d©a_Àn
(0);

228 
£t_√xt_∑ge_nuŒ
();

229 
£t_¥ev_∑ge_nuŒ
();

230 
£t_åx_id
(0);

231 
Ê°_ba£_node_t
 *
	gÊ°
 = 
‰ì_li°
();

232 
Ê°_öô
(
Ê°
, 
m_må
);

233 
Ê°_ba£_node_t
 *
	gû°
 = 
ödex_li°
();

234 
Ê°_öô
(
û°
, 
m_må
);

235 
Ê°_ba£_node_t
 *
	g‰ì_‰ag_l°
 = 
‰ì_‰ag_li°
();

236 
Ê°_öô
(
‰ì_‰ag_l°
, 
m_må
);

237 
Ê°_ba£_node_t
 *
	g‰ag_l°
 = 
‰ag_li°
();

238 
Ê°_öô
(
‰ag_l°
, 
m_må
);

239 
öô_ödex_íåõs
();

240 
öô_‰ag_íåõs
();

241 
£t_‰ag_node_∑ge_no
(
FIL_NULL
);

242 
£t_ödex_∑ge_no
(
FIL_NULL
);

246 
ulöt
 
gë_d©a_Àn
() const {

247  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
OFFSET_DATA_LEN
));

251 
∑ge_no_t
 
gë_∑ge_no
(Ëc⁄° {  (
	gm_block
->
	g∑ge
.
	gid
.
∑ge_no
()); }

255 
∑ge_id_t
 
gë_∑ge_id
() const {

256 
ut_ad
(
m_block
 !
nuŒ±r
);

258  (
	gm_block
->
	g∑ge
.
	gid
);

261 
fû_addr_t
 
gë_£lf_addr
() const {

262 
∑ge_no_t
 
	g∑ge_no
 = 
gë_∑ge_no
();

263 
uöt32_t
 
	goff£t
 = 
°©ic_ˇ°
<uöt32_t>(
begö_d©a
());

264  (
fû_addr_t
(
∑ge_no
, 
off£t
));

270 
£t_ödex_∑ge_no
(
∑ge_no_t
 
∑ge_no
) {

271 
ut_ad
(
m_må
 !
nuŒ±r
);

272 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_INDEX_PAGE_NO
, 
∑ge_no
, 
MLOG_4BYTES
,

273 
m_må
);

280 
∑ge_no_t
 
gë_ödex_∑ge_no
() const {

281  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
OFFSET_INDEX_PAGE_NO
));

288 
∑ge_no_t
 
gë_‰ag_∑ge_no
(Ëc⁄° {  (
	gm_block
->
gë_¥ev_∑ge_no
()); }

295 
∑ge_no_t
 
gë_‰ag_∑ge_no
(
må_t
 *
må
) const {

296  (
må_ªad_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_PREV
, 
MLOG_4BYTES
, 
må
));

299 #ifde‡
UNIV_DEBUG


303 
boﬁ
 
vîify_‰ag_∑ge_no
();

310 
£t_‰ag_∑ge_no
(
må_t
 *
må
, 
∑ge_no_t
 
∑ge_no
) {

311 
ut_ad
(
vîify_‰ag_∑ge_no
());

312 
£t_¥ev_∑ge_no
(
∑ge_no
, 
må
);

318 
£t_‰ag_∑ge_no
(
∑ge_no_t
 
∑ge_no
) {

319 
ut_ad
(
vîify_‰ag_∑ge_no
());

320 
£t_¥ev_∑ge_no
(
∑ge_no
, 
m_må
);

326 
£t_‰ag_node_∑ge_no
(
∑ge_no_t
 
∑ge_no
) {

327 
ut_ad
(
m_må
 !
nuŒ±r
);

328 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_FRAG_NODES_PAGE_NO
, 
∑ge_no
, 
MLOG_4BYTES
,

329 
m_må
);

336 
size_t
 
‰ì_Æl_‰ag_node_∑ges
();

340 
size_t
 
‰ì_Æl_ödex_∑ges
();

344 
size_t
 
‰ì_Æl_‰ag_∑ges
();

346 
	g¥iv©e
:

350 
size_t
 
‰ì_Æl_‰ag_∑ges_ﬁd
();

355 
size_t
 
‰ì_Æl_‰ag_∑ges_√w
();

357 
	gpublic
:

360 
size_t
 
‰ì_Æl_d©a_∑ges
();

366 
∑ge_no_t
 
gë_‰ag_node_∑ge_no
() {

367  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
OFFSET_FRAG_NODES_PAGE_NO
));

372 
£t_∑ge_ty≥_unknown
() {

373 
ut_ad
(
m_må
 !
nuŒ±r
);

374 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
, 
FIL_PAGE_TYPE_UNKNOWN
,

375 
MLOG_2BYTES
, 
m_må
);

378 
£t_∑ge_ty≥
() {

379 
ut_ad
(
m_må
 !
nuŒ±r
);

380 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
FIL_PAGE_TYPE
, 
FIL_PAGE_TYPE_ZLOB_FIRST
,

381 
MLOG_2BYTES
, 
m_må
);

384 
£t_d©a_Àn
(
ulöt
 
Àn
) {

385 
ut_ad
(
m_må
 !
nuŒ±r
);

386 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_DATA_LEN
, 
Àn
, 
MLOG_4BYTES
, 
m_må
);

391 
£t_åx_id
(
åx_id_t
 
tid
) {

392 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_TRX_ID
;

393 
mach_wrôe_to_6
(
±r
, 
tid
);

394 
mlog_log_°rög
(
±r
, 6, 
m_må
);

400 
£t_åx_id_no_ªdo
(
åx_id_t
 
tid
) {

401 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_TRX_ID
;

402 
mach_wrôe_to_6
(
±r
, 
tid
);

406 
öô_lob_vîsi⁄
() {

407 
ut_ad
(
m_må
 !
nuŒ±r
);

409 
mlog_wrôe_ulöt
(
‰ame
(Ë+ 
OFFSET_LOB_VERSION
, 1, 
MLOG_4BYTES
, 
m_må
);

414 
uöt32_t
 
gë_lob_vîsi⁄
() {

415  (
mach_ªad_‰om_4
(
‰ame
(Ë+ 
OFFSET_LOB_VERSION
));

419 
uöt32_t
 
ö¸_lob_vîsi⁄
();

423 
uöt8_t
 
gë_Êags
(Ë{  (
mach_ªad_‰om_1
(
‰ame
(Ë+ 
OFFSET_FLAGS
)); }

428 
boﬁ
 
ˇn_be_∑πüŒy_upd©ed
() {

429 
uöt8_t
 
	gÊags
 = 
gë_Êags
();

430  (!(
	gÊags
 & 0x01));

436 
m¨k_ˇ¬Ÿ_be_∑πüŒy_upd©ed
(
åx_t
 *
åx
);

438 
£t_œ°_åx_id
(
åx_id_t
 
tid
) {

439 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_TRX_ID
;

440 
mach_wrôe_to_6
(
±r
, 
tid
);

441 
mlog_log_°rög
(
±r
, 6, 
m_må
);

447 
£t_œ°_åx_id_no_ªdo
(
åx_id_t
 
tid
) {

448 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_TRX_ID
;

449 
mach_wrôe_to_6
(
±r
, 
tid
);

452 
£t_œ°_åx_undo_no
(
undo_no_t
 
undo_no
) {

453 
ut_ad
(
m_må
 !
nuŒ±r
);

455 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_UNDO_NO
;

456 
mlog_wrôe_ulöt
(
±r
, 
undo_no
, 
MLOG_4BYTES
, 
m_må
);

459 
åx_id_t
 
gë_œ°_åx_id
() const {

460 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_TRX_ID
;

461  (
mach_ªad_‰om_6
(
±r
));

464 
undo_no_t
 
gë_œ°_åx_undo_no
() const {

465 
byã
 *
	g±r
 = 
‰ame
(Ë+ 
OFFSET_LAST_UNDO_NO
;

466  (
mach_ªad_‰om_4
(
±r
));

469 
Ê°_ba£_node_t
 *
‰ì_li°
(Ëc⁄° {  (
‰ame
(Ë+ 
	gOFFSET_FREE_LIST
); }

471 
Ê°_ba£_node_t
 *
ödex_li°
(Ëc⁄° {  (
‰ame
(Ë+ 
	gOFFSET_INDEX_LIST
); }

473 
Ê°_ba£_node_t
 *
‰ì_‰ag_li°
() const {

474  (
‰ame
(Ë+ 
	gOFFSET_FREE_FRAG_LIST
);

477 
Ê°_ba£_node_t
 *
‰ag_li°
(Ëc⁄° {  (
‰ame
(Ë+ 
	gOFFSET_FRAG_LIST
); }

479 
öô_‰ag_íåõs
() {

480 
Ê°_ba£_node_t
 *
	g‰ì_‰ag_l°
 = 
‰ì_‰ag_li°
();

481 
ulöt
 
	gn
 = 
gë_n_‰ag_íåõs
();

482 
ulöt
 
	gi
 = 0; i < 
	gn
; ++i) {

483 
Ê°_node_t
 *
	g±r
 = 
‰ame
(Ë+ 
begö_‰ag_íåõs
();

484 
	g±r
 +(
i
 * 
z_‰ag_íåy_t
::
SIZE
);

485 
z_‰ag_íåy_t
 
‰ag_íåy
(
±r
, 
m_må
);

486 
	g‰ag_íåy
.
öô
();

487 
	g‰ag_íåy
.
push_back
(
‰ì_‰ag_l°
);

491 
öô_ödex_íåõs
();

505 
‰ag_id_t
 
Æloc_‰agmít
(
boﬁ
 
bulk
, 
ulöt
 
Àn
, 
z_‰ag_∑ge_t
 &
‰ag_∑ge
,

506 
z_‰ag_íåy_t
 &
íåy
);

512 
z_ödex_íåy_t
 
Æloc_ödex_íåy
(
boﬁ
 
bulk
);

518 
z_‰ag_íåy_t
 
Æloc_‰ag_íåy
(
boﬁ
 
bulk
);

521 
	g°d
::
o°ªam
 &
¥öt_ödex_íåõs
(
°d
::o°ªam &
out
) const;

524 
	g°d
::
o°ªam
 &
¥öt_‰ag_íåõs
(
°d
::o°ªam &
out
) const;

527 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

529 
byã
 *
‰ame
(Ëc⁄° {  (
buf_block_gë_‰ame
(
m_block
)); }

534 
Ê°_node_t
 *
addr2±r_x
(
fû_addr_t
 &
addr
) const {

535  (
addr2±r_x
(
addr
, 
m_må
));

542 
Ê°_node_t
 *
addr2±r_x
(
fû_addr_t
 &
addr
, 
må_t
 *
må
) const {

543 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

544 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

545  (
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_X_LATCH
, 
må
));

551 
Ê°_node_t
 *
addr2±r_s
(
fû_addr_t
 &
addr
) {

552 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

553 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

554  (
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_S_LATCH
, 
m_må
));

560 
lﬂd_íåy_s
(
fû_addr_t
 &
addr
, 
z_ödex_íåy_t
 &
íåy
);

565 
lﬂd_íåy_x
(
fû_addr_t
 &
addr
, 
z_ödex_íåy_t
 &
íåy
);

569 
size_t
 
de°roy
();

571 #ifde‡
UNIV_DEBUG


572 
	g¥iv©e
:

576 
boﬁ
 
vÆid©e_low
();

578 
	gpublic
:

581 
boﬁ
 
vÆid©e
() {

582 c⁄° 
uöt32_t
 
FREQ
 = 50;

583 
	g°d
::
©omic
<
uöt32_t
> 
n
{0};

585 
boﬁ
 
	gvÆid
 = 
åue
;

586 i‡(++
	gn
 % 
	gFREQ
 == 0) {

587 
vÆid
 = 
vÆid©e_low
();

589  (
	gvÆid
);

595 
buf_block_t
 *
gë_block
(Ëc⁄° {  (
	gm_block
); }

597 
	gpublic
:

598 
£t_må
(
må_t
 *
må
Ë{ 
m_må
 = mtr; }

603 
ª°¨t_må
(
må_t
 *
må
) {

604 
ut_ad
(
må
 !
m_må
);

606 
må_commô
(
må
);

607 
må_°¨t
(
må
);

608 
	gmå
->
£t_log_mode
(
m_må
->
gë_log_mode
());

609 
lﬂd_x
(
må
);

612 
	g¥iv©e
:

614 
buf_block_t
 *
m_block
;

617 
må_t
 *
	gm_må
;

620 
di˘_ödex_t
 *
	gm_ödex
;

629 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gz_fú°_∑ge_t
 &
	gobj
) {

630  (
	gobj
.
¥öt
(
out
));

	@zlob0index.h

26 #i‚de‡
zlob0ödex_h


27 
	#zlob0ödex_h


	)

29 
	~"fû0fû.h
"

30 
	~"fut0l°.h
"

31 
	~"lob0im∂.h
"

33 
«me•a˚
 
	glob
 {

36 
	sz_ödex_íåy_mem_t
 {

37 
z_ödex_íåy_mem_t
()

38 : 
m_åx_id
(0), 
m_z_∑ge_no
(
FIL_NULL
), 
m_z_‰ag_id
(
FRAG_ID_NULL
) {}

41 
fû_addr_t
 
	gm_£lf
;

43 
fû_addr_t
 
	gm_¥ev
;

44 
fû_addr_t
 
	gm_√xt
;

45 
Ê°_bnode_t
 
	gm_vîsi⁄s
;

46 
åx_id_t
 
	gm_åx_id
;

47 
åx_id_t
 
	gm_åx_id_modifõr
;

48 
undo_no_t
 
	gm_åx_undo_no
;

49 
undo_no_t
 
	gm_åx_undo_no_modifõr
;

50 
∑ge_no_t
 
	gm_z_∑ge_no
;

51 
‰ag_id_t
 
	gm_z_‰ag_id
;

54 
ulöt
 
	gm_d©a_Àn
;

57 
ulöt
 
	gm_z_d©a_Àn
;

59 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

62 
ª£t
() {

63 
	gm_£lf
 = 
fû_addr_nuŒ
;

64 
	gm_¥ev
 = 
fû_addr_nuŒ
;

65 
	gm_√xt
 = 
fû_addr_nuŒ
;

66 
	gm_vîsi⁄s
.
ª£t
();

67 
	gm_åx_id
 = 0;

68 
	gm_åx_id_modifõr
 = 0;

69 
	gm_åx_undo_no
 = 0;

70 
	gm_åx_undo_no_modifõr
 = 0;

71 
	gm_z_∑ge_no
 = 
FIL_NULL
;

72 
	gm_z_‰ag_id
 = 0;

73 
	gm_d©a_Àn
 = 0;

74 
	gm_z_d©a_Àn
 = 0;

77 
boﬁ
 
is_nuŒ
(Ë{  (
	gm_£lf
.
is_equÆ
(
fû_addr_nuŒ
)); }

80 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
,

81 c⁄° 
	gz_ödex_íåy_mem_t
 &
	gobj
) {

82  (
	gobj
.
¥öt
(
out
));

86 
	sz_ödex_íåy_t
 {

88 c⁄° 
ulöt
 
	gOFFSET_PREV
 = 0;

91 c⁄° 
ulöt
 
	gOFFSET_NEXT
 = 
OFFSET_PREV
 + 
FIL_ADDR_SIZE
;

95 c⁄° 
ulöt
 
	gOFFSET_VERSIONS
 = 
OFFSET_NEXT
 + 
FIL_ADDR_SIZE
;

98 c⁄° 
ulöt
 
	gOFFSET_TRXID
 = 
OFFSET_VERSIONS
 + 
FLST_BASE_NODE_SIZE
;

101 c⁄° 
ulöt
 
	gOFFSET_TRXID_MODIFIER
 = 
OFFSET_TRXID
 + 6;

104 c⁄° 
ulöt
 
	gOFFSET_TRX_UNDO_NO
 = 
OFFSET_TRXID_MODIFIER
 + 6;

107 c⁄° 
ulöt
 
	gOFFSET_TRX_UNDO_NO_MODIFIER
 = 
OFFSET_TRX_UNDO_NO
 + 4;

111 c⁄° 
ulöt
 
	gOFFSET_Z_PAGE_NO
 = 
OFFSET_TRX_UNDO_NO_MODIFIER
 + 4;

114 c⁄° 
ulöt
 
	gOFFSET_Z_FRAG_ID
 = 
OFFSET_Z_PAGE_NO
 + 4;

118 c⁄° 
ulöt
 
	gOFFSET_DATA_LEN
 = 
OFFSET_Z_FRAG_ID
 + 2;

122 c⁄° 
ulöt
 
	gOFFSET_ZDATA_LEN
 = 
OFFSET_DATA_LEN
 + 4;

125 c⁄° 
ulöt
 
	gOFFSET_LOB_VERSION
 = 
OFFSET_ZDATA_LEN
 + 4;

128 c⁄° 
ulöt
 
	gSIZE
 = 
OFFSET_LOB_VERSION
 + 4;

131 
z_ödex_íåy_t
(
Ê°_node_t
 *
node
, 
må_t
 *
må
Ë: 
m_node
“ode), 
m_må
(mtr) {}

134 
z_ödex_íåy_t
(
Ê°_node_t
 *
node
, 
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

135 : 
m_node
(
node
), 
m_må
(
må
), 
m_ödex
(
ödex
) {}

140 
z_ödex_íåy_t
(
må_t
 *
må
, 
di˘_ödex_t
 *
ödex
)

141 : 
m_node
(
nuŒ±r
),

142 
m_må
(
må
),

143 
m_ödex
(
ödex
),

144 
m_block
(
nuŒ±r
),

145 
m_∑ge_no
(
FIL_NULL
) {}

149 
z_ödex_íåy_t
(
Ê°_node_t
 *
node
)

150 : 
m_node
(
node
),

151 
m_må
(
nuŒ±r
),

152 
m_ödex
(
nuŒ±r
),

153 
m_block
(
nuŒ±r
),

154 
m_∑ge_no
(
FIL_NULL
) {}

157 
z_ödex_íåy_t
()

158 : 
m_node
(
nuŒ±r
),

159 
m_må
(
nuŒ±r
),

160 
m_ödex
(
nuŒ±r
),

161 
m_block
(
nuŒ±r
),

162 
m_∑ge_no
(
FIL_NULL
) {}

164 
£t_ödex
(
di˘_ödex_t
 *
ödex
Ë{ 
	gm_ödex
 = index; }

168 
ª£t
(
Ê°_node_t
 *
node
Ë{ 
	gm_node
 =Çode; }

172 
ª£t
(c⁄° 
z_ödex_íåy_t
 &
íåy
Ë{ 
	gm_node
 =É¡ry.
m_node
; }

175 
öô
() {

176 
ut_ad
(
m_må
 !
nuŒ±r
);

178 
£t_¥ev_nuŒ
();

179 
£t_√xt_nuŒ
();

180 
£t_vîsi⁄s_nuŒ
();

181 
£t_åx_id
(0);

182 
£t_åx_undo_no
(0);

183 
£t_z_∑ge_no
(
FIL_NULL
);

184 
£t_z_‰ag_id
(
FRAG_ID_NULL
);

185 
£t_d©a_Àn
(0);

186 
£t_zd©a_Àn
(0);

195 
boﬁ
 
ˇn_rﬁlback
(
åx_id_t
 
åxid
, 
undo_no_t
 
undo_no
) {

197  ((
	gåxid
 =
gë_åx_id
()Ë&& (
gë_åx_undo_no
(Ë>
undo_no
));

204 
boﬁ
 
ˇn_be_purged
(
åx_id_t
 
åxid
, 
undo_no_t
 
undo_no
) {

205  ((
	gåxid
 =
gë_åx_id_modifõr
()) &&

206 (
gë_åx_undo_no_modifõr
(Ë=
undo_no
));

217 
fû_addr_t
 
purge_vîsi⁄
(
di˘_ödex_t
 *
ödex
, 
åx_id_t
 
åxid
,

218 
z_fú°_∑ge_t
 &
fú°
, 
Ê°_ba£_node_t
 *
l°
,

219 
Ê°_ba£_node_t
 *
‰ì_li°
);

224 
purge
(
di˘_ödex_t
 *
ödex
, 
z_fú°_∑ge_t
 &
fú°
);

229 
ªmove
(
Ê°_ba£_node_t
 *
bnode
) {

230 
ut_ad
(
m_må
 !
nuŒ±r
);

232 
Ê°_ªmove
(
bnode
, 
m_node
, 
m_må
);

238 
ö£π_a·î
(
Ê°_ba£_node_t
 *
ba£
, 
z_ödex_íåy_t
 &
íåy
) {

239 
ut_ad
(
m_må
 !
nuŒ±r
);

241 
Ê°_ö£π_a·î
(
ba£
, 
m_node
, 
íåy
.
gë_node
(), 
m_må
);

244 
ö£π_bef‹e
(
Ê°_ba£_node_t
 *
ba£
, 
z_ödex_íåy_t
 &
íåy
) {

245 
ut_ad
(
m_må
 !
nuŒ±r
);

247 
Ê°_ö£π_bef‹e
(
ba£
, 
íåy
.
gë_node
(), 
m_node
, 
m_må
);

252 
push_back
(
Ê°_ba£_node_t
 *
bnode
) {

253 
ut_ad
(
m_må
 !
nuŒ±r
);

255 
Ê°_add_œ°
(
bnode
, 
m_node
, 
m_må
);

260 
push_‰⁄t
(
Ê°_ba£_node_t
 *
bnode
) {

261 
ut_ad
(
m_må
 !
nuŒ±r
);

262 
Ê°_add_fú°
(
bnode
, 
m_node
, 
m_må
);

266 
£t_¥ev_nuŒ
() {

267 
Ê°_wrôe_addr
(
m_node
 + 
OFFSET_PREV
, 
fû_addr_nuŒ
, 
m_må
);

271 
fû_addr_t
 
gë_¥ev
() const {

272  (
Ê°_ªad_addr
(
m_node
 + 
OFFSET_PREV
, 
m_må
));

277 
fû_addr_t
 
gë_√xt
() const {

278  (
Ê°_ªad_addr
(
m_node
 + 
OFFSET_NEXT
, 
m_må
));

282 
£t_√xt_nuŒ
() {

283 
ut_ad
(
m_må
 !
nuŒ±r
);

284 
Ê°_wrôe_addr
(
m_node
 + 
OFFSET_NEXT
, 
fû_addr_nuŒ
, 
m_må
);

288 
£t_vîsi⁄s_nuŒ
() {

289 
Ê°_ba£_node_t
 *
	gbnode
 = 
gë_vîsi⁄s_li°
();

290 
Ê°_öô
(
bnode
, 
m_må
);

294 
Ê°_ba£_node_t
 *
gë_vîsi⁄s_li°
() const {

295  (
	gm_node
 + 
	gOFFSET_VERSIONS
);

299 
Ê°_bnode_t
 
gë_vîsi⁄s_mem
() const {

300 
ut_ad
(
m_må
 !
nuŒ±r
);

301 
Ê°_ba£_node_t
 *
	gnode
 = 
gë_vîsi⁄s_li°
();

302  (
Ê°_bnode_t
(
node
, 
m_må
));

305 
åx_id_t
 
gë_åx_id
() const {

306  (
mach_ªad_‰om_6
(
m_node
 + 
OFFSET_TRXID
));

309 
åx_id_t
 
gë_åx_id_modifõr
() const {

310  (
mach_ªad_‰om_6
(
m_node
 + 
OFFSET_TRXID_MODIFIER
));

316 
undo_no_t
 
gë_åx_undo_no
() const {

317 
byã
 *
	g±r
 = 
m_node
 + 
OFFSET_TRX_UNDO_NO
;

318  (
mach_ªad_‰om_4
(
±r
));

324 
undo_no_t
 
gë_åx_undo_no_modifõr
() const {

325 
byã
 *
	g±r
 = 
m_node
 + 
OFFSET_TRX_UNDO_NO_MODIFIER
;

326  (
mach_ªad_‰om_4
(
±r
));

332 
£t_åx_id_no_ªdo
(
åx_id_t
 
id
) {

333 
byã
 *
	g±r
 = 
m_node
 + 
OFFSET_TRXID
;

334 
mach_wrôe_to_6
(
±r
, 
id
);

339 
£t_åx_id
(
åx_id_t
 
id
) {

340 
ut_ad
(
m_må
 !
nuŒ±r
);

341 
byã
 *
	g±r
 = 
m_node
 + 
OFFSET_TRXID
;

342 
mach_wrôe_to_6
(
±r
, 
id
);

343 
mlog_log_°rög
(
±r
, 6, 
m_må
);

348 
£t_åx_id_modifõr
(
åx_id_t
 
id
) {

349 
ut_ad
(
m_må
 !
nuŒ±r
);

351 
byã
 *
	g±r
 = 
m_node
 + 
OFFSET_TRXID_MODIFIER
;

352 
mach_wrôe_to_6
(
±r
, 
id
);

353 
mlog_log_°rög
(
±r
, 6, 
m_må
);

359 
£t_åx_id_modifõr_no_ªdo
(
åx_id_t
 
id
) {

360 
byã
 *
	g±r
 = 
m_node
 + 
OFFSET_TRXID_MODIFIER
;

361 
mach_wrôe_to_6
(
±r
, 
id
);

366 
£t_åx_undo_no
(
undo_no_t
 
undo_no
) {

367 
ut_ad
(
m_må
 !
nuŒ±r
);

368 
byã
 *
	g±r
 = 
m_node
 + 
OFFSET_TRX_UNDO_NO
;

369 
mlog_wrôe_ulöt
(
±r
, 
undo_no
, 
MLOG_4BYTES
, 
m_må
);

374 
£t_åx_undo_no_modifõr
(
undo_no_t
 
undo_no
) {

375 
ut_ad
(
m_må
 !
nuŒ±r
);

376 
byã
 *
	g±r
 = 
m_node
 + 
OFFSET_TRX_UNDO_NO_MODIFIER
;

377 
mlog_wrôe_ulöt
(
±r
, 
undo_no
, 
MLOG_4BYTES
, 
m_må
);

380 
∑ge_no_t
 
gë_z_∑ge_no
() const {

381  (
mach_ªad_‰om_4
(
m_node
 + 
OFFSET_Z_PAGE_NO
));

386 
£t_z_∑ge_no_nuŒ
(
må_t
 *
må
) {

387 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_Z_PAGE_NO
, 
FIL_NULL
, 
MLOG_4BYTES
, 
må
);

393 
size_t
 
‰ì_d©a_∑ges
(
må_t
 *
må
);

397 
£t_z_∑ge_no
(
∑ge_no_t
 
∑ge_no
) {

398 
ut_ad
(
m_må
 !
nuŒ±r
);

399 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_Z_PAGE_NO
, 
∑ge_no
, 
MLOG_4BYTES
, 
m_må
);

402 
∑ge_no_t
 
gë_z_‰ag_id
() const {

403  (
mach_ªad_‰om_2
(
m_node
 + 
OFFSET_Z_FRAG_ID
));

406 
£t_z_‰ag_id
(
‰ag_id_t
 
id
) {

407 
ut_ad
(
m_må
 !
nuŒ±r
);

408 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_Z_FRAG_ID
, 
id
, 
MLOG_2BYTES
, 
m_må
);

412 
ulöt
 
gë_d©a_Àn
() const {

413  (
mach_ªad_‰om_4
(
m_node
 + 
OFFSET_DATA_LEN
));

418 
£t_d©a_Àn
(
ulöt
 
Àn
) {

419 
ut_ad
(
m_må
 !
nuŒ±r
);

420 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_DATA_LEN
, 
Àn
, 
MLOG_4BYTES
, 
m_må
);

424 
ulöt
 
gë_zd©a_Àn
() const {

425  (
mach_ªad_‰om_4
(
m_node
 + 
OFFSET_ZDATA_LEN
));

430 
£t_zd©a_Àn
(
ulöt
 
Àn
) {

431 
ut_ad
(
m_må
 !
nuŒ±r
);

432 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_ZDATA_LEN
, 
Àn
, 
MLOG_4BYTES
, 
m_må
);

436 
uöt32_t
 
gë_lob_vîsi⁄
() const {

437  (
mach_ªad_‰om_4
(
m_node
 + 
OFFSET_LOB_VERSION
));

442 
£t_lob_vîsi⁄
(
ulöt
 
vîsi⁄
) {

443 
ut_ad
(
m_må
 !
nuŒ±r
);

444 
mlog_wrôe_ulöt
(
m_node
 + 
OFFSET_LOB_VERSION
, 
vîsi⁄
, 
MLOG_4BYTES
, 
m_må
);

450 
£t_ﬁd_vîsi⁄
(
z_ödex_íåy_t
 &
íåy
);

461 
fû_addr_t
 
make_ﬁd_vîsi⁄_cuºít
(
di˘_ödex_t
 *
ödex
, 
åx_id_t
 
åxid
,

462 
z_fú°_∑ge_t
 &
fú°
);

464 
Ê°_node_t
 *
gë_node
(Ë{  (
	gm_node
); }

465 
boﬁ
 
is_nuŒ
(Ëc⁄° {  (
	gm_node
 =
nuŒ±r
); }

467 
	g°d
::
o°ªam
 &
¥öt
(
°d
::o°ªam &
out
) const;

468 
	g°d
::
o°ªam
 &
¥öt_∑ges
(
°d
::o°ªam &
out
) const;

472 
buf_block_t
 *
lﬂd_s
() {

473 
ut_ad
(
m_∑ge_no
 !
FIL_NULL
);

475 
∑ge_id_t
 
∑ge_id
(
di˘_ödex_gë_•a˚
(
m_ödex
), 
m_∑ge_no
);

476 
∑ge_size_t
 
∑ge_size
(
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
));

477 
	gm_block
 = 
buf_∑ge_gë
(
∑ge_id
, 
∑ge_size
, 
RW_S_LATCH
, 
m_må
);

478  (
	gm_block
);

483 
lﬂd_s
(
fû_addr_t
 &
addr
) {

484 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

485 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

486 
	gm_node
 = 
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_S_LATCH
, 
m_må
, &
m_block
);

487 
	gm_∑ge_no
 = 
m_block
->
gë_∑ge_no
();

492 
lﬂd_x
(
fû_addr_t
 &
addr
) {

493 
•a˚_id_t
 
	g•a˚
 = 
di˘_ödex_gë_•a˚
(
m_ödex
);

494 c⁄° 
∑ge_size_t
 
	g∑ge_size
 = 
di˘_èbÀ_∑ge_size
(
m_ödex
->
èbÀ
);

495 
	gm_node
 = 
fut_gë_±r
(
•a˚
, 
∑ge_size
, 
addr
, 
RW_X_LATCH
, 
m_må
, &
m_block
);

496 
	gm_∑ge_no
 = 
m_block
->
gë_∑ge_no
();

501 
ªad
(
z_ödex_íåy_mem_t
 &
íåy_mem
) const;

505 
ªad_™d_commô
(
z_ödex_íåy_mem_t
 &
íåy_mem
) {

506 
ªad
(
íåy_mem
);

507 
må_commô
(
m_må
);

508 
	gm_node
 = 
nuŒ±r
;

512 
fû_addr_t
 
gë_£lf
() const;

514 
	g¥iv©e
:

518 
move_vîsi⁄_ba£_node
(
z_ödex_íåy_t
 &
íåy
);

521 
Ê°_node_t
 *
	gm_node
;

524 
må_t
 *
	gm_må
;

527 
di˘_ödex_t
 *
	gm_ödex
;

531 
buf_block_t
 *
	gm_block
;

536 
∑ge_no_t
 
	gm_∑ge_no
;

539 
ölöe
 
	g°d
::
o°ªam
 &
›î©‹
<<(
°d
::o°ªam &
out
, c⁄° 
	gz_ödex_íåy_t
 &
	gobj
) {

540  (
	gobj
.
¥öt
(
out
));

	@zlob0read.h

26 #i‚de‡
zlob0ªad_h


27 
	#zlob0ªad_h


	)

29 
	~"zlob0ödex.h
"

31 
«me•a˚
 
	glob
 {

42 
ulöt
 
z_ªad_chunk
(
di˘_ödex_t
 *
ödex
, 
z_ödex_íåy_t
 &
íåy
, ulöà
off£t
,

43 
ulöt
 &
Àn
, 
byã
 *&
buf
, 
må_t
 *
må
);

52 
ulöt
 
z_ªad_°rm
(
di˘_ödex_t
 *
ödex
, 
z_ödex_íåy_t
 &
íåy
, 
byã
 *
zbuf
,

53 
ulöt
 
zbuf_size
, 
må_t
 *
må
);

63 
ulöt
 
z_ªad
(
RódC⁄ãxt
 *
˘x
, 
åx_t
 *
åx
, 
lob
::
ªf_t
 
ªf
, ulöà
off£t
,

64 
ulöt
 
Àn
, 
byã
 *
buf
);

66 #ifde‡
UNIV_DEBUG


73 
boﬁ
 
z_vÆid©e_°rm
(
di˘_ödex_t
 *
ödex
, 
z_ödex_íåy_t
 &
íåy
, 
må_t
 *
må
);

	@
1
.
0
287
3403
api0api.h
api0misc.h
arch0arch.h
arch0log.h
arch0page.h
arch0recv.h
btr0btr.h
btr0btr.ic
btr0bulk.h
btr0cur.h
btr0cur.ic
btr0pcur.h
btr0sea.h
btr0sea.ic
btr0types.h
buf0block_hint.h
buf0buddy.h
buf0buddy.ic
buf0buf.h
buf0buf.ic
buf0checksum.h
buf0dblwr.h
buf0dump.h
buf0flu.h
buf0flu.ic
buf0lru.h
buf0rea.h
buf0stats.h
buf0types.h
clone0api.h
clone0clone.h
clone0desc.h
clone0monitor.h
clone0repl.h
clone0snapshot.h
data0data.h
data0data.ic
data0type.h
data0type.ic
data0types.h
db0err.h
dict0boot.h
dict0boot.ic
dict0crea.h
dict0crea.ic
dict0dd.h
dict0dd.ic
dict0dict.h
dict0dict.ic
dict0load.h
dict0mem.h
dict0mem.ic
dict0priv.h
dict0priv.ic
dict0sdi-decompress.h
dict0sdi.h
dict0stats.h
dict0stats.ic
dict0stats_bg.h
dict0stats_bg.ic
dict0types.h
dict0upgrade.h
dyn0buf.h
dyn0types.h
eval0eval.h
eval0eval.ic
eval0proc.h
eval0proc.ic
fil0fil.h
fil0types.h
fsp0file.h
fsp0fsp.h
fsp0fsp.ic
fsp0space.h
fsp0sysspace.h
fsp0types.h
fts0ast.h
fts0blex.h
fts0fts.h
fts0opt.h
fts0pars.h
fts0plugin.h
fts0priv.h
fts0priv.ic
fts0tlex.h
fts0tokenize.h
fts0types.h
fts0types.ic
fts0vlc.ic
fut0fut.h
fut0fut.ic
fut0lst.h
fut0lst.ic
gis0geo.h
gis0rtree.h
gis0rtree.ic
gis0type.h
ha0ha.h
ha0ha.ic
ha0storage.h
ha0storage.ic
ha_prototypes.h
handler0alter.h
hash0hash.h
hash0hash.ic
ib0mutex.h
ibuf0ibuf.h
ibuf0ibuf.ic
ibuf0types.h
lob0del.h
lob0first.h
lob0impl.h
lob0index.h
lob0inf.h
lob0ins.h
lob0lob.h
lob0pages.h
lob0undo.h
lob0util.h
lob0zip.h
lock0guards.h
lock0iter.h
lock0latches.h
lock0lock.h
lock0lock.ic
lock0prdt.h
lock0priv.h
lock0priv.ic
lock0types.h
log0ddl.h
log0log.h
log0log.ic
log0meb.h
log0recv.h
log0recv.ic
log0test.h
log0types.h
mach0data.h
mach0data.ic
mem0mem.h
mem0mem.ic
mtr0log.h
mtr0log.ic
mtr0mtr.h
mtr0mtr.ic
mtr0types.h
os0atomic.h
os0enc.h
os0event.h
os0event.ic
os0file.h
os0file.ic
os0numa.h
os0once.h
os0proc.h
os0thread-create.h
os0thread.h
page0cur.h
page0cur.ic
page0page.h
page0page.ic
page0size.h
page0types.h
page0zip.h
page0zip.ic
pars0grm.h
pars0opt.h
pars0pars.h
pars0pars.ic
pars0sym.h
pars0types.h
pleaf.h
pleaf_buf.h
pleaf_bufpage.h
pleaf_hash.h
pleaf_internals.h
pleaf_mgr.h
pleaf_stack_helper.h
que0que.h
que0que.ic
que0types.h
read0read.h
read0types.h
rem0cmp.h
rem0cmp.ic
rem0rec.h
rem0rec.ic
rem0types.h
row0ext.h
row0ext.ic
row0ftsort.h
row0import.h
row0ins.h
row0log.h
row0log.ic
row0merge.h
row0mysql.h
row0pread-adapter.h
row0pread-histogram.h
row0pread.h
row0purge.h
row0quiesce.h
row0row.h
row0row.ic
row0sel.h
row0sel.ic
row0types.h
row0uins.h
row0umod.h
row0undo.h
row0upd.h
row0upd.ic
row0vers.h
row0vers.ic
sess0sess.h
srv0conc.h
srv0mon.h
srv0mon.ic
srv0shutdown.h
srv0srv.h
srv0start.h
srv0tmp.h
sync0arr.h
sync0arr.ic
sync0debug.h
sync0policy.h
sync0policy.ic
sync0rw.h
sync0rw.ic
sync0sharded_rw.h
sync0sync.h
sync0types.h
trx0i_s.h
trx0purge.h
trx0purge.ic
trx0rec.h
trx0rec.ic
trx0roll.h
trx0roll.ic
trx0rseg.h
trx0rseg.ic
trx0sys.h
trx0sys.ic
trx0trx.h
trx0trx.ic
trx0types.h
trx0undo.h
trx0undo.ic
trx0xa.h
univ.i
usr0sess.h
usr0types.h
ut0bitset.h
ut0bool_scope_guard.h
ut0byte.h
ut0byte.ic
ut0class_life_cycle.h
ut0counter.h
ut0cpu_cache.h
ut0crc32.h
ut0dbg.h
ut0link_buf.h
ut0list.h
ut0list.ic
ut0lock_free_hash.h
ut0lst.h
ut0mem.h
ut0mem.ic
ut0mpmcbq.h
ut0mutex.h
ut0mutex.ic
ut0new.h
ut0pool.h
ut0rbt.h
ut0rnd.h
ut0rnd.ic
ut0sort.h
ut0stage.h
ut0test.h
ut0ut.h
ut0ut.ic
ut0vec.h
ut0vec.ic
ut0wqueue.h
zlob0first.h
zlob0index.h
zlob0read.h
